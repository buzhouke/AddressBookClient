{"version":3,"file":"dist/js/main~mobile.microsoft.js","sources":["webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/KillSwitch.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/telemetry-clients/telemetryClients.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/telemetry.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/__DynamicConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/node_modules/uuid/dist/esm-browser/stringify.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/debug@4.3.5/node_modules/debug/src/browser.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/_polyfill-node.util.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/dialog.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-shims/dist-esm/Helpers.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/load-themed-styles/lib-es6/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/teamsAPIs.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CookieMgr.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/PropertiesPlugin.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/internalAPIs.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/typeCheckUtilities.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DiagnosticLogger.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/node_modules/uuid/dist/esm-browser/validate.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/EnvUtils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/logger/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/runtime.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/pages.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/ExtensionKeys.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/interfaces/telemetry.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-analytics-web-js/dist-esm/src/ApplicationInsights.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/events/PageAction.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Application.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/regex.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/DataCollector.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/__DynamicConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/InternalConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/dynamicproto-js/lib/dist/esm/dynamicproto-js.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/deepLinkConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Cloud.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/_polyfill-node.buffer.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/appId.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/IntWeb.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/UrlHelperFuncs.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/SessionManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/telemetry-event-buffer/telemetryEventBuffer.constants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ProcessTelemetryContext.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/ecs/getTelemetryUrlEcsConfig.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/__polyfill-node.tty.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/RetryPolicy.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/_polyfill-node.tty.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/DomHelperFuncs.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/handlers/DomContentHandler.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/telemetry-event-buffer/TelemetryEventBuffer.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/W3cTraceParent.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/NotificationManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Timing.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Session.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/nestedAppAuthUtils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/constants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/handlers.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/UnloadHandlerContainer.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/interfaces/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/globalVars.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/HelperFuncs.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-core-js/dist-esm/src/InternalConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/__DynamicConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/version.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/InstrumentHooks.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/DataModels.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/artifactsForCDN/validDomains.json.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/telemetry-clients/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/ClockSkewManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/_polyfill-node._inherits.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ChannelController.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/_polyfill-node.process.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/messageObjects.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Sdk.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/deepLinkUtilities.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/private/messageChannels.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/utils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/RandomHelper.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/menus.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/app.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/BaseTelemetryPlugin.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/Id.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/events/PageUnload.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/events/ContentUpdate.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Loc.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/supports-color@8.1.1/node_modules/supports-color/browser.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/Behaviors.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Device.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/StorageHelperFuncs.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/aria-telemetry-client/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/OperatingSystem.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Trace.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/RequestResponseHeaders.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DataCacheHelper.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/WebAnalyticsPlugin.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/TelemetryItemCreator.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/logger/Logger.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/chat.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/Utils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/TelemetryInitializerPlugin.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/interfaces/telemetry.constants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/telemetry-clients/telemetryClients.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/authentication.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/events/PageViewPerformance.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EnumHelperFuncs.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/appIdValidation.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/node_modules/uuid/dist/esm-browser/rng.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/InternalConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/AnalyticsPlugin.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Utc.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/telemetry-clients/TelemetryRegionInfo.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-shims/dist-esm/Constants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/scenario-tracker/ScenarioTracker.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.0_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/debug@4.3.5/node_modules/debug/src/node.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/HttpManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-core-js/dist-esm/src/AppInsightsCore.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/PerfManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/node.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/validate.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/HelperFuncs.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/aria-telemetry-client/AriaTelemetryClient.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/PostChannel.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-shims/dist-esm/TsLibShims.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/constants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/TelemetryHelpers.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/communication.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/EventHelpers.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/utils/convertCommonPropsTo1DS.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/Enums.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/TimeoutOverrideWrapper.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/Timespan.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/common/Utils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-core-js/dist-esm/src/Utils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/__polyfill-node.util.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/public/interfaces.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/uuidObject.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-common/dist-esm/Constants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/browser.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/debug@4.3.5/node_modules/debug/src/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/TelemetryContext.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/telemetry-clients/TelemetryResponse.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/Web.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/_commonjsHelpers.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/Serializer.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/utils/getNavigationProperties.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/dist/src/lib/scenario-tracker/index.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/handlers/AutoCaptureHandler.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/InternalConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/events/PageView.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/BaseCore.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/common/Constants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/packages/teams-js/src/internal/validOrigins.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-properties-js/dist-esm/src/context/User.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DbgExtensionUtils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/node_modules/uuid/dist/esm-browser/regex.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-telemetry/node_modules/uuid/dist/esm-browser/v4.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-post-js/dist-esm/src/EventBatch.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/_virtual/_polyfill-node.global.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/teams-js/dist/esm/node_modules/.pnpm/debug@4.3.5/node_modules/debug/src/common.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@microsoft/1ds-wa-js/dist-esm/src/events/WebEvent.js"],"sourcesContent":["/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* KillSwitch.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrForEach, dateNow, strTrim } from \"@microsoft/1ds-core-js\";\r\nvar SecToMsMultiplier = 1000;\r\n/**\r\n* Class to stop certain tenants sending events.\r\n*/\r\nvar KillSwitch = /** @class */ (function () {\r\n    function KillSwitch() {\r\n        var _killedTokenDictionary = {};\r\n        function _normalizeTenants(values) {\r\n            var result = [];\r\n            if (values) {\r\n                arrForEach(values, function (value) {\r\n                    result.push(strTrim(value));\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n        dynamicProto(KillSwitch, this, function (_self) {\r\n            _self.setKillSwitchTenants = function (killTokens, killDuration) {\r\n                if (killTokens && killDuration) {\r\n                    try {\r\n                        var killedTokens = _normalizeTenants(killTokens.split(\",\"));\r\n                        if (killDuration === \"this-request-only\") {\r\n                            return killedTokens;\r\n                        }\r\n                        var durationMs = parseInt(killDuration, 10) * SecToMsMultiplier;\r\n                        for (var i = 0; i < killedTokens.length; ++i) {\r\n                            _killedTokenDictionary[killedTokens[i]] = dateNow() + durationMs;\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        return [];\r\n                    }\r\n                }\r\n                return [];\r\n            };\r\n            _self.isTenantKilled = function (tenantToken) {\r\n                var killDictionary = _killedTokenDictionary;\r\n                var name = strTrim(tenantToken);\r\n                if (killDictionary[name] !== undefined && killDictionary[name] > dateNow()) {\r\n                    return true;\r\n                }\r\n                delete killDictionary[name];\r\n                return false;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for KillSwitch.prototype.setKillSwitchTenants.\r\n// Removed Stub for KillSwitch.prototype.isTenantKilled.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    KillSwitch.__ieDyn=1;\n\n    return KillSwitch;\r\n}());\r\nexport default KillSwitch;\r\n//# sourceMappingURL=KillSwitch.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nimport { SeverityLevel } from '../interfaces/telemetry.constants';\nimport { telemetryEventBuffer } from '../telemetry-event-buffer/TelemetryEventBuffer';\nconst telemetryClients = [];\nlet hasTelemetryClients = false;\n// Hash to hold all the instrumentation\n// keys with their index in order to delete them\nconst instrumentationKeys = new Map();\nexport const getClients = () => {\n    return telemetryClients;\n};\n/**\n * Adds a TelemetryClient object to the `telemetryClients` to send\n * UI/Non-UI events through the pipeline.\n * @param [telemetryClient] Telemetry client object.\n * @param [logToConsole] Parameter to log info and errors to console. Defaults to false.\n */\nexport const initializeTelemetryClient = (telemetryClient, logToConsole = false) => {\n    if (!(telemetryClient === null || telemetryClient === void 0 ? void 0 : telemetryClient.getClient().config.instrumentationKey) &&\n        !(telemetryClient === null || telemetryClient === void 0 ? void 0 : telemetryClient.getClient().config.connectionString)) {\n        if (logToConsole) {\n            console.error(`[telemetryClients] Instrumentation key or connection string not found.`);\n        }\n    }\n    else {\n        telemetryClients.push(telemetryClient);\n        instrumentationKeys.set(telemetryClient === null || telemetryClient === void 0 ? void 0 : telemetryClient.getClient().config.instrumentationKey, telemetryClients.length - 1);\n        hasTelemetryClients = telemetryClients.length > 0;\n    }\n    if (hasTelemetryClients) {\n        if (logToConsole) {\n            console.log(`[telemetryClients]: Clients initialized. Logging events to collector.`);\n            console.log(`[telemetryClients]: URL: ${telemetryClient === null || telemetryClient === void 0 ? void 0 : telemetryClient.getClient().config.endpointUrl}`);\n        }\n        // Push queued logs from buffer to collector after initializing telemetry clients.\n        telemetryEventBuffer.pushEventsToTelemetryClient();\n    }\n};\n/**\n * Update to compliant Aria telemetry client.\n * This function is created to log events to compliant endpoint.\n * And log that value via logger.\n * @param [telemetryClient] Telemetry client object.\n * @param logToConsole\n */\nexport const updateToCompliantAriaClient = (telemetryClient, logToConsole = false) => {\n    const instrumentationKey = telemetryClient === null || telemetryClient === void 0 ? void 0 : telemetryClient.getClient().config.instrumentationKey;\n    const indexInArray = instrumentationKeys.get(instrumentationKey);\n    if (logToConsole) {\n        instrumentationKey\n            ? console.log(`[telemetryClients][updateToCompliantAriaClient] instrumentation key gathered. Finding client to update`)\n            : console.log(`[telemetryClients][updateToCompliantAriaClient] instrumentation key cannot gathered.`);\n    }\n    if (telemetryClients.length > 0 &&\n        instrumentationKeys.has(instrumentationKey)) {\n        telemetryClients.splice(indexInArray, 1);\n        instrumentationKeys.delete(instrumentationKey);\n    }\n    else {\n        telemetryClients[0].setBufferForced(false);\n        if (logToConsole) {\n            console.log(`[telemetryClients]updateToCompliantAriaClient] Tried to update an Aria Client that does not exists. Cannot be updated.`);\n            console.log(`[telemetryClients] Tried to update an Aria Client that does not exists. Cannot be updated. Instrumentation key: ${instrumentationKey}`);\n        }\n        return;\n    }\n    initializeTelemetryClient(telemetryClient, true);\n};\n/**\n * Logs the common properties for Part A schema.\n * @param [properties] Telemetry context pertaining to the common Part A schema.\n */\nexport const setCommonProperties = (properties) => {\n    const setPartAProperties = () => telemetryClients.forEach((telemetryClient) => {\n        telemetryClient.setCommonProperties(properties);\n    });\n    queueEvent(setPartAProperties);\n};\n/**\n * Logs the custom properties to be send with every event.\n * @param [properties] Additional fields to be send with every event.\n */\nexport const setCustomProperties = (properties) => {\n    // TODO: Fix TypeScript cast to CustomContext\n    const customContext = properties;\n    const customProperties = () => telemetryClients.forEach((telemetryClient) => {\n        customContext['Logger.isCollectorUrlCompliant'] =\n            telemetryClient.isEUDBCompliant();\n        telemetryClient.setCustomProperties(customContext);\n    });\n    queueEvent(customProperties);\n};\n/**\n * Logs UI action or event.\n * @param [event] Userbi event.\n */\nexport const logUIEvent = (event) => {\n    const userbiEvent = () => telemetryClients.forEach((telemetryClient) => {\n        telemetryClient.logUIEvent(event);\n    });\n    queueEvent(userbiEvent);\n};\n/**\n * Logs a scenario for business telemetry indicators.\n * @param [event] Properties for the scenario e.g. Step, elapsed, delta etc.\n */\nexport const logScenarioEvent = (event) => {\n    const scenarioEvent = () => telemetryClients.forEach((telemetryClient) => {\n        telemetryClient.logScenario(event);\n    });\n    queueEvent(scenarioEvent);\n};\n/**\n * Logs a http request for operational telemetry indicators.\n * @param [event] Properties for the event e.g. Method, hostname etc.\n */\nexport const logHttpEvent = (event) => {\n    const httpEvent = () => telemetryClients.forEach((telemetryClient) => {\n        telemetryClient.logHttpEvent(event);\n    });\n    queueEvent(httpEvent);\n};\n/**\n * Logs that a page, or a container is displayed to the user.\n * @param event\n */\nexport const logPageView = (event) => {\n    const pageViewEvent = () => telemetryClients.forEach((telemetryClient) => {\n        telemetryClient.logPageView(event);\n    });\n    queueEvent(pageViewEvent);\n};\n/**\n * Logs an exception that has been caught.\n * @param error\n * @param severityLevel\n */\nexport const logException = (error, severityLevel, properties) => {\n    const event = () => telemetryClients.forEach((telemetryClient) => {\n        telemetryClient.logException(error, severityLevel, properties);\n    });\n    queueEvent(event);\n};\n/**\n * Logs a diagnostic trace message such as entering or leaving a function.\n * @param message\n * @param severityLevel\n */\nexport const logTrace = (message, severityLevel = SeverityLevel.Information, properties) => {\n    const event = () => telemetryClients.forEach((telemetryClient) => {\n        telemetryClient.logTrace(message, severityLevel, properties);\n    });\n    queueEvent(event);\n};\n/**\n * Logs custom events.\n * @param eventName Event name.\n * @param properties Key value pairs sent to the `logEvent` method.\n */\nexport const logEvent = (eventName, properties) => {\n    const logEvent = () => telemetryClients.forEach((telemetryClient) => {\n        telemetryClient.logEvent(eventName, properties);\n    });\n    queueEvent(logEvent);\n};\n/**\n * Manually triggers an immediate send of all telemetry information\n * that is still in the buffer.\n * @param callback\n */\nexport const flushTelemetry = (callback) => {\n    telemetryClients.forEach((telemetryClient) => {\n        if (telemetryClient.isInitialized()) {\n            telemetryClient.flush(callback);\n        }\n    });\n    hasTelemetryClients = false;\n};\n/**\n * Pushes the log event to LogBuffer if telemetry has not been initialized\n * or push the events to ARIA.\n * @param callback Event callback to be queued.\n */\nexport const queueEvent = (callback) => {\n    !hasTelemetryClients ||\n        telemetryClients.filter((e) => e.isBufferForced() === true).length > 0\n        ? telemetryEventBuffer.addToTelemetryEventBuffer(callback)\n        : callback();\n};\n//# sourceMappingURL=telemetryClients.js.map","import{s as t}from\"../../../../node_modules/.pnpm/debug@4.3.5/node_modules/debug/src/index.js\";import{UUID as e}from\"./uuidObject.js\";const n=new e,o=t.debug.formatArgs;t.debug.formatArgs=function(t){t[0]=`(${(new Date).toISOString()}): ${t[0]} [${n.toString()}]`,o.call(this,t)};const r=t.debug(\"teamsJs\");function u(t){return r.extend(t)}function s(t,e){return`${t}_${e}`}function d(t){return/^v\\d+_[\\w.]+$/.test(t)}export{s as getApiVersionTag,u as getLogger,d as isFollowingApiVersionTagFormat,n as teamsJsInstanceIdentifier};\n","/*\n * Application Insights JavaScript SDK - Web Analytics, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 4\r\nexport var _DYN_DISABLE_EXCEPTION_TR0 = \"disableExceptionTracking\"; // Count: 3\r\nexport var _DYN_AUTO_TRACK_PAGE_VISI1 = \"autoTrackPageVisitTime\"; // Count: 4\r\nexport var _DYN_OVERRIDE_PAGE_VIEW_D2 = \"overridePageViewDuration\"; // Count: 3\r\nexport var _DYN_ENABLE_UNHANDLED_PRO3 = \"enableUnhandledPromiseRejectionTracking\"; // Count: 3\r\nexport var _DYN_SAMPLING_PERCENTAGE = \"samplingPercentage\"; // Count: 4\r\nexport var _DYN_IS_STORAGE_USE_DISAB4 = \"isStorageUseDisabled\"; // Count: 4\r\nexport var _DYN_IS_BROWSER_LINK_TRAC5 = \"isBrowserLinkTrackingEnabled\"; // Count: 4\r\nexport var _DYN_ENABLE_AUTO_ROUTE_TR6 = \"enableAutoRouteTracking\"; // Count: 3\r\nexport var _DYN_NAME_PREFIX = \"namePrefix\"; // Count: 3\r\nexport var _DYN_DISABLE_FLUSH_ON_BEF7 = \"disableFlushOnBeforeUnload\"; // Count: 3\r\nexport var _DYN_DISABLE_FLUSH_ON_UNL8 = \"disableFlushOnUnload\"; // Count: 2\r\nexport var _DYN_CORE = \"core\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 8\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 13\r\nexport var _DYN_TRACK = \"track\"; // Count: 7\r\nexport var _DYN_TRACK_PAGE_VIEW = \"trackPageView\"; // Count: 4\r\nexport var _DYN_TRACK_PREVIOUS_PAGE_9 = \"trackPreviousPageVisit\"; // Count: 3\r\nexport var _DYN_SEND_PAGE_VIEW_INTER10 = \"sendPageViewInternal\"; // Count: 7\r\nexport var _DYN_SEND_PAGE_VIEW_PERFO11 = \"sendPageViewPerformanceInternal\"; // Count: 3\r\nexport var _DYN_POPULATE_PAGE_VIEW_P12 = \"populatePageViewPerformanceEvent\"; // Count: 3\r\nexport var _DYN_HREF = \"href\"; // Count: 6\r\nexport var _DYN_SEND_EXCEPTION_INTER13 = \"sendExceptionInternal\"; // Count: 2\r\nexport var _DYN_EXCEPTION = \"exception\"; // Count: 3\r\nexport var _DYN_ERROR = \"error\"; // Count: 5\r\nexport var _DYN__ONERROR = \"_onerror\"; // Count: 3\r\nexport var _DYN_ERROR_SRC = \"errorSrc\"; // Count: 3\r\nexport var _DYN_LINE_NUMBER = \"lineNumber\"; // Count: 5\r\nexport var _DYN_COLUMN_NUMBER = \"columnNumber\"; // Count: 5\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 4\r\nexport var _DYN__CREATE_AUTO_EXCEPTI14 = \"CreateAutoException\"; // Count: 3\r\nexport var _DYN_ADD_TELEMETRY_INITIA15 = \"addTelemetryInitializer\"; // Count: 4\r\nexport var _DYN_DURATION = \"duration\"; // Count: 10\r\nexport var _DYN_LENGTH = \"length\"; // Count: 5\r\nexport var _DYN_IS_PERFORMANCE_TIMIN16 = \"isPerformanceTimingSupported\"; // Count: 2\r\nexport var _DYN_GET_PERFORMANCE_TIMI17 = \"getPerformanceTiming\"; // Count: 2\r\nexport var _DYN_NAVIGATION_START = \"navigationStart\"; // Count: 4\r\nexport var _DYN_SHOULD_COLLECT_DURAT18 = \"shouldCollectDuration\"; // Count: 3\r\nexport var _DYN_IS_PERFORMANCE_TIMIN19 = \"isPerformanceTimingDataReady\"; // Count: 2\r\nexport var _DYN_GET_ENTRIES_BY_TYPE = \"getEntriesByType\"; // Count: 3\r\nexport var _DYN_RESPONSE_START = \"responseStart\"; // Count: 5\r\nexport var _DYN_REQUEST_START = \"requestStart\"; // Count: 3\r\nexport var _DYN_LOAD_EVENT_END = \"loadEventEnd\"; // Count: 4\r\nexport var _DYN_RESPONSE_END = \"responseEnd\"; // Count: 5\r\nexport var _DYN_CONNECT_END = \"connectEnd\"; // Count: 4\r\nexport var _DYN_PAGE_VISIT_START_TIM20 = \"pageVisitStartTime\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import{__module as e}from\"../../../../../../_virtual/browser.js\";import{__require as o}from\"./common.js\";var t;function C(){return t||(t=1,function(e,t){t.formatArgs=function(o){if(o[0]=(this.useColors?\"%c\":\"\")+this.namespace+(this.useColors?\" %c\":\" \")+o[0]+(this.useColors?\"%c \":\" \")+\"+\"+e.exports.humanize(this.diff),!this.useColors)return;const t=\"color: \"+this.color;o.splice(1,0,t,\"color: inherit\");let C=0,n=0;o[0].replace(/%[a-zA-Z%]/g,(e=>{\"%%\"!==e&&(C++,\"%c\"===e&&(n=C))})),o.splice(n,0,t)},t.save=function(e){try{e?t.storage.setItem(\"debug\",e):t.storage.removeItem(\"debug\")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem(\"debug\")}catch(e){}!e&&\"undefined\"!=typeof process&&\"env\"in process&&(e=process.env.DEBUG);return e},t.useColors=function(){if(\"undefined\"!=typeof window&&window.process&&(\"renderer\"===window.process.type||window.process.__nwjs))return!0;if(\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))return!1;return\"undefined\"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"))}})(),t.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],t.log=console.debug||console.log||(()=>{}),e.exports=o()(t);const{formatters:C}=e.exports;C.j=function(e){try{return JSON.stringify(e)}catch(e){return\"[UnexpectedJSONParseError]: \"+e.message}}}(e,e.exports)),e.exports}export{C as __require};\n","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { Util, CorrelationIdHelper, DateTimeUtils, dateTimeUtilsNow, dateTimeUtilsDuration, UrlHelper, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { DataSanitizer, dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","import e from\"./_polyfill-node.global.js\";import{Buffer as t}from\"./_polyfill-node.buffer.js\";import n from\"./_polyfill-node.process.js\";import r from\"./_polyfill-node._inherits.js\";var o=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++)n[t[r]]=Object.getOwnPropertyDescriptor(e,t[r]);return n},i=/%[sdj%]/g;function u(e){if(!w(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(a(arguments[n]));return t.join(\" \")}n=1;for(var r=arguments,o=r.length,u=String(e).replace(i,(function(e){if(\"%%\"===e)return\"%\";if(n>=o)return e;switch(e){case\"%s\":return String(r[n++]);case\"%d\":return Number(r[n++]);case\"%j\":try{return JSON.stringify(r[n++])}catch(e){return\"[Circular]\"}default:return e}})),c=r[n];n<o;c=r[++n])v(c)||!x(c)?u+=\" \"+c:u+=\" \"+a(c);return u}function c(t,r){if(z(e.process))return function(){return c(t,r).apply(this,arguments)};if(!0===n.noDeprecation)return t;var o=!1;return function(){if(!o){if(n.throwDeprecation)throw new Error(r);n.traceDeprecation?console.trace(r):console.error(r),o=!0}return t.apply(this,arguments)}}var l,s={};function f(e){if(z(l)&&(l=n.env.NODE_DEBUG||\"\"),e=e.toUpperCase(),!s[e])if(new RegExp(\"\\\\b\"+e+\"\\\\b\",\"i\").test(l)){s[e]=function(){var t=u.apply(null,arguments);console.error(\"%s %d: %s\",e,0,t)}}else s[e]=function(){};return s[e]}function a(e,t){var n={seen:[],stylize:y};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),m(t)?n.showHidden=t:t&&R(n,t),z(n.showHidden)&&(n.showHidden=!1),z(n.depth)&&(n.depth=2),z(n.colors)&&(n.colors=!1),z(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=p),g(n,e,n.depth)}function p(e,t){var n=a.styles[t];return n?\"\u001b[\"+a.colors[n][0]+\"m\"+e+\"\u001b[\"+a.colors[n][1]+\"m\":e}function y(e,t){return e}function g(e,t,n){if(e.customInspect&&t&&T(t.inspect)&&t.inspect!==a&&(!t.constructor||t.constructor.prototype!==t)){var r=t.inspect(n,e);return w(r)||(r=g(e,r,n)),r}var o=function(e,t){if(z(t))return e.stylize(\"undefined\",\"undefined\");if(w(t)){var n=\"'\"+JSON.stringify(t).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return e.stylize(n,\"string\")}if(j(t))return e.stylize(\"\"+t,\"number\");if(m(t))return e.stylize(\"\"+t,\"boolean\");if(v(t))return e.stylize(\"null\",\"null\")}(e,t);if(o)return o;var i=Object.keys(t),u=function(e){var t={};return e.forEach((function(e,n){t[e]=!0})),t}(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(t)),D(t)&&(i.indexOf(\"message\")>=0||i.indexOf(\"description\")>=0))return d(t);if(0===i.length){if(T(t)){var c=t.name?\": \"+t.name:\"\";return e.stylize(\"[Function\"+c+\"]\",\"special\")}if(E(t))return e.stylize(RegExp.prototype.toString.call(t),\"regexp\");if(P(t))return e.stylize(Date.prototype.toString.call(t),\"date\");if(D(t))return d(t)}var l,s=\"\",f=!1,p=[\"{\",\"}\"];(h(t)&&(f=!0,p=[\"[\",\"]\"]),T(t))&&(s=\" [Function\"+(t.name?\": \"+t.name:\"\")+\"]\");return E(t)&&(s=\" \"+RegExp.prototype.toString.call(t)),P(t)&&(s=\" \"+Date.prototype.toUTCString.call(t)),D(t)&&(s=\" \"+d(t)),0!==i.length||f&&0!=t.length?n<0?E(t)?e.stylize(RegExp.prototype.toString.call(t),\"regexp\"):e.stylize(\"[Object]\",\"special\"):(e.seen.push(t),l=f?function(e,t,n,r,o){for(var i=[],u=0,c=t.length;u<c;++u)H(t,String(u))?i.push(b(e,t,n,r,String(u),!0)):i.push(\"\");return o.forEach((function(o){o.match(/^\\d+$/)||i.push(b(e,t,n,r,o,!0))})),i}(e,t,n,u,i):i.map((function(r){return b(e,t,n,u,r,f)})),e.seen.pop(),function(e,t,n){var r=e.reduce((function(e,t){return t.indexOf(\"\\n\"),e+t.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1}),0);if(r>60)return n[0]+(\"\"===t?\"\":t+\"\\n \")+\" \"+e.join(\",\\n  \")+\" \"+n[1];return n[0]+t+\" \"+e.join(\", \")+\" \"+n[1]}(l,s,p)):p[0]+s+p[1]}function d(e){return\"[\"+Error.prototype.toString.call(e)+\"]\"}function b(e,t,n,r,o,i){var u,c,l;if((l=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?c=l.set?e.stylize(\"[Getter/Setter]\",\"special\"):e.stylize(\"[Getter]\",\"special\"):l.set&&(c=e.stylize(\"[Setter]\",\"special\")),H(r,o)||(u=\"[\"+o+\"]\"),c||(e.seen.indexOf(l.value)<0?(c=v(n)?g(e,l.value,null):g(e,l.value,n-1)).indexOf(\"\\n\")>-1&&(c=i?c.split(\"\\n\").map((function(e){return\"  \"+e})).join(\"\\n\").substr(2):\"\\n\"+c.split(\"\\n\").map((function(e){return\"   \"+e})).join(\"\\n\")):c=e.stylize(\"[Circular]\",\"special\")),z(u)){if(i&&o.match(/^\\d+$/))return c;(u=JSON.stringify(\"\"+o)).match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?(u=u.substr(1,u.length-2),u=e.stylize(u,\"name\")):(u=u.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\"),u=e.stylize(u,\"string\"))}return u+\": \"+c}function h(e){return Array.isArray(e)}function m(e){return\"boolean\"==typeof e}function v(e){return null===e}function O(e){return null==e}function j(e){return\"number\"==typeof e}function w(e){return\"string\"==typeof e}function S(e){return\"symbol\"==typeof e}function z(e){return void 0===e}function E(e){return x(e)&&\"[object RegExp]\"===F(e)}function x(e){return\"object\"==typeof e&&null!==e}function P(e){return x(e)&&\"[object Date]\"===F(e)}function D(e){return x(e)&&(\"[object Error]\"===F(e)||e instanceof Error)}function T(e){return\"function\"==typeof e}function N(e){return null===e||\"boolean\"==typeof e||\"number\"==typeof e||\"string\"==typeof e||\"symbol\"==typeof e||void 0===e}function _(e){return t.isBuffer(e)}function F(e){return Object.prototype.toString.call(e)}function k(e){return e<10?\"0\"+e.toString(10):e.toString(10)}a.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},a.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"};var A=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function J(){var e,t;console.log(\"%s - %s\",(e=new Date,t=[k(e.getHours()),k(e.getMinutes()),k(e.getSeconds())].join(\":\"),[e.getDate(),A[e.getMonth()],t].join(\" \")),u.apply(null,arguments))}function R(e,t){if(!t||!x(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}function H(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var U=\"undefined\"!=typeof Symbol?Symbol(\"util.promisify.custom\"):void 0;function $(e){if(\"function\"!=typeof e)throw new TypeError('The \"original\" argument must be of type Function');if(U&&e[U]){var t;if(\"function\"!=typeof(t=e[U]))throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');return Object.defineProperty(t,U,{value:t,enumerable:!1,writable:!1,configurable:!0}),t}function t(){for(var t,n,r=new Promise((function(e,r){t=e,n=r})),o=[],i=0;i<arguments.length;i++)o.push(arguments[i]);o.push((function(e,r){e?n(e):t(r)}));try{e.apply(this,o)}catch(e){n(e)}return r}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),U&&Object.defineProperty(t,U,{value:t,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(t,o(e))}function B(e,t){if(!e){var n=new Error(\"Promise was rejected with a falsy value\");n.reason=e,e=n}return t(e)}function C(e){if(\"function\"!=typeof e)throw new TypeError('The \"original\" argument must be of type Function');function t(){for(var t=[],r=0;r<arguments.length;r++)t.push(arguments[r]);var o=t.pop();if(\"function\"!=typeof o)throw new TypeError(\"The last argument must be of type Function\");var i=this,u=function(){return o.apply(i,arguments)};e.apply(this,t).then((function(e){n.nextTick(u.bind(null,null,e))}),(function(e){n.nextTick(B.bind(null,e,u))}))}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),Object.defineProperties(t,o(e)),t}$.custom=U;var M={inherits:r,_extend:R,log:J,isBuffer:_,isPrimitive:N,isFunction:T,isError:D,isDate:P,isObject:x,isRegExp:E,isUndefined:z,isSymbol:S,isString:w,isNumber:j,isNullOrUndefined:O,isNull:v,isBoolean:m,isArray:h,inspect:a,deprecate:c,format:u,debuglog:f,promisify:$,callbackify:C};export{R as _extend,C as callbackify,f as debuglog,M as default,c as deprecate,u as format,r as inherits,a as inspect,h as isArray,m as isBoolean,_ as isBuffer,P as isDate,D as isError,T as isFunction,v as isNull,O as isNullOrUndefined,j as isNumber,x as isObject,N as isPrimitive,E as isRegExp,w as isString,S as isSymbol,z as isUndefined,J as log,$ as promisify};\n","import{sendMessageToParent as o}from\"../internal/communication.js\";import{GlobalVars as t}from\"../internal/globalVars.js\";import{registerHandler as e,removeHandler as r}from\"../internal/handlers.js\";import{ensureInitialized as n}from\"../internal/internalAPIs.js\";import{getApiVersionTag as i}from\"../internal/telemetry.js\";import{isHostAdaptiveCardSchemaVersionUnsupported as a}from\"../internal/utils.js\";import{FrameContexts as s,errorNotSupportedOnPlatform as l,DialogDimension as u}from\"./constants.js\";import{runtime as d}from\"./runtime.js\";const p=\"v2\";function g(t,e){if(n(d,s.content,s.sidePanel,s.task,s.meetingStage),!h.update.isSupported())throw l;o(t,\"tasks.updateTask\",[e])}function c(t,a,u,g){if(n(d,s.content,s.sidePanel,s.meetingStage),!h.url.isSupported())throw l;g&&e(i(p,\"dialog.url.registerMessageForParentHandler\"),\"messageForParent\",g);const c=h.url.getDialogInfoFromUrlDialogInfo(a);o(t,\"tasks.startTask\",[c],((o,t)=>{null==u||u({err:o,result:t}),r(\"messageForParent\")}))}function m(t,a,u,g){if(n(d,s.content,s.sidePanel,s.meetingStage),!h.url.bot.isSupported())throw l;g&&e(i(p,\"dialog.url.bot.registerMessageForParentHandler\"),\"messageForParent\",g);const c=h.url.getDialogInfoFromBotUrlDialogInfo(a);o(t,\"tasks.startTask\",[c],((o,t)=>{null==u||u({err:o,result:t}),r(\"messageForParent\")}))}function f(t,e,r){if(n(d,s.task),!h.url.isSupported())throw l;o(t,\"tasks.completeTask\",[e,r?Array.isArray(r)?r:[r]:[]])}var h;!function(h){const S=[];function C(o){t.frameContext&&(t.frameContext===s.task?S.push(o):r(\"messageForChild\"))}var v;h.initialize=function(){e(i(p,\"dialog.registerMessageForChildHandler\"),\"messageForChild\",C,!1)},function(t){var a;function g(o){return{url:o.url,height:o.size?o.size.height:u.Small,width:o.size?o.size.width:u.Small,title:o.title,fallbackUrl:o.fallbackUrl}}t.open=function(o,t,e){c(i(p,\"dialog.url.open\"),o,t,e)},t.submit=function(o,t){f(i(p,\"dialog.url.submit\"),o,t)},function(t){function a(){var o,t;return n(d)&&!!(null===(t=null===(o=d.supports.dialog)||void 0===o?void 0:o.url)||void 0===t?void 0:t.parentCommunication)}t.sendMessageToParentFromDialog=function(t){if(n(d,s.task),!a())throw l;o(i(p,\"dialog.url.parentCommunication.sendMessageToParentFromDialog\"),\"messageForParent\",[t])},t.sendMessageToDialog=function(t){if(n(d,s.content,s.sidePanel,s.meetingStage),!a())throw l;o(i(p,\"dialog.url.parentCommunication.sendMessageToDialog\"),\"messageForChild\",[t])},t.registerOnMessageFromParent=function(o){if(n(d,s.task),!a())throw l;for(r(\"messageForChild\"),e(i(p,\"dialog.url.parentCommunication.registerMessageForChildHandler\"),\"messageForChild\",o),S.reverse();S.length>0;){o(S.pop())}},t.isSupported=a}(t.parentCommunication||(t.parentCommunication={})),t.isSupported=function(){return n(d)&&void 0!==(d.supports.dialog&&d.supports.dialog.url)},(a=t.bot||(t.bot={})).open=function(o,t,e){m(i(p,\"dialog.url.bot.open\"),o,t,e)},a.isSupported=function(){return n(d)&&void 0!==(d.supports.dialog&&d.supports.dialog.url&&d.supports.dialog.url.bot)},t.getDialogInfoFromUrlDialogInfo=g,t.getDialogInfoFromBotUrlDialogInfo=function(o){const t=g(o);return t.completionBotId=o.completionBotId,t}}(h.url||(h.url={})),h.isSupported=function(){return!(!n(d)||!d.supports.dialog)},(v=h.update||(h.update={})).resize=function(o){g(i(p,\"dialog.update.resize\"),o)},v.isSupported=function(){return!(!n(d)||!d.supports.dialog||!d.supports.dialog.update)},function(t){function e(){const o=d.hostVersionsInfo&&d.hostVersionsInfo.adaptiveCardSchemaVersion&&!a(d.hostVersionsInfo.adaptiveCardSchemaVersion);return n(d)&&void 0!==(o&&d.supports.dialog&&d.supports.dialog.card)}function r(o){return{card:o.card,height:o.size?o.size.height:u.Small,width:o.size?o.size.width:u.Small,title:o.title}}t.open=function(t,a){if(n(d,s.content,s.sidePanel,s.meetingStage),!e())throw l;const u=r(t);o(i(p,\"dialog.adaptiveCard.open\"),\"tasks.startTask\",[u],((o,t)=>{null==a||a({err:o,result:t})}))},t.isSupported=e,function(t){function e(){const o=d.hostVersionsInfo&&d.hostVersionsInfo.adaptiveCardSchemaVersion&&!a(d.hostVersionsInfo.adaptiveCardSchemaVersion);return n(d)&&void 0!==(o&&d.supports.dialog&&d.supports.dialog.card&&d.supports.dialog.card.bot)}t.open=function(t,a){if(n(d,s.content,s.sidePanel,s.meetingStage),!e())throw l;const u=function(o){const t=r(o);return t.completionBotId=o.completionBotId,t}(t);o(i(p,\"dialog.adaptiveCard.bot.open\"),\"tasks.startTask\",[u],((o,t)=>{null==a||a({err:o,result:t})}))},t.isSupported=e}(t.bot||(t.bot={}))}(h.adaptiveCard||(h.adaptiveCard={}))}(h||(h={}));export{m as botUrlOpenHelper,h as dialog,g as updateResizeHelper,c as urlOpenHelper,f as urlSubmitHelper};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ObjCreate, strShimFunction, strShimObject, strShimPrototype, strShimUndefined } from \"./Constants\";\r\nvar _cachedGlobal = null;\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport function getGlobal(useCached) {\r\n    if (useCached === void 0) { useCached = true; }\r\n    var result = useCached === false ? null : _cachedGlobal;\r\n    if (!result) {\r\n        if (typeof globalThis !== strShimUndefined) {\r\n            result = globalThis;\r\n        }\r\n        if (!result && typeof self !== strShimUndefined) {\r\n            result = self;\r\n        }\r\n        if (!result && typeof window !== strShimUndefined) {\r\n            result = window;\r\n        }\r\n        if (!result && typeof global !== strShimUndefined) {\r\n            result = global;\r\n        }\r\n        _cachedGlobal = result;\r\n    }\r\n    return result;\r\n}\r\nexport function throwTypeError(message) {\r\n    throw new TypeError(message);\r\n}\r\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object to use as a prototype. May be null\r\n */\r\nexport function objCreateFn(obj) {\r\n    var func = ObjCreate;\r\n    // Use build in Object.create\r\n    if (func) {\r\n        // Use Object create method if it exists\r\n        return func(obj);\r\n    }\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var type = typeof obj;\r\n    if (type !== strShimObject && type !== strShimFunction) {\r\n        throwTypeError(\"Object prototype may only be an Object:\" + obj);\r\n    }\r\n    function tmpFunc() { }\r\n    tmpFunc[strShimPrototype] = obj;\r\n    return new tmpFunc();\r\n}\r\n//# sourceMappingURL=Helpers.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport * from \"./lib\";\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Store the theming state in __themeState__ global scope for reuse in the case of duplicate\n// load-themed-styles hosted on the page.\nvar _root = typeof window === 'undefined' ? global : window; // eslint-disable-line @typescript-eslint/no-explicit-any\n// Nonce string to inject into script tag if one provided. This is used in CSP (Content Security Policy).\nvar _styleNonce = _root && _root.CSPSettings && _root.CSPSettings.nonce;\nvar _themeState = initializeThemeState();\n/**\n * Matches theming tokens. For example, \"[theme: themeSlotName, default: #FFF]\" (including the quotes).\n */\nvar _themeTokenRegex = /[\\'\\\"]\\[theme:\\s*(\\w+)\\s*(?:\\,\\s*default:\\s*([\\\\\"\\']?[\\.\\,\\(\\)\\#\\-\\s\\w]*[\\.\\,\\(\\)\\#\\-\\w][\\\"\\']?))?\\s*\\][\\'\\\"]/g;\nvar now = function () {\n    return typeof performance !== 'undefined' && !!performance.now ? performance.now() : Date.now();\n};\nfunction measure(func) {\n    var start = now();\n    func();\n    var end = now();\n    _themeState.perf.duration += end - start;\n}\n/**\n * initialize global state object\n */\nfunction initializeThemeState() {\n    var state = _root.__themeState__ || {\n        theme: undefined,\n        lastStyleElement: undefined,\n        registeredStyles: []\n    };\n    if (!state.runState) {\n        state = __assign(__assign({}, state), { perf: {\n                count: 0,\n                duration: 0\n            }, runState: {\n                flushTimer: 0,\n                mode: 0 /* sync */,\n                buffer: []\n            } });\n    }\n    if (!state.registeredThemableStyles) {\n        state = __assign(__assign({}, state), { registeredThemableStyles: [] });\n    }\n    _root.__themeState__ = state;\n    return state;\n}\n/**\n * Loads a set of style text. If it is registered too early, we will register it when the window.load\n * event is fired.\n * @param {string | ThemableArray} styles Themable style text to register.\n * @param {boolean} loadAsync When true, always load styles in async mode, irrespective of current sync mode.\n */\nexport function loadStyles(styles, loadAsync) {\n    if (loadAsync === void 0) { loadAsync = false; }\n    measure(function () {\n        var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);\n        var _a = _themeState.runState, mode = _a.mode, buffer = _a.buffer, flushTimer = _a.flushTimer;\n        if (loadAsync || mode === 1 /* async */) {\n            buffer.push(styleParts);\n            if (!flushTimer) {\n                _themeState.runState.flushTimer = asyncLoadStyles();\n            }\n        }\n        else {\n            applyThemableStyles(styleParts);\n        }\n    });\n}\n/**\n * Allows for customizable loadStyles logic. e.g. for server side rendering application\n * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}\n * a loadStyles callback that gets called when styles are loaded or reloaded\n */\nexport function configureLoadStyles(loadStylesFn) {\n    _themeState.loadStyles = loadStylesFn;\n}\n/**\n * Configure run mode of load-themable-styles\n * @param mode load-themable-styles run mode, async or sync\n */\nexport function configureRunMode(mode) {\n    _themeState.runState.mode = mode;\n}\n/**\n * external code can call flush to synchronously force processing of currently buffered styles\n */\nexport function flush() {\n    measure(function () {\n        var styleArrays = _themeState.runState.buffer.slice();\n        _themeState.runState.buffer = [];\n        var mergedStyleArray = [].concat.apply([], styleArrays);\n        if (mergedStyleArray.length > 0) {\n            applyThemableStyles(mergedStyleArray);\n        }\n    });\n}\n/**\n * register async loadStyles\n */\nfunction asyncLoadStyles() {\n    return setTimeout(function () {\n        _themeState.runState.flushTimer = 0;\n        flush();\n    }, 0);\n}\n/**\n * Loads a set of style text. If it is registered too early, we will register it when the window.load event\n * is fired.\n * @param {string} styleText Style to register.\n * @param {IStyleRecord} styleRecord Existing style record to re-apply.\n */\nfunction applyThemableStyles(stylesArray, styleRecord) {\n    if (_themeState.loadStyles) {\n        _themeState.loadStyles(resolveThemableArray(stylesArray).styleString, stylesArray);\n    }\n    else {\n        registerStyles(stylesArray);\n    }\n}\n/**\n * Registers a set theme tokens to find and replace. If styles were already registered, they will be\n * replaced.\n * @param {theme} theme JSON object of theme tokens to values.\n */\nexport function loadTheme(theme) {\n    _themeState.theme = theme;\n    // reload styles.\n    reloadStyles();\n}\n/**\n * Clear already registered style elements and style records in theme_State object\n * @param option - specify which group of registered styles should be cleared.\n * Default to be both themable and non-themable styles will be cleared\n */\nexport function clearStyles(option) {\n    if (option === void 0) { option = 3 /* all */; }\n    if (option === 3 /* all */ || option === 2 /* onlyNonThemable */) {\n        clearStylesInternal(_themeState.registeredStyles);\n        _themeState.registeredStyles = [];\n    }\n    if (option === 3 /* all */ || option === 1 /* onlyThemable */) {\n        clearStylesInternal(_themeState.registeredThemableStyles);\n        _themeState.registeredThemableStyles = [];\n    }\n}\nfunction clearStylesInternal(records) {\n    records.forEach(function (styleRecord) {\n        var styleElement = styleRecord && styleRecord.styleElement;\n        if (styleElement && styleElement.parentElement) {\n            styleElement.parentElement.removeChild(styleElement);\n        }\n    });\n}\n/**\n * Reloads styles.\n */\nfunction reloadStyles() {\n    if (_themeState.theme) {\n        var themableStyles = [];\n        for (var _i = 0, _a = _themeState.registeredThemableStyles; _i < _a.length; _i++) {\n            var styleRecord = _a[_i];\n            themableStyles.push(styleRecord.themableStyle);\n        }\n        if (themableStyles.length > 0) {\n            clearStyles(1 /* onlyThemable */);\n            applyThemableStyles([].concat.apply([], themableStyles));\n        }\n    }\n}\n/**\n * Find theme tokens and replaces them with provided theme values.\n * @param {string} styles Tokenized styles to fix.\n */\nexport function detokenize(styles) {\n    if (styles) {\n        styles = resolveThemableArray(splitStyles(styles)).styleString;\n    }\n    return styles;\n}\n/**\n * Resolves ThemingInstruction objects in an array and joins the result into a string.\n * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.\n */\nfunction resolveThemableArray(splitStyleArray) {\n    var theme = _themeState.theme;\n    var themable = false;\n    // Resolve the array of theming instructions to an array of strings.\n    // Then join the array to produce the final CSS string.\n    var resolvedArray = (splitStyleArray || []).map(function (currentValue) {\n        var themeSlot = currentValue.theme;\n        if (themeSlot) {\n            themable = true;\n            // A theming annotation. Resolve it.\n            var themedValue = theme ? theme[themeSlot] : undefined;\n            var defaultValue = currentValue.defaultValue || 'inherit';\n            // Warn to console if we hit an unthemed value even when themes are provided, but only if \"DEBUG\" is true.\n            // Allow the themedValue to be undefined to explicitly request the default value.\n            if (theme &&\n                !themedValue &&\n                console &&\n                !(themeSlot in theme) &&\n                typeof DEBUG !== 'undefined' &&\n                DEBUG) {\n                console.warn(\"Theming value not provided for \\\"\".concat(themeSlot, \"\\\". Falling back to \\\"\").concat(defaultValue, \"\\\".\"));\n            }\n            return themedValue || defaultValue;\n        }\n        else {\n            // A non-themable string. Preserve it.\n            return currentValue.rawString;\n        }\n    });\n    return {\n        styleString: resolvedArray.join(''),\n        themable: themable\n    };\n}\n/**\n * Split tokenized CSS into an array of strings and theme specification objects\n * @param {string} styles Tokenized styles to split.\n */\nexport function splitStyles(styles) {\n    var result = [];\n    if (styles) {\n        var pos = 0; // Current position in styles.\n        var tokenMatch = void 0;\n        while ((tokenMatch = _themeTokenRegex.exec(styles))) {\n            var matchIndex = tokenMatch.index;\n            if (matchIndex > pos) {\n                result.push({\n                    rawString: styles.substring(pos, matchIndex)\n                });\n            }\n            result.push({\n                theme: tokenMatch[1],\n                defaultValue: tokenMatch[2] // May be undefined\n            });\n            // index of the first character after the current match\n            pos = _themeTokenRegex.lastIndex;\n        }\n        // Push the rest of the string after the last match.\n        result.push({\n            rawString: styles.substring(pos)\n        });\n    }\n    return result;\n}\n/**\n * Registers a set of style text. If it is registered too early, we will register it when the\n * window.load event is fired.\n * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.\n * @param {IStyleRecord} styleRecord May specify a style Element to update.\n */\nfunction registerStyles(styleArray) {\n    if (typeof document === 'undefined') {\n        return;\n    }\n    var head = document.getElementsByTagName('head')[0];\n    var styleElement = document.createElement('style');\n    var _a = resolveThemableArray(styleArray), styleString = _a.styleString, themable = _a.themable;\n    styleElement.setAttribute('data-load-themed-styles', 'true');\n    if (_styleNonce) {\n        styleElement.setAttribute('nonce', _styleNonce);\n    }\n    styleElement.appendChild(document.createTextNode(styleString));\n    _themeState.perf.count++;\n    head.appendChild(styleElement);\n    var ev = document.createEvent('HTMLEvents');\n    ev.initEvent('styleinsert', true /* bubbleEvent */, false /* cancelable */);\n    ev.args = {\n        newStyle: styleElement\n    };\n    document.dispatchEvent(ev);\n    var record = {\n        styleElement: styleElement,\n        themableStyle: styleArray\n    };\n    if (themable) {\n        _themeState.registeredThemableStyles.push(record);\n    }\n    else {\n        _themeState.registeredStyles.push(record);\n    }\n}\n//# sourceMappingURL=index.js.map","import{GlobalVars as e}from\"../internal/globalVars.js\";import{registerOnLoadHandler as r,registerBeforeUnloadHandler as t}from\"../internal/handlers.js\";import{ensureInitialized as n}from\"../internal/internalAPIs.js\";import{getApiVersionTag as i}from\"../internal/telemetry.js\";import{isNullOrUndefined as o}from\"../internal/typeCheckUtilities.js\";import{ssrSafeWindow as a}from\"../internal/utils.js\";import{errorNotSupportedOnPlatform as l}from\"./constants.js\";import{runtime as s}from\"./runtime.js\";var p;!function(p){function m(){a().print()}function f(e,t,i){!o(t)&&n(s),!o(t)&&i&&i(),r(e,t)}function d(e,r,i){!o(r)&&n(s),!o(r)&&i&&i(),t(e,r)}function u(){return!(!n(s)||!s.supports.teamsCore)}p.enablePrintCapability=function(){if(!e.printCapabilityEnabled){if(n(s),!u())throw l;e.printCapabilityEnabled=!0,document.addEventListener(\"keydown\",(e=>{(e.ctrlKey||e.metaKey)&&80===e.keyCode&&(m(),e.cancelBubble=!0,e.preventDefault(),e.stopImmediatePropagation())}))}},p.print=m,p.registerOnLoadHandler=function(e){f(i(\"v2\",\"teamsAPIs_registerOnLoadHandler\"),e,(()=>{if(!o(e)&&!u())throw l}))},p.registerOnLoadHandlerHelper=f,p.registerBeforeUnloadHandler=function(e){d(i(\"v2\",\"teamsAPIs_registerBeforeUnloadHandler\"),e,(()=>{if(!o(e)&&!u())throw l}))},p.registerBeforeUnloadHandlerHelper=d,p.isSupported=u}(p||(p={}));export{p as teamsCore};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { _DYN_COOKIE_CFG, _DYN_INDEX_OF, _DYN_LENGTH, _DYN_LOGGER, _DYN_SET_ENABLED, _DYN_SPLIT, _DYN_SUBSTRING, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { dumpObj, getDocument, getLocation, getNavigator, isIE } from \"./EnvUtils\";\r\nimport { arrForEach, dateNow, getExceptionName, isArray, isFunction, isNotNullOrUndefined, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, setValue, strContains, strEndsWith, strTrim } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strEnabled = \"enabled\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc = getDocument();\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nexport function _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _createCookieMgrConfig(rootConfig) {\r\n    var cookieMgrCfg = rootConfig[_DYN_COOKIE_CFG /* @min:%2ecookieCfg */] = rootConfig[_DYN_COOKIE_CFG /* @min:%2ecookieCfg */] || {};\r\n    // Sets the values from the root config if not already present on the cookieMgrCfg\r\n    setValue(cookieMgrCfg, \"domain\", rootConfig.cookieDomain, isNotNullOrUndefined, isNullOrUndefined);\r\n    setValue(cookieMgrCfg, \"path\", rootConfig.cookiePath || \"/\", null, isNullOrUndefined);\r\n    if (isNullOrUndefined(cookieMgrCfg[strEnabled])) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        cookieMgrCfg[strEnabled] = cookieEnabled;\r\n    }\r\n    return cookieMgrCfg;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return cookieMgrCfg.ignoreCookies[_DYN_INDEX_OF /* @min:%2eindexOf */](name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (cookieMgrCfg.blockedCookies[_DYN_INDEX_OF /* @min:%2eindexOf */](name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config[_DYN_COOKIE_CFG /* @min:%2ecookieCfg */];\r\n        if (cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var _a;\r\n    var cookieMgrConfig = _createCookieMgrConfig(rootConfig || _globalCookieConfig);\r\n    var _path = cookieMgrConfig.path || \"/\";\r\n    var _domain = cookieMgrConfig.domain;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled = cookieMgrConfig[strEnabled] !== false;\r\n    var cookieMgr = (_a = {\r\n            isEnabled: function () {\r\n                var enabled = _enabled && areCookiesSupported(logger);\r\n                // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n                // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n                var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n                if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                    // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                    // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                    enabled = _isMgrEnabled(gblManager);\r\n                }\r\n                return enabled;\r\n            }\r\n        },\r\n        _a[_DYN_SET_ENABLED /* @min:setEnabled */] = function (value) {\r\n            // Explicitly checking against false, so that setting to undefined will === true\r\n            _enabled = value !== false;\r\n        },\r\n        _a.set = function (name, value, maxAgeSec, domain, path) {\r\n            var result = false;\r\n            if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                var values = {};\r\n                var theValue = strTrim(value || STR_EMPTY);\r\n                var idx = theValue[_DYN_INDEX_OF /* @min:%2eindexOf */](\";\");\r\n                if (idx !== -1) {\r\n                    theValue = strTrim(value[_DYN_SUBSTRING /* @min:%2esubstring */](0, idx));\r\n                    values = _extractParts(value[_DYN_SUBSTRING /* @min:%2esubstring */](idx + 1));\r\n                }\r\n                // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                setValue(values, \"domain\", domain || _domain, isTruthy, isUndefined);\r\n                if (!isNullOrUndefined(maxAgeSec)) {\r\n                    var _isIE = isIE();\r\n                    if (isUndefined(values[strExpires])) {\r\n                        var nowMs = dateNow();\r\n                        // Only add expires if not already present\r\n                        var expireMs = nowMs + (maxAgeSec * 1000);\r\n                        // Sanity check, if zero or -ve then ignore\r\n                        if (expireMs > 0) {\r\n                            var expiry = new Date();\r\n                            expiry.setTime(expireMs);\r\n                            setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                        }\r\n                    }\r\n                    if (!_isIE) {\r\n                        // Only replace if not already present\r\n                        setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                    }\r\n                }\r\n                var location_1 = getLocation();\r\n                if (location_1 && location_1.protocol === \"https:\") {\r\n                    setValue(values, \"secure\", null, null, isUndefined);\r\n                    // Only set same site if not also secure\r\n                    if (_allowUaSameSite === null) {\r\n                        _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                    }\r\n                    if (_allowUaSameSite) {\r\n                        setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                    }\r\n                }\r\n                setValue(values, \"path\", path || _path, null, isUndefined);\r\n                var setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                setCookieFn(name, _formatCookieValue(theValue, values));\r\n                result = true;\r\n            }\r\n            return result;\r\n        },\r\n        _a.get = function (name) {\r\n            var value = STR_EMPTY;\r\n            if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                value = (cookieMgrConfig.getCookie || _getCookieValue)(name);\r\n            }\r\n            return value;\r\n        },\r\n        _a.del = function (name, path) {\r\n            var result = false;\r\n            if (_isMgrEnabled(cookieMgr)) {\r\n                // Only remove the cookie if the manager and cookie support has not been disabled\r\n                result = cookieMgr.purge(name, path);\r\n            }\r\n            return result;\r\n        },\r\n        _a.purge = function (name, path) {\r\n            var _a;\r\n            var result = false;\r\n            if (areCookiesSupported(logger)) {\r\n                // Setting the expiration date in the past immediately removes the cookie\r\n                var values = (_a = {},\r\n                    _a[\"path\"] = path ? path : \"/\",\r\n                    _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                    _a);\r\n                if (!isIE()) {\r\n                    // Set max age to expire now\r\n                    values[\"max-age\"] = \"0\";\r\n                }\r\n                var delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                delCookie(name, _formatCookieValue(STR_EMPTY, values));\r\n                result = true;\r\n            }\r\n            return result;\r\n        },\r\n        _a);\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        try {\r\n            var doc = _doc || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = thePart[_DYN_INDEX_OF /* @min:%2eindexOf */](\"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(thePart[_DYN_SUBSTRING /* @min:%2esubstring */](0, idx))] = strTrim(thePart[_DYN_SUBSTRING /* @min:%2esubstring */](idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    if (_doc) {\r\n        var theCookie = _doc[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    if (_doc) {\r\n        _doc[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* PropertiesPlugin.ts\r\n* @author Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, arrForEach, objForEachKey, objKeys, setProcessTelemetryTimings } from \"@microsoft/1ds-core-js\";\r\nimport { Extensions } from \"./ExtensionKeys\";\r\nimport { TelemetryContext } from \"./TelemetryContext\";\r\nvar extensions = [\r\n    Extensions[4 /* eExtensions.AppExt */],\r\n    Extensions[0 /* eExtensions.UserExt */],\r\n    Extensions[3 /* eExtensions.WebExt */],\r\n    Extensions[5 /* eExtensions.OSExt */],\r\n    Extensions[6 /* eExtensions.SdkExt */],\r\n    Extensions[7 /* eExtensions.IntWebExt */],\r\n    Extensions[8 /* eExtensions.UtcExt */],\r\n    Extensions[9 /* eExtensions.LocExt */],\r\n    Extensions[1 /* eExtensions.DeviceExt */],\r\n    Extensions[2 /* eExtensions.TraceExt */],\r\n    Extensions[11 /* eExtensions.DtExt */],\r\n    Extensions[10 /* eExtensions.CloudExt */]\r\n];\r\nvar PropertiesPlugin = /** @class */ (function (_super) {\r\n    __extends(PropertiesPlugin, _super);\r\n    function PropertiesPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"SystemPropertiesCollector\";\r\n        _this.priority = 3;\r\n        _this.version = '3.2.10';\r\n        // Do not set default values here, set them in the _initDefaults() which is also called during teardown()\r\n        var _context;\r\n        var _properties;\r\n        var _config;\r\n        dynamicProto(PropertiesPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.initialize = function (coreConfig, core, extensions) {\r\n                _base.initialize(coreConfig, core, extensions);\r\n                _config = _self._getTelCtx().getExtCfg(_self.identifier);\r\n                _context = new TelemetryContext(coreConfig, _config, core);\r\n                if (core && core.setTraceCtx) {\r\n                    core.setTraceCtx(_context.getTraceCtx());\r\n                }\r\n            };\r\n            /**\r\n             * Process the event and add part A fields to it.\r\n             * @param event - The event that needs to be stored.\r\n             * @param itemCtx - This is the context for the current request, ITelemetryPlugin instances\r\n             * can optionally use this to access the current core instance or define / pass additional information\r\n             * to later plugins (vs appending items to the telemetry item)\r\n             */\r\n            _self.processTelemetry = function (event, itemCtx) {\r\n                setProcessTelemetryTimings(event, _self.identifier);\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                var evtExt = event.ext = event.ext ? event.ext : {};\r\n                event.data = event.data ? event.data : {};\r\n                arrForEach(extensions, function (value) {\r\n                    evtExt[value] = evtExt[value] || {};\r\n                });\r\n                if (_context) {\r\n                    _context.applyApplicationContext(event);\r\n                    _context.applyUserContext(event);\r\n                    _context.applyWebContext(event);\r\n                    _context.applyOsContext(event);\r\n                    _context.applySdkContext(event);\r\n                    _context.applyIntWebContext(event);\r\n                    _context.applyUtcContext(event);\r\n                    _context.applyLocContext(event);\r\n                    _context.applySessionContext(event);\r\n                    _context.applyDeviceContext(event);\r\n                    if (_config.enableApplicationInsightsTrace) {\r\n                        _context.applyAITraceContext(event);\r\n                    }\r\n                    if (_config.enableDistributedTracing) {\r\n                        _context.applyDistributedTraceContext(event);\r\n                    }\r\n                    _context.applyCloudContext(event);\r\n                }\r\n                // Delete empty ext fields\r\n                arrForEach(objKeys(evtExt), function (key) {\r\n                    if (objKeys(evtExt[key]).length === 0) {\r\n                        delete evtExt[key];\r\n                    }\r\n                });\r\n                // Add custom properties\r\n                _addPropertiesIfAbsent(_properties, event.data);\r\n                _self.processNext(event, itemCtx);\r\n            };\r\n            /**\r\n             * Get properties context to override or specify specific part A properties\r\n             * @returns the Context\r\n             */\r\n            _self.getPropertiesContext = function () {\r\n                return _context;\r\n            };\r\n            /**\r\n             * Sets a custom property to be sent with every event. IEventProperty can be used to tag the property as\r\n             * pii or customer content.\r\n             * @param name - The name of the property.\r\n             * @param value - The context property's value.\r\n             */\r\n            _self.setProperty = function (name, value) {\r\n                _properties[name] = value;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                var core = (unloadCtx || {}).core();\r\n                if (core && core.getTraceCtx && _context) {\r\n                    var traceCtx = core.getTraceCtx(false);\r\n                    if (traceCtx && traceCtx === _context.getTraceCtx()) {\r\n                        core.setTraceCtx(null);\r\n                    }\r\n                }\r\n                _initDefaults();\r\n            };\r\n            function _initDefaults() {\r\n                _context = null;\r\n                _properties = {};\r\n            }\r\n            function _addPropertiesIfAbsent(inputMap, outputMap) {\r\n                if (inputMap) {\r\n                    objForEachKey(inputMap, function (name, inputValue) {\r\n                        if (!outputMap[name]) {\r\n                            outputMap[name] = inputValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PropertiesPlugin.prototype.initialize.\r\n// Removed Stub for PropertiesPlugin.prototype.processTelemetry.\r\n// Removed Stub for PropertiesPlugin.prototype.getPropertiesContext.\r\n// Removed Stub for PropertiesPlugin.prototype.setProperty.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    PropertiesPlugin.__ieDyn=1;\n\n    return PropertiesPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","import{HostClientType as i}from\"../public/constants.js\";import{ErrorCode as t}from\"../public/interfaces.js\";import{isRuntimeInitialized as e}from\"../public/runtime.js\";import{errorLibraryNotInitialized as r,defaultSDKVersionForCompatCheck as n,userOriginUrlValidationRegExp as o}from\"./constants.js\";import{GlobalVars as l}from\"./globalVars.js\";import{getLogger as s}from\"./telemetry.js\";import{compareSDKVersions as a}from\"./utils.js\";const f=s(\"internal\"),c=f.extend(\"ensureInitializeCalled\"),d=f.extend(\"ensureInitialized\");function m(){if(!l.initializeCalled)throw c(r),new Error(r)}function p(i,...t){if(!l.initializeCompleted)throw d(\"%s. initializeCalled: %s\",r,l.initializeCalled.toString()),new Error(r);if(t&&t.length>0){let i=!1;for(let e=0;e<t.length;e++)if(t[e]===l.frameContext){i=!0;break}if(!i)throw new Error(`This call is only allowed in following contexts: ${JSON.stringify(t)}. Current context: \"${l.frameContext}\".`)}return e(i)}function u(i=n){const t=a(l.clientSupportedSDKVersion,i);return!isNaN(t)&&t>=0}function C(){return l.hostClientType==i.android||l.hostClientType==i.ios||l.hostClientType==i.ipados}function h(i=n){if(!C()){throw{errorCode:t.NOT_SUPPORTED_ON_PLATFORM}}if(!u(i)){throw{errorCode:t.OLD_PLATFORM}}}function w(i){let t=l.additionalValidOrigins.concat(i.filter((i=>\"string\"==typeof i&&o.test(i))));const e={};t=t.filter((i=>!e[i]&&(e[i]=!0,!0))),l.additionalValidOrigins=t}export{m as ensureInitializeCalled,p as ensureInitialized,u as isCurrentSDKVersionAtLeast,C as isHostClientMobile,w as processAdditionalValidOrigins,h as throwExceptionIfMobileApiIsNotSupported};\n","function n(n){return null==n}export{n as isNullOrUndefined};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_DIAG_LOG, _DYN_ENABLE_DEBUG_EXCEPTI4, _DYN_LOGGER, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { dumpObj, getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { getCfgValue, isFunction, isUndefined } from \"./HelperFuncs\";\r\nimport { STR_EMPTY, STR_ERROR_TO_CONSOLE, STR_WARN_TO_CONSOLE } from \"./InternalConstants\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            _self.telemetryLoggingLevel = function () { return _loggingLevelTelemetry; };\r\n            _self.maxInternalMessageLimit = function () { return _maxInternalMessageLimit; };\r\n            _self[_DYN_ENABLE_DEBUG_EXCEPTI4 /* @min:%2eenableDebugExceptions */] = function () { return _enableDebug; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity {LoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The log message.\r\n             */\r\n            _self.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = severity === 1 /* eLoggingSeverity.CRITICAL */ ? STR_ERROR_TO_CONSOLE : STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * This will write a warning to the console if possible\r\n             * @param message {string} - The warning message\r\n             */\r\n            _self[STR_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            /**\r\n             * This will write an error to the console if possible\r\n             * @param message {string} - The error message\r\n             */\r\n            _self[STR_ERROR_TO_CONSOLE /* @min:%2eerrorToConsole */] = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            /**\r\n             * Resets the internal message count\r\n             */\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            /**\r\n             * Logs a message to the internal queue.\r\n             * @param severity {LoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The message to log.\r\n             */\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self[STR_ERROR_TO_CONSOLE /* @min:%2eerrorToConsole */](throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[STR_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                _loggingLevelConsole = getCfgValue(config.loggingLevelConsole, 0);\r\n                _loggingLevelTelemetry = getCfgValue(config.loggingLevelTelemetry, 1);\r\n                _maxInternalMessageLimit = getCfgValue(config.maxMessageLimit, 25);\r\n                _enableDebug = getCfgValue(config.enableDebug, getCfgValue(config[_DYN_ENABLE_DEBUG_EXCEPTI4 /* @min:%2eenableDebugExceptions */], false));\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.enableDebugExceptions.\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.telemetryLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.maxInternalMessageLimit.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity {LoggingSeverity} - The severity of the log message\r\n * @param message {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger).throwInternal(severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[STR_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity {LoggingSeverity} - The severity of the log message\r\n * @param message {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { _DYN_CALL, _DYN_INDEX_OF, _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { isString, isUndefined, strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strWindow = \"window\";\r\nvar strDocument = \"document\";\r\nvar strDocumentMode = \"documentMode\";\r\nvar strNavigator = \"navigator\";\r\nvar strHistory = \"history\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strPerformance = \"performance\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Return the named global object if available, will return null if the object is not available.\r\n * @param name The globally named object\r\n */\r\nexport function getGlobalInst(name) {\r\n    var gbl = getGlobal();\r\n    if (gbl && gbl[name]) {\r\n        return gbl[name];\r\n    }\r\n    // Test workaround, for environments where <global>.window (when global == window) doesn't return the base window\r\n    if (name === strWindow && hasWindow()) {\r\n        // tslint:disable-next-line: no-angle-bracket-type-assertion\r\n        return window;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Checks if window object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a window\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: window is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasWindow() {\r\n    return Boolean(typeof window === strShimObject && window);\r\n}\r\n/**\r\n * Returns the global window object if it is present otherwise null.\r\n * This helper is used to access the window object without causing an exception\r\n * \"Uncaught ReferenceError: window is not defined\"\r\n */\r\nexport function getWindow() {\r\n    if (hasWindow()) {\r\n        return window;\r\n    }\r\n    // Return the global instance or null\r\n    return getGlobalInst(strWindow);\r\n}\r\n/**\r\n * Checks if document object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a document\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: document is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasDocument() {\r\n    return Boolean(typeof document === strShimObject && document);\r\n}\r\n/**\r\n * Returns the global document object if it is present otherwise null.\r\n * This helper is used to access the document object without causing an exception\r\n * \"Uncaught ReferenceError: document is not defined\"\r\n */\r\nexport function getDocument() {\r\n    if (hasDocument()) {\r\n        return document;\r\n    }\r\n    return getGlobalInst(strDocument);\r\n}\r\n/**\r\n * Checks if navigator object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: navigator is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasNavigator() {\r\n    return Boolean(typeof navigator === strShimObject && navigator);\r\n}\r\n/**\r\n * Returns the global navigator object if it is present otherwise null.\r\n * This helper is used to access the navigator object without causing an exception\r\n * \"Uncaught ReferenceError: navigator is not defined\"\r\n */\r\nexport function getNavigator() {\r\n    if (hasNavigator()) {\r\n        return navigator;\r\n    }\r\n    return getGlobalInst(strNavigator);\r\n}\r\n/**\r\n * Checks if history object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: history is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasHistory() {\r\n    return Boolean(typeof history === strShimObject && history);\r\n}\r\n/**\r\n * Returns the global history object if it is present otherwise null.\r\n * This helper is used to access the history object without causing an exception\r\n * \"Uncaught ReferenceError: history is not defined\"\r\n */\r\nexport function getHistory() {\r\n    if (hasHistory()) {\r\n        return history;\r\n    }\r\n    return getGlobalInst(strHistory);\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getGlobalInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getGlobalInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getGlobalInst(strConsole);\r\n}\r\n/**\r\n * Returns the performance object if it is present otherwise null.\r\n * This helper is used to access the performance object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getPerformance() {\r\n    return getGlobalInst(strPerformance);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getGlobalInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getGlobalInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getGlobalInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getGlobalInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1[_DYN_USER_AGENT /* @min:%2euserAgent */] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns string representation of an object suitable for diagnostics logging.\r\n */\r\nexport function dumpObj(object) {\r\n    var objectTypeDump = Object[strShimPrototype].toString[_DYN_CALL /* @min:%2ecall */](object);\r\n    var propertyValueDump = STR_EMPTY;\r\n    if (objectTypeDump === \"[object Error]\") {\r\n        propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object[_DYN_NAME /* @min:%2ename */] + \"'\";\r\n    }\r\n    else if (hasJSON()) {\r\n        propertyValueDump = getJSON().stringify(object);\r\n    }\r\n    return objectTypeDump + propertyValueDump;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2[_DYN_USER_AGENT /* @min:%2euserAgent */] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported() {\r\n    if (_beaconsSupported === null) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getGlobalInst(\"fetch\");\r\n        var request = getGlobalInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getGlobalInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getGlobalInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport * from \"./Logger\";\n//# sourceMappingURL=index.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","import{__rest as o}from\"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.0_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";import{errorRuntimeNotInitialized as e,errorRuntimeNotSupported as s}from\"../internal/constants.js\";import{GlobalVars as i}from\"../internal/globalVars.js\";import{getLogger as t}from\"../internal/telemetry.js\";import{compareSDKVersions as n,deepFreeze as r}from\"../internal/utils.js\";import{HostClientType as a,teamsMinAdaptiveCardVersion as p}from\"./constants.js\";const l=t(\"runtime\"),d=4;function u(o){return o.apiVersion===d}function c(o){if(u(o))return!0;throw-1===o.apiVersion?new Error(e):new Error(s)}let g={apiVersion:-1,supports:{}};const m={apiVersion:4,isNAAChannelRecommended:!1,hostVersionsInfo:p,isLegacyTeams:!0,supports:{appInstallDialog:{},appEntity:{},call:{},chat:{},conversations:{},dialog:{card:{bot:{}},url:{bot:{},parentCommunication:{}},update:{}},interactive:{},logs:{},meetingRoom:{},menus:{},monetization:{},notifications:{},pages:{config:{},backStack:{},fullTrust:{}},remoteCamera:{},teams:{fullTrust:{}},teamsCore:{},video:{sharedFrame:{}}}},b=[a.desktop,a.web,a.rigel,a.surfaceHub,a.teamsRoomsWindows,a.teamsRoomsAndroid,a.teamsPhones,a.teamsDisplays],y=[a.android,a.ios,a.ipados],f=[...b,...y];function h(o){let e=o;if(e.apiVersion<d&&v.forEach((o=>{e.apiVersion===o.versionToUpgradeFrom&&(e=o.upgradeToNextVersion(e))})),u(e))return e;throw new Error(\"Received a runtime that could not be upgraded to the latest version\")}const v=[{versionToUpgradeFrom:1,upgradeToNextVersion:o=>{var e;return{apiVersion:2,hostVersionsInfo:void 0,isLegacyTeams:o.isLegacyTeams,supports:Object.assign(Object.assign({},o.supports),{dialog:o.supports.dialog?{card:void 0,url:o.supports.dialog,update:null===(e=o.supports.dialog)||void 0===e?void 0:e.update}:void 0})}}},{versionToUpgradeFrom:2,upgradeToNextVersion:e=>{const s=e.supports,i=o(s,[\"appNotification\"]);return Object.assign(Object.assign({},e),{apiVersion:3,supports:i})}},{versionToUpgradeFrom:3,upgradeToNextVersion:o=>{var e,s,i,t,n;return{apiVersion:4,hostVersionsInfo:o.hostVersionsInfo,isNAAChannelRecommended:o.isNAAChannelRecommended,isLegacyTeams:o.isLegacyTeams,supports:Object.assign(Object.assign({},o.supports),{dialog:o.supports.dialog?{card:null===(e=o.supports.dialog)||void 0===e?void 0:e.card,url:{bot:null===(i=null===(s=o.supports.dialog)||void 0===s?void 0:s.url)||void 0===i?void 0:i.bot,parentCommunication:(null===(t=o.supports.dialog)||void 0===t?void 0:t.url)?{}:void 0},update:null===(n=o.supports.dialog)||void 0===n?void 0:n.update}:void 0})}}}],T={\"1.0.0\":[{capability:{pages:{appButton:{},tabs:{}},stageView:{}},hostClientTypes:b}],\"1.9.0\":[{capability:{location:{}},hostClientTypes:f}],\"2.0.0\":[{capability:{people:{}},hostClientTypes:f},{capability:{sharing:{}},hostClientTypes:[a.desktop,a.web]}],\"2.0.1\":[{capability:{teams:{fullTrust:{joinedTeams:{}}}},hostClientTypes:[a.android,a.desktop,a.ios,a.teamsRoomsAndroid,a.teamsPhones,a.teamsDisplays,a.web]},{capability:{webStorage:{}},hostClientTypes:[a.desktop]}],\"2.0.5\":[{capability:{webStorage:{}},hostClientTypes:[a.android,a.ios]}],\"2.0.8\":[{capability:{sharing:{}},hostClientTypes:[a.android,a.ios]}]},V=l.extend(\"generateBackCompatRuntimeConfig\");function C(o,e){const s=Object.assign({},o);for(const i in e)Object.prototype.hasOwnProperty.call(e,i)&&(\"object\"!=typeof e[i]||Array.isArray(e[i])?i in o||(s[i]=e[i]):s[i]=C(o[i]||{},e[i]));return s}function j(o,e,s){V(\"generating back compat runtime config for %s\",o);let t=Object.assign({},e.supports);V(\"Supported capabilities in config before updating based on highestSupportedVersion: %o\",t),Object.keys(s).forEach((e=>{n(o,e)>=0&&s[e].forEach((o=>{void 0!==i.hostClientType&&o.hostClientTypes.includes(i.hostClientType)&&(t=C(t,o.capability))}))}));const r={apiVersion:d,hostVersionsInfo:p,isLegacyTeams:!0,supports:t};return V(\"Runtime config after updating based on highestSupportedVersion: %o\",r),r}const w=l.extend(\"applyRuntimeConfig\");function O(o){\"string\"==typeof o.apiVersion&&(w(\"Trying to apply runtime with string apiVersion, processing as v1: %o\",o),o=Object.assign(Object.assign({},o),{apiVersion:1})),w(\"Fast-forwarding runtime %o\",o);const e=h(o);w(\"Applying runtime %o\",e),g=r(e)}export{O as applyRuntimeConfig,h as fastForwardRuntime,j as generateVersionBasedTeamsRuntimeConfig,c as isRuntimeInitialized,d as latestRuntimeApiVersion,T as mapTeamsVersionToSupportedCapabilities,g as runtime,v as upgradeChain,f as v1HostClientTypes,y as v1MobileHostClientTypes,m as versionAndPlatformAgnosticTeamsRuntimeConfig};\n","import{sendAndHandleStatusAndReasonWithDefaultError as e,sendMessageToParent as t,sendAndUnwrap as n,sendAndHandleStatusAndReason as r,sendAndHandleSdkError as i,Communication as s,sendMessageEventToChild as o}from\"../internal/communication.js\";import{registerHandlerHelper as a,registerHandler as u}from\"../internal/handlers.js\";import{ensureInitialized as c}from\"../internal/internalAPIs.js\";import{getApiVersionTag as p}from\"../internal/telemetry.js\";import{isNullOrUndefined as g}from\"../internal/typeCheckUtilities.js\";import{createTeamsAppLink as f}from\"../internal/utils.js\";import{prefetchOriginsFromCDN as l}from\"../internal/validOrigins.js\";import{AppId as d}from\"./appId.js\";import{appInitializeHelper as m}from\"./app.js\";import{FrameContexts as v,errorNotSupportedOnPlatform as h}from\"./constants.js\";import{runtime as w}from\"./runtime.js\";const S=\"v2\";function k(t,n){return new Promise((r=>{if(c(w,v.content,v.sidePanel,v.settings,v.remove,v.task,v.stage,v.meetingStage),!N.isSupported())throw h;r(e(t,\"navigateCrossDomain\",\"Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest.\",n))}))}function b(t){return new Promise((n=>{if(c(w),!N.backStack.isSupported())throw h;n(e(t,\"navigateBack\",\"Back navigation is not supported in the current client or context.\"))}))}function T(t,n){return new Promise((r=>{if(c(w),!N.tabs.isSupported())throw h;r(e(t,\"navigateToTab\",\"Invalid internalTabInstanceId and/or channelId were/was provided\",n))}))}function F(e,n){if(c(w),!N.isSupported())throw h;t(e,\"returnFocus\",[n])}function y(e,t){return new Promise((r=>{if(c(w),!N.tabs.isSupported())throw h;r(n(e,\"getTabInstances\",t))}))}function P(e,t){return new Promise((r=>{if(c(w),!N.tabs.isSupported())throw h;r(n(e,\"getMruTabInstances\",t))}))}function H(e,n){if(c(w,v.content,v.sidePanel,v.meetingStage),!N.isSupported())throw h;t(e,\"shareDeepLink\",[n.subPageId,n.subPageLabel,n.subPageWebUrl])}function B(e,n){if(c(w,v.content),!N.isSupported())throw h;t(e,\"setFrameContext\",[n])}function C(e,n){if(c(w,v.settings,v.remove),!N.config.isSupported())throw h;t(e,\"settings.setValidityState\",[n])}function L(e){return new Promise((t=>{if(c(w,v.content,v.settings,v.remove,v.sidePanel),!N.isSupported())throw h;t(n(e,\"settings.getSettings\"))}))}function I(e,t){return new Promise((n=>{if(c(w,v.content,v.settings,v.sidePanel),!N.config.isSupported())throw h;n(r(e,\"settings.setSettings\",t))}))}var N;function E(e){return e.appId instanceof d}function j(e){return Object.assign(Object.assign({},e),{appId:new d(e.appId),webUrl:e.webUrl?new URL(e.webUrl):void 0})}function x(e){return Object.assign(Object.assign({},e),{appId:e.appId.toString(),webUrl:e.webUrl?e.webUrl.toString():void 0})}!function(e){var n,d,F;function N(e){B(p(S,\"pages.setCurrentFrame\"),e)}function A(){return!(!c(w)||!w.supports.pages)}(n=e.EnterFocusType||(e.EnterFocusType={}))[n.PreviousLandmark=0]=\"PreviousLandmark\",n[n.NextLandmark=1]=\"NextLandmark\",n[n.Read=2]=\"Read\",n[n.Compose=3]=\"Compose\",(d=e.ReturnFocusType||(e.ReturnFocusType={}))[d.PreviousLandmark=0]=\"PreviousLandmark\",d[d.NextLandmark=1]=\"NextLandmark\",d[d.GoToActivityFeed=2]=\"GoToActivityFeed\",e.returnFocus=function(n){const r=p(S,\"pages.returnFocus\");if(c(w),!e.isSupported())throw h;if(void 0===n&&t(r,\"returnFocus\",[!1]),\"boolean\"==typeof n)t(r,\"returnFocus\",[n]);else switch(n){case e.ReturnFocusType.PreviousLandmark:case e.ReturnFocusType.GoToActivityFeed:t(r,\"returnFocus\",[!1,n]);break;case e.ReturnFocusType.NextLandmark:t(r,\"returnFocus\",[!0,n])}},e.registerFocusEnterHandler=function(e){a(p(S,\"pages.registerFocusEnterHandler\"),\"focusEnter\",e,[],(()=>{if(!A())throw h}))},e.setCurrentFrame=N,e.initializeWithFrameContext=function(e,t,n){l(),m(p(S,\"pages.initializeWithFrameContext\"),n).then((()=>t&&t())),N(e)},e.getConfig=function(){return L(p(S,\"pages.getConfig.\"))},e.navigateCrossDomain=function(e){return k(p(S,\"pages.navigateCrossDomain\"),e)},e.navigateToApp=function(e){return new Promise((t=>{if(c(w,v.content,v.sidePanel,v.settings,v.task,v.stage,v.meetingStage),!A())throw h;const n=p(S,\"pages.navigateToApp\");if(w.isLegacyTeams){const i=E(e)?e:j(e);t(r(n,\"executeDeepLink\",f(i)))}else{const i=E(e)?x(e):e;t(r(n,\"pages.navigateToApp\",i))}}))},e.shareDeepLink=function(e){return H(p(S,\"pages.shareDeepLink\"),e)},e.registerFullScreenHandler=function(e){a(p(S,\"pages.registerFullScreenHandler\"),\"fullScreenChange\",e,[],(()=>{if(!g(e)&&!A())throw h}))},e.isSupported=A,(F=e.tabs||(e.tabs={})).navigateToTab=function(e){return T(p(S,\"pages.tabs.navigateToTab\"),e)},F.getTabInstances=function(e){return y(p(S,\"pages.tabs.getTabInstances\"),e)},F.getMruTabInstances=function(e){return P(p(S,\"pages.tabs.getMruTabInstances\"),e)},F.isSupported=function(){return!(!c(w)||!w.supports.pages||!w.supports.pages.tabs)},function(e){let n,r;function i(e,r,i){!g(r)&&c(w,v.settings),i&&i(),n=r,!g(r)&&t(e,\"registerHandler\",[\"save\"])}function f(e,n,i){!g(n)&&c(w,v.remove,v.settings),i&&i(),r=n,!g(n)&&t(e,\"registerHandler\",[\"remove\"])}function l(e){const t=new d(e);n?n(t):s.childWindow?o(\"settings.save\",[e]):t.notifySuccess()}e.initialize=function(){u(p(S,\"pages.config.registerSettingsSaveHandler\"),\"settings.save\",l,!1),u(p(S,\"pages.config.registerSettingsRemoveHandler\"),\"settings.remove\",m,!1)},e.setValidityState=function(e){return C(p(S,\"pages.config.setValidityState\"),e)},e.setConfig=function(e){return I(p(S,\"pages.config.setConfig\"),e)},e.registerOnSaveHandler=function(e){i(p(S,\"pages.config.registerOnSaveHandler\"),e,(()=>{if(!g(e)&&!b())throw h}))},e.registerOnSaveHandlerHelper=i,e.registerOnRemoveHandler=function(e){f(p(S,\"pages.config.registerOnRemoveHandler\"),e,(()=>{if(!g(e)&&!b())throw h}))},e.registerOnRemoveHandlerHelper=f,e.registerChangeConfigHandler=function(e){a(p(S,\"pages.config.registerChangeConfigHandler\"),\"changeSettings\",e,[v.content],(()=>{if(!b())throw h}))};class d{constructor(e){this.notified=!1,this.result=e||{}}notifySuccess(){this.ensureNotNotified(),t(p(S,\"pages.saveEvent.notifySuccess\"),\"settings.save.success\"),this.notified=!0}notifyFailure(e){this.ensureNotNotified(),t(p(S,\"pages.saveEvent.notifyFailure\"),\"settings.save.failure\",[e]),this.notified=!0}ensureNotNotified(){if(this.notified)throw new Error(\"The SaveEvent may only notify success or failure once.\")}}function m(){const e=new k;r?r(e):s.childWindow?o(\"settings.remove\",[]):e.notifySuccess()}class k{constructor(){this.notified=!1}notifySuccess(){this.ensureNotNotified(),t(p(S,\"pages.removeEvent.notifySuccess\"),\"settings.remove.success\"),this.notified=!0}notifyFailure(e){this.ensureNotNotified(),t(p(S,\"pages.removeEvent.notifyFailure\"),\"settings.remove.failure\",[e]),this.notified=!0}ensureNotNotified(){if(this.notified)throw new Error(\"The removeEventType may only notify success or failure once.\")}}function b(){return!(!c(w)||!w.supports.pages)&&!!w.supports.pages.config}e.isSupported=b}(e.config||(e.config={})),function(e){let n;function r(){return b(p(S,\"pages.backStack.navigateBack\"))}function i(e,r,i){!g(r)&&c(w),i&&i(),n=r,!g(r)&&t(e,\"registerHandler\",[\"backButton\"])}function a(){n&&n()||(s.childWindow?o(\"backButtonPress\",[]):r())}function f(){return!(!c(w)||!w.supports.pages)&&!!w.supports.pages.backStack}e._initialize=function(){u(p(S,\"pages.backStack.registerBackButtonPressHandler\"),\"backButtonPress\",a,!1)},e.navigateBack=r,e.registerBackButtonHandler=function(e){i(p(S,\"pages.backStack.registerBackButtonHandler\"),e,(()=>{if(!g(e)&&!f())throw h}))},e.registerBackButtonHandlerHelper=i,e.isSupported=f}(e.backStack||(e.backStack={})),function(e){function n(){return!(!c(w)||!w.supports.pages)&&!!w.supports.pages.fullTrust}e.enterFullscreen=function(){if(c(w,v.content),!n())throw h;t(p(S,\"pages.fullTrust.enterFullscreen\"),\"enterFullscreen\",[])},e.exitFullscreen=function(){if(c(w,v.content),!n())throw h;t(p(S,\"pages.fullTrust.exitFullscreen\"),\"exitFullscreen\",[])},e.isSupported=n}(e.fullTrust||(e.fullTrust={})),function(e){function t(){return!(!c(w)||!w.supports.pages)&&!!w.supports.pages.appButton}e.onClick=function(e){a(p(S,\"pages.appButton.onClick\"),\"appButtonClick\",e,[v.content],(()=>{if(!t())throw h}))},e.onHoverEnter=function(e){a(p(S,\"pages.appButton.onHoverEnter\"),\"appButtonHoverEnter\",e,[v.content],(()=>{if(!t())throw h}))},e.onHoverLeave=function(e){a(p(S,\"pages.appButton.onHoverLeave\"),\"appButtonHoverLeave\",e,[v.content],(()=>{if(!t())throw h}))},e.isSupported=t}(e.appButton||(e.appButton={})),function(e){function t(){return!(!c(w)||!w.supports.pages)&&!!w.supports.pages.currentApp}e.navigateTo=function(e){return new Promise((n=>{if(c(w,v.content,v.sidePanel,v.settings,v.task,v.stage,v.meetingStage),!t())throw h;n(i(p(S,\"pages.currentApp.navigateTo\"),\"pages.currentApp.navigateTo\",e))}))},e.navigateToDefaultPage=function(){return new Promise((e=>{if(c(w,v.content,v.sidePanel,v.settings,v.task,v.stage,v.meetingStage),!t())throw h;e(i(p(S,\"pages.currentApp.navigateToDefaultPage\"),\"pages.currentApp.navigateToDefaultPage\"))}))},e.isSupported=t}(e.currentApp||(e.currentApp={}))}(N||(N={}));export{b as backStackNavigateBackHelper,I as configSetConfigHelper,C as configSetValidityStateHelper,x as convertAppNavigationParametersToNavigateToAppParams,j as convertNavigateToAppParamsToAppNavigationParameters,L as getConfigHelper,P as getMruTabInstancesHelper,y as getTabInstancesHelper,E as isAppNavigationParametersObject,k as navigateCrossDomainHelper,N as pages,F as returnFocusHelper,B as setCurrentFrameHelper,H as shareDeepLinkHelper,T as tabsNavigateToTabHelper};\n","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* TelemetryContext.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\n// @skip-file-minify - Skip attempting to minify this file\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_BROWSER, STR_BROWSER_VER, STR_DEVICE, STR_EVENT_FLAGS, STR_LOCALE, STR_NAME, STR_POP_SAMPLE, STR_SERVICE_NAME, STR_VER } from \"./InternalConstants\";\r\nexport var Extensions = createValueMap({\r\n    UserExt: [0 /* eExtensions.UserExt */, \"user\"],\r\n    DeviceExt: [1 /* eExtensions.DeviceExt */, STR_DEVICE],\r\n    TraceExt: [2 /* eExtensions.TraceExt */, \"trace\"],\r\n    WebExt: [3 /* eExtensions.WebExt */, \"web\"],\r\n    AppExt: [4 /* eExtensions.AppExt */, \"app\"],\r\n    OSExt: [5 /* eExtensions.OSExt */, \"os\"],\r\n    SdkExt: [6 /* eExtensions.SdkExt */, \"sdk\"],\r\n    IntWebExt: [7 /* eExtensions.IntWebExt */, \"intweb\"],\r\n    UtcExt: [8 /* eExtensions.UtcExt */, \"utc\"],\r\n    LocExt: [9 /* eExtensions.LocExt */, \"loc\"],\r\n    CloudExt: [10 /* eExtensions.CloudExt */, \"cloud\"],\r\n    DtExt: [11 /* eExtensions.DtExt */, \"dt\"]\r\n});\r\nexport var AppExtensionKeys = createValueMap({\r\n    id: [0 /* eAppExtensionKeys.id */, \"id\"],\r\n    ver: [1 /* eAppExtensionKeys.ver */, STR_VER],\r\n    appName: [2 /* eAppExtensionKeys.appName */, STR_NAME],\r\n    locale: [3 /* eAppExtensionKeys.locale */, STR_LOCALE],\r\n    expId: [4 /* eAppExtensionKeys.expId */, \"expId\"],\r\n    env: [5 /* eAppExtensionKeys.env */, \"env\"]\r\n});\r\nexport var WebExtensionKeys = createValueMap({\r\n    domain: [0 /* eWebExtensionKeys.domain */, \"domain\"],\r\n    browser: [1 /* eWebExtensionKeys.browser */, STR_BROWSER],\r\n    browserVer: [2 /* eWebExtensionKeys.browserVer */, STR_BROWSER_VER],\r\n    screenRes: [3 /* eWebExtensionKeys.screenRes */, \"screenRes\"],\r\n    userConsent: [4 /* eWebExtensionKeys.userConsent */, \"userConsent\"],\r\n    consentDetails: [5 /* eWebExtensionKeys.consentDetails */, \"consentDetails\"]\r\n});\r\nexport var UserExtensionKeys = createValueMap({\r\n    locale: [0 /* eUserExtensionKeys.locale */, STR_LOCALE],\r\n    localId: [1 /* eUserExtensionKeys.localId */, \"localId\"],\r\n    id: [2 /* eUserExtensionKeys.id */, \"id\"]\r\n});\r\nexport var OSExtKeys = createValueMap({\r\n    osName: [0 /* eOSExtKeys.osName */, STR_NAME],\r\n    ver: [1 /* eOSExtKeys.ver */, STR_VER]\r\n});\r\nexport var SDKExtKeys = createValueMap({\r\n    ver: [0 /* eSDKExtKeys.ver */, STR_VER],\r\n    seq: [1 /* eSDKExtKeys.seq */, \"seq\"],\r\n    installId: [2 /* eSDKExtKeys.installId */, \"installId\"],\r\n    epoch: [3 /* eSDKExtKeys.epoch */, \"epoch\"]\r\n});\r\nexport var IntWebExtKeys = createValueMap({\r\n    msfpc: [0 /* eIntWebExtKeys.msfpc */, \"msfpc\"],\r\n    anid: [1 /* eIntWebExtKeys.anid */, \"anid\"],\r\n    serviceName: [2 /* eIntWebExtKeys.serviceName */, STR_SERVICE_NAME]\r\n});\r\nexport var UtcExtKeys = createValueMap({\r\n    popSample: [0 /* eUtcExtKeys.popSample */, STR_POP_SAMPLE],\r\n    eventFlags: [1 /* eUtcExtKeys.eventFlags */, STR_EVENT_FLAGS]\r\n});\r\nexport var LocExtKeys = createValueMap({\r\n    tz: [0 /* eLocExtKeys.tz */, \"tz\"]\r\n});\r\nexport var SessionExtKeys = createValueMap({\r\n    sessionId: [0 /* eSessionExtKeys.sessionId */, \"sesId\"]\r\n});\r\nexport var DeviceExtKeys = createValueMap({\r\n    localId: [0 /* eDeviceExtKeys.localId */, \"localId\"],\r\n    deviceClass: [1 /* eDeviceExtKeys.deviceClass */, \"deviceClass\"],\r\n    make: [2 /* eDeviceExtKeys.make */, \"make\"],\r\n    model: [3 /* eDeviceExtKeys.model */, \"model\"]\r\n});\r\nexport var CloudExtKeys = createValueMap({\r\n    role: [0 /* eCloudExtKeys.role */, \"role\"],\r\n    roleInstance: [1 /* eCloudExtKeys.roleInstance */, \"roleInstance\"],\r\n    roleVer: [2 /* eCloudExtKeys.roleVer */, \"roleVer\"]\r\n});\r\nexport var TraceExtKeys = createValueMap({\r\n    traceId: [0 /* eTraceExtKeys.traceId */, \"traceID\"],\r\n    traceName: [1 /* eTraceExtKeys.traceName */, STR_NAME],\r\n    parentId: [2 /* eTraceExtKeys.parentId */, \"parentID\"]\r\n});\r\nexport var DistributedTraceExtKeys = createValueMap({\r\n    traceId: [0 /* eDistributedTraceExtKeys.traceId */, \"traceId\"],\r\n    spanId: [1 /* eDistributedTraceExtKeys.spanId */, \"spanId\"],\r\n    traceFlags: [2 /* eDistributedTraceExtKeys.traceFlags */, \"traceFlags\"]\r\n});\r\n//# sourceMappingURL=ExtensionKeys.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nimport { ContextColumnsBase, HttpColumns, ScenarioColumns, UserBiColumns, } from './telemetry.constants';\n//# sourceMappingURL=telemetry.types.js.map","/*\n * 1DS JS SDK Analytics Web, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* ApplicationInsights.ts\r\n* @author Abhilash Panwar (abpanwar) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n* Main class containing all the APIs.\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AppInsightsCore, _throwInternal, arrIndexOf, doPerf, dumpObj, extend, isArray, isFunction, isNullOrUndefined, isString, objForEachKey, proxyAssign, proxyFunctions, throwError } from \"@microsoft/1ds-core-js\";\r\nimport { PostChannel } from \"@microsoft/1ds-post-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/1ds-properties-js\";\r\nimport { ApplicationInsights as WebAnalytics } from \"@microsoft/1ds-wa-js\";\r\n// This is an exclude list of properties that should not be updated during initialization\r\n// They include a combination of private and internal property names and properties\r\nvar _ignoreUpdateSnippetProperties = [\r\n    \"snippet\", \"_webAnalytics\", \"_postChannel\", \"_propertyManager\", \"_extensions\"\r\n];\r\n// This is an exclude list of properties that may exist on both the snippet and the instance that\r\n// should not be updated during definition assignment\r\nvar _ignoreUpdateDefineSnippetProperties = [\r\n    \"queue\", \"extensions\", \"version\", \"sv\"\r\n];\r\nvar ApplicationInsights = /** @class */ (function (_super) {\r\n    __extends(ApplicationInsights, _super);\r\n    function ApplicationInsights() {\r\n        var _this = _super.call(this) || this;\r\n        var _snippetVersion;\r\n        var _webAnalytics;\r\n        var _postChannel;\r\n        var _propertyManager;\r\n        dynamicProto(ApplicationInsights, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.initialize = function (config, extensions) {\r\n                doPerf(_self, function () { return \"ApplicationInsights:initialize\"; }, function () {\r\n                    var plugins = [_propertyManager, _webAnalytics];\r\n                    if (extensions) {\r\n                        plugins = plugins.concat(extensions);\r\n                    }\r\n                    if (!config) {\r\n                        throwError(\"You must provide a config object!\");\r\n                    }\r\n                    if (config.channels && config.channels.length > 0) {\r\n                        // Add post channel to first fork if not available\r\n                        var postFound = false;\r\n                        for (var j = 0; j < config.channels[0].length; j++) {\r\n                            if (config.channels[0][j].identifier === _postChannel.identifier) {\r\n                                postFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!postFound) {\r\n                            config.channels[0].push(_postChannel);\r\n                        }\r\n                    }\r\n                    else {\r\n                        config.channels = [[_postChannel]];\r\n                    }\r\n                    // Add configurations\r\n                    var extConfig = config.extensionConfig = config.extensionConfig || [];\r\n                    extConfig[_postChannel.identifier] = extConfig[_postChannel.identifier] || (config && config.channelConfiguration) || {};\r\n                    extConfig[_propertyManager.identifier] = extConfig[_propertyManager.identifier] || (config && config.propertyConfiguration) || {};\r\n                    extConfig[_webAnalytics.identifier] = extConfig[_webAnalytics.identifier] || (config && config.webAnalyticsConfiguration) || {};\r\n                    try {\r\n                        _base.initialize(config, plugins);\r\n                    }\r\n                    catch (error) {\r\n                        _throwInternal(_self.logger, 1 /* eLoggingSeverity.CRITICAL */, 514 /* _eExtendedInternalMessageId.FailedToInitializeSDK */, \"Failed to initialize SDK.\" + dumpObj(error));\r\n                    }\r\n                }, function () { return ({ config: config, extensions: extensions }); });\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_this.config];\r\n            };\r\n            _self.getPropertyManager = function () {\r\n                return _propertyManager;\r\n            };\r\n            _self.getPostChannel = function () {\r\n                return _postChannel;\r\n            };\r\n            _self.getWebAnalyticsExtension = function () {\r\n                return _webAnalytics;\r\n            };\r\n            // Expose these _webAnalytics functions directly on self\r\n            proxyFunctions(_self, function () { return _webAnalytics; }, [\r\n                \"trackEvent\",\r\n                \"trackPageView\",\r\n                \"trackPageAction\",\r\n                \"trackContentUpdate\",\r\n                \"trackPageUnload\",\r\n                \"trackException\",\r\n                \"trackPageViewPerformance\",\r\n                \"capturePageView\",\r\n                \"capturePageViewPerformance\",\r\n                \"capturePageAction\",\r\n                \"captureContentUpdate\",\r\n                \"capturePageUnload\",\r\n                \"_onerror\"\r\n            ]);\r\n            _self.emptySnippetQueue = function (snippet) {\r\n                function _updateSnippetProperties() {\r\n                    if (snippet) {\r\n                        var snippetVer = \"\";\r\n                        if (!isNullOrUndefined(_snippetVersion)) {\r\n                            snippetVer += _snippetVersion;\r\n                        }\r\n                        // TODO (newylie): Need somewhere in Common Schema to put this value\r\n                        // let propManager = _self.getPropertyManager();\r\n                        // if (propManager) {\r\n                        //     let context = propManager.getPropertiesContext();\r\n                        //     if (_self.context && _self.context.internal) {\r\n                        //         _self.context.internal.snippetVer = snippetVer || \"-\";\r\n                        //     }\r\n                        // }\r\n                        // apply updated properties to the global instance (snippet)\r\n                        objForEachKey(_self, function (field, value) {\r\n                            if (isString(field) &&\r\n                                !isFunction(value) &&\r\n                                field && field[0] !== \"_\" && // Don't copy \"internal\" values\r\n                                arrIndexOf(_ignoreUpdateSnippetProperties, field) === -1) {\r\n                                try {\r\n                                    snippet[field] = value;\r\n                                }\r\n                                catch (error) {\r\n                                    // Unable to set the property -- so just ignore as it's probably a setter\r\n                                    _throwInternal(_self.logger, 2 /* eLoggingSeverity.WARNING */, 514 /* _eExtendedInternalMessageId.FailedToInitializeSDK */, \"Failed to set [\" + field + \"] during initialization.\" + dumpObj(error));\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                // call functions that were queued before the main script was loaded\r\n                try {\r\n                    _updateSnippetProperties();\r\n                    if (isArray(snippet.queue)) {\r\n                        // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                        var length = snippet.queue.length;\r\n                        for (var i = 0; i < length; i++) {\r\n                            var call = snippet.queue[i];\r\n                            call();\r\n                        }\r\n                        snippet.queue = undefined;\r\n                        delete snippet.queue;\r\n                    }\r\n                }\r\n                catch (exception) {\r\n                    var properties = {};\r\n                    if (exception && isFunction(exception.toString)) {\r\n                        properties.exception = exception.toString();\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n            * Overwrite the lazy loaded fields of global window snippet to contain the\r\n            * actual initialized API methods\r\n            * @param snippet\r\n            */\r\n            _self.updateSnippetDefinitions = function (snippet) {\r\n                var _self = _this;\r\n                // Assign the snippet to this instance\r\n                _self.snippet = snippet;\r\n                _snippetVersion = \"\" + (snippet.sv || snippet.version || \"\");\r\n                // The config (may) exist on both the snippet definition and the current instance, which by default would cause the\r\n                // snippet version to be overwritten (even with a value of null or undefined - which is now the default to properly\r\n                // support unloading\r\n                if (_self.config) {\r\n                    // Self already has a config (not normal) so combine with the snippet\r\n                    _self.config = extend(true, snippet.config, _self.config || {});\r\n                }\r\n                else {\r\n                    // Normal case just directly assign as the self config which will then be assigned correctly during proxyAssign()\r\n                    _self.config = snippet.config;\r\n                }\r\n                // apply full appInsights to the global instance\r\n                // Note: This will be called BEFORE this instance has been initialized\r\n                proxyAssign(snippet, _self, function (name) {\r\n                    // Not excluding names prefixed with \"_\" as we need to proxy some functions like _onError\r\n                    return name && arrIndexOf(_ignoreUpdateSnippetProperties, name) === -1 && arrIndexOf(_ignoreUpdateDefineSnippetProperties, name) === -1;\r\n                });\r\n            };\r\n            _self.unload = function (isAsync, unloadComplete, cbTimeout) {\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                _base.unload(isAsync, function (unloadState) {\r\n                    _initDefaults();\r\n                    unloadComplete && unloadComplete(unloadState);\r\n                }, cbTimeout);\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            // Initialize plugins\r\n            _postChannel = new PostChannel();\r\n            _propertyManager = new PropertiesPlugin();\r\n            _webAnalytics = new WebAnalytics();\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for ApplicationInsights.prototype.initialize.\r\n// Removed Stub for ApplicationInsights.prototype.getPropertyManager.\r\n// Removed Stub for ApplicationInsights.prototype.getPostChannel.\r\n// Removed Stub for ApplicationInsights.prototype.getWebAnalyticsExtension.\r\n// Removed Stub for ApplicationInsights.prototype.trackEvent.\r\n// Removed Stub for ApplicationInsights.prototype.trackPageView.\r\n// Removed Stub for ApplicationInsights.prototype.trackPageAction.\r\n// Removed Stub for ApplicationInsights.prototype.trackContentUpdate.\r\n// Removed Stub for ApplicationInsights.prototype.trackPageUnload.\r\n// Removed Stub for ApplicationInsights.prototype.trackException.\r\n// Removed Stub for ApplicationInsights.prototype.trackPageViewPerformance.\r\n// Removed Stub for ApplicationInsights.prototype.capturePageView.\r\n// Removed Stub for ApplicationInsights.prototype.capturePageViewPerformance.\r\n// Removed Stub for ApplicationInsights.prototype.capturePageAction.\r\n// Removed Stub for ApplicationInsights.prototype.captureContentUpdate.\r\n// Removed Stub for ApplicationInsights.prototype.capturePageUnload.\r\n// Removed Stub for ApplicationInsights.prototype._onerror.\r\n// Removed Stub for ApplicationInsights.prototype.emptySnippetQueue.\r\n// Removed Stub for ApplicationInsights.prototype.updateSnippetDefinitions.\r\n// Removed Stub for ApplicationInsights.prototype.unload.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    ApplicationInsights.__ieDyn=1;\n\n    return ApplicationInsights;\r\n}(AppInsightsCore));\r\nexport { ApplicationInsights };\r\n//# sourceMappingURL=ApplicationInsights.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* pageAction.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport * as DataCollector from \"../DataCollector\";\r\nimport { extend, getPerformance, isArray, isUndefined, isValueAssigned, objForEachKey, strStartsWith } from \"@microsoft/1ds-core-js\";\r\nimport { ActionType, EventType } from \"../Enums\";\r\nimport { CONTENT_VERSION } from \"../common/Constants\";\r\nimport { _extractFieldFromObject, _returnDomObjectIfjQuery } from \"../common/Utils\";\r\nimport { WebEvent } from \"./WebEvent\";\r\nvar PageAction = /** @class */ (function (_super) {\r\n    __extends(PageAction, _super);\r\n    function PageAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n      * API to send pageAction event\r\n      * @param pageActionEvent - PageAction event\r\n      * @param properties - PageAction properties(Part C)\r\n      */\r\n    PageAction.prototype.trackPageAction = function (pageActionEvent, properties) {\r\n        // Get part A properties\r\n        var ext = {};\r\n        ext[\"web\"] = {};\r\n        ext[\"web\"][\"isManual\"] = pageActionEvent.isManual;\r\n        var event = {\r\n            name: \"Ms.Web.PageAction\",\r\n            baseType: \"PageActionData\",\r\n            ext: ext,\r\n            data: {},\r\n            baseData: {},\r\n            latency: 1 /* EventLatencyValue.Normal */\r\n        };\r\n        if (!isUndefined(pageActionEvent.sync)) {\r\n            event.sync = pageActionEvent.sync;\r\n        }\r\n        event.baseData[\"name\"] = pageActionEvent.name;\r\n        event.baseData[\"uri\"] = pageActionEvent.uri;\r\n        event.baseData[\"market\"] = pageActionEvent.market;\r\n        event.baseData[\"pageType\"] = pageActionEvent.pageType;\r\n        event.baseData[\"isLoggedIn\"] = pageActionEvent.isLoggedIn;\r\n        event.baseData[\"id\"] = pageActionEvent.id;\r\n        event.baseData[\"properties\"] = pageActionEvent.properties;\r\n        event.baseData[\"ver\"] = pageActionEvent.ver;\r\n        event.baseData[\"actionType\"] = pageActionEvent.actionType;\r\n        event.baseData[\"behavior\"] = pageActionEvent.behavior;\r\n        event.baseData[\"clickCoordinates\"] = pageActionEvent.clickCoordinates;\r\n        event.baseData[\"content\"] = pageActionEvent.content;\r\n        event.baseData[\"contentVer\"] = pageActionEvent.contentVer;\r\n        event.baseData[\"targetUri\"] = pageActionEvent.targetUri;\r\n        objForEachKey(properties, function (property, value) {\r\n            if (!event.data[property]) {\r\n                event.data[property] = value;\r\n            }\r\n        });\r\n        this._webAnalyticsPlugin.core.track(event);\r\n    };\r\n    /**\r\n    * API to create and send a populated PageAction event\r\n    * @param element - DOM element\r\n    * @param overrideValues - PageAction overrides\r\n    * @param customProperties - Custom properties(Part C)\r\n    * @param isRightClick - Flag for mouse right clicks\r\n    */\r\n    PageAction.prototype.capturePageAction = function (element, overrideValues, customProperties, isRightClick) {\r\n        overrideValues = !isValueAssigned(overrideValues) ? {} : overrideValues;\r\n        var pageActionEvent = {};\r\n        var pageActionProperties = isValueAssigned(customProperties) ? customProperties : {};\r\n        this._setCommonProperties(pageActionEvent, pageActionProperties, overrideValues);\r\n        pageActionEvent.isManual = !overrideValues.isAuto;\r\n        pageActionEvent.behavior = this._getBehavior(overrideValues);\r\n        // element in scope is needed for below properties.  We cannot pass element into the plugin call chain.\r\n        // process them here.\r\n        var elementContent = {};\r\n        element = _returnDomObjectIfjQuery(element);\r\n        if (isRightClick) {\r\n            // Default behavior for righ click\r\n            pageActionEvent.behavior = 9 /*CONTEXTMENU*/;\r\n        }\r\n        else {\r\n            var config = this._config || {};\r\n            if (element && isUndefined(config.syncPageActionNavClick) || config.syncPageActionNavClick) {\r\n                if (overrideValues.actionType === ActionType.CLICKLEFT || overrideValues.actionType === ActionType.KEYBOARDENTER) {\r\n                    if (element.tagName.toLowerCase() === \"a\") {\r\n                        var href = (element.getAttribute(\"href\") || \"\").toLowerCase();\r\n                        // Simple check for a URI that would typically cause a navigation\r\n                        if (href && (strStartsWith(href, \"https:\") || strStartsWith(href, \"http:\") || strStartsWith(href, \".\") || strStartsWith(href, \"/\"))) {\r\n                            // Special case that looks like this page action is going to cause a page navigation which will result\r\n                            // in a race condition with the sending of the batched event and XHR cancellation\r\n                            pageActionEvent.sync = 3 /* EventSendType.SyncFetch */; // Attempt to send the event immediately without blocking the JS execution\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Fill PartB\r\n        if (element) {\r\n            pageActionEvent.targetUri = DataCollector._getClickTarget(element);\r\n            elementContent = this._contentHandler.getElementContent(element, EventType.PAGE_ACTION); // collect data-bi tags\r\n            elementContent = extend(elementContent, this._getCustomTags(element)); // collect ms.* tags\r\n            // if the element has a data-bi-bhvr attrib defined, use it.\r\n            if (elementContent && elementContent.bhvr && !isValueAssigned(overrideValues.behavior)) {\r\n                var currentBehavior = _extractFieldFromObject(elementContent, \"bhvr\");\r\n                pageActionEvent.behavior = this._getValidBehavior(currentBehavior);\r\n            }\r\n        }\r\n        if (isValueAssigned(overrideValues.actionType)) {\r\n            pageActionEvent.actionType = overrideValues.actionType;\r\n        }\r\n        if (isValueAssigned(overrideValues.clickCoordinateX) && isValueAssigned(overrideValues.clickCoordinateY)) {\r\n            pageActionEvent.clickCoordinates = overrideValues.clickCoordinateX + \"X\" + overrideValues.clickCoordinateY;\r\n        }\r\n        if (isValueAssigned(overrideValues.targetUri)) {\r\n            pageActionEvent.targetUri = overrideValues.targetUri;\r\n        }\r\n        pageActionEvent.contentVer = CONTENT_VERSION;\r\n        var currentContent = overrideValues.content || elementContent;\r\n        // Array cannot be merged with kvp objects\r\n        if (!isArray(currentContent)) {\r\n            var pageActionContentTags = this._config.callback.pageActionContentTags;\r\n            currentContent = extend(currentContent, typeof pageActionContentTags === \"function\" ? pageActionContentTags(element) : {}, overrideValues && overrideValues.contentTags ? overrideValues.contentTags : {});\r\n        }\r\n        pageActionEvent.content = this._getContentFormatted(currentContent);\r\n        // set PartC values\r\n        pageActionProperties.timeToAction = this._getTimeToClick();\r\n        pageActionProperties.refUri = isValueAssigned(overrideValues.refUri) ? overrideValues.refUri : this._config.coreData.referrerUri;\r\n        var cookiesValue = DataCollector._getClientCookies(this._config, this._traceLogger);\r\n        if (cookiesValue) {\r\n            pageActionProperties.cookies = cookiesValue;\r\n        }\r\n        this.trackPageAction(pageActionEvent, pageActionProperties);\r\n    };\r\n    PageAction.prototype._getCustomTags = function (obj) {\r\n        /// <summary>Collect data from attributes that have a ms. prefix.\r\n        /// This functionality is there to provide compatibility with WEDCS.\r\n        ///   TODO: When all adopters have moved to the new tagging taxanomy we can remove this functionality.\r\n        /// </summary>\r\n        /// <param type='Object'>The element from which attributes need to be collected.</param>\r\n        /// <returns type='Object'>Tags collection/property bag</returns>\r\n        var customParameters = {};\r\n        while (obj) {\r\n            if (!DataCollector._isPii(obj)) {\r\n                for (var attr in obj.attributes) {\r\n                    if (attr) {\r\n                        if (obj.attributes[attr]) {\r\n                            var nn = obj.attributes[attr].name;\r\n                            if (nn) {\r\n                                if (nn.toLowerCase().indexOf(\"ms.\") === 0) {\r\n                                    customParameters[nn] = obj.attributes[attr].value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            obj = (obj.parentElement || obj.parentNode);\r\n        }\r\n        return customParameters;\r\n    };\r\n    PageAction.prototype._getTimeToClick = function () {\r\n        // capture performance data into PageTags\r\n        var perf = getPerformance();\r\n        if (perf && perf.timing) {\r\n            var isNavigationStart = perf.timing.navigationStart;\r\n            if (isNavigationStart && isNavigationStart !== 0) {\r\n                return new Date().getTime() - isNavigationStart;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    return PageAction;\r\n}(WebEvent));\r\nexport { PageAction };\r\n//# sourceMappingURL=PageAction.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Application.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { getCookieValue, getDocument, hasDocument, objDefineAccessors, safeGetCookieMgr } from \"@microsoft/1ds-core-js\";\r\nexport var defaultFlightIdNameSpaces = [\r\n    \"AX\",\r\n    \"EX\",\r\n    \"SF\",\r\n    \"CS\",\r\n    \"CF\",\r\n    \"CT\",\r\n    \"CU\",\r\n    \"DC\",\r\n    \"DF\",\r\n    \"H5\",\r\n    \"HL\",\r\n    \"WS\",\r\n    \"WP\" // WINDOWSPHONE\r\n];\r\n/// <summary>Validate each flight id in appExpId against the app flight ID\r\n/// format and create a comma seperated appExpId with valid flight ids.Ignore invalid flight IDs< /summary>\r\n/// <param type='Object'>A list of comma seperated appExpId</param>\r\n/// <returns type='void'>none</returns>\r\nfunction _validateAppExpId(appExpIdNew, flightIdNameSpaces) {\r\n    if (flightIdNameSpaces === void 0) { flightIdNameSpaces = defaultFlightIdNameSpaces; }\r\n    var appExpId = null;\r\n    if (appExpIdNew) {\r\n        var expIdArray = appExpIdNew.split(\",\");\r\n        for (var i = 0; i < expIdArray.length; i++) {\r\n            if (_isValidAppFlightId(expIdArray[i], flightIdNameSpaces)) {\r\n                if (!appExpId) {\r\n                    appExpId = expIdArray[i];\r\n                }\r\n                else {\r\n                    appExpId += \",\" + expIdArray[i];\r\n                }\r\n            }\r\n            else {\r\n                // this._traceLogger.w('Unsupported flight id format for this app expId: ' + expIdArray[i]);\r\n            }\r\n        }\r\n    }\r\n    return appExpId;\r\n}\r\n/// <summary>Verify an expId against the CS2.1 spec</summary>\r\n/// <param type='Object'>expId to verify in string format</param>\r\n/// <returns type='true'>true if expId is valid, false otherwise</returns>\r\nfunction _isValidAppFlightId(appFlightId, flightIdNameSpaces) {\r\n    if (flightIdNameSpaces === void 0) { flightIdNameSpaces = defaultFlightIdNameSpaces; }\r\n    if (!appFlightId || appFlightId.length < 4) {\r\n        return false;\r\n    }\r\n    var isValid = false;\r\n    var MAXFLIGHTIDLENGTH = 256;\r\n    var curNameSpace = (appFlightId.substring(0, 3)).toString().toUpperCase();\r\n    // The prefix check must include ':', else strings starting with prefixes will slip through\r\n    for (var i = 0; i < flightIdNameSpaces.length; i++) {\r\n        if (flightIdNameSpaces[i] + \":\" === curNameSpace && appFlightId.length <= MAXFLIGHTIDLENGTH) {\r\n            isValid = true;\r\n            break;\r\n        }\r\n    }\r\n    return isValid;\r\n}\r\nfunction _getExpId() {\r\n    return this.getExpId();\r\n}\r\nvar Application = /** @class */ (function () {\r\n    function Application(propertiesConfig, core) {\r\n        var _appExpId = null;\r\n        // Create a copy of the defaultNamespaces\r\n        var flightIdNameSpaces = defaultFlightIdNameSpaces.slice(0);\r\n        var expIdCookieName = \"Treatments\";\r\n        var _cookieMgr = safeGetCookieMgr(core);\r\n        var _propertiesConfig = propertiesConfig;\r\n        dynamicProto(Application, this, function (_self) {\r\n            // Add app language\r\n            if (hasDocument()) {\r\n                var documentElement = getDocument().documentElement;\r\n                if (documentElement) {\r\n                    _self.locale = documentElement.lang;\r\n                }\r\n            }\r\n            _self.env = propertiesConfig.env ? propertiesConfig.env : _getMetaDataFromDOM(\"awa-\")[\"env\"];\r\n            _self.getExpId = function () {\r\n                return _propertiesConfig.expId ? _readExpIdFromCoreData(_propertiesConfig.expId) : _readExpIdFromCookie();\r\n            };\r\n            /**\r\n            * Retrieve a specified metadata tag value from the DOM.\r\n            * @param prefix - Prefix to search the metatags with.\r\n            * @returns Metadata collection/property bag\r\n            */\r\n            function _getMetaDataFromDOM(prefix) {\r\n                var metaElements;\r\n                var metaData = {};\r\n                var doc = getDocument();\r\n                if (doc) {\r\n                    metaElements = doc && doc.querySelectorAll(\"meta\");\r\n                    for (var i = 0; i < metaElements.length; i++) {\r\n                        var meta = metaElements[i];\r\n                        if (meta.name) {\r\n                            var mt = meta.name.toLowerCase();\r\n                            if (mt.indexOf(prefix) === 0) {\r\n                                var name = meta.name.replace(prefix, \"\");\r\n                                metaData[name] = meta.content;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return metaData;\r\n            }\r\n            /// <summary>Validate each flight id in appExpId against the app flight ID\r\n            /// format and create a comma seperated appExpId with valid flight ids.Ignore invalid flight IDs< /summary>\r\n            /// <param type='Object'>A list of comma seperated appExpId</param>\r\n            /// <returns type='void'>none</returns>\r\n            function _setAppExpId(appExpIdNew) {\r\n                if (appExpIdNew === _appExpId) {\r\n                    return; // Nothing to do if seen before\r\n                }\r\n                // Reset to empty first. The new but invalid appExpId should not be logged and we cannot leave the old one hanging around\r\n                // since it means old experiment id cannot represent the new experiment with an invalid appExpId.\r\n                _appExpId = _validateAppExpId(appExpIdNew, flightIdNameSpaces);\r\n            }\r\n            function _readExpIdFromCookie() {\r\n                var cookieValue = getCookieValue(_cookieMgr, expIdCookieName);\r\n                _setAppExpId(cookieValue);\r\n                return _appExpId;\r\n            }\r\n            function _readExpIdFromCoreData(expId) {\r\n                _setAppExpId(expId);\r\n                return _appExpId;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Application.prototype.getExpId.\r\n    /// <summary>Validate each flight id in appExpId against the app flight ID\r\n    /// format and create a comma seperated appExpId with valid flight ids.Ignore invalid flight IDs< /summary>\r\n    /// <param type='Object'>A list of comma seperated appExpId</param>\r\n    /// <returns type='void'>none</returns>\r\n    /**\r\n     * Validate each flight id in appExpId against the app flight ID format and create\r\n     * a comma seperated appExpId with valid flight ids.Ignore invalid flight IDs\r\n     * @param appExpId - The current experiment id\r\n     * @param appExpIdNew - The new experiment id to set (if valid)\r\n     * @param flightIdNameSpaces - The valid set of flight id names\r\n     * @returns The validated experiment id,\r\n     */\r\n    Application.validateAppExpId = _validateAppExpId;\r\n    /**\r\n     * Static constructor, attempt to create accessors\r\n     */\r\n    Application._staticInit = (function () {\r\n        // Dynamically create get/set property accessors\r\n        objDefineAccessors(Application.prototype, \"expId\", _getExpId);\r\n    })();\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","var a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;export{a as default};\n","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* DataCollector.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport { _throwInternal, arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getLocation, getWindow, isDocumentObjectAvailable, isValueAssigned, isWindowObjectAvailable, mergeEvtNamespace } from \"@microsoft/1ds-core-js\";\r\nimport { _findClosestAnchor } from \"./common/Utils\";\r\nvar clickCaptureInputTypes = { BUTTON: true, CHECKBOX: true, RADIO: true, RESET: true, SUBMIT: true };\r\n/**\r\n* Get Image href of a given HTMLImageElement\r\n* @param element - An html image element\r\n* @returns Href value.\r\n*/\r\nexport function _getImageHref(element) {\r\n    var temp = element;\r\n    if (temp) {\r\n        var parent = _findClosestAnchor(temp);\r\n        if (parent && parent.length === 1) {\r\n            if (parent[0].href) {\r\n                return parent[0].href;\r\n            }\r\n            else if (parent[0].src) {\r\n                return (parent[0].src);\r\n            }\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n* Check if a given element has an element has data-dc attribute defined with a value 'pii'\r\n* @param element - An html element\r\n* @returns Flag indicating if an element is market PII.\r\n*/\r\nexport function _isPii(element) {\r\n    if (!element || !element.attributes) {\r\n        return false;\r\n    }\r\n    try {\r\n        var pii = element.getAttribute(\"data-dc\");\r\n        if (isValueAssigned(pii)) {\r\n            if (pii.toLowerCase() === \"pii\") {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n* Get URI, sanitize the value if configured on\r\n* @param config - Configuration\r\n* @param location - window.location or document.location\r\n* @returns Flag indicating if an element is market PII.\r\n*/\r\nexport function _getUri(config, location) {\r\n    if (config.coreData && config.coreData.requestUri && config.coreData.requestUri !== \"\") {\r\n        return config.coreData.requestUri;\r\n    }\r\n    return _sanitizeUrl(config, location);\r\n}\r\n/**\r\n* Sanitize URL values\r\n* @param config - Configuration\r\n* @param location - window.location or document.location\r\n* @returns Flag indicating if an element is market PII.\r\n*/\r\nexport function _sanitizeUrl(config, location) {\r\n    if (!location) {\r\n        return null;\r\n    }\r\n    var url = location.protocol + \"//\" + (location.hostname || location.host) + // location.hostname is not supported on Opera and Opera for Android\r\n        (isValueAssigned(location.port) ? \":\" + location.port : \"\") +\r\n        location.pathname;\r\n    if (config.urlCollectQuery) { // false by default\r\n        var query = location.search;\r\n        if (!query) {\r\n            // in older browsers the query parameters can be contained in the hash\r\n            var hash = location.hash || \"\";\r\n            var queryIndex = hash.indexOf(\"?\");\r\n            if (queryIndex !== -1) {\r\n                query = hash.slice(queryIndex);\r\n            }\r\n        }\r\n        url += query;\r\n    }\r\n    if (config.urlCollectHash) { // false by default\r\n        url += (location.hash || \"\");\r\n    }\r\n    return url;\r\n}\r\n/**\r\n* Gets the pageName from the DOM or by calling a override if set.\r\n* @param config - configuration object\r\n* @returns Page name.\r\n*/\r\nexport function _getPageName(config, overrideValues) {\r\n    /// <summary>\r\n    ///  Gets the pageName from the DOM or by calling a override if set.\r\n    /// </summary>\r\n    if (overrideValues && overrideValues.pageName) {\r\n        return overrideValues.pageName;\r\n    }\r\n    else if (config.callback && typeof (config.callback.pageName) === \"function\") {\r\n        return config.callback.pageName();\r\n    }\r\n    else if (config.coreData && config.coreData.pageName) {\r\n        return config.coreData.pageName;\r\n    }\r\n    else {\r\n        var loc = getLocation() || {};\r\n        var pagename = loc.pathname || \"\";\r\n        var fragments = pagename.replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\r\n        if (fragments && fragments[fragments.length - 1]) {\r\n            pagename = fragments[fragments.length - 1];\r\n        }\r\n        else {\r\n            pagename = \"Home\";\r\n        }\r\n        return pagename;\r\n    }\r\n}\r\n/**\r\n* Gets the document's title.  Title returned is trimmed to 150 characters\r\n* @returns Document title.\r\n*/\r\nexport function _getTitle() {\r\n    return isDocumentObjectAvailable ? document.title.substring(0, 150) : \"\";\r\n}\r\nexport function _getSignedInStatus(config) {\r\n    var isLoggedIn = config.callback && typeof (config.callback.signedinStatus) === \"function\" ?\r\n        config.callback.signedinStatus() : config.isLoggedIn;\r\n    return isLoggedIn;\r\n}\r\n/**\r\n* Gets client cookies\r\n* @returns Cookies.\r\n*/\r\nexport function _getClientCookies(config, traceLogger) {\r\n    var cookies = \"\";\r\n    var uniqueCookies = {};\r\n    var mergedCookies = [];\r\n    var cookiesConfig = config.cookiesToCollect;\r\n    if (config.shareAuthStatus === false) {\r\n        // collect ANON if it is in cookiesConfig\r\n        mergedCookies = cookiesConfig;\r\n    }\r\n    else {\r\n        // do not collect ANON even if it is in cookiesConfig\r\n        arrForEach(cookiesConfig, function (value) {\r\n            if (value !== \"ANON\") {\r\n                mergedCookies.push(value);\r\n            }\r\n        });\r\n    }\r\n    var key;\r\n    var cookieValue;\r\n    try {\r\n        try {\r\n            // adding a try catch block to ensure any mis-handling\r\n            // of the varCustomerCookies variable by adopters is not impacting the rest.\r\n            if (isWindowObjectAvailable && window.varCustomerCookies && window.varCustomerCookies.length > 0) {\r\n                mergedCookies = mergedCookies.concat(window.varCustomerCookies);\r\n            }\r\n        }\r\n        catch (e) {\r\n            _throwInternal(traceLogger, 1 /* eLoggingSeverity.CRITICAL */, 512 /* _eExtendedInternalMessageId.FailedToGetCookies */, \"Failed to get cookies \");\r\n        }\r\n        arrForEach(mergedCookies, function (value) {\r\n            // de-dupe the list, no value is necessary hence ''\r\n            if (!uniqueCookies.hasOwnProperty(value)) {\r\n                uniqueCookies[value] = \"\";\r\n                if (isDocumentObjectAvailable) {\r\n                    cookieValue = decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(value).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") +\r\n                        \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\"));\r\n                    if (cookieValue !== \"\") {\r\n                        cookies += value + \"=\" + cookieValue + \";\";\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    catch (e) {\r\n        _throwInternal(traceLogger, 1 /* eLoggingSeverity.CRITICAL */, 512 /* _eExtendedInternalMessageId.FailedToGetCookies */, \"Failed to get cookies \");\r\n    }\r\n    return cookies;\r\n}\r\n/**\r\n *\r\n* Get click target\r\n* @returns Click target URI\r\n*/\r\nexport function _getClickTarget(element) {\r\n    var clickTarget = \"\";\r\n    switch (element.tagName) {\r\n        case \"A\":\r\n        case \"AREA\":\r\n            clickTarget = element.href || \"\";\r\n            break;\r\n        case \"IMG\":\r\n            clickTarget = _getImageHref(element);\r\n            break;\r\n        case \"INPUT\":\r\n            var type = element.type;\r\n            if (type && (clickCaptureInputTypes[type.toUpperCase()])) {\r\n                var loc = getLocation() || {};\r\n                if (element.form) {\r\n                    clickTarget = element.form.action || (loc.pathname || \"\");\r\n                }\r\n                else {\r\n                    clickTarget = loc.pathname || \"\";\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return clickTarget;\r\n}\r\n/**\r\n *\r\n * Execute callback when DOM finish loading\r\n */\r\nexport function onDomLoaded(callback, parentEvtNamespace) {\r\n    var evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"onDomLoaded\"), parentEvtNamespace);\r\n    onDomReadyDo(function () {\r\n        if (isDocumentObjectAvailable && document.readyState === \"complete\") {\r\n            callback();\r\n        }\r\n        else {\r\n            var win_1 = getWindow();\r\n            if (win_1) {\r\n                eventOn(win_1, \"load\", function () {\r\n                    callback && callback();\r\n                    callback = null;\r\n                    // Auto remove the event handler\r\n                    eventOff(win_1, null, null, evtNamespace);\r\n                }, evtNamespace);\r\n            }\r\n        }\r\n    });\r\n}\r\n// use smallest domready ever for IE8. When IE8 is deprecated, use addEventListener('DomContentLoaded')\r\nfunction onDomReadyDo(f) {\r\n    /// <summary> fires function f on domRead </summary>\r\n    /// <param type='function'>function to call on domRead</param>\r\n    var doc = getDocument() || {};\r\n    /in/.test(doc.readyState) ? setTimeout(function () { onDomReadyDo(f); }, 100) : f.call();\r\n}\r\n//# sourceMappingURL=DataCollector.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 4\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 12\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_INDEX_OF = \"indexOf\"; // Count: 4\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 6\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\nexport var _DYN_SUBSTRING = \"substring\"; // Count: 6\r\nexport var _DYN_SANITIZE_KEY_AND_ADD2 = \"sanitizeKeyAndAddUniqueness\"; // Count: 2\r\nexport var _DYN_SANITIZE_EXCEPTION = \"sanitizeException\"; // Count: 2\r\nexport var _DYN_SANITIZE_PROPERTIES = \"sanitizeProperties\"; // Count: 2\r\nexport var _DYN_SANITIZE_MEASUREMENT3 = \"sanitizeMeasurements\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\nimport { strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DEVICE = \"device\";\r\nexport var STR_LOCALE = \"locale\";\r\nexport var STR_VER = \"ver\";\r\nexport var STR_BROWSER = \"browser\";\r\nexport var STR_BROWSER_VER = \"browserVer\";\r\nexport var STR_POP_SAMPLE = \"popSample\";\r\nexport var STR_EVENT_FLAGS = \"eventFlags\";\r\nexport var STR_NAME = \"name\";\r\nexport var STR_SERVICE_NAME = \"serviceName\";\r\nexport var STR_LENGTH = \"length\";\r\nexport var STR_SESSION_EXPIRATION_MS = \"sessionExpirationMs\";\r\nexport var STR_SESSION_RENEWAL_MS = \"sessionRenewalMs\";\r\nexport var STR_USER_AGENT = \"userAgent\";\r\nexport var STR_USER_AGENT_DATA = \"userAgentData\";\r\nexport var STR_NAME_PREFIX = \"namePrefix\";\r\nexport var STR_PROTOTYPE = strShimPrototype;\r\n//# sourceMappingURL=InternalConstants.js.map","/*!\n * Microsoft Dynamic Proto Utility, 1.1.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n/**\r\n * Gets the runtime global reference\r\n * @returns\r\n */\r\nfunction _getGlobal() {\r\n    var result;\r\n    if (typeof globalThis !== UNDEFINED) {\r\n        result = globalThis;\r\n    }\r\n    if (!result && typeof self !== UNDEFINED) {\r\n        result = self;\r\n    }\r\n    if (!result && typeof window !== UNDEFINED) {\r\n        result = window;\r\n    }\r\n    if (!result && typeof global !== UNDEFINED) {\r\n        result = global;\r\n    }\r\n    return result || {};\r\n}\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = _getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper to check if the object contains a property of the name\r\n * @ignore\r\n */\r\nfunction _hasOwnProperty(obj, prop) {\r\n    return obj && Obj[Prototype].hasOwnProperty.call(obj, prop);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!_hasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && _hasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || _hasOwnProperty(target, funcName)));\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throw new TypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = {};\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = {};\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && _hasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || {};\r\n        instFunc = (instFuncTable[proto[DynClassName]] || {})[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !_hasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || {};\r\n        var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || {}); // fetch and assign if as it may not exist yet\r\n        // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n        if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n            instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n        }\r\n        _forEachProp(target, function (name) {\r\n            // Only add overridden functions\r\n            if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                instFuncs_1[name] = target[name];\r\n                delete target[name];\r\n                // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                if (!_hasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                    proto[name] = _createDynamicPrototype(proto, name);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (_hasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nfunction dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!_hasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (_hasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\n\nexport { dynamicProto as default };\n//# sourceMappingURL=dynamicproto-js.js.map\n","const e=\"/l/app/\",t=\"/l/meeting/new\",s=\"attendees\",a=\"startTime\",c=\"endTime\",n=\"subject\",i=\"content\",l=\"/l/call/0/0\",o=\"source\",m=\"withVideo\",p=\"/l/chat/0/0\",r=\"users\",d=\"topicName\",u=\"message\";export{s as teamsDeepLinkAttendeesUrlParameterName,i as teamsDeepLinkContentUrlParameterName,c as teamsDeepLinkEndTimeUrlParameterName,u as teamsDeepLinkMessageUrlParameterName,o as teamsDeepLinkSourceUrlParameterName,a as teamsDeepLinkStartTimeUrlParameterName,n as teamsDeepLinkSubjectUrlParameterName,d as teamsDeepLinkTopicUrlParameterName,e as teamsDeepLinkUrlPathForAppInstall,t as teamsDeepLinkUrlPathForCalendar,l as teamsDeepLinkUrlPathForCall,p as teamsDeepLinkUrlPathForChat,r as teamsDeepLinkUsersUrlParameterName,m as teamsDeepLinkWithVideoUrlParameterName};\n","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Cloud.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2020\r\n*/\r\nvar Cloud = /** @class */ (function () {\r\n    function Cloud() {\r\n    }\r\n    return Cloud;\r\n}());\r\nexport { Cloud };\r\n//# sourceMappingURL=Cloud.js.map","import t from\"./_polyfill-node.global.js\";var r=[],e=[],n=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,i=!1;function o(){i=!0;for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",n=0;n<64;++n)r[n]=t[n],e[t.charCodeAt(n)]=n;e[\"-\".charCodeAt(0)]=62,e[\"_\".charCodeAt(0)]=63}function u(t,e,n){for(var i,o,u=[],f=e;f<n;f+=3)i=(t[f]<<16)+(t[f+1]<<8)+t[f+2],u.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return u.join(\"\")}function f(t){var e;i||o();for(var n=t.length,f=n%3,s=\"\",h=[],a=16383,c=0,l=n-f;c<l;c+=a)h.push(u(t,c,c+a>l?l:c+a));return 1===f?(e=t[n-1],s+=r[e>>2],s+=r[e<<4&63],s+=\"==\"):2===f&&(e=(t[n-2]<<8)+t[n-1],s+=r[e>>10],s+=r[e>>4&63],s+=r[e<<2&63],s+=\"=\"),h.push(s),h.join(\"\")}function s(t,r,e,n,i){var o,u,f=8*i-n-1,s=(1<<f)-1,h=s>>1,a=-7,c=e?i-1:0,l=e?-1:1,p=t[r+c];for(c+=l,o=p&(1<<-a)-1,p>>=-a,a+=f;a>0;o=256*o+t[r+c],c+=l,a-=8);for(u=o&(1<<-a)-1,o>>=-a,a+=n;a>0;u=256*u+t[r+c],c+=l,a-=8);if(0===o)o=1-h;else{if(o===s)return u?NaN:1/0*(p?-1:1);u+=Math.pow(2,n),o-=h}return(p?-1:1)*u*Math.pow(2,o-n)}function h(t,r,e,n,i,o){var u,f,s,h=8*o-i-1,a=(1<<h)-1,c=a>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:o-1,g=n?1:-1,y=r<0||0===r&&1/r<0?1:0;for(r=Math.abs(r),isNaN(r)||r===1/0?(f=isNaN(r)?1:0,u=a):(u=Math.floor(Math.log(r)/Math.LN2),r*(s=Math.pow(2,-u))<1&&(u--,s*=2),(r+=u+c>=1?l/s:l*Math.pow(2,1-c))*s>=2&&(u++,s/=2),u+c>=a?(f=0,u=a):u+c>=1?(f=(r*s-1)*Math.pow(2,i),u+=c):(f=r*Math.pow(2,c-1)*Math.pow(2,i),u=0));i>=8;t[e+p]=255&f,p+=g,f/=256,i-=8);for(u=u<<i|f,h+=i;h>0;t[e+p]=255&u,p+=g,u/=256,h-=8);t[e+p-g]|=128*y}var a={}.toString,c=Array.isArray||function(t){return\"[object Array]\"==a.call(t)},l=50;function p(){return y.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function g(t,r){if(p()<r)throw new RangeError(\"Invalid typed array length\");return y.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(r)).__proto__=y.prototype:(null===t&&(t=new y(r)),t.length=r),t}function y(t,r,e){if(!(y.TYPED_ARRAY_SUPPORT||this instanceof y))return new y(t,r,e);if(\"number\"==typeof t){if(\"string\"==typeof r)throw new Error(\"If encoding is specified then the first argument must be a string\");return v(this,t)}return w(this,t,r,e)}function w(t,r,e,n){if(\"number\"==typeof r)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!=typeof ArrayBuffer&&r instanceof ArrayBuffer?function(t,r,e,n){if(r.byteLength,e<0||r.byteLength<e)throw new RangeError(\"'offset' is out of bounds\");if(r.byteLength<e+(n||0))throw new RangeError(\"'length' is out of bounds\");r=void 0===e&&void 0===n?new Uint8Array(r):void 0===n?new Uint8Array(r,e):new Uint8Array(r,e,n);y.TYPED_ARRAY_SUPPORT?(t=r).__proto__=y.prototype:t=E(t,r);return t}(t,r,e,n):\"string\"==typeof r?function(t,r,e){\"string\"==typeof e&&\"\"!==e||(e=\"utf8\");if(!y.isEncoding(e))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|b(r,e);t=g(t,n);var i=t.write(r,e);i!==n&&(t=t.slice(0,i));return t}(t,r,e):function(t,r){if(R(r)){var e=0|A(r.length);return 0===(t=g(t,e)).length||r.copy(t,0,0,e),t}if(r){if(\"undefined\"!=typeof ArrayBuffer&&r.buffer instanceof ArrayBuffer||\"length\"in r)return\"number\"!=typeof r.length||(n=r.length)!=n?g(t,0):E(t,r);if(\"Buffer\"===r.type&&c(r.data))return E(t,r.data)}var n;throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}(t,r)}function d(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function v(t,r){if(d(r),t=g(t,r<0?0:0|A(r)),!y.TYPED_ARRAY_SUPPORT)for(var e=0;e<r;++e)t[e]=0;return t}function E(t,r){var e=r.length<0?0:0|A(r.length);t=g(t,e);for(var n=0;n<e;n+=1)t[n]=255&r[n];return t}function A(t){if(t>=p())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+p().toString(16)+\" bytes\");return 0|t}function R(t){return!(null==t||!t._isBuffer)}function b(t,r){if(R(t))return t.length;if(\"undefined\"!=typeof ArrayBuffer&&\"function\"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var e=t.length;if(0===e)return 0;for(var n=!1;;)switch(r){case\"ascii\":case\"latin1\":case\"binary\":return e;case\"utf8\":case\"utf-8\":case void 0:return K(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*e;case\"hex\":return e>>>1;case\"base64\":return Q(t).length;default:if(n)return K(t).length;r=(\"\"+r).toLowerCase(),n=!0}}function m(t,r,e){var n=!1;if((void 0===r||r<0)&&(r=0),r>this.length)return\"\";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return\"\";if((e>>>=0)<=(r>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return k(this,r,e);case\"utf8\":case\"utf-8\":return L(this,r,e);case\"ascii\":return D(this,r,e);case\"latin1\":case\"binary\":return x(this,r,e);case\"base64\":return O(this,r,e);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return N(this,r,e);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function _(t,r,e){var n=t[r];t[r]=t[e],t[e]=n}function P(t,r,e,n,i){if(0===t.length)return-1;if(\"string\"==typeof e?(n=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=i?0:t.length-1),e<0&&(e=t.length+e),e>=t.length){if(i)return-1;e=t.length-1}else if(e<0){if(!i)return-1;e=0}if(\"string\"==typeof r&&(r=y.from(r,n)),R(r))return 0===r.length?-1:T(t,r,e,n,i);if(\"number\"==typeof r)return r&=255,y.TYPED_ARRAY_SUPPORT&&\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,r,e):Uint8Array.prototype.lastIndexOf.call(t,r,e):T(t,[r],e,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function T(t,r,e,n,i){var o,u=1,f=t.length,s=r.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||r.length<2)return-1;u=2,f/=2,s/=2,e/=2}function h(t,r){return 1===u?t[r]:t.readUInt16BE(r*u)}if(i){var a=-1;for(o=e;o<f;o++)if(h(t,o)===h(r,-1===a?0:o-a)){if(-1===a&&(a=o),o-a+1===s)return a*u}else-1!==a&&(o-=o-a),a=-1}else for(e+s>f&&(e=f-s),o=e;o>=0;o--){for(var c=!0,l=0;l<s;l++)if(h(t,o+l)!==h(r,l)){c=!1;break}if(c)return o}return-1}function U(t,r,e,n){e=Number(e)||0;var i=t.length-e;n?(n=Number(n))>i&&(n=i):n=i;var o=r.length;if(o%2!=0)throw new TypeError(\"Invalid hex string\");n>o/2&&(n=o/2);for(var u=0;u<n;++u){var f=parseInt(r.substr(2*u,2),16);if(isNaN(f))return u;t[e+u]=f}return u}function B(t,r,e,n){return W(K(r,t.length-e),t,e,n)}function S(t,r,e,n){return W(function(t){for(var r=[],e=0;e<t.length;++e)r.push(255&t.charCodeAt(e));return r}(r),t,e,n)}function Y(t,r,e,n){return S(t,r,e,n)}function I(t,r,e,n){return W(Q(r),t,e,n)}function C(t,r,e,n){return W(function(t,r){for(var e,n,i,o=[],u=0;u<t.length&&!((r-=2)<0);++u)n=(e=t.charCodeAt(u))>>8,i=e%256,o.push(i),o.push(n);return o}(r,t.length-e),t,e,n)}function O(t,r,e){return 0===r&&e===t.length?f(t):f(t.slice(r,e))}function L(t,r,e){e=Math.min(t.length,e);for(var n=[],i=r;i<e;){var o,u,f,s,h=t[i],a=null,c=h>239?4:h>223?3:h>191?2:1;if(i+c<=e)switch(c){case 1:h<128&&(a=h);break;case 2:128==(192&(o=t[i+1]))&&(s=(31&h)<<6|63&o)>127&&(a=s);break;case 3:o=t[i+1],u=t[i+2],128==(192&o)&&128==(192&u)&&(s=(15&h)<<12|(63&o)<<6|63&u)>2047&&(s<55296||s>57343)&&(a=s);break;case 4:o=t[i+1],u=t[i+2],f=t[i+3],128==(192&o)&&128==(192&u)&&128==(192&f)&&(s=(15&h)<<18|(63&o)<<12|(63&u)<<6|63&f)>65535&&s<1114112&&(a=s)}null===a?(a=65533,c=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|1023&a),n.push(a),i+=c}return function(t){var r=t.length;if(r<=M)return String.fromCharCode.apply(String,t);var e=\"\",n=0;for(;n<r;)e+=String.fromCharCode.apply(String,t.slice(n,n+=M));return e}(n)}y.TYPED_ARRAY_SUPPORT=void 0===t.TYPED_ARRAY_SUPPORT||t.TYPED_ARRAY_SUPPORT,p(),y.poolSize=8192,y._augment=function(t){return t.__proto__=y.prototype,t},y.from=function(t,r,e){return w(null,t,r,e)},y.TYPED_ARRAY_SUPPORT&&(y.prototype.__proto__=Uint8Array.prototype,y.__proto__=Uint8Array,\"undefined\"!=typeof Symbol&&Symbol.species&&y[Symbol.species]),y.alloc=function(t,r,e){return function(t,r,e,n){return d(r),r<=0?g(t,r):void 0!==e?\"string\"==typeof n?g(t,r).fill(e,n):g(t,r).fill(e):g(t,r)}(null,t,r,e)},y.allocUnsafe=function(t){return v(null,t)},y.allocUnsafeSlow=function(t){return v(null,t)},y.isBuffer=X,y.compare=function(t,r){if(!R(t)||!R(r))throw new TypeError(\"Arguments must be Buffers\");if(t===r)return 0;for(var e=t.length,n=r.length,i=0,o=Math.min(e,n);i<o;++i)if(t[i]!==r[i]){e=t[i],n=r[i];break}return e<n?-1:n<e?1:0},y.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},y.concat=function(t,r){if(!c(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return y.alloc(0);var e;if(void 0===r)for(r=0,e=0;e<t.length;++e)r+=t[e].length;var n=y.allocUnsafe(r),i=0;for(e=0;e<t.length;++e){var o=t[e];if(!R(o))throw new TypeError('\"list\" argument must be an Array of Buffers');o.copy(n,i),i+=o.length}return n},y.byteLength=b,y.prototype._isBuffer=!0,y.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var r=0;r<t;r+=2)_(this,r,r+1);return this},y.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var r=0;r<t;r+=4)_(this,r,r+3),_(this,r+1,r+2);return this},y.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var r=0;r<t;r+=8)_(this,r,r+7),_(this,r+1,r+6),_(this,r+2,r+5),_(this,r+3,r+4);return this},y.prototype.toString=function(){var t=0|this.length;return 0===t?\"\":0===arguments.length?L(this,0,t):m.apply(this,arguments)},y.prototype.equals=function(t){if(!R(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===y.compare(this,t)},y.prototype.inspect=function(){var t=\"\";return this.length>0&&(t=this.toString(\"hex\",0,50).match(/.{2}/g).join(\" \"),this.length>50&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},y.prototype.compare=function(t,r,e,n,i){if(!R(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===r&&(r=0),void 0===e&&(e=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),r<0||e>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&r>=e)return 0;if(n>=i)return-1;if(r>=e)return 1;if(this===t)return 0;for(var o=(i>>>=0)-(n>>>=0),u=(e>>>=0)-(r>>>=0),f=Math.min(o,u),s=this.slice(n,i),h=t.slice(r,e),a=0;a<f;++a)if(s[a]!==h[a]){o=s[a],u=h[a];break}return o<u?-1:u<o?1:0},y.prototype.includes=function(t,r,e){return-1!==this.indexOf(t,r,e)},y.prototype.indexOf=function(t,r,e){return P(this,t,r,e,!0)},y.prototype.lastIndexOf=function(t,r,e){return P(this,t,r,e,!1)},y.prototype.write=function(t,r,e,n){if(void 0===r)n=\"utf8\",e=this.length,r=0;else if(void 0===e&&\"string\"==typeof r)n=r,e=this.length,r=0;else{if(!isFinite(r))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");r|=0,isFinite(e)?(e|=0,void 0===n&&(n=\"utf8\")):(n=e,e=void 0)}var i=this.length-r;if((void 0===e||e>i)&&(e=i),t.length>0&&(e<0||r<0)||r>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");for(var o=!1;;)switch(n){case\"hex\":return U(this,t,r,e);case\"utf8\":case\"utf-8\":return B(this,t,r,e);case\"ascii\":return S(this,t,r,e);case\"latin1\":case\"binary\":return Y(this,t,r,e);case\"base64\":return I(this,t,r,e);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return C(this,t,r,e);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},y.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var M=4096;function D(t,r,e){var n=\"\";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(127&t[i]);return n}function x(t,r,e){var n=\"\";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(t[i]);return n}function k(t,r,e){var n=t.length;(!r||r<0)&&(r=0),(!e||e<0||e>n)&&(e=n);for(var i=\"\",o=r;o<e;++o)i+=H(t[o]);return i}function N(t,r,e){for(var n=t.slice(r,e),i=\"\",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function z(t,r,e){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+r>e)throw new RangeError(\"Trying to access beyond buffer length\")}function F(t,r,e,n,i,o){if(!R(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>i||r<o)throw new RangeError('\"value\" argument is out of bounds');if(e+n>t.length)throw new RangeError(\"Index out of range\")}function j(t,r,e,n){r<0&&(r=65535+r+1);for(var i=0,o=Math.min(t.length-e,2);i<o;++i)t[e+i]=(r&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function V(t,r,e,n){r<0&&(r=4294967295+r+1);for(var i=0,o=Math.min(t.length-e,4);i<o;++i)t[e+i]=r>>>8*(n?i:3-i)&255}function q(t,r,e,n,i,o){if(e+n>t.length)throw new RangeError(\"Index out of range\");if(e<0)throw new RangeError(\"Index out of range\")}function J(t,r,e,n,i){return i||q(t,0,e,4),h(t,r,e,n,23,4),e+4}function Z(t,r,e,n,i){return i||q(t,0,e,8),h(t,r,e,n,52,8),e+8}y.prototype.slice=function(t,r){var e,n=this.length;if((t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(r=void 0===r?n:~~r)<0?(r+=n)<0&&(r=0):r>n&&(r=n),r<t&&(r=t),y.TYPED_ARRAY_SUPPORT)(e=this.subarray(t,r)).__proto__=y.prototype;else{var i=r-t;e=new y(i,void 0);for(var o=0;o<i;++o)e[o]=this[o+t]}return e},y.prototype.readUIntLE=function(t,r,e){t|=0,r|=0,e||z(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return n},y.prototype.readUIntBE=function(t,r,e){t|=0,r|=0,e||z(t,r,this.length);for(var n=this[t+--r],i=1;r>0&&(i*=256);)n+=this[t+--r]*i;return n},y.prototype.readUInt8=function(t,r){return r||z(t,1,this.length),this[t]},y.prototype.readUInt16LE=function(t,r){return r||z(t,2,this.length),this[t]|this[t+1]<<8},y.prototype.readUInt16BE=function(t,r){return r||z(t,2,this.length),this[t]<<8|this[t+1]},y.prototype.readUInt32LE=function(t,r){return r||z(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},y.prototype.readUInt32BE=function(t,r){return r||z(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},y.prototype.readIntLE=function(t,r,e){t|=0,r|=0,e||z(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*r)),n},y.prototype.readIntBE=function(t,r,e){t|=0,r|=0,e||z(t,r,this.length);for(var n=r,i=1,o=this[t+--n];n>0&&(i*=256);)o+=this[t+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*r)),o},y.prototype.readInt8=function(t,r){return r||z(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},y.prototype.readInt16LE=function(t,r){r||z(t,2,this.length);var e=this[t]|this[t+1]<<8;return 32768&e?4294901760|e:e},y.prototype.readInt16BE=function(t,r){r||z(t,2,this.length);var e=this[t+1]|this[t]<<8;return 32768&e?4294901760|e:e},y.prototype.readInt32LE=function(t,r){return r||z(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},y.prototype.readInt32BE=function(t,r){return r||z(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},y.prototype.readFloatLE=function(t,r){return r||z(t,4,this.length),s(this,t,!0,23,4)},y.prototype.readFloatBE=function(t,r){return r||z(t,4,this.length),s(this,t,!1,23,4)},y.prototype.readDoubleLE=function(t,r){return r||z(t,8,this.length),s(this,t,!0,52,8)},y.prototype.readDoubleBE=function(t,r){return r||z(t,8,this.length),s(this,t,!1,52,8)},y.prototype.writeUIntLE=function(t,r,e,n){(t=+t,r|=0,e|=0,n)||F(this,t,r,e,Math.pow(2,8*e)-1,0);var i=1,o=0;for(this[r]=255&t;++o<e&&(i*=256);)this[r+o]=t/i&255;return r+e},y.prototype.writeUIntBE=function(t,r,e,n){(t=+t,r|=0,e|=0,n)||F(this,t,r,e,Math.pow(2,8*e)-1,0);var i=e-1,o=1;for(this[r+i]=255&t;--i>=0&&(o*=256);)this[r+i]=t/o&255;return r+e},y.prototype.writeUInt8=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,1,255,0),y.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[r]=255&t,r+1},y.prototype.writeUInt16LE=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,2,65535,0),y.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):j(this,t,r,!0),r+2},y.prototype.writeUInt16BE=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,2,65535,0),y.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):j(this,t,r,!1),r+2},y.prototype.writeUInt32LE=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,4,4294967295,0),y.TYPED_ARRAY_SUPPORT?(this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t):V(this,t,r,!0),r+4},y.prototype.writeUInt32BE=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,4,4294967295,0),y.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):V(this,t,r,!1),r+4},y.prototype.writeIntLE=function(t,r,e,n){if(t=+t,r|=0,!n){var i=Math.pow(2,8*e-1);F(this,t,r,e,i-1,-i)}var o=0,u=1,f=0;for(this[r]=255&t;++o<e&&(u*=256);)t<0&&0===f&&0!==this[r+o-1]&&(f=1),this[r+o]=(t/u|0)-f&255;return r+e},y.prototype.writeIntBE=function(t,r,e,n){if(t=+t,r|=0,!n){var i=Math.pow(2,8*e-1);F(this,t,r,e,i-1,-i)}var o=e-1,u=1,f=0;for(this[r+o]=255&t;--o>=0&&(u*=256);)t<0&&0===f&&0!==this[r+o+1]&&(f=1),this[r+o]=(t/u|0)-f&255;return r+e},y.prototype.writeInt8=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,1,127,-128),y.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[r]=255&t,r+1},y.prototype.writeInt16LE=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,2,32767,-32768),y.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):j(this,t,r,!0),r+2},y.prototype.writeInt16BE=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,2,32767,-32768),y.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):j(this,t,r,!1),r+2},y.prototype.writeInt32LE=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,4,2147483647,-2147483648),y.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24):V(this,t,r,!0),r+4},y.prototype.writeInt32BE=function(t,r,e){return t=+t,r|=0,e||F(this,t,r,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),y.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):V(this,t,r,!1),r+4},y.prototype.writeFloatLE=function(t,r,e){return J(this,t,r,!0,e)},y.prototype.writeFloatBE=function(t,r,e){return J(this,t,r,!1,e)},y.prototype.writeDoubleLE=function(t,r,e){return Z(this,t,r,!0,e)},y.prototype.writeDoubleBE=function(t,r,e){return Z(this,t,r,!1,e)},y.prototype.copy=function(t,r,e,n){if(e||(e=0),n||0===n||(n=this.length),r>=t.length&&(r=t.length),r||(r=0),n>0&&n<e&&(n=e),n===e)return 0;if(0===t.length||0===this.length)return 0;if(r<0)throw new RangeError(\"targetStart out of bounds\");if(e<0||e>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-r<n-e&&(n=t.length-r+e);var i,o=n-e;if(this===t&&e<r&&r<n)for(i=o-1;i>=0;--i)t[i+r]=this[i+e];else if(o<1e3||!y.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)t[i+r]=this[i+e];else Uint8Array.prototype.set.call(t,this.subarray(e,e+o),r);return o},y.prototype.fill=function(t,r,e,n){if(\"string\"==typeof t){if(\"string\"==typeof r?(n=r,r=0,e=this.length):\"string\"==typeof e&&(n=e,e=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!y.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n)}else\"number\"==typeof t&&(t&=255);if(r<0||this.length<r||this.length<e)throw new RangeError(\"Out of range index\");if(e<=r)return this;var o;if(r>>>=0,e=void 0===e?this.length:e>>>0,t||(t=0),\"number\"==typeof t)for(o=r;o<e;++o)this[o]=t;else{var u=R(t)?t:K(new y(t,n).toString()),f=u.length;for(o=0;o<e-r;++o)this[o+r]=u[o%f]}return this};var G=/[^+\\/0-9A-Za-z-_]/g;function H(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function K(t,r){var e;r=r||1/0;for(var n=t.length,i=null,o=[],u=0;u<n;++u){if((e=t.charCodeAt(u))>55295&&e<57344){if(!i){if(e>56319){(r-=3)>-1&&o.push(239,191,189);continue}if(u+1===n){(r-=3)>-1&&o.push(239,191,189);continue}i=e;continue}if(e<56320){(r-=3)>-1&&o.push(239,191,189),i=e;continue}e=65536+(i-55296<<10|e-56320)}else i&&(r-=3)>-1&&o.push(239,191,189);if(i=null,e<128){if((r-=1)<0)break;o.push(e)}else if(e<2048){if((r-=2)<0)break;o.push(e>>6|192,63&e|128)}else if(e<65536){if((r-=3)<0)break;o.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error(\"Invalid code point\");if((r-=4)<0)break;o.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return o}function Q(t){return function(t){var r,u,f,s,h,a;i||o();var c=t.length;if(c%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");h=\"=\"===t[c-2]?2:\"=\"===t[c-1]?1:0,a=new n(3*c/4-h),f=h>0?c-4:c;var l=0;for(r=0,u=0;r<f;r+=4,u+=3)s=e[t.charCodeAt(r)]<<18|e[t.charCodeAt(r+1)]<<12|e[t.charCodeAt(r+2)]<<6|e[t.charCodeAt(r+3)],a[l++]=s>>16&255,a[l++]=s>>8&255,a[l++]=255&s;return 2===h?(s=e[t.charCodeAt(r)]<<2|e[t.charCodeAt(r+1)]>>4,a[l++]=255&s):1===h&&(s=e[t.charCodeAt(r)]<<10|e[t.charCodeAt(r+1)]<<4|e[t.charCodeAt(r+2)]>>2,a[l++]=s>>8&255,a[l++]=255&s),a}(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}(t).replace(G,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function W(t,r,e,n){for(var i=0;i<n&&!(i+e>=r.length||i>=t.length);++i)r[i+e]=t[i];return i}function X(t){return null!=t&&(!!t._isBuffer||$(t)||function(t){return\"function\"==typeof t.readFloatLE&&\"function\"==typeof t.slice&&$(t.slice(0,0))}(t))}function $(t){return!!t.constructor&&\"function\"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}export{y as Buffer,l as INSPECT_MAX_BYTES,X as isBuffer};\n","import{validateStringAsAppId as t}from\"../internal/appIdValidation.js\";class r{constructor(r){this.appIdAsString=r,t(r)}toString(){return this.appIdAsString}}export{r as AppId};\n","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* IntWeb.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { getCookieValue, objDefineAccessors, safeGetCookieMgr } from \"@microsoft/1ds-core-js\";\r\nfunction _getMsfpc() {\r\n    return this.getMsfpc();\r\n}\r\nfunction _getAnid() {\r\n    return this.getAnid();\r\n}\r\nvar IntWeb = /** @class */ (function () {\r\n    function IntWeb(propertiesConfig, core) {\r\n        var _cookieMgr = safeGetCookieMgr(core);\r\n        dynamicProto(IntWeb, this, function (_self) {\r\n            if (propertiesConfig.serviceName) {\r\n                _self.serviceName = propertiesConfig.serviceName;\r\n            }\r\n            _self.getMsfpc = function () {\r\n                return getCookieValue(_cookieMgr, \"MSFPC\");\r\n            };\r\n            _self.getAnid = function () {\r\n                return getCookieValue(_cookieMgr, \"ANON\").slice(0, 34);\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for IntWeb.prototype.getMsfpc.\r\n// Removed Stub for IntWeb.prototype.getAnid.\r\n    /**\r\n     * Static constructor, attempt to create accessors\r\n     */\r\n    IntWeb._staticInit = (function () {\r\n        // Dynamically create get/set property accessors\r\n        var proto = IntWeb.prototype;\r\n        objDefineAccessors(proto, \"msfpc\", _getMsfpc);\r\n        objDefineAccessors(proto, \"anid\", _getAnid);\r\n    })();\r\n    return IntWeb;\r\n}());\r\nexport { IntWeb };\r\n//# sourceMappingURL=IntWeb.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_INDEX_OF, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && (evtMessage || \"\")[_DYN_INDEX_OF /* @min:%2eindexOf */](errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack.push(entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (window && window[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack.push(parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (result[_DYN_INDEX_OF /* @min:%2eindexOf */](errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]); });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* SessionManager.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, createGuid, isBoolean, isFunction, isUndefined, newId, safeGetCookieMgr, safeGetLogger } from \"@microsoft/1ds-core-js\";\r\nimport { canUseLocalStorage, getStorage, setStorage } from \"./Utils\";\r\nimport { Session } from \"./context/Session\";\r\nvar cookieNameConst = \"ai_session\";\r\nvar SessionManager = /** @class */ (function () {\r\n    function SessionManager(core, propConfig) {\r\n        var _cookieUpdatedTimestamp;\r\n        var _logger = safeGetLogger(core);\r\n        var cookieMgr = safeGetCookieMgr(core);\r\n        var _storageNamePrefix;\r\n        dynamicProto(SessionManager, this, function (_self) {\r\n            var functionalConfig = getDefaultConfig(propConfig);\r\n            if (!isFunction(propConfig.sessionExpirationMs)) {\r\n                functionalConfig.sessionExpirationMs = function () { return SessionManager.acquisitionSpan; };\r\n            }\r\n            if (!isFunction(propConfig.sessionRenewalMs)) {\r\n                functionalConfig.sessionRenewalMs = function () { return SessionManager.renewalSpan; };\r\n            }\r\n            _self.config = functionalConfig;\r\n            _storageNamePrefix = function () { return _self.config.namePrefix && _self.config.namePrefix() ? cookieNameConst + _self.config.namePrefix() : cookieNameConst; };\r\n            _self.automaticSession = new Session();\r\n            _self.update = function () {\r\n                if (!_self.automaticSession.getId()) {\r\n                    _initializeAutomaticSession();\r\n                }\r\n                var autoSession = _self.automaticSession;\r\n                var config = _self.config;\r\n                var now = new Date().getTime();\r\n                var acquisitionExpired = now - autoSession.acquisitionDate > config.sessionExpirationMs();\r\n                var renewalExpired = now - autoSession.renewalDate > config.sessionRenewalMs();\r\n                // renew if acquisitionSpan or renewalSpan has ellapsed\r\n                if (acquisitionExpired || renewalExpired) {\r\n                    // update automaticSession so session state has correct id\r\n                    _renew();\r\n                }\r\n                else {\r\n                    // do not update the cookie more often than cookieUpdateInterval\r\n                    var cookieUpdatedTimestamp = _cookieUpdatedTimestamp;\r\n                    if (!cookieUpdatedTimestamp || now - cookieUpdatedTimestamp > SessionManager.cookieUpdateInterval) {\r\n                        autoSession.renewalDate = now;\r\n                        _setCookie(autoSession.getId(), autoSession.acquisitionDate, autoSession.renewalDate);\r\n                    }\r\n                }\r\n            };\r\n            _self.backup = function () {\r\n                var automaticSession = _self.automaticSession;\r\n                _setStorage(automaticSession.getId(), automaticSession.acquisitionDate, automaticSession.renewalDate);\r\n            };\r\n            /**\r\n             * @ignore\r\n             * Create functional configs if value is provided, else SessionManager provides the defaults\r\n             * @param config - Property configuration\r\n             */\r\n            function getDefaultConfig(config) {\r\n                return {\r\n                    sessionRenewalMs: config.sessionRenewalMs && (function () { return config.sessionRenewalMs; }),\r\n                    sessionExpirationMs: config.sessionExpirationMs && (function () { return config.sessionExpirationMs; }),\r\n                    cookieDomain: config.cookieDomain && (function () { return config.cookieDomain; }),\r\n                    namePrefix: config.namePrefix && (function () { return config.namePrefix; }),\r\n                    sessionAsGuid: (function () { return config.sessionAsGuid; }),\r\n                    idLength: (function () { return config.idLength ? config.idLength : 22; })\r\n                };\r\n            }\r\n            /**\r\n             * @ignore\r\n             * Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n             * initialize the automatic session.\r\n             */\r\n            function _initializeAutomaticSession() {\r\n                var cookie = cookieMgr.get(_storageNamePrefix());\r\n                if (cookie && isFunction(cookie.split)) {\r\n                    _initializeAutomaticSessionWithData(cookie);\r\n                }\r\n                else {\r\n                    // There's no cookie, but we might have session data in local storage\r\n                    // This can happen if the session expired or the user actively deleted the cookie\r\n                    // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n                    // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n                    var storage = getStorage(_logger, _storageNamePrefix());\r\n                    if (storage) {\r\n                        _initializeAutomaticSessionWithData(storage);\r\n                    }\r\n                }\r\n                if (!_self.automaticSession.getId()) {\r\n                    _renew();\r\n                }\r\n            }\r\n            /**\r\n             * @ignore\r\n             * Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n             * use this data to initialize automaticSession.\r\n             *\r\n             * @param sessionData - The string stored in an ai_session cookie or local storage backup\r\n             */\r\n            function _initializeAutomaticSessionWithData(sessionData) {\r\n                var automaticSession = _self.automaticSession;\r\n                var params = sessionData.split(\"|\");\r\n                if (params.length > 0) {\r\n                    automaticSession.setId(params[0]);\r\n                }\r\n                try {\r\n                    if (params.length > 1) {\r\n                        var acq = +params[1];\r\n                        automaticSession.acquisitionDate = +new Date(acq);\r\n                        automaticSession.acquisitionDate = automaticSession.acquisitionDate > 0 ? automaticSession.acquisitionDate : 0;\r\n                    }\r\n                    if (params.length > 2) {\r\n                        var renewal = +params[2];\r\n                        automaticSession.renewalDate = +new Date(renewal);\r\n                        automaticSession.renewalDate = automaticSession.renewalDate > 0 ? automaticSession.renewalDate : 0;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 510 /* _eExtendedInternalMessageId.ErrorParsingAISessionCookie */, \"Error parsing ai_session cookie, session will be reset: \" + e);\r\n                }\r\n                if (automaticSession.renewalDate === 0) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 517 /* _eExtendedInternalMessageId.SessionRenewalDateIsZero */, \"AI session renewal date is 0, session will be reset.\");\r\n                }\r\n            }\r\n            function _renew() {\r\n                var automaticSession = _self.automaticSession;\r\n                var now = new Date().getTime();\r\n                var sessionAsGuid = _self.config.sessionAsGuid();\r\n                if (!isUndefined(sessionAsGuid) && sessionAsGuid) {\r\n                    if (!isBoolean(sessionAsGuid)) {\r\n                        automaticSession.setId(createGuid(sessionAsGuid));\r\n                    }\r\n                    else {\r\n                        automaticSession.setId(createGuid());\r\n                    }\r\n                }\r\n                else {\r\n                    automaticSession.setId(newId((functionalConfig && functionalConfig.idLength) ? functionalConfig.idLength() : 22));\r\n                }\r\n                automaticSession.acquisitionDate = now;\r\n                automaticSession.renewalDate = now;\r\n                _setCookie(automaticSession.getId(), automaticSession.acquisitionDate, automaticSession.renewalDate);\r\n                // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n                if (!canUseLocalStorage()) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 505 /* _eExtendedInternalMessageId.BrowserDoesNotSupportLocalStorage */, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n                }\r\n            }\r\n            function _setCookie(guid, acq, renewal) {\r\n                // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n                // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n                var acquisitionExpiry = acq + _self.config.sessionExpirationMs();\r\n                var renewalExpiry = renewal + _self.config.sessionRenewalMs();\r\n                var cookieExpiry = new Date();\r\n                var cookie = [guid, acq, renewal];\r\n                if (acquisitionExpiry < renewalExpiry) {\r\n                    cookieExpiry.setTime(acquisitionExpiry);\r\n                }\r\n                else {\r\n                    cookieExpiry.setTime(renewalExpiry);\r\n                }\r\n                var cookieDomain = _self.config.cookieDomain ? _self.config.cookieDomain() : null;\r\n                cookieMgr.set(_storageNamePrefix(), cookie.join(\"|\") + \";expires=\" + cookieExpiry.toUTCString(), null, cookieDomain);\r\n                _cookieUpdatedTimestamp = new Date().getTime();\r\n            }\r\n            function _setStorage(guid, acq, renewal) {\r\n                // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n                // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n                // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n                setStorage(_logger, _storageNamePrefix(), [guid, acq, renewal].join(\"|\"));\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SessionManager.prototype.update.\r\n// Removed Stub for SessionManager.prototype.backup.\r\n    SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    return SessionManager;\r\n}());\r\nexport { SessionManager };\r\n//# sourceMappingURL=SessionManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlCanUseSessionStorage, utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _warnToConsole, dateNow, dumpObj, getJSON, hasJSON, objDefineAccessors, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PAGE_VISIT_START_TIM20, _DYN_TRACK_PREVIOUS_PAGE_9 } from \"../../__DynamicConstants\";\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        var prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        dynamicProto(PageVisitTimeManager, this, function (_self) {\r\n            _self[_DYN_TRACK_PREVIOUS_PAGE_9 /* @min:%2etrackPreviousPageVisit */] = function (currentPageName, currentPageUrl) {\r\n                try {\r\n                    // Restart timer for new page view\r\n                    var prevPageVisitTimeData = restartPageVisitTimer(currentPageName, currentPageUrl);\r\n                    // If there was a page already being timed, track the visit time for it now.\r\n                    if (prevPageVisitTimeData) {\r\n                        pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Auto track page visit time failed, metric will not be collected: \" + dumpObj(e));\r\n                }\r\n            };\r\n            /**\r\n             * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n             * @param pageName Name of page to begin timing visit duration\r\n             * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n             */\r\n            function restartPageVisitTimer(pageName, pageUrl) {\r\n                var prevPageVisitData = null;\r\n                try {\r\n                    prevPageVisitData = stopPageVisitTimer();\r\n                    startPageVisitTimer(pageName, pageUrl);\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Call to restart failed: \" + dumpObj(e));\r\n                    prevPageVisitData = null;\r\n                }\r\n                return prevPageVisitData;\r\n            }\r\n            /**\r\n             * Starts timing visit duration of pageName\r\n             * @param pageName\r\n             * @returns {}\r\n             */\r\n            function startPageVisitTimer(pageName, pageUrl) {\r\n                try {\r\n                    if (utlCanUseSessionStorage()) {\r\n                        if (utlGetSessionStorage(logger, prevPageVisitDataKeyName) != null) {\r\n                            throwError(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                        }\r\n                        var currPageVisitData = new PageVisitData(pageName, pageUrl);\r\n                        var currPageVisitDataStr = getJSON().stringify(currPageVisitData);\r\n                        utlSetSessionStorage(logger, prevPageVisitDataKeyName, currPageVisitDataStr);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out\r\n                    _warnToConsole(logger, \"Call to start failed: \" + dumpObj(e));\r\n                }\r\n            }\r\n            /**\r\n             * Stops timing of current page, if exists.\r\n             * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n             */\r\n            function stopPageVisitTimer() {\r\n                var prevPageVisitData = null;\r\n                try {\r\n                    if (utlCanUseSessionStorage()) {\r\n                        // Define end time of page's visit\r\n                        var pageVisitEndTime = dateNow();\r\n                        // Try to retrieve  page name and start time from session storage\r\n                        var pageVisitDataJsonStr = utlGetSessionStorage(logger, prevPageVisitDataKeyName);\r\n                        if (pageVisitDataJsonStr && hasJSON()) {\r\n                            // if previous page data exists, set end time of visit\r\n                            prevPageVisitData = getJSON().parse(pageVisitDataJsonStr);\r\n                            prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData[_DYN_PAGE_VISIT_START_TIM20 /* @min:%2epageVisitStartTime */];\r\n                            // Remove data from storage since we already used it\r\n                            utlRemoveSessionStorage(logger, prevPageVisitDataKeyName);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Stop page visit timer failed: \" + dumpObj(e));\r\n                    prevPageVisitData = null;\r\n                }\r\n                return prevPageVisitData;\r\n            }\r\n            // For backward compatibility\r\n            objDefineAccessors(_self, \"_logger\", function () { return logger; });\r\n            objDefineAccessors(_self, \"pageVisitTimeTrackingHandler\", function () { return pageVisitTimeTrackingHandler; });\r\n        });\r\n    }\r\n// Removed Stub for PageVisitTimeManager.prototype.trackPreviousPageVisit.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    PageVisitTimeManager.__ieDyn=1;\n\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this[_DYN_PAGE_VISIT_START_TIM20 /* @min:%2epageVisitStartTime */] = dateNow();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport const BUFFER_QUEUE_SIZE = 100;\n//# sourceMappingURL=telemetryEventBuffer.constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { _DYN_CALL, _DYN_CONFIG, _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { dumpObj } from \"./EnvUtils\";\r\nimport { arrForEach, isArray, isFunction, isNullOrUndefined, isObject, isUndefined, objExtend, objForEachKey, objFreeze, objKeys, proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core[_DYN_CONFIG /* @min:%2econfig */] || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param config\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, config, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, config);\r\n            },\r\n            getCfg: function () {\r\n                return config;\r\n            },\r\n            getExtCfg: _getExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func[_DYN_CALL /* @min:%2ecall */](completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, defaultValue, mergeDefault) {\r\n        if (defaultValue === void 0) { defaultValue = {}; }\r\n        if (mergeDefault === void 0) { mergeDefault = 0 /* GetExtCfgMergeType.None */; }\r\n        var theConfig;\r\n        if (config) {\r\n            var extConfig = config[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (extConfig && identifier) {\r\n                theConfig = extConfig[identifier];\r\n            }\r\n        }\r\n        if (!theConfig) {\r\n            // Just use the defaults\r\n            theConfig = defaultValue;\r\n        }\r\n        else if (isObject(defaultValue)) {\r\n            if (mergeDefault !== 0 /* GetExtCfgMergeType.None */) {\r\n                // Merge the defaults and configured values\r\n                var newConfig_1 = objExtend(true, defaultValue, theConfig);\r\n                if (config && mergeDefault === 2 /* GetExtCfgMergeType.MergeDefaultFromRootOrDefault */) {\r\n                    // Enumerate over the defaultValues and if not already populated attempt to\r\n                    // find a value from the root config\r\n                    objForEachKey(defaultValue, function (field) {\r\n                        // for each unspecified field, set the default value\r\n                        if (isNullOrUndefined(newConfig_1[field])) {\r\n                            var cfgValue = config[field];\r\n                            if (!isNullOrUndefined(cfgValue)) {\r\n                                newConfig_1[field] = cfgValue;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                theConfig = newConfig_1;\r\n            }\r\n        }\r\n        return theConfig;\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, null);\r\n        if (extConfig && !isNullOrUndefined(extConfig[field])) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (config && !isNullOrUndefined(config[field])) {\r\n            theValue = config[field];\r\n        }\r\n        return !isNullOrUndefined(theValue) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, config, core, startAt) {\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        // Run the next plugin which will call \"processNext()\"\r\n        nextPlugin && nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = core[_DYN_CONFIG /* @min:%2econfig */] || {};\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin.unload(context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = core[_DYN_CONFIG /* @min:%2econfig */] || {};\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst projectName = 'TeamsClientMwtPackages';\n/**\n * @param tenantId\n */\nexport function getTelemetryUrlEcsConfig(tenantId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const result = yield fetch(`https://config.teams.microsoft.com/config/v1/MicrosoftTeams/1.0.0.0?agents=${projectName}&TenantID=${tenantId}`);\n        return (yield result.json());\n    });\n}\n//# sourceMappingURL=getTelemetryUrlEcsConfig.js.map","import*as o from\"./_polyfill-node.tty.js\";import{getAugmentedNamespace as r}from\"./_commonjsHelpers.js\";var m=r(o);export{m as default};\n","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* RetryPolicy.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nvar RandomizationLowerThreshold = 0.8;\r\nvar RandomizationUpperThreshold = 1.2;\r\nvar BaseBackoff = 3000;\r\nvar MaxBackoff = 600000;\r\n/**\r\n * Determine if the request should be retried for the given status code.\r\n * The below expression reads that we should only retry for:\r\n *      - HttpStatusCodes that are smaller than 300.\r\n *      - HttpStatusCodes greater or equal to 500 (except for 501-NotImplement\r\n *        and 505-HttpVersionNotSupport).\r\n *      - HttpStatusCode 408-RequestTimeout.\r\n *      - HttpStatusCode 429.\r\n * This is based on Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry class\r\n * @param httpStatusCode - The status code returned for the request.\r\n * @returns True if request should be retried, false otherwise.\r\n */\r\nexport function retryPolicyShouldRetryForStatus(httpStatusCode) {\r\n    /* tslint:disable:triple-equals */\r\n    // Disabling triple-equals rule to avoid httpOverrides from failing because they are returning a string value\r\n    return !((httpStatusCode >= 300 && httpStatusCode < 500 && httpStatusCode != 408 && httpStatusCode != 429)\r\n        || (httpStatusCode == 501)\r\n        || (httpStatusCode == 505));\r\n    /* tslint:enable:triple-equals */\r\n}\r\n/**\r\n * Gets the number of milliseconds to back off before retrying the request. The\r\n * back off duration is exponentially scaled based on the number of retries already\r\n * done for the request.\r\n * @param retriesSoFar - The number of times the request has already been retried.\r\n * @returns The back off duration for the request before it can be retried.\r\n */\r\nexport function retryPolicyGetMillisToBackoffForRetry(retriesSoFar) {\r\n    var waitDuration = 0;\r\n    var minBackoff = BaseBackoff * RandomizationLowerThreshold;\r\n    var maxBackoff = BaseBackoff * RandomizationUpperThreshold;\r\n    var randomBackoff = Math.floor(Math.random() * (maxBackoff - minBackoff)) + minBackoff;\r\n    waitDuration = Math.pow(2, retriesSoFar) * randomBackoff;\r\n    return Math.min(waitDuration, MaxBackoff);\r\n}\r\n//# sourceMappingURL=RetryPolicy.js.map","function t(){return!1}function e(){throw new Error(\"tty.ReadStream is not implemented\")}function r(){throw new Error(\"tty.ReadStream is not implemented\")}var n={isatty:t,ReadStream:e,WriteStream:r};export{e as ReadStream,r as WriteStream,n as default,t as isatty};\n","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isFunction, getDocument } from \"@microsoft/applicationinsights-core-js\";\r\nexport function createDomEvent(eventName) {\r\n    var event = null;\r\n    if (isFunction(Event)) { // Use Event constructor when available\r\n        event = new Event(eventName);\r\n    }\r\n    else { // Event has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n    }\r\n    return event;\r\n}\r\n//# sourceMappingURL=DomHelperFuncs.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* DomContentHandler.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport * as DataCollector from \"../DataCollector\";\r\nimport { _throwInternal, extend, getDocument, isDocumentObjectAvailable } from \"@microsoft/1ds-core-js\";\r\nimport { EventType } from \"../Enums\";\r\nimport { MAX_CONTENTNAME_LENGTH } from \"../common/Constants\";\r\nimport { _bracketIt, _findClosestByAttribute, _getViewportBoundingRect, _getViewportDimensions, _isElementDnt, _isElementTrulyVisible, _removeInvalidElements, _returnDomObjectIfjQuery, _walkUpDomChainWithElementValidation } from \"../common/Utils\";\r\nexport var _contentBlobFieldNameObjects = {\r\n    longNames: {\r\n        isShortNames: false,\r\n        id: \"data-bi-id\",\r\n        areaName: \"data-bi-area\",\r\n        slotNumber: \"data-bi-slot\",\r\n        contentName: \"data-bi-name\",\r\n        contentSource: \"data-bi-source\",\r\n        templateName: \"data-bi-view\",\r\n        productId: \"data-bi-product\",\r\n        contentType: \"data-bi-type\",\r\n        parentId: \"data-bi-parentid\",\r\n        parentName: \"data-bi-parentname\"\r\n    },\r\n    shortNames: {\r\n        isShortNames: true,\r\n        id: \"data-bi-id\",\r\n        areaName: \"data-bi-an\",\r\n        slotNumber: \"data-bi-sn\",\r\n        contentName: \"data-bi-cn\",\r\n        contentSource: \"data-bi-cs\",\r\n        templateName: \"data-bi-tn\",\r\n        productId: \"data-bi-pid\",\r\n        contentType: \"data-bi-ct\",\r\n        parentId: \"data-bi-pi\",\r\n        parentName: \"data-bi-pn\"\r\n    }\r\n};\r\nexport var _keyName = {\r\n    longKeys: {\r\n        parentId: \"parentId\",\r\n        parentName: \"parentName\"\r\n    },\r\n    shortKeys: {\r\n        parentId: \"pI\",\r\n        parentName: \"pN\"\r\n    }\r\n};\r\nvar DomContentHandler = /** @class */ (function () {\r\n    /**\r\n   * @param config - WebAnalytics configuration object\r\n   * @param traceLogger - Trace logger to log to console.\r\n   */\r\n    function DomContentHandler(_config, _traceLogger) {\r\n        this._config = _config;\r\n        this._traceLogger = _traceLogger;\r\n        this._contentBlobFieldNames = null;\r\n        this._contentBlobFieldNames = this._config.useShortNameForContentBlob === true ?\r\n            _contentBlobFieldNameObjects.shortNames : _contentBlobFieldNameObjects.longNames;\r\n    }\r\n    /**\r\n    * Collect metatags from DOM.\r\n    * Collect data from meta tags. Assign specific field values\r\n    * in the event object.Return an object that is a kvp of awa- and ms.tags.\r\n    * @returns {object} - Metatags collection/property bag\r\n    */\r\n    DomContentHandler.prototype.getMetadata = function () {\r\n        var msTags = {};\r\n        var awaTags = {};\r\n        if (isDocumentObjectAvailable) {\r\n            // Collect the awa-* tags.\r\n            awaTags = this._getMetaDataFromDOM(\"awa-\", true);\r\n            if (this._config.autoCapture && this._config.autoCapture.msTags) {\r\n                // Collect the legacy ms.* tags and append them to the metaTags.\r\n                msTags = this._getMetaDataFromDOM(\"ms.\", false);\r\n            }\r\n        }\r\n        return extend(true, awaTags, msTags);\r\n    };\r\n    DomContentHandler.prototype.getVisibleContent = function () {\r\n        /// <summary> takes an array of elements and only pushes the visible ones to arrayOfContents </summary>\r\n        /// <param type='object'> the list of elements </param>\r\n        /// <param type='object'> the array to push in </param>\r\n        var viewportDim = _getViewportDimensions();\r\n        var viewportBoundingRect = _getViewportBoundingRect(viewportDim);\r\n        // Select all elements that have data-bi-area/aN, data-bi-slot/sN or data-m (biAttributeName) defined in the viewPort.\r\n        var elements = null;\r\n        if (isDocumentObjectAvailable) {\r\n            elements = document.querySelectorAll(_bracketIt(this._contentBlobFieldNames.areaName) + \",\" +\r\n                _bracketIt(this._contentBlobFieldNames.slotNumber) + \",\" +\r\n                _bracketIt(this._config.biBlobAttributeTag));\r\n        }\r\n        var arrayOfContents = [];\r\n        if (elements) {\r\n            for (var i = 0; i < elements.length; i++) {\r\n                // DNT = Do Not Track\r\n                var element = elements[i];\r\n                if (!_isElementDnt(element)) {\r\n                    if (_isElementTrulyVisible(element, viewportBoundingRect)) {\r\n                        var elementContent = this.getElementContent(element, EventType.CONTENT_UPDATE);\r\n                        if (elementContent) {\r\n                            arrayOfContents.push(elementContent);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return arrayOfContents;\r\n    };\r\n    /**\r\n    * Collect data-bi attributes for the given element.\r\n    * All attributes with data-bi prefix are collected.  'data-bi' prefix is removed from the key name.\r\n    * @param element - The element from which attributes need to be collected.\r\n    * @returns String representation of the Json array of element attributes\r\n    */\r\n    DomContentHandler.prototype.getElementContent = function (element, eventType) {\r\n        if (!element) {\r\n            return {};\r\n        }\r\n        var elementContent = {};\r\n        var biBlobElement;\r\n        var biBlobValue;\r\n        var contentElement;\r\n        // element has no tags - look for the closest upper element with tags\r\n        if (!this._isTracked(element)) {\r\n            // capture config.biBlobAttributeTag blob from element or hierarchy\r\n            biBlobElement = _findClosestByAttribute(element, this._config.biBlobAttributeTag);\r\n            if (biBlobElement) {\r\n                biBlobValue = biBlobElement.getAttribute(this._config.biBlobAttributeTag);\r\n            }\r\n            if (biBlobValue) {\r\n                try {\r\n                    elementContent = JSON.parse(biBlobValue);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(this._traceLogger, 1 /* eLoggingSeverity.CRITICAL */, 506 /* _eExtendedInternalMessageId.CannotParseBiBlobValue */, \"Can not parse \" + biBlobValue);\r\n                }\r\n            }\r\n            else {\r\n                // Get the element if it has any data-bi tag defined.  If not traverse up the DOM to find the closest parent with data-bi tag defined\r\n                contentElement = _walkUpDomChainWithElementValidation(element, this._isTrackedWithDataBi);\r\n                elementContent = extend(elementContent, this._populateElementContentwithDataBi(contentElement, element));\r\n            }\r\n        }\r\n        else if (this._isTrackedWithDataM(element)) {\r\n            biBlobElement = element;\r\n            biBlobValue = biBlobElement.getAttribute(this._config.biBlobAttributeTag);\r\n            try {\r\n                elementContent = JSON.parse(biBlobValue);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(this._traceLogger, 1 /* eLoggingSeverity.CRITICAL */, 506 /* _eExtendedInternalMessageId.CannotParseBiBlobValue */, \"Can not parse \" + biBlobValue);\r\n            }\r\n        }\r\n        else if (this._isTrackedWithDataBi(element)) {\r\n            // Get the element if it has any data-bi tag defined.  If not traverse up the DOM to find the closest parent with data-bi tag defined\r\n            contentElement = element;\r\n            elementContent = extend(elementContent, this._populateElementContentwithDataBi(contentElement, element));\r\n        }\r\n        _removeInvalidElements(elementContent);\r\n        if (this._config.autoCapture.lineage && eventType === EventType.PAGE_ACTION) {\r\n            elementContent = extend(elementContent, this.getLineageDetails(element));\r\n        }\r\n        if (this._config.autoPopulateParentIdAndParentName) {\r\n            elementContent = extend(elementContent, this._getParentDetails(biBlobElement ? biBlobElement : contentElement, elementContent));\r\n        }\r\n        return elementContent;\r\n    };\r\n    /**\r\n    *  Computes the lineage of a given element.\r\n    * @param element - An html element\r\n    * @returns An object containing the different forms of lineage/hierarchy on DOM tree starting with the current element.\r\n    * example output: {'lineage':'GET OFFICE 365>coreui-hero-6zx3vxo-item-2>R1Hero 1>primaryR1 1>primaryArea 1',\r\n    * 'lineageById':'n10m1r1a2>nn9m1r1a2>m1r1a2>r1a2>a2Body','containerName':'R1Hero 1'}\r\n    */\r\n    DomContentHandler.prototype.getLineageDetails = function (element) {\r\n        var name = [];\r\n        var identifier = [];\r\n        var lineageDelimiter = \">\";\r\n        var elementBiDataAttribute = this._config.biBlobAttributeTag; // data-m\r\n        var elementModuleIdAttribute = \"data-module-id\";\r\n        var containerName;\r\n        var nameValue;\r\n        var idValue;\r\n        while (element) {\r\n            var dataAttr = element.getAttribute(elementBiDataAttribute) || element[elementBiDataAttribute];\r\n            var moduleIdAttribute = element.getAttribute(elementModuleIdAttribute) || element[elementModuleIdAttribute];\r\n            if (dataAttr) {\r\n                try {\r\n                    var telemetryObject = JSON.parse(dataAttr);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(this._traceLogger, 1 /* eLoggingSeverity.CRITICAL */, 507 /* _eExtendedInternalMessageId.CannotParseDataAttribute */, \"Can not parse \" + dataAttr);\r\n                }\r\n                if (telemetryObject) {\r\n                    nameValue = telemetryObject.cN || telemetryObject.cT;\r\n                    idValue = telemetryObject.id || undefined;\r\n                    if (nameValue || idValue) {\r\n                        name.push(nameValue);\r\n                        if (moduleIdAttribute) {\r\n                            // reporting treats cN of modules as containerName\r\n                            containerName = nameValue;\r\n                        }\r\n                        identifier.push(idValue);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                nameValue = element.getAttribute(this._contentBlobFieldNames.contentName) || element.getAttribute(this._contentBlobFieldNames.contentType);\r\n                idValue = element.getAttribute(this._contentBlobFieldNames.id) || undefined;\r\n                if (nameValue || idValue) {\r\n                    name.push(nameValue);\r\n                    if (moduleIdAttribute) {\r\n                        containerName = nameValue;\r\n                    }\r\n                    identifier.push(idValue);\r\n                }\r\n            }\r\n            element = element.parentElement;\r\n        }\r\n        var lineageDetails = {\r\n            lineage: name.join(lineageDelimiter),\r\n            lineageById: identifier.join(lineageDelimiter),\r\n            lineageContainerName: containerName\r\n        };\r\n        return lineageDetails;\r\n    };\r\n    DomContentHandler.prototype._populateElementContentwithDataBi = function (contentElement, element) {\r\n        var elementContent = {};\r\n        if (!contentElement) {\r\n            // None of the element and its parent has any tags, collect standard HTML attribute for contentName when useDefaultContentName flag is true\r\n            if (this._config.useDefaultContentName) {\r\n                contentElement = element;\r\n            }\r\n            else {\r\n                return elementContent;\r\n            }\r\n        }\r\n        // Get the closest element with attribute data-bi-area.\r\n        var areaElement = _findClosestByAttribute(contentElement, this._contentBlobFieldNames.areaName);\r\n        var areaContent = extend({}, this._getAreaContent(areaElement));\r\n        var customizedContentName = this._config.callback.contentName ? this._config.callback.contentName(contentElement, this._config.useDefaultContentName) : \"\";\r\n        //Default content name must be for original clicked element and not contentElement to align with JSLL implementation\r\n        var defaultContentName = this._getDefaultContentName(element, this._config.useDefaultContentName);\r\n        elementContent = {\r\n            id: contentElement.getAttribute(this._contentBlobFieldNames.id) || contentElement.id || \"\",\r\n            aN: areaContent.areaName,\r\n            sN: contentElement.getAttribute(this._contentBlobFieldNames.slotNumber),\r\n            cN: customizedContentName || contentElement.getAttribute(this._contentBlobFieldNames.contentName) || defaultContentName || contentElement.getAttribute(\"alt\") || \"\",\r\n            cS: contentElement.getAttribute(this._contentBlobFieldNames.contentSource) || areaContent.contentSource,\r\n            tN: areaContent.templateName,\r\n            pid: contentElement.getAttribute(this._contentBlobFieldNames.productId),\r\n            cT: contentElement.getAttribute(this._contentBlobFieldNames.contentType) || areaContent.type,\r\n            pI: contentElement.getAttribute(this._contentBlobFieldNames.parentId),\r\n            pN: contentElement.getAttribute(this._contentBlobFieldNames.parentName)\r\n        };\r\n        // Validate to ensure the minimum required field 'contentName/cN' is present.\r\n        // The content schema defines id, aN and sN as required fields.  However,\r\n        /// requiring these fields would result in majority of adopter's content from being collected.\r\n        // Just throw a warning and continue collection.\r\n        if (!elementContent.id || !elementContent.aN || !elementContent.sN || !elementContent.cN) {\r\n            _throwInternal(this._traceLogger, 2 /* eLoggingSeverity.WARNING */, 515 /* _eExtendedInternalMessageId.InvalidContentBlob */, \"Invalid content blob.  Missing required attributes (id, aN/area, sN/slot), cN/contentName. \" +\r\n                \" Content information will still be collected!\");\r\n        }\r\n        // use legacy fullNames for the content blob if configured so.\r\n        if (!this._contentBlobFieldNames.isShortNames) {\r\n            elementContent = {\r\n                contentId: elementContent.id,\r\n                areaName: elementContent.aN,\r\n                slotNumber: elementContent.sN,\r\n                contentName: elementContent.cN,\r\n                contentSource: elementContent.cS,\r\n                templateName: elementContent.tN,\r\n                productId: elementContent.pid,\r\n                contentType: elementContent.cT,\r\n                parentId: elementContent.pI,\r\n                parentName: elementContent.pN\r\n            };\r\n        }\r\n        // Collect all other data-bi attributes and name them w/o the data-bi prefix.\r\n        for (var i = 0, attrib; i < contentElement.attributes.length; i++) {\r\n            attrib = contentElement.attributes[i];\r\n            if (attrib.name === this._contentBlobFieldNames.id ||\r\n                attrib.name === this._contentBlobFieldNames.areaName ||\r\n                attrib.name === this._contentBlobFieldNames.slotNumber ||\r\n                attrib.name === this._contentBlobFieldNames.contentName ||\r\n                attrib.name === this._contentBlobFieldNames.contentSource ||\r\n                attrib.name === this._contentBlobFieldNames.templateName ||\r\n                attrib.name === this._contentBlobFieldNames.productId ||\r\n                attrib.name === this._contentBlobFieldNames.contentType ||\r\n                attrib.name === this._contentBlobFieldNames.parentId ||\r\n                attrib.name === this._contentBlobFieldNames.parentName ||\r\n                attrib.name.indexOf(\"data-bi-\") === -1) {\r\n                continue;\r\n            }\r\n            var attribName = attrib.name.replace(\"data-bi-\", \"\");\r\n            elementContent[attribName] = attrib.value;\r\n        }\r\n        return elementContent;\r\n    };\r\n    /**\r\n    * Retrieve a specified metadata tag value from the DOM.\r\n    * @param prefix - Prefix to search the metatags with.\r\n    * @param removePrefix - Specifies if the prefix must be excluded from key names in the returned collection.\r\n    * @returns Metadata collection/property bag\r\n    */\r\n    DomContentHandler.prototype._getMetaDataFromDOM = function (prefix, removePrefix) {\r\n        var metaElements;\r\n        var metaData = {};\r\n        if (isDocumentObjectAvailable) {\r\n            metaElements = document.querySelectorAll(\"meta\");\r\n            for (var i = 0; i < metaElements.length; i++) {\r\n                var meta = metaElements[i];\r\n                if (meta.name) {\r\n                    var mt = meta.name.toLowerCase();\r\n                    if (mt.indexOf(prefix) === 0) {\r\n                        var name = removePrefix ? meta.name.replace(prefix, \"\") : meta.name;\r\n                        metaData[name] = meta.content;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return metaData;\r\n    };\r\n    /**\r\n    * extracts area content from element\r\n    * @param areaElement An html element\r\n    * @returns A JSON object representing the content.\r\n    */\r\n    DomContentHandler.prototype._getAreaContent = function (areaElement) {\r\n        areaElement = _returnDomObjectIfjQuery(areaElement);\r\n        if (areaElement) {\r\n            return {\r\n                areaName: areaElement.getAttribute(this._contentBlobFieldNames.areaName),\r\n                templateName: areaElement.getAttribute(this._contentBlobFieldNames.templateName),\r\n                contentSource: areaElement.getAttribute(this._contentBlobFieldNames.contentSource),\r\n                product: areaElement.getAttribute(this._contentBlobFieldNames.productId),\r\n                type: areaElement.getAttribute(this._contentBlobFieldNames.contentType)\r\n            };\r\n        }\r\n    };\r\n    /**\r\n    * Gets the default content name.\r\n    * @param element - An html element\r\n    * @param useDefaultContentName -Flag indicating if an element is market PII.\r\n    * @returns Content name\r\n    */\r\n    /*ignore jslint start*/\r\n    DomContentHandler.prototype._getDefaultContentName = function (element, useDefaultContentName) {\r\n        if (useDefaultContentName === false || DataCollector._isPii(element) || !element.tagName) {\r\n            return \"\";\r\n        }\r\n        var doc = getDocument() || {};\r\n        var contentName;\r\n        switch (element.tagName) {\r\n            case \"A\":\r\n                contentName = doc.all ? element.innerText || element.innerHTML : element.text || element.innerHTML;\r\n                break;\r\n            case \"IMG\":\r\n            case \"AREA\":\r\n                contentName = element.alt;\r\n                break;\r\n            default:\r\n                contentName = element.value || element.name || element.alt || element.innerText || element.id;\r\n        }\r\n        return contentName.substring(0, MAX_CONTENTNAME_LENGTH);\r\n    };\r\n    /*ignore jslint end*/\r\n    /**\r\n    * Computes the parentId and parentName of a given element.\r\n    * @param element - An html element\r\n    * @returns An object containing the closest parentId and parentName, can be empty if nothing was found\r\n    */\r\n    DomContentHandler.prototype._getParentDetails = function (element, elementContent) {\r\n        var parentIdKey = this._contentBlobFieldNames.isShortNames ? _keyName.shortKeys.parentId : _keyName.longKeys.parentId;\r\n        var parentNameKey = this._contentBlobFieldNames.isShortNames ? _keyName.shortKeys.parentName : _keyName.longKeys.parentName;\r\n        var parentId = elementContent[parentIdKey];\r\n        var parentName = elementContent[parentNameKey];\r\n        var parentInfo = {};\r\n        if (parentId || parentName || !element) {\r\n            return parentInfo;\r\n        }\r\n        return this._populateParentInfo(element, parentIdKey, parentNameKey);\r\n    };\r\n    /**\r\n    * Check if the user wants to track the element, which means if the element has any tags\r\n    * @param element - An html element\r\n    * @returns true if any data-bi- tag or data-m tag exist, otherwise return false\r\n    */\r\n    DomContentHandler.prototype._isTrackedWithDataM = function (element) {\r\n        var attrs = element.attributes;\r\n        for (var i = 0; i < attrs.length; i++) {\r\n            if (attrs[i].name === \"data-m\") {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n    * Check if the user wants to track the element, which means if the element has any tags\r\n    * @param element - An html element\r\n    * @returns true if any data-bi- tag or data-m tag exist, otherwise return false\r\n    */\r\n    DomContentHandler.prototype._isTrackedWithDataBi = function (element) {\r\n        var attrs = element.attributes;\r\n        for (var i = 0; i < attrs.length; i++) {\r\n            if (attrs[i].name.indexOf(\"data-bi-\") >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n    * Check if the user wants to track the element, which means if the element has any tags\r\n    * @param element - An html element\r\n    * @returns true if any data-bi- tag or data-m tag exist, otherwise return false\r\n    */\r\n    DomContentHandler.prototype._isTracked = function (element) {\r\n        var attrs = element.attributes;\r\n        for (var i = 0; i < attrs.length; i++) {\r\n            if (attrs[i].name === \"data-m\" || attrs[i].name.indexOf(\"data-bi-\") >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n    * Check if parent info already set up, if so take and put into content, if not walk up the DOM to find correct info\r\n    * @param element - An html element that the user wants to track\r\n    * @returns n object containing the parent info, can be empty if nothing was found\r\n    */\r\n    DomContentHandler.prototype._populateParentInfo = function (element, parentIdKey, parentNameKey) {\r\n        var parentInfo = {};\r\n        var elementBiDataAttribute = this._config.biBlobAttributeTag; // data-m\r\n        var parentId;\r\n        var parentName;\r\n        // if the user does not set up parent info, walk to the DOM, find the closest parent element (with tags) and populate the info\r\n        var closestParentElement = _walkUpDomChainWithElementValidation(element.parentElement, this._isTracked);\r\n        if (closestParentElement) {\r\n            var dataAttr = closestParentElement.getAttribute(elementBiDataAttribute) || element[elementBiDataAttribute];\r\n            if (dataAttr) {\r\n                try {\r\n                    var telemetryObject = JSON.parse(dataAttr);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(this._traceLogger, 1 /* eLoggingSeverity.CRITICAL */, 507 /* _eExtendedInternalMessageId.CannotParseDataAttribute */, \"Can not parse \" + dataAttr);\r\n                }\r\n                if (telemetryObject) {\r\n                    parentId = telemetryObject.id;\r\n                    parentName = telemetryObject.cN;\r\n                }\r\n            }\r\n            else {\r\n                parentId = closestParentElement.getAttribute(this._contentBlobFieldNames.id);\r\n                parentName = closestParentElement.getAttribute(this._contentBlobFieldNames.contentName);\r\n            }\r\n            if (parentId) {\r\n                parentInfo[parentIdKey] = parentId;\r\n            }\r\n            if (parentName) {\r\n                parentInfo[parentNameKey] = parentName;\r\n            }\r\n        }\r\n        return parentInfo;\r\n    };\r\n    return DomContentHandler;\r\n}());\r\nexport { DomContentHandler };\r\n//# sourceMappingURL=DomContentHandler.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","import r from\"./native.js\";import n from\"./rng.js\";import{unsafeStringify as o}from\"./stringify.js\";function t(t,m,i){if(r.randomUUID&&!m&&!t)return r.randomUUID();const f=(t=t||{}).random||(t.rng||n)();return f[6]=15&f[6]|64,f[8]=63&f[8]|128,o(f)}export{t as default};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nimport { BUFFER_QUEUE_SIZE } from './telemetryEventBuffer.constants';\n/**\n * TODO: JSDoc.\n */\nclass TelemetryEventBuffer {\n    constructor() {\n        this._bufferQueue = [];\n        this._bufferSize = BUFFER_QUEUE_SIZE;\n    }\n    /***\n     * TODO: JSDoc.\n     * Initializes the buffer queue with a max size of 100.\n     * The buffer queue is flushed on call of flush method whichever happens first.\n     */\n    getInstance() {\n        if (!this._instance) {\n            this._instance = new TelemetryEventBuffer();\n        }\n        return this._instance;\n    }\n    /**\n     * @param callback\n     */\n    flushTelemetryEventBuffer(callback) {\n        this._bufferQueue = [];\n        callback === null || callback === void 0 ? void 0 : callback();\n    }\n    /**\n     * @param eventBuffer\n     */\n    addToTelemetryEventBuffer(eventBuffer) {\n        if (this._bufferQueue.length === this._bufferSize) {\n            this._bufferQueue.shift();\n        }\n        this._bufferQueue.push(eventBuffer);\n    }\n    /**\n     * Pushes the events to telemetry client and flushes the event queue.\n     */\n    pushEventsToTelemetryClient() {\n        this._bufferQueue.map((event) => {\n            event();\n        });\n        this.flushTelemetryEventBuffer();\n    }\n    /**\n     * Return the events queue size.\n     */\n    getTelemetryEventBufferSize() {\n        return this._bufferQueue.length;\n    }\n}\nexport const telemetryEventBuffer = new TelemetryEventBuffer().getInstance();\n//# sourceMappingURL=TelemetryEventBuffer.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { _DYN_LENGTH, _DYN_SPAN_ID, _DYN_SUBSTR, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { isArray, isString, strTrim } from \"./HelperFuncs\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]*)?$/;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a.spanId = isValidSpanId(spanId) ? spanId : generateW3CId()[_DYN_SUBSTR /* @min:%2esubstr */](0, 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value\r\n * @returns\r\n */\r\nexport function parseTraceParent(value) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = match[1],\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = match[2],\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = match[3],\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version, \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID), \"-\").concat(flags);\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @returns\r\n */\r\nexport function findW3cTraceParent() {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name));\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name));\r\n    }\r\n    return traceParent;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LISTENERS, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_2, _DYN_SPLICE } from \"../__DynamicConstants\";\r\nimport { arrForEach, arrIndexOf } from \"./HelperFuncs\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nfunction _runListeners(listeners, name, isAsync, callback) {\r\n    arrForEach(listeners, function (listener) {\r\n        if (listener && listener[name]) {\r\n            if (isAsync) {\r\n                setTimeout(function () { return callback(listener); }, 0);\r\n            }\r\n            else {\r\n                try {\r\n                    callback(listener);\r\n                }\r\n                catch (e) {\r\n                    // Catch errors to ensure we don't block sending the requests\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var perfEvtsSendAll = !!(config || {}).perfEvtsSendAll;\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _self.listeners[_DYN_PUSH /* @min:%2epush */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_2 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                var index = arrIndexOf(_self[_DYN_LISTENERS /* @min:%2elisteners */], listener);\r\n                while (index > -1) {\r\n                    _self.listeners[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                    index = arrIndexOf(_self[_DYN_LISTENERS /* @min:%2elisteners */], listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n             */\r\n            _self[STR_EVENTS_SENT /* @min:%2eeventsSent */] = function (events) {\r\n                _runListeners(_self[_DYN_LISTENERS /* @min:%2elisteners */], STR_EVENTS_SENT, true, function (listener) {\r\n                    listener[STR_EVENTS_SENT /* @min:%2eeventsSent */](events);\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n             * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */] = function (events, reason) {\r\n                _runListeners(_self[_DYN_LISTENERS /* @min:%2elisteners */], STR_EVENTS_DISCARDED, true, function (listener) {\r\n                    listener[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */](events, reason);\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param {number} sendReason - The reason why the event batch is being sent.\r\n             * @param {boolean} isAsync   - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */] = function (sendReason, isAsync) {\r\n                _runListeners(_self[_DYN_LISTENERS /* @min:%2elisteners */], STR_EVENTS_SEND_REQUEST, isAsync, function (listener) {\r\n                    listener[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendReason, isAsync);\r\n                });\r\n            };\r\n            _self[STR_PERF_EVENT /* @min:%2eperfEvent */] = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */]()) {\r\n                        _runListeners(_self[_DYN_LISTENERS /* @min:%2elisteners */], STR_PERF_EVENT, false, function (listener) {\r\n                            if (perfEvent[_DYN_IS_ASYNC /* @min:%2eisAsync */]) {\r\n                                setTimeout(function () { return listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent); }, 0);\r\n                            }\r\n                            else {\r\n                                listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for NotificationManager.prototype.addNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.removeNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.eventsSent.\r\n// Removed Stub for NotificationManager.prototype.eventsDiscarded.\r\n// Removed Stub for NotificationManager.prototype.eventsSendRequest.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    NotificationManager.__ieDyn=1;\n\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dateTimeUtilsDuration } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        var _self = this;\r\n        var _events = {};\r\n        _self.start = function (name) {\r\n            if (typeof _events[name] !== \"undefined\") {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 62 /* _eInternalMessageId.StartCalledMoreThanOnce */, \"start was called more than once for this event without calling stop.\", { name: name, key: name }, true);\r\n            }\r\n            _events[name] = +new Date;\r\n        };\r\n        _self.stop = function (name, url, properties, measurements) {\r\n            var start = _events[name];\r\n            if (isNaN(start)) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 63 /* _eInternalMessageId.StopCalledWithoutStart */, \"stop was called without a corresponding start.\", { name: name, key: name }, true);\r\n            }\r\n            else {\r\n                var end = +new Date;\r\n                var duration = dateTimeUtilsDuration(start, end);\r\n                _self.action(name, url, duration, properties, measurements);\r\n            }\r\n            delete _events[name];\r\n            _events[name] = undefined;\r\n        };\r\n    }\r\n    return Timing;\r\n}());\r\nexport { Timing };\r\n//# sourceMappingURL=Timing.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Session.ts\r\n* @copyright Microsoft 2019\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isString, objDefineAccessors } from \"@microsoft/1ds-core-js\";\r\nfunction _getId() {\r\n    return this.getId();\r\n}\r\nfunction _setId(id) {\r\n    this.setId(id);\r\n}\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n        dynamicProto(Session, this, function (_self) {\r\n            _self.setId = function (id) {\r\n                _self.customId = id;\r\n            };\r\n            _self.getId = function () {\r\n                if (isString(_self.customId)) {\r\n                    return _self.customId;\r\n                }\r\n                else {\r\n                    return _self.automaticId;\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for Session.prototype.setId.\r\n// Removed Stub for Session.prototype.getId.\r\n    /**\r\n     * Static constructor, attempt to create accessors\r\n     */\r\n    Session._staticInit = (function () {\r\n        // Dynamically create get/set property accessors\r\n        objDefineAccessors(Session.prototype, \"id\", _getId, _setId);\r\n    })();\r\n    return Session;\r\n}());\r\nexport { Session };\r\n//# sourceMappingURL=Session.js.map","import{GlobalVars as e}from\"./globalVars.js\";import{getLogger as t}from\"./telemetry.js\";const n=t(\"nestedAppAuthUtils\"),s=n.extend(\"tryPolyfillWithNestedAppAuthBridge\");function r(t,n,r){var i;const d=s;if(e.isFramelessWindow)return void d(\"Cannot polyfill nestedAppAuthBridge as current window is frameless\");if(!n)return void d(\"Cannot polyfill nestedAppAuthBridge as current window does not exist\");const p=(()=>{try{return JSON.parse(t)}catch(e){return null}})();if(!p||!(null===(i=p.supports)||void 0===i?void 0:i.nestedAppAuth))return void d(\"Cannot polyfill nestedAppAuthBridge as current hub does not support nested app auth\");const u=n;if(u.nestedAppAuthBridge)return void d(\"nestedAppAuthBridge already exists on current window, skipping polyfill\");const a=function(e,t){const n=o;if(!e)return n(\"nestedAppAuthBridge cannot be created as current window does not exist\"),null;const{onMessage:s,sendPostMessage:r}=t,i=e=>t=>s(t,e);return{addEventListener:(t,s)=>{\"message\"===t?e.addEventListener(t,i(s)):n(`Event ${t} is not supported by nestedAppAuthBridge`)},postMessage:e=>{const t=(()=>{try{return JSON.parse(e)}catch(e){return null}})();t&&\"object\"==typeof t&&\"NestedAppAuthRequest\"===t.messageType?r(e):n(\"Unrecognized data format received by app, message being ignored. Message: %o\",e)},removeEventListener:(t,n)=>{e.removeEventListener(t,i(n))}}}(u,r);a&&(u.nestedAppAuthBridge=a)}const o=n.extend(\"createNestedAppAuthBridge\");export{r as tryPolyfillWithNestedAppAuthBridge};\n","import*as t from\"../artifactsForCDN/validDomains.json.js\";const i=\"2.0.1\",s=\"2.0.2\",e=\"2.0.3\",n=\"2.0.4\",o=\"2.0.1\",a=\"1.9.0\",r=\"2.0.0\",m=\"1.7.0\",l=\"1.8.0\",d=\"2.0.0\",h=\"1.9.0\",p=t.validOrigins,c=new URL(\"https://res.cdn.office.net/teams-js/validDomains/json/validDomains.json\"),f=/^https:\\/\\//,j=\"https\",v=\"teams.microsoft.com\",y=\"The library has not yet been initialized\",D=\"The runtime has not yet been initialized\",T=\"The runtime version is not supported\",b=\"The call was not properly started\";export{m as captureImageMobileSupportVersion,i as defaultSDKVersionForCompatCheck,b as errorCallNotStarted,y as errorLibraryNotInitialized,D as errorRuntimeNotInitialized,T as errorRuntimeNotSupported,d as getMediaCallbackSupportVersion,o as getUserJoinedTeamsSupportedAndroidClientVersion,n as imageOutputFormatsAPISupportVersion,a as locationAPIsRequiredVersion,l as mediaAPISupportVersion,e as nonFullScreenVideoModeAPISupportVersion,r as peoplePickerRequiredVersion,h as scanBarCodeAPIMobileSupportVersion,v as teamsDeepLinkHost,j as teamsDeepLinkProtocol,f as userOriginUrlValidationRegExp,c as validOriginsCdnEndpoint,p as validOriginsFallback,s as videoAndImageMediaAPISupportVersion};\n","import{__awaiter as e}from\"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.0_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";import{getLogger as n,getApiVersionTag as r}from\"./telemetry.js\";import{pages as l}from\"../public/pages.js\";import{runtime as a}from\"../public/runtime.js\";import{sendMessageToParent as d,Communication as o,sendMessageEventToChild as i}from\"./communication.js\";import{ensureInitialized as t}from\"./internalAPIs.js\";import{isNullOrUndefined as s}from\"./typeCheckUtilities.js\";const u=n(\"handlers\");class f{static initializeHandlers(){f.handlers.themeChange=y,f.handlers.load=w,f.handlers.beforeUnload=O,l.backStack._initialize()}static uninitializeHandlers(){f.handlers={},f.themeChangeHandler=null,f.loadHandler=null,f.beforeUnloadHandler=null,f.beforeSuspendOrTerminateHandler=null,f.resumeHandler=null}}function m(){f.initializeHandlers()}function c(){f.uninitializeHandlers()}f.handlers={},f.themeChangeHandler=null,f.loadHandler=null,f.beforeUnloadHandler=null,f.beforeSuspendOrTerminateHandler=null,f.resumeHandler=null;const h=u.extend(\"callHandler\");function H(e,n){const r=f.handlers[e];if(r){h(\"Invoking the registered handler for message %s with arguments %o\",e,n);return[!0,r.apply(this,n)]}return o.childWindow?(i(e,n),[!1,void 0]):(h(\"Handler for action message %s not found.\",e),[!1,void 0])}function p(e,n,r,l=!0,a=[]){r?(f.handlers[n]=r,l&&d(e,\"registerHandler\",[n,...a])):delete f.handlers[n]}function g(e){delete f.handlers[e]}function b(e){return null!=f.handlers[e]}function U(e,n,r,l,d){r&&t(a,...l),d&&d(),p(e,n,r)}function v(e,n){f.themeChangeHandler=n,!s(n)&&d(e,\"registerHandler\",[\"themeChange\"])}function y(e){f.themeChangeHandler&&f.themeChangeHandler(e),o.childWindow&&i(\"themeChange\",[e])}function C(e,n){f.loadHandler=n,!s(n)&&d(e,\"registerHandler\",[\"load\"])}function w(e){const n={entityId:(r=e).entityId,contentUrl:new URL(r.contentUrl)};var r;f.resumeHandler?(f.resumeHandler(n),o.childWindow&&i(\"load\",[n])):f.loadHandler&&(f.loadHandler(e),o.childWindow&&i(\"load\",[e]))}function j(e,n){f.beforeUnloadHandler=n,!s(n)&&d(e,\"registerHandler\",[\"beforeUnload\"])}function O(){return e(this,void 0,void 0,(function*(){const e=()=>{d(r(\"v2\",\"handleBeforeUnload\"),\"readyToUnload\",[])};f.beforeSuspendOrTerminateHandler?(yield f.beforeSuspendOrTerminateHandler(),o.childWindow?i(\"beforeUnload\"):e()):f.beforeUnloadHandler&&f.beforeUnloadHandler(e)||(o.childWindow?i(\"beforeUnload\"):e())}))}function S(e){f.beforeSuspendOrTerminateHandler=e,!s(e)&&d(r(\"v2\",\"registerBeforeSuspendOrTerminateHandler\"),\"registerHandler\",[\"beforeUnload\"])}function T(e){f.resumeHandler=e,!s(e)&&d(r(\"v2\",\"registerOnResumeHandler\"),\"registerHandler\",[\"load\"])}export{H as callHandler,b as doesHandlerExist,y as handleThemeChange,m as initializeHandlers,S as registerBeforeSuspendOrTerminateHandler,j as registerBeforeUnloadHandler,p as registerHandler,U as registerHandlerHelper,C as registerOnLoadHandler,T as registerOnResumeHandler,v as registerOnThemeChangeHandler,g as removeHandler,c as uninitializeHandlers};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { dumpObj } from \"./EnvUtils\";\r\nimport { arrForEach } from \"./HelperFuncs\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport * from './telemetry.constants';\nexport * from './telemetry.types';\n//# sourceMappingURL=index.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar _a;\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_SANITIZE_EXCEPTION, _DYN_SANITIZE_KEY_AND_ADD2, _DYN_SANITIZE_MEASUREMENT3, _DYN_SANITIZE_PROPERTIES, _DYN_STRINGIFY, _DYN_SUBSTRING, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = field[_DYN_SUBSTRING /* @min:%2esubstring */](0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(name[_DYN_TO_STRING /* @min:%2etoString */]());\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = name[_DYN_SUBSTRING /* @min:%2esubstring */](0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(value);\r\n        if (value.toString()[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = value[_DYN_TO_STRING /* @min:%2etoString */]()[_DYN_SUBSTRING /* @min:%2esubstring */](0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = message[_DYN_SUBSTRING /* @min:%2esubstring */](0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = value[_DYN_SUBSTRING /* @min:%2esubstring */](0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(input);\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = input[_DYN_SUBSTRING /* @min:%2esubstring */](0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return s.substr(s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n/**\r\n * Provides the DataSanitizer functions within the previous namespace.\r\n */\r\nexport var DataSanitizer = (_a = {\r\n        MAX_NAME_LENGTH: 150 /* DataSanitizerValues.MAX_NAME_LENGTH */,\r\n        MAX_ID_LENGTH: 128 /* DataSanitizerValues.MAX_ID_LENGTH */,\r\n        MAX_PROPERTY_LENGTH: 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */,\r\n        MAX_STRING_LENGTH: 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */,\r\n        MAX_URL_LENGTH: 2048 /* DataSanitizerValues.MAX_URL_LENGTH */,\r\n        MAX_MESSAGE_LENGTH: 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */,\r\n        MAX_EXCEPTION_LENGTH: 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */\r\n    },\r\n    _a[_DYN_SANITIZE_KEY_AND_ADD2 /* @min:sanitizeKeyAndAddUniqueness */] = dataSanitizeKeyAndAddUniqueness,\r\n    _a.sanitizeKey = dataSanitizeKey,\r\n    _a.sanitizeString = dataSanitizeString,\r\n    _a.sanitizeUrl = dataSanitizeUrl,\r\n    _a.sanitizeMessage = dataSanitizeMessage,\r\n    _a[_DYN_SANITIZE_EXCEPTION /* @min:sanitizeException */] = dataSanitizeException,\r\n    _a[_DYN_SANITIZE_PROPERTIES /* @min:sanitizeProperties */] = dataSanitizeProperties,\r\n    _a[_DYN_SANITIZE_MEASUREMENT3 /* @min:sanitizeMeasurements */] = dataSanitizeMeasurements,\r\n    _a.sanitizeId = dataSanitizeId,\r\n    _a.sanitizeInput = dataSanitizeInput,\r\n    _a.padNumber = dsPadNumber,\r\n    _a.trim = strTrim,\r\n    _a);\r\n//# sourceMappingURL=DataSanitizer.js.map","let t;const e=new Uint8Array(16);function o(){if(!t&&(t=\"undefined\"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");return t(e)}export{o as default};\n","class i{}i.initializeCalled=!1,i.initializeCompleted=!1,i.additionalValidOrigins=[],i.initializePromise=void 0,i.isFramelessWindow=!1,i.frameContext=void 0,i.hostClientType=void 0,i.printCapabilityEnabled=!1;export{i as GlobalVars};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass, ObjDefineProperty, ObjHasOwnProperty, ObjProto, strShimFunction, strShimObject, strShimPrototype, strShimUndefined, throwTypeError } from \"@microsoft/applicationinsights-shims\";\r\nimport { _DYN_APPLY, _DYN_CALL, _DYN_INDEX_OF, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minfication\r\nvar strToISOString = \"toISOString\";\r\nvar cStrEndsWith = \"endsWith\";\r\nvar cStrStartsWith = \"startsWith\";\r\nvar strIndexOf = \"indexOf\";\r\nvar strMap = \"map\";\r\nvar strReduce = \"reduce\";\r\nvar cStrTrim = \"trim\";\r\nvar strToString = \"toString\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n  * Constant string defined to support minimization\r\n  * @ignore\r\n  */\r\nvar strConstructor = \"constructor\";\r\nvar _objDefineProperty = ObjDefineProperty;\r\nvar _objFreeze = ObjClass.freeze;\r\nvar _objSeal = ObjClass.seal;\r\nvar _objKeys = ObjClass.keys;\r\nvar StringProto = String[strShimPrototype];\r\nvar _strTrim = StringProto[cStrTrim];\r\nvar _strEndsWith = StringProto[cStrEndsWith];\r\nvar _strStartsWith = StringProto[cStrStartsWith];\r\nvar DateProto = Date[strShimPrototype];\r\nvar _dataToISOString = DateProto[strToISOString];\r\nvar _isArray = Array.isArray;\r\nvar _objToString = ObjProto[strToString];\r\nvar _fnToString = ObjHasOwnProperty[strToString];\r\n// Cache what this browser reports as the object function constructor (as a string)\r\nvar _objFunctionString = _fnToString[_DYN_CALL /* @min:%2ecall */](ObjClass);\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Object[\"getPrototypeOf\"];\r\n/**\r\n  * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n  * @ignore\r\n  */\r\nexport function _getObjProto(target) {\r\n    if (target) {\r\n        // This method doesn't existing in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        // target[Constructor] May break if the constructor has been changed or removed\r\n        var newProto = target[str__Proto] || target[strShimPrototype] || target[strConstructor];\r\n        if (newProto) {\r\n            return newProto;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function objToString(obj) {\r\n    return _objToString[_DYN_CALL /* @min:%2ecall */](obj);\r\n}\r\nexport function isTypeof(value, theType) {\r\n    return typeof value === theType;\r\n}\r\nexport function isUndefined(value) {\r\n    return value === undefined || typeof value === strShimUndefined;\r\n}\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNullOrUndefined(value) {\r\n    return (value === null || isUndefined(value));\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\nexport function hasOwnProperty(obj, prop) {\r\n    return !!(obj && ObjHasOwnProperty[_DYN_CALL /* @min:%2ecall */](obj, prop));\r\n}\r\nexport function isObject(value) {\r\n    // Changing to inline for performance\r\n    return !!(value && typeof value === strShimObject);\r\n}\r\nexport function isFunction(value) {\r\n    // Changing to inline for performance\r\n    return !!(value && typeof value === strShimFunction);\r\n}\r\nexport function isPromiseLike(value) {\r\n    return value && isFunction(value.then);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is a helper function for the equivalent of arForEach(objKeys(target), callbackFn), this is a\r\n * performance optimization to avoid the creation of a new array for large objects\r\n * @param target The target object to find and process the keys\r\n * @param callbackfn The function to call with the details\r\n */\r\nexport function objForEachKey(target, callbackfn) {\r\n    if (target) {\r\n        for (var prop in target) {\r\n            if (ObjHasOwnProperty[_DYN_CALL /* @min:%2ecall */](target, prop)) {\r\n                callbackfn[_DYN_CALL /* @min:%2ecall */](target, prop, target[prop]);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    var result = false;\r\n    if (value && search && !(result = value === search)) {\r\n        // For Performance try and use the native instance, using string lookup of the function to easily pass the ES3 build checks and minification\r\n        result = _strEndsWith ? value[cStrEndsWith](search) : _strEndsWithPoly(value, search);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * The _strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function _strEndsWithPoly(value, search) {\r\n    var result = false;\r\n    var searchLen = search ? search[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n    var valLen = value ? value[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n    if (searchLen && valLen && valLen >= searchLen && !(result = value === search)) {\r\n        var pos = valLen - 1;\r\n        for (var lp = searchLen - 1; lp >= 0; lp--) {\r\n            if (value[pos] != search[lp]) {\r\n                return false;\r\n            }\r\n            pos--;\r\n        }\r\n        result = true;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * The strStartsWith() method determines whether a string starts with the characters of the specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param checkValue - The characters to be searched for at the start of the value.\r\n * @returns true if the given search value is found at the start of the string, otherwise false.\r\n */\r\nexport function strStartsWith(value, checkValue) {\r\n    var result = false;\r\n    if (value && checkValue && !(result = value === checkValue)) {\r\n        // For Performance try and use the native instance, using string lookup of the function to easily pass the ES3 build checks and minification\r\n        result = _strStartsWith ? value[cStrStartsWith](checkValue) : _strStartsWithPoly(value, checkValue);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * The strStartsWith() method determines whether a string starts with the characters of the specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param checkValue - The characters to be searched for at the start of the value.\r\n * @returns true if the given search value is found at the start of the string, otherwise false.\r\n */\r\nexport function _strStartsWithPoly(value, checkValue) {\r\n    // Using helper for performance and because string startsWith() is not available on IE\r\n    var result = false;\r\n    var chkLen = checkValue ? checkValue[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n    if (value && chkLen && value[_DYN_LENGTH /* @min:%2elength */] >= chkLen && !(result = value === checkValue)) {\r\n        for (var lp = 0; lp < chkLen; lp++) {\r\n            if (value[lp] !== checkValue[lp]) {\r\n                return false;\r\n            }\r\n        }\r\n        result = true;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return value[_DYN_INDEX_OF /* @min:%2eindexOf */](search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Check if an object is of type Date\r\n */\r\nexport function isDate(obj) {\r\n    return !!(obj && _objToString[_DYN_CALL /* @min:%2ecall */](obj) === \"[object Date]\");\r\n}\r\n/**\r\n * Check if an object is of type Array with optional generic T, the generic type is not validated\r\n * and exists to help with TypeScript validation only.\r\n */\r\nexport var isArray = _isArray || _isArrayPoly;\r\nfunction _isArrayPoly(obj) {\r\n    return !!(obj && _objToString[_DYN_CALL /* @min:%2ecall */](obj) === \"[object Array]\");\r\n}\r\n/**\r\n * Check if an object is of type Error\r\n */\r\nexport function isError(obj) {\r\n    return !!(obj && _objToString[_DYN_CALL /* @min:%2ecall */](obj) === \"[object Error]\");\r\n}\r\n/**\r\n * Checks if the type of value is a string.\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a string, false otherwise.\r\n */\r\nexport function isString(value) {\r\n    // Changing to inline for performance\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if the type of value is a number.\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a number, false otherwise.\r\n */\r\nexport function isNumber(value) {\r\n    // Changing to inline for performance\r\n    return typeof value === \"number\";\r\n}\r\n/**\r\n * Checks if the type of value is a boolean.\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a boolean, false otherwise.\r\n */\r\nexport function isBoolean(value) {\r\n    // Changing to inline for performance\r\n    return typeof value === \"boolean\";\r\n}\r\n/**\r\n * Checks if the type of value is a Symbol.\r\n * This only returns a boolean as returning value is Symbol will cause issues for older TypeScript consumers\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a Symbol, false otherwise.\r\n */\r\nexport function isSymbol(value) {\r\n    return typeof value === \"symbol\";\r\n}\r\n/**\r\n * Checks if the type of the value is a normal plain object (not a null or data)\r\n * @param value\r\n */\r\nexport function isPlainObject(value) {\r\n    var result = false;\r\n    if (value && typeof value === \"object\") {\r\n        // Inlining _objGetPrototypeOf for performance to avoid an additional function call\r\n        var proto = _objGetPrototypeOf ? _objGetPrototypeOf(value) : _getObjProto(value);\r\n        if (!proto) {\r\n            // No prototype found so this is a plain Object eg. 'Object.create(null)'\r\n            result = true;\r\n        }\r\n        else {\r\n            // Objects that have a prototype are plain only if they were created using the Object global (native) function\r\n            if (proto[strConstructor] && ObjHasOwnProperty[_DYN_CALL /* @min:%2ecall */](proto, strConstructor)) {\r\n                proto = proto[strConstructor];\r\n            }\r\n            result = typeof proto === strShimFunction && _fnToString[_DYN_CALL /* @min:%2ecall */](proto) === _objFunctionString;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    if (date) {\r\n        // For Performance try and use the native instance, using string lookup of the function to easily pass the ES3 build checks and minification\r\n        return _dataToISOString ? date[strToISOString]() : _toISOStringPoly(date);\r\n    }\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function _toISOStringPoly(date) {\r\n    if (date && date.getUTCFullYear) {\r\n        var pad = function (num) {\r\n            var r = String(num);\r\n            if (r[_DYN_LENGTH /* @min:%2elength */] === 1) {\r\n                r = \"0\" + r;\r\n            }\r\n            return r;\r\n        };\r\n        return date.getUTCFullYear()\r\n            + \"-\" + pad(date.getUTCMonth() + 1)\r\n            + \"-\" + pad(date.getUTCDate())\r\n            + \"T\" + pad(date.getUTCHours())\r\n            + \":\" + pad(date.getUTCMinutes())\r\n            + \":\" + pad(date.getUTCSeconds())\r\n            + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n            + \"Z\";\r\n    }\r\n}\r\n/**\r\n * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers\r\n * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n * cause a testing requirement to test with and without the implementations\r\n * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. It can return -1 to break out of the loop\r\n * @param thisArg  [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n */\r\nexport function arrForEach(arr, callbackfn, thisArg) {\r\n    var len = arr[_DYN_LENGTH /* @min:%2elength */];\r\n    try {\r\n        for (var idx = 0; idx < len; idx++) {\r\n            if (idx in arr) {\r\n                if (callbackfn[_DYN_CALL /* @min:%2ecall */](thisArg || arr, arr[idx], idx, arr) === -1) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n}\r\n/**\r\n * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers\r\n * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n * cause a testing requirement to test with and without the implementations\r\n * @param searchElement The value to locate in the array.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport function arrIndexOf(arr, searchElement, fromIndex) {\r\n    if (arr) {\r\n        // For Performance try and use the native instance, using string lookup of the function to easily pass the ES3 build checks and minification\r\n        if (arr[strIndexOf]) {\r\n            return arr[strIndexOf](searchElement, fromIndex);\r\n        }\r\n        var len = arr[_DYN_LENGTH /* @min:%2elength */];\r\n        var from = fromIndex || 0;\r\n        try {\r\n            for (var lp = Math.max(from >= 0 ? from : len - Math.abs(from), 0); lp < len; lp++) {\r\n                if (lp in arr && arr[lp] === searchElement) {\r\n                    return lp;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists\r\n * to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page\r\n * checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx\r\n * implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n */\r\nexport function arrMap(arr, callbackfn, thisArg) {\r\n    var results;\r\n    if (arr) {\r\n        // For Performance try and use the native instance, using string lookup of the function to easily pass the ES3 build checks and minification\r\n        if (arr[strMap]) {\r\n            return arr[strMap](callbackfn, thisArg);\r\n        }\r\n        var len = arr[_DYN_LENGTH /* @min:%2elength */];\r\n        var _this = thisArg || arr;\r\n        results = new Array(len);\r\n        try {\r\n            for (var lp = 0; lp < len; lp++) {\r\n                if (lp in arr) {\r\n                    results[lp] = callbackfn[_DYN_CALL /* @min:%2ecall */](_this, arr[lp], arr);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is\r\n * provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define\r\n * Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency\r\n * this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n */\r\nexport function arrReduce(arr, callbackfn, initialValue) {\r\n    var value;\r\n    if (arr) {\r\n        // For Performance try and use the native instance, using string lookup of the function to easily pass the ES3 build checks and minification\r\n        if (arr[strReduce]) {\r\n            return arr[strReduce](callbackfn, initialValue);\r\n        }\r\n        var len = arr[_DYN_LENGTH /* @min:%2elength */];\r\n        var lp = 0;\r\n        // Specifically checking the number of passed arguments as the value could be anything\r\n        if (arguments[_DYN_LENGTH /* @min:%2elength */] >= 3) {\r\n            value = arguments[2];\r\n        }\r\n        else {\r\n            while (lp < len && !(lp in arr)) {\r\n                lp++;\r\n            }\r\n            value = arr[lp++];\r\n        }\r\n        while (lp < len) {\r\n            if (lp in arr) {\r\n                value = callbackfn(value, arr[lp], lp, arr);\r\n            }\r\n            lp++;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n */\r\nexport function strTrim(str) {\r\n    if (str) {\r\n        // For Performance try and use the native instance, using string lookup of the function to easily pass the ES3 build checks and minification\r\n        str = (_strTrim && str[cStrTrim]) ? str[cStrTrim]() : (str[_DYN_REPLACE /* @min:%2ereplace */] ? str[_DYN_REPLACE /* @min:%2ereplace */](/^\\s+|(?=\\s)\\s+$/g, STR_EMPTY) : str);\r\n    }\r\n    return str;\r\n}\r\nvar _objKeysHasDontEnumBug = !({ toString: null }).propertyIsEnumerable(\"toString\");\r\nvar _objKeysDontEnums = [\r\n    \"toString\",\r\n    \"toLocaleString\",\r\n    \"valueOf\",\r\n    \"hasOwnProperty\",\r\n    \"isPrototypeOf\",\r\n    \"propertyIsEnumerable\",\r\n    \"constructor\"\r\n];\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers\r\n * that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n */\r\nexport function objKeys(obj) {\r\n    var objType = typeof obj;\r\n    if (objType !== strShimFunction && (objType !== strShimObject || obj === null)) {\r\n        throwTypeError(\"objKeys called on non-object\");\r\n    }\r\n    // For Performance try and use the native instance, using string lookup of the function to easily pass the ES3 build checks and minification\r\n    if (!_objKeysHasDontEnumBug && _objKeys) {\r\n        return _objKeys(obj);\r\n    }\r\n    var result = [];\r\n    for (var prop in obj) {\r\n        if (obj && ObjHasOwnProperty[_DYN_CALL /* @min:%2ecall */](obj, prop)) {\r\n            result[_DYN_PUSH /* @min:%2epush */](prop);\r\n        }\r\n    }\r\n    if (_objKeysHasDontEnumBug) {\r\n        var dontEnumsLength = _objKeysDontEnums[_DYN_LENGTH /* @min:%2elength */];\r\n        for (var lp = 0; lp < dontEnumsLength; lp++) {\r\n            if (obj && ObjHasOwnProperty[_DYN_CALL /* @min:%2ecall */](obj, _objKeysDontEnums[lp])) {\r\n                result[_DYN_PUSH /* @min:%2epush */](_objKeysDontEnums[lp]);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with\r\n * existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded\r\n * and executed in an ES3 container, providing basic IE8 compatibility.\r\n * @param target The object on which to define the property.\r\n * @param prop The name of the property to be defined or modified.\r\n * @param getProp The getter function to wire against the getter.\r\n * @param setProp The setter function to wire against the setter.\r\n * @returns True if it was able to create the accessors otherwise false\r\n */\r\nexport function objDefineAccessors(target, prop, getProp, setProp) {\r\n    if (_objDefineProperty) {\r\n        try {\r\n            var descriptor = {\r\n                enumerable: true,\r\n                configurable: true\r\n            };\r\n            if (getProp) {\r\n                descriptor.get = getProp;\r\n            }\r\n            if (setProp) {\r\n                descriptor.set = setProp;\r\n            }\r\n            _objDefineProperty(target, prop, descriptor);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            // IE8 Defines a defineProperty on Object but it's only supported for DOM elements so it will throw\r\n            // We will just ignore this here.\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction _doNothing(value) {\r\n    return value;\r\n}\r\nexport function deepFreeze(obj) {\r\n    if (_objFreeze) {\r\n        objForEachKey(obj, function (name, value) {\r\n            if (isArray(value) || isObject(value)) {\r\n                _objFreeze(value);\r\n            }\r\n        });\r\n    }\r\n    return objFreeze(obj);\r\n}\r\nexport var objFreeze = _objFreeze || _doNothing;\r\nexport var objSeal = _objSeal || _doNothing;\r\n/**\r\n * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less)\r\n * https://caniuse.com/#search=Date.now\r\n */\r\nexport function dateNow() {\r\n    var dt = Date;\r\n    return dt.now ? dt.now() : new dt().getTime();\r\n}\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Get the mapped config value, if null or undefined any supplied defaultValue will be returned.\r\n * @param field - The name of the field as the named enum value (number) or the string name.\r\n * @param defaultValue - The default value to return if the config field is not present, null or undefined.\r\n */\r\nexport function getCfgValue(theValue, defaultValue) {\r\n    return !isNullOrUndefined(theValue) ? theValue : defaultValue;\r\n}\r\nexport function isNotTruthy(value) {\r\n    return !value;\r\n}\r\nexport function isTruthy(value) {\r\n    return !!value;\r\n}\r\nexport function throwError(message) {\r\n    throw new Error(message);\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (hasOwnProperty(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    if (!objDefineAccessors(target, field, function () {\r\n                        return source[field];\r\n                    }, function (theValue) {\r\n                        source[field] = theValue;\r\n                    })) {\r\n                        // Unable to create an accessor, so just assign the values as a fallback\r\n                        // -- this will (mostly) work for objects\r\n                        // -- but will fail for accessing primitives (if the source changes it) and all types of \"setters\" as the source won't be modified\r\n                        target[field] = value;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this_1 = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this_1[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && (ObjHasOwnProperty[_DYN_CALL /* @min:%2ecall */](arg, prop)));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * 1DS JS SDK Core, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_DEFAULT_ENDPOINT_URL = \"https://browser.events.data.microsoft.com/OneCollector/1.0/\";\r\nexport var STR_PLUGIN_VERSION_STRING = \"pluginVersionString\";\r\nexport var STR_PLUGIN_VERSION_STRING_ARR = STR_PLUGIN_VERSION_STRING + \"Arr\";\r\nexport var STR_VERSION = \"version\";\r\nexport var STR_PROPERTIES = \"properties\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 8\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 3\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_PUSH = \"push\"; // Count: 30\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_CONFIG = \"config\"; // Count: 7\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 3\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 9\r\nexport var _DYN_LENGTH = \"length\"; // Count: 43\r\nexport var _DYN_TIME = \"time\"; // Count: 5\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 21\r\nexport var _DYN_GET_PROCESS_TEL_CONT0 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 5\r\nexport var _DYN_REMOVE_NOTIFICATION_2 = \"removeNotificationListener\"; // Count: 5\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 4\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 5\r\nexport var _DYN_FLUSH = \"flush\"; // Count: 5\r\nexport var _DYN__EXTENSIONS = \"_extensions\"; // Count: 4\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 6\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 10\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 7\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 4\r\nexport var _DYN_UPDATE = \"update\"; // Count: 7\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 8\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 6\r\nexport var _DYN_COOKIE_CFG = \"cookieCfg\"; // Count: 3\r\nexport var _DYN_INDEX_OF = \"indexOf\"; // Count: 6\r\nexport var _DYN_SUBSTRING = \"substring\"; // Count: 10\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 5\r\nexport var _DYN_SET_ENABLED = \"setEnabled\"; // Count: 5\r\nexport var _DYN_SUBSTR = \"substr\"; // Count: 6\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_APPLY = \"apply\"; // Count: 6\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 10\r\nexport var _DYN_ENABLE_DEBUG_EXCEPTI4 = \"enableDebugExceptions\"; // Count: 2\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 5\r\nexport var _DYN_CALL = \"call\"; // Count: 18\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_LISTENERS = \"listeners\"; // Count: 6\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_VERSION = \"version\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","const o=\"2.30.0\";export{o as version};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strShimFunction, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { _DYN_APPLY, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SPLICE } from \"../__DynamicConstants\";\r\nimport { getGlobalInst } from \"./EnvUtils\";\r\nimport { _getObjProto, hasOwnProperty } from \"./HelperFuncs\";\r\nvar aiInstrumentHooks = \"_aiHooks\";\r\nvar cbNames = [\r\n    \"req\", \"rsp\", \"hkErr\", \"fnErr\"\r\n];\r\n/** @ignore */\r\nfunction _arrLoop(arr, fn) {\r\n    if (arr) {\r\n        for (var lp = 0; lp < arr[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            if (fn(arr[lp], lp)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _doCallbacks(hooks, callDetails, cbArgs, hookCtx, type) {\r\n    if (type >= 0 /* CallbackType.Request */ && type <= 2 /* CallbackType.HookError */) {\r\n        _arrLoop(hooks, function (hook, idx) {\r\n            var cbks = hook.cbks;\r\n            var cb = cbks[cbNames[type]];\r\n            if (cb) {\r\n                // Set the specific hook context implementation using a lazy creation pattern\r\n                callDetails.ctx = function () {\r\n                    var ctx = hookCtx[idx] = (hookCtx[idx] || {});\r\n                    return ctx;\r\n                };\r\n                try {\r\n                    cb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                }\r\n                catch (err) {\r\n                    var orgEx = callDetails.err;\r\n                    try {\r\n                        // Report Hook error via the callback\r\n                        var hookErrorCb = cbks[cbNames[2 /* CallbackType.HookError */]];\r\n                        if (hookErrorCb) {\r\n                            callDetails.err = err;\r\n                            hookErrorCb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Not much we can do here -- swallowing the exception to avoid crashing the hosting app\r\n                    }\r\n                    finally {\r\n                        // restore the original exception (if any)\r\n                        callDetails.err = orgEx;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _createFunctionHook(aiHook) {\r\n    // Define a temporary method that queues-up a the real method call\r\n    return function () {\r\n        var _a;\r\n        var funcThis = this;\r\n        // Capture the original arguments passed to the method\r\n        var orgArgs = arguments;\r\n        var hooks = aiHook.h;\r\n        var funcArgs = (_a = {},\r\n            _a[_DYN_NAME /* @min:name */] = aiHook.n,\r\n            _a.inst = funcThis,\r\n            _a.ctx = null,\r\n            _a.set = _replaceArg,\r\n            _a);\r\n        var hookCtx = [];\r\n        var cbArgs = _createArgs([funcArgs], orgArgs);\r\n        funcArgs.evt = getGlobalInst(\"event\");\r\n        function _createArgs(target, theArgs) {\r\n            _arrLoop(theArgs, function (arg) {\r\n                target[_DYN_PUSH /* @min:%2epush */](arg);\r\n            });\r\n            return target;\r\n        }\r\n        function _replaceArg(idx, value) {\r\n            orgArgs = _createArgs([], orgArgs);\r\n            orgArgs[idx] = value;\r\n            cbArgs = _createArgs([funcArgs], orgArgs);\r\n        }\r\n        // Call the pre-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 0 /* CallbackType.Request */);\r\n        // Call the original function was called\r\n        var theFunc = aiHook.f;\r\n        if (theFunc) {\r\n            try {\r\n                funcArgs.rslt = theFunc[_DYN_APPLY /* @min:%2eapply */](funcThis, orgArgs);\r\n            }\r\n            catch (err) {\r\n                // Report the request callback\r\n                funcArgs.err = err;\r\n                _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 3 /* CallbackType.FunctionError */);\r\n                // rethrow the original exception so anyone listening for it can catch the exception\r\n                throw err;\r\n            }\r\n        }\r\n        // Call the post-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 1 /* CallbackType.Response */);\r\n        return funcArgs.rslt;\r\n    };\r\n}\r\n/** @ignore */\r\nfunction _getOwner(target, name, checkPrototype, checkParentProto) {\r\n    var owner = null;\r\n    if (target) {\r\n        if (hasOwnProperty(target, name)) {\r\n            owner = target;\r\n        }\r\n        else if (checkPrototype) {\r\n            owner = _getOwner(_getObjProto(target), name, checkParentProto, false);\r\n        }\r\n    }\r\n    return owner;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProto(target, funcName, callbacks) {\r\n    if (target) {\r\n        return InstrumentFunc(target[strShimPrototype], funcName, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProtos(target, funcNames, callbacks) {\r\n    if (target) {\r\n        return InstrumentFuncs(target[strShimPrototype], funcNames, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\nfunction _createInstrumentHook(owner, funcName, fn, callbacks) {\r\n    var aiHook = fn && fn[aiInstrumentHooks];\r\n    if (!aiHook) {\r\n        // Only hook the function once\r\n        aiHook = {\r\n            i: 0,\r\n            n: funcName,\r\n            f: fn,\r\n            h: []\r\n        };\r\n        // Override (hook) the original function\r\n        var newFunc = _createFunctionHook(aiHook);\r\n        newFunc[aiInstrumentHooks] = aiHook; // Tag and store the function hooks\r\n        owner[funcName] = newFunc;\r\n    }\r\n    var theHook = {\r\n        // tslint:disable:object-literal-shorthand\r\n        id: aiHook.i,\r\n        cbks: callbacks,\r\n        rm: function () {\r\n            // DO NOT Use () => { shorthand for the function as the this gets replaced\r\n            // with the outer this and not the this for theHook instance.\r\n            var id = this.id;\r\n            _arrLoop(aiHook.h, function (hook, idx) {\r\n                if (hook.id === id) {\r\n                    aiHook.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return 1;\r\n                }\r\n            });\r\n        }\r\n        // tslint:enable:object-literal-shorthand\r\n    };\r\n    aiHook.i++;\r\n    aiHook.h[_DYN_PUSH /* @min:%2epush */](theHook);\r\n    return theHook;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    if (target && funcName && callbacks) {\r\n        var owner = _getOwner(target, funcName, checkPrototype, checkParentProto);\r\n        if (owner) {\r\n            var fn = owner[funcName];\r\n            if (typeof fn === strShimFunction) {\r\n                return _createInstrumentHook(owner, funcName, fn, callbacks);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFuncs(target, funcNames, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    var hooks = null;\r\n    _arrLoop(funcNames, function (funcName) {\r\n        var hook = InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto);\r\n        if (hook) {\r\n            if (!hooks) {\r\n                hooks = [];\r\n            }\r\n            hooks[_DYN_PUSH /* @min:%2epush */](hook);\r\n        }\r\n    });\r\n    return hooks;\r\n}\r\n/**\r\n * Add an instrumentation hook to the provided named \"event\" for the target class / object, this doesn't check whether the\r\n * named \"event\" is in fact a function and just assigns the instrumentation hook to the target[evtName]\r\n * @param target - The target object\r\n * @param evtName - The name of the event\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentEvent(target, evtName, callbacks, checkPrototype, checkParentProto) {\r\n    if (target && evtName && callbacks) {\r\n        var owner = _getOwner(target, evtName, checkPrototype, checkParentProto) || target;\r\n        if (owner) {\r\n            return _createInstrumentHook(owner, evtName, owner[evtName], callbacks);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=InstrumentHooks.js.map","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n * Real Time profile (default profile). RealTime Latency events are sent every 1 sec and\r\n * Normal Latency events are sent every 2 sec.\r\n */\r\nexport var RT_PROFILE = \"REAL_TIME\";\r\n/**\r\n * Near Real Time profile. RealTime Latency events are sent every 3 sec and\r\n * Normal Latency events are sent every 6 sec.\r\n */\r\nexport var NRT_PROFILE = \"NEAR_REAL_TIME\";\r\n/**\r\n * Best Effort. RealTime Latency events are sent every 9 sec and\r\n * Normal Latency events are sent every 18 sec.\r\n */\r\nexport var BE_PROFILE = \"BEST_EFFORT\";\r\n//# sourceMappingURL=DataModels.js.map","var o=[\"teams.microsoft.com\",\"teams.microsoft.us\",\"gov.teams.microsoft.us\",\"dod.teams.microsoft.us\",\"int.teams.microsoft.com\",\"outlook.office.com\",\"outlook-sdf.office.com\",\"outlook.office365.com\",\"outlook-sdf.office365.com\",\"outlook.live.com\",\"outlook-sdf.live.com\",\"teams.live.com\",\"local.teams.live.com\",\"local.teams.live.com:8080\",\"local.teams.office.com\",\"local.teams.office.com:8080\",\"devspaces.skype.com\",\"*.www.office.com\",\"www.office.com\",\"word.office.com\",\"excel.office.com\",\"powerpoint.office.com\",\"www.officeppe.com\",\"*.www.microsoft365.com\",\"www.microsoft365.com\",\"bing.com\",\"edgeservices.bing.com\",\"work.bing.com\",\"www.bing.com\",\"www.staging-bing-int.com\",\"*.cloud.microsoft\",\"*.m365.cloud.microsoft\",\"chatuxmanager.svc.cloud.microsoft\",\"copilot.microsoft.com\",\"windows.msn.com\",\"fa000000125.resources.office.net\",\"fa000000129.resources.office.net\",\"fa000000124.resources.office.net\",\"fa000000128.resources.office.net\",\"fa000000136.resources.office.net\"],c={validOrigins:o};export{c as default,o as validOrigins};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport * from './telemetryClients.types';\nexport * from './telemetryClients';\n//# sourceMappingURL=index.js.map","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* ClockSkewManager.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\n/**\r\n* Class to manage clock skew correction.\r\n*/\r\nvar ClockSkewManager = /** @class */ (function () {\r\n    function ClockSkewManager() {\r\n        var _allowRequestSending = true;\r\n        var _shouldAddClockSkewHeaders = true;\r\n        var _isFirstRequest = true;\r\n        var _clockSkewHeaderValue = \"use-collector-delta\";\r\n        var _clockSkewSet = false;\r\n        dynamicProto(ClockSkewManager, this, function (_self) {\r\n            /**\r\n             * Determine if requests can be sent.\r\n             * @returns True if requests can be sent, false otherwise.\r\n             */\r\n            _self.allowRequestSending = function () {\r\n                return _allowRequestSending;\r\n            };\r\n            /**\r\n             * Tells the ClockSkewManager that it should assume that the first request has now been sent,\r\n             * If this method had not yet been called AND the clock Skew had not been set this will set\r\n             * allowRequestSending to false until setClockSet() is called.\r\n             */\r\n            _self.firstRequestSent = function () {\r\n                if (_isFirstRequest) {\r\n                    _isFirstRequest = false;\r\n                    if (!_clockSkewSet) {\r\n                        // Block sending until we get the first clock Skew\r\n                        _allowRequestSending = false;\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * Determine if clock skew headers should be added to the request.\r\n             * @returns True if clock skew headers should be added, false otherwise.\r\n             */\r\n            _self.shouldAddClockSkewHeaders = function () {\r\n                return _shouldAddClockSkewHeaders;\r\n            };\r\n            /**\r\n             * Gets the clock skew header value.\r\n             * @returns The clock skew header value.\r\n             */\r\n            _self.getClockSkewHeaderValue = function () {\r\n                return _clockSkewHeaderValue;\r\n            };\r\n            /**\r\n             * Sets the clock skew header value. Once clock skew is set this method\r\n             * is no-op.\r\n             * @param timeDeltaInMillis - Time delta to be saved as the clock skew header value.\r\n             */\r\n            _self.setClockSkew = function (timeDeltaInMillis) {\r\n                if (!_clockSkewSet) {\r\n                    if (timeDeltaInMillis) {\r\n                        _clockSkewHeaderValue = timeDeltaInMillis;\r\n                        _shouldAddClockSkewHeaders = true;\r\n                        _clockSkewSet = true;\r\n                    }\r\n                    else {\r\n                        _shouldAddClockSkewHeaders = false;\r\n                    }\r\n                    // Unblock sending\r\n                    _allowRequestSending = true;\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ClockSkewManager.prototype.allowRequestSending.\r\n// Removed Stub for ClockSkewManager.prototype.firstRequestSent.\r\n// Removed Stub for ClockSkewManager.prototype.shouldAddClockSkewHeaders.\r\n// Removed Stub for ClockSkewManager.prototype.getClockSkewHeaderValue.\r\n// Removed Stub for ClockSkewManager.prototype.setClockSkew.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    ClockSkewManager.__ieDyn=1;\n\n    return ClockSkewManager;\r\n}());\r\nexport default ClockSkewManager;\r\n//# sourceMappingURL=ClockSkewManager.js.map","var t;t=\"function\"==typeof Object.create?function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:function(t,e){t.super_=e;var o=function(){};o.prototype=e.prototype,t.prototype=new o,t.prototype.constructor=t};export{t as default};\n","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// \r\nimport { _DYN_CONFIG, _DYN_CREATE_NEW, _DYN_FLUSH, _DYN_IDENTIFIER, _DYN_LENGTH, _DYN_ON_COMPLETE, _DYN_PROCESS_NEXT, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { arrForEach, isArray, objFreeze, throwError } from \"./HelperFuncs\";\r\nimport { STR_PRIORITY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { initializePlugins } from \"./TelemetryHelpers\";\r\nexport var ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority - \";\r\nfunction _addChannelQueue(channelQueue, queue, core) {\r\n    if (queue && isArray(queue) && queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        queue = queue.sort(function (a, b) {\r\n            return a[STR_PRIORITY /* @min:%2epriority */] - b[STR_PRIORITY /* @min:%2epriority */];\r\n        });\r\n        arrForEach(queue, function (queueItem) {\r\n            if (queueItem[STR_PRIORITY /* @min:%2epriority */] < ChannelControllerPriority) {\r\n                throwError(ChannelValidationMessage + queueItem[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n            }\r\n        });\r\n        channelQueue[_DYN_PUSH /* @min:%2epush */]({\r\n            queue: objFreeze(queue),\r\n            chain: createTelemetryProxyChain(queue, core[_DYN_CONFIG /* @min:%2econfig */], core)\r\n        });\r\n    }\r\n}\r\nexport function createChannelControllerPlugin(channelQueue, core) {\r\n    function _getTelCtx() {\r\n        return createProcessTelemetryContext(null, core[_DYN_CONFIG /* @min:%2econfig */], core, null);\r\n    }\r\n    function _processChannelQueue(theChannels, itemCtx, processFn, onComplete) {\r\n        var waiting = theChannels ? (theChannels[_DYN_LENGTH /* @min:%2elength */] + 1) : 1;\r\n        function _runChainOnComplete() {\r\n            waiting--;\r\n            if (waiting === 0) {\r\n                onComplete && onComplete();\r\n                onComplete = null;\r\n            }\r\n        }\r\n        if (waiting > 0) {\r\n            arrForEach(theChannels, function (channels) {\r\n                // pass on to first item in queue\r\n                if (channels && channels.queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var channelChain = channels.chain;\r\n                    var chainCtx = itemCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](channelChain);\r\n                    chainCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_runChainOnComplete);\r\n                    // Cause this chain to start processing\r\n                    processFn(chainCtx);\r\n                }\r\n                else {\r\n                    waiting--;\r\n                }\r\n            });\r\n        }\r\n        _runChainOnComplete();\r\n    }\r\n    function _doUpdate(updateCtx, updateState) {\r\n        var theUpdateState = updateState || {\r\n            reason: 0 /* TelemetryUpdateReason.Unknown */\r\n        };\r\n        _processChannelQueue(channelQueue, updateCtx, function (chainCtx) {\r\n            chainCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUpdateState);\r\n        }, function () {\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUpdateState);\r\n        });\r\n        return true;\r\n    }\r\n    function _doTeardown(unloadCtx, unloadState) {\r\n        var theUnloadState = unloadState || {\r\n            reason: 0 /* TelemetryUnloadReason.ManualTeardown */,\r\n            isAsync: false\r\n        };\r\n        _processChannelQueue(channelQueue, unloadCtx, function (chainCtx) {\r\n            chainCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n        }, function () {\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n            isInitialized = false;\r\n        });\r\n        return true;\r\n    }\r\n    function _getChannel(pluginIdentifier) {\r\n        var thePlugin = null;\r\n        if (channelQueue && channelQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            arrForEach(channelQueue, function (channels) {\r\n                // pass on to first item in queue\r\n                if (channels && channels.queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(channels.queue, function (ext) {\r\n                        if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier) {\r\n                            thePlugin = ext;\r\n                            // Cause arrForEach to stop iterating\r\n                            return -1;\r\n                        }\r\n                    });\r\n                    if (thePlugin) {\r\n                        // Cause arrForEach to stop iterating\r\n                        return -1;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return thePlugin;\r\n    }\r\n    var isInitialized = false;\r\n    var channelController = {\r\n        identifier: \"ChannelControllerPlugin\",\r\n        priority: ChannelControllerPriority,\r\n        initialize: function (config, core, extensions, pluginChain) {\r\n            isInitialized = true;\r\n            arrForEach(channelQueue, function (channels) {\r\n                if (channels && channels.queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    initializePlugins(createProcessTelemetryContext(channels.chain, config, core), extensions);\r\n                }\r\n            });\r\n        },\r\n        isInitialized: function () {\r\n            return isInitialized;\r\n        },\r\n        processTelemetry: function (item, itemCtx) {\r\n            _processChannelQueue(channelQueue, itemCtx || _getTelCtx(), function (chainCtx) {\r\n                chainCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item);\r\n            }, function () {\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item);\r\n            });\r\n        },\r\n        update: _doUpdate,\r\n        pause: function () {\r\n            _processChannelQueue(channelQueue, _getTelCtx(), function (chainCtx) {\r\n                chainCtx.iterate(function (plugin) {\r\n                    plugin.pause && plugin.pause();\r\n                });\r\n            }, null);\r\n        },\r\n        resume: function () {\r\n            _processChannelQueue(channelQueue, _getTelCtx(), function (chainCtx) {\r\n                chainCtx.iterate(function (plugin) {\r\n                    plugin.resume && plugin.resume();\r\n                });\r\n            }, null);\r\n        },\r\n        teardown: _doTeardown,\r\n        getChannel: _getChannel,\r\n        flush: function (isAsync, callBack, sendReason, cbTimeout) {\r\n            // Setting waiting to one so that we don't call the callBack until we finish iterating\r\n            var waiting = 1;\r\n            var doneIterating = false;\r\n            var cbTimer = null;\r\n            cbTimeout = cbTimeout || 5000;\r\n            function doCallback() {\r\n                waiting--;\r\n                if (doneIterating && waiting === 0) {\r\n                    if (cbTimer) {\r\n                        clearTimeout(cbTimer);\r\n                        cbTimer = null;\r\n                    }\r\n                    callBack && callBack(doneIterating);\r\n                    callBack = null;\r\n                }\r\n            }\r\n            _processChannelQueue(channelQueue, _getTelCtx(), function (chainCtx) {\r\n                chainCtx.iterate(function (plugin) {\r\n                    if (plugin[_DYN_FLUSH /* @min:%2eflush */]) {\r\n                        waiting++;\r\n                        var handled_1 = false;\r\n                        // Not all channels will call this callback for every scenario\r\n                        if (!plugin[_DYN_FLUSH /* @min:%2eflush */](isAsync, function () {\r\n                            handled_1 = true;\r\n                            doCallback();\r\n                        }, sendReason)) {\r\n                            if (!handled_1) {\r\n                                // If any channel doesn't return true and it didn't call the callback, then we should assume that the callback\r\n                                // will never be called, so use a timeout to allow the channel(s) some time to \"finish\" before triggering any\r\n                                // followup function (such as unloading)\r\n                                if (isAsync && cbTimer == null) {\r\n                                    cbTimer = setTimeout(function () {\r\n                                        cbTimer = null;\r\n                                        doCallback();\r\n                                    }, cbTimeout);\r\n                                }\r\n                                else {\r\n                                    doCallback();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }, function () {\r\n                doneIterating = true;\r\n                doCallback();\r\n            });\r\n            return true;\r\n        },\r\n        _setQueue: function (queue) {\r\n            channelQueue = queue;\r\n        }\r\n    };\r\n    return channelController;\r\n}\r\nexport function createChannelQueues(channels, extensions, core) {\r\n    var channelQueue = [];\r\n    if (channels) {\r\n        // Add and sort the configuration channel queues\r\n        arrForEach(channels, function (queue) { return _addChannelQueue(channelQueue, queue, core); });\r\n    }\r\n    if (extensions) {\r\n        // Create a new channel queue for any extensions with a priority > the ChannelControllerPriority\r\n        var extensionQueue_1 = [];\r\n        arrForEach(extensions, function (plugin) {\r\n            if (plugin[STR_PRIORITY /* @min:%2epriority */] > ChannelControllerPriority) {\r\n                extensionQueue_1[_DYN_PUSH /* @min:%2epush */](plugin);\r\n            }\r\n        });\r\n        _addChannelQueue(channelQueue, extensionQueue_1, core);\r\n    }\r\n    return channelQueue;\r\n}\r\n//# sourceMappingURL=ChannelController.js.map","import e from\"./_polyfill-node.global.js\";function t(){throw new Error(\"setTimeout has not been defined\")}function r(){throw new Error(\"clearTimeout has not been defined\")}var n=t,o=r;function i(e){if(n===setTimeout)return setTimeout(e,0);if((n===t||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}\"function\"==typeof e.setTimeout&&(n=setTimeout),\"function\"==typeof e.clearTimeout&&(o=clearTimeout);var u,a=[],c=!1,l=-1;function f(){c&&u&&(c=!1,u.length?a=u.concat(a):l=-1,a.length&&s())}function s(){if(!c){var e=i(f);c=!0;for(var t=a.length;t;){for(u=a,a=[];++l<t;)u&&u[l].run();l=-1,t=a.length}u=null,c=!1,function(e){if(o===clearTimeout)return clearTimeout(e);if((o===r||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(e);try{return o(e)}catch(t){try{return o.call(null,e)}catch(t){return o.call(this,e)}}}(e)}}function h(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];a.push(new m(e,t)),1!==a.length||c||i(s)}function m(e,t){this.fun=e,this.array=t}m.prototype.run=function(){this.fun.apply(null,this.array)};var w=\"browser\",p=\"browser\",v=!0,T={},d=[],g=\"\",y={},b={},E={};function N(){}var k=N,D=N,L=N,x=N,A=N,M=N,j=N;function z(e){throw new Error(\"process.binding is not supported\")}function _(){return\"/\"}function q(e){throw new Error(\"process.chdir is not supported\")}function B(){return 0}var C=e.performance||{},F=C.now||C.mozNow||C.msNow||C.oNow||C.webkitNow||function(){return(new Date).getTime()};function G(e){var t=.001*F.call(C),r=Math.floor(t),n=Math.floor(t%1*1e9);return e&&(r-=e[0],(n-=e[1])<0&&(r--,n+=1e9)),[r,n]}var H=new Date;function I(){return(new Date-H)/1e3}var J={nextTick:h,title:w,browser:v,env:T,argv:d,version:\"\",versions:y,on:k,addListener:D,once:L,off:x,removeListener:A,removeAllListeners:M,emit:j,binding:z,cwd:_,chdir:q,umask:B,hrtime:G,platform:p,release:b,config:E,uptime:I};export{D as addListener,d as argv,z as binding,v as browser,q as chdir,E as config,_ as cwd,J as default,j as emit,T as env,G as hrtime,h as nextTick,x as off,k as on,L as once,p as platform,b as release,M as removeAllListeners,A as removeListener,w as title,B as umask,I as uptime,g as version,y as versions};\n","import{__rest as i}from\"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.0_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";import{UUID as t}from\"./uuidObject.js\";const s=t=>{const{uuid:s}=t,u=i(t,[\"uuid\"]),n=null==s?void 0:s.toString();return Object.assign(Object.assign({},u),{uuidAsString:n})},u=s=>{const{uuidAsString:u}=s,n=i(s,[\"uuidAsString\"]);return Object.assign(Object.assign({},n),{uuid:u?new t(u):void 0})},n=s=>{const{uuidAsString:u}=s,n=i(s,[\"uuidAsString\"]);return Object.assign(Object.assign({},n),{uuid:u?new t(u):void 0})},r=t=>{const{uuid:s}=t,u=i(t,[\"uuid\"]),n=null==s?void 0:s.toString();return Object.assign(Object.assign({},u),{uuidAsString:n})};export{u as deserializeMessageRequest,n as deserializeMessageResponse,s as serializeMessageRequest,r as serializeMessageResponse};\n","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Sdk.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { getCookieValue, newGuid, random32, safeGetCookieMgr } from \"@microsoft/1ds-core-js\";\r\nvar DEVICE_ID_COOKIE = \"MicrosoftApplicationsTelemetryDeviceId\";\r\nfunction _saveData(mgr, propertyStorage, name, value) {\r\n    if (propertyStorage) {\r\n        propertyStorage.setProperty(name, value);\r\n    }\r\n    else {\r\n        // Expires in 365 days (365 * 24 * 60 * 60)\r\n        mgr.set(name, value, 31536000);\r\n    }\r\n}\r\nfunction _getData(mgr, propertyStorage, name) {\r\n    if (propertyStorage) {\r\n        return propertyStorage.getProperty(name) || \"\";\r\n    }\r\n    return getCookieValue(mgr, name);\r\n}\r\nvar Sdk = /** @class */ (function () {\r\n    function Sdk(coreConfig, core) {\r\n        var _sequenceId = 0;\r\n        dynamicProto(Sdk, this, function (_self) {\r\n            var propertyStorage = coreConfig.propertyStorageOverride;\r\n            // Start sequence\r\n            _self.seq = _sequenceId;\r\n            _self.epoch = random32(false).toString();\r\n            var mgr = safeGetCookieMgr(core, coreConfig);\r\n            if (mgr.isEnabled() || propertyStorage) {\r\n                // Only collect device id if it can be stored\r\n                var deviceId = _getData(mgr, propertyStorage, DEVICE_ID_COOKIE);\r\n                if (!deviceId) {\r\n                    deviceId = newGuid();\r\n                }\r\n                _saveData(mgr, propertyStorage, DEVICE_ID_COOKIE, deviceId);\r\n                _self.installId = deviceId;\r\n            }\r\n            else {\r\n                mgr.purge(DEVICE_ID_COOKIE);\r\n            }\r\n            _self.getSequenceId = function () {\r\n                return ++_sequenceId;\r\n            };\r\n        });\r\n    }\r\n    // Get seq value\r\n// Removed Stub for Sdk.prototype.getSequenceId.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    Sdk.__ieDyn=1;\n\n    return Sdk;\r\n}());\r\nexport { Sdk };\r\n//# sourceMappingURL=Sdk.js.map","import{teamsDeepLinkProtocol as n,teamsDeepLinkHost as o}from\"./constants.js\";import{teamsDeepLinkUsersUrlParameterName as e,teamsDeepLinkUrlPathForChat as t,teamsDeepLinkUrlPathForCall as $,teamsDeepLinkAttendeesUrlParameterName as i,teamsDeepLinkUrlPathForCalendar as r,teamsDeepLinkUrlPathForAppInstall as d,teamsDeepLinkTopicUrlParameterName as p,teamsDeepLinkMessageUrlParameterName as c,teamsDeepLinkWithVideoUrlParameterName as a,teamsDeepLinkSourceUrlParameterName as m,teamsDeepLinkStartTimeUrlParameterName as s,teamsDeepLinkEndTimeUrlParameterName as C,teamsDeepLinkSubjectUrlParameterName as I,teamsDeepLinkContentUrlParameterName as l}from\"./deepLinkConstants.js\";function u($,i,r){if(0===$.length)throw new Error(\"Must have at least one user when creating a chat deep link\");const d=`${e}=`+$.map((n=>encodeURIComponent(n))).join(\",\"),a=void 0===i?\"\":`&${p}=${encodeURIComponent(i)}`,m=void 0===r?\"\":`&${c}=${encodeURIComponent(r)}`;return`${n}://${o}${t}?${d}${a}${m}`}function R(t,i,r){if(0===t.length)throw new Error(\"Must have at least one target when creating a call deep link\");const d=`${e}=`+t.map((n=>encodeURIComponent(n))).join(\",\"),p=void 0===i?\"\":`&${a}=${encodeURIComponent(i)}`,c=void 0===r?\"\":`&${m}=${encodeURIComponent(r)}`;return`${n}://${o}${$}?${d}${p}${c}`}function U(e,t,$,d,p){const c=void 0===e?\"\":`${i}=`+e.map((n=>encodeURIComponent(n))).join(\",\"),a=void 0===t?\"\":`&${s}=${encodeURIComponent(t)}`,m=void 0===$?\"\":`&${C}=${encodeURIComponent($)}`,u=void 0===d?\"\":`&${I}=${encodeURIComponent(d)}`,R=void 0===p?\"\":`&${l}=${encodeURIComponent(p)}`;return`${n}://${o}${r}?${c}${a}${m}${u}${R}`}function h(e){if(!e)throw new Error(\"App ID must be set when creating an app install dialog deep link\");return`${n}://${o}${d}${encodeURIComponent(e)}`}export{h as createTeamsDeepLinkForAppInstallDialog,U as createTeamsDeepLinkForCalendar,R as createTeamsDeepLinkForCall,u as createTeamsDeepLinkForChat};\n","import{__awaiter as e}from\"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.0_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";import{requestPortFromParentWithVersion as t}from\"../internal/communication.js\";import{ensureInitialized as r}from\"../internal/internalAPIs.js\";import{getLogger as n,getApiVersionTag as o}from\"../internal/telemetry.js\";import{errorNotSupportedOnPlatform as a}from\"../public/constants.js\";import{runtime as s}from\"../public/runtime.js\";var i;!function(i){!function(i){let l;const m=n(\"messageChannels.telemetry\");function u(){var e;return!(!r(s)||!(null===(e=s.supports.messageChannels)||void 0===e?void 0:e.telemetry))}i.getTelemetryPort=function(){return e(this,void 0,void 0,(function*(){if(l)return m(\"Returning telemetry port from cache\"),l;if(!u())throw a;return l=yield t(o(\"v1\",\"messageChannels.telemetry.getTelemetryPort\"),\"messageChannels.telemetry.getTelemetryPort\"),l}))},i.isSupported=u,i._clearTelemetryPort=function(){l=void 0}}(i.telemetry||(i.telemetry={})),function(i){let l;const m=n(\"messageChannels.dataLayer\");function u(){var e;return!(!r(s)||!(null===(e=s.supports.messageChannels)||void 0===e?void 0:e.dataLayer))}i.getDataLayerPort=function(){return e(this,void 0,void 0,(function*(){if(l)return m(\"Returning dataLayer port from cache\"),l;if(!u())throw a;return l=yield t(o(\"v1\",\"messageChannels.dataLayer.getDataLayerPort\"),\"messageChannels.dataLayer.getDataLayerPort\"),l}))},i.isSupported=u,i._clearDataLayerPort=function(){l=void 0}}(i.dataLayer||(i.dataLayer={})),i.isSupported=function(){return!(!r(s)||!s.supports.messageChannels)}}(i||(i={}));export{i as messageChannels};\n","import{Buffer as t}from\"../../../../_virtual/_polyfill-node.buffer.js\";import{minAdaptiveCardVersion as e}from\"../public/constants.js\";import n from\"../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js\";import r from\"../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/validate.js\";function o(t){return(t,e)=>{if(!t)throw new Error(e)}}function i(t,e){if(\"string\"!=typeof t||\"string\"!=typeof e)return NaN;const n=t.split(\".\"),r=e.split(\".\");function o(t){return/^\\d+$/.test(t)}if(!n.every(o)||!r.every(o))return NaN;for(;n.length<r.length;)n.push(\"0\");for(;r.length<n.length;)r.push(\"0\");for(let t=0;t<n.length;++t)if(Number(n[t])!=Number(r[t]))return Number(n[t])>Number(r[t])?1:-1;return 0}function u(){return n()}function c(t){return Object.keys(t).forEach((e=>{null!==t[e]&&void 0!==t[e]&&\"object\"==typeof t[e]&&c(t[e])})),Object.freeze(t)}function s(t,e,...n){const r=t(...n);return r.then((t=>{e&&e(void 0,t)})).catch((t=>{e&&e(t)})),r}function l(t,e,...n){const r=t(...n);return r.then((()=>{e&&e(null)})).catch((t=>{e&&e(t)})),r}function a(t,e,...n){const r=t(...n);return r.then((t=>{e&&e(null,t)})).catch((t=>{e&&e(t,null)})),r}function f(t,e,n){return new Promise(((r,o)=>{const i=setTimeout(o,e,n);t().then((t=>{clearTimeout(i),r(t)})).catch((t=>{clearTimeout(i),o(t)}))}))}function d(t){const e=new URL(\"https://teams.microsoft.com/l/entity/\"+encodeURIComponent(t.appId.toString())+\"/\"+encodeURIComponent(t.pageId));return t.webUrl&&e.searchParams.append(\"webUrl\",t.webUrl.toString()),(t.chatId||t.channelId||t.subPageId)&&e.searchParams.append(\"context\",JSON.stringify({chatId:t.chatId,channelId:t.channelId,subEntityId:t.subPageId})),e.toString()}function h(t){return!(i(`${t.majorVersion}.${t.minorVersion}`,`${e.majorVersion}.${e.minorVersion}`)>=0)}function m(t){return\"https:\"===t.protocol}function p(e,n){return new Promise(((r,o)=>{if(e||o(\"MimeType cannot be null or empty.\"),n||o(\"Base64 string cannot be null or empty.\"),e.startsWith(\"image/\")){const t=atob(n),o=new Uint8Array(t.length);for(let e=0;e<t.length;e++)o[e]=t.charCodeAt(e);r(new Blob([o],{type:e}))}const i=t.from(n,\"base64\").toString();r(new Blob([i],{type:e}))}))}function w(t){return new Promise(((e,n)=>{0===t.size&&n(new Error(\"Blob cannot be empty.\"));const r=new FileReader;r.onloadend=()=>{r.result?e(r.result.toString().split(\",\")[1]):n(new Error(\"Failed to read the blob\"))},r.onerror=()=>{n(r.error)},r.readAsDataURL(t)}))}function b(){if(g())throw new Error(\"window object undefined at SSR check\");return window}function g(){return\"undefined\"==typeof window}function y(t,e){if(U(t)||!function(t){return t.length<256&&t.length>4}(t)||!function(t){for(let e=0;e<t.length;e++){const n=t.charCodeAt(e);if(n<32||n>126)return!1}return!0}(t))throw e||new Error(\"id is not valid.\")}function E(t,e){const n=t.toString().toLocaleLowerCase();if(U(n))throw new Error(\"Invalid Url\");if(n.length>2048)throw new Error(\"Url exceeds the maximum size of 2048 characters\");if(!m(t))throw new Error(\"Url should be a valid https url\")}function I(t){const e=document.createElement(\"a\");return e.href=t,new URL(e.href)}function U(t){return new RegExp(`${/<script[^>]*>|&lt;script[^&]*&gt;|%3Cscript[^%]*%3E/gi.source}|${/<\\/script[^>]*>|&lt;\\/script[^&]*&gt;|%3C\\/script[^%]*%3E/gi.source}`,\"gi\").test(t)}function v(t){if(!t)throw new Error(\"id must not be empty\");if(!1===r(t))throw new Error(\"id must be a valid UUID\")}export{p as base64ToBlob,s as callCallbackWithErrorOrResultFromPromiseAndReturnPromise,a as callCallbackWithErrorOrResultOrNullFromPromiseAndReturnPromise,l as callCallbackWithSdkErrorFromPromiseAndReturnPromise,i as compareSDKVersions,d as createTeamsAppLink,c as deepFreeze,I as fullyQualifyUrlString,u as generateGUID,w as getBase64StringFromBlob,o as getGenericOnCompleteHandler,U as hasScriptTags,g as inServerSideRenderingEnvironment,h as isHostAdaptiveCardSchemaVersionUnsupported,m as isValidHttpsURL,f as runWithTimeout,b as ssrSafeWindow,y as validateId,E as validateUrl,v as validateUuid};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { dateNow } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = 123456789;\r\nvar _mwcZ = 987654321;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (123456789 + seedValue) & MaxUInt32;\r\n    _mwcZ = (987654321 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = dateNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","var e={exports:{}};export{e as __module};\n","import{sendMessageToParent as e}from\"../internal/communication.js\";import{registerHandler as n}from\"../internal/handlers.js\";import{ensureInitialized as t}from\"../internal/internalAPIs.js\";import{getApiVersionTag as s}from\"../internal/telemetry.js\";import{runtime as r}from\"./runtime.js\";import{errorNotSupportedOnPlatform as o}from\"./constants.js\";const i=\"v2\";var u;!function(u){var m,a;(m=u.DisplayMode||(u.DisplayMode={}))[m.ifRoom=0]=\"ifRoom\",m[m.overflowOnly=1]=\"overflowOnly\";let l,c,f;function p(n){f&&f(n)||(t(r),e(s(i,\"menus.handleViewConfigItemPress\"),\"viewConfigItemPress\",[n]))}function M(n){l&&l(n)||(t(r),e(s(i,\"menus.handleNavBarMenuItemPress\"),\"handleNavBarMenuItemPress\",[n]))}function d(n){c&&c(n)||(t(r),e(s(i,\"menus.handleActionMenuItemPress\"),\"handleActionMenuItemPress\",[n]))}function w(){return!(!t(r)||!r.supports.menus)}u.MenuItem=class{constructor(){this.enabled=!0,this.selected=!1}},(a=u.MenuListType||(u.MenuListType={})).dropDown=\"dropDown\",a.popOver=\"popOver\",u.initialize=function(){n(s(i,\"menus.registerNavBarMenuItemPressHandler\"),\"navBarMenuItemPress\",M,!1),n(s(i,\"menus.registerActionMenuItemPressHandler\"),\"actionMenuItemPress\",d,!1),n(s(i,\"menus.registerSetModuleViewHandler\"),\"setModuleView\",p,!1)},u.setUpViews=function(n,u){if(t(r),!w())throw o;f=u,e(s(i,\"menus.setUpViews\"),\"setUpViews\",[n])},u.setNavBarMenu=function(n,u){if(t(r),!w())throw o;l=u,e(s(i,\"menus.setNavBarMenu\"),\"setNavBarMenu\",[n])},u.showActionMenu=function(n,u){if(t(r),!w())throw o;c=u,e(s(i,\"menus.showActionMenu\"),\"showActionMenu\",[n])},u.isSupported=w}(u||(u={}));export{u as menus};\n","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, attachEvent, canUseCookies as coreCanUseCookies, dateNow, deleteCookie as coreDeleteCookie, disableCookies as coreDisableCookies, dumpObj, generateW3CId, getCookie as coreGetCookie, getExceptionName as coreGetExceptionName, getIEVersion, getPerformance, isArray, isBeaconsSupported, isDate, isError, isNullOrUndefined, isValidSpanId, isValidTraceId, newId, random32, setCookie as coreSetCookie, strTrim, toISOString, uaDisallowsSameSiteNone } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nimport { createDomEvent } from \"./DomHelperFuncs\";\r\nimport { getExtensionByName, isCrossOriginError, msToTimeSpan, stringToBoolOrDefault } from \"./HelperFuncs\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { utlCanUseLocalStorage, utlCanUseSessionStorage, utlDisableStorage, utlGetLocalStorage, utlGetSessionStorage, utlGetSessionStorageKeys, utlRemoveSessionStorage, utlRemoveStorage, utlSetLocalStorage, utlSetSessionStorage } from \"./StorageHelperFuncs\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlGetAbsoluteUrl, urlGetCompleteUrl, urlGetPathName, urlParseFullHost, urlParseHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_INDEX_OF, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport var Util = {\r\n    NotSpecified: strNotSpecified,\r\n    createDomEvent: createDomEvent,\r\n    disableStorage: utlDisableStorage,\r\n    isInternalApplicationInsightsEndpoint: isInternalApplicationInsightsEndpoint,\r\n    canUseLocalStorage: utlCanUseLocalStorage,\r\n    getStorage: utlGetLocalStorage,\r\n    setStorage: utlSetLocalStorage,\r\n    removeStorage: utlRemoveStorage,\r\n    canUseSessionStorage: utlCanUseSessionStorage,\r\n    getSessionStorageKeys: utlGetSessionStorageKeys,\r\n    getSessionStorage: utlGetSessionStorage,\r\n    setSessionStorage: utlSetSessionStorage,\r\n    removeSessionStorage: utlRemoveSessionStorage,\r\n    disableCookies: coreDisableCookies,\r\n    canUseCookies: coreCanUseCookies,\r\n    disallowsSameSiteNone: uaDisallowsSameSiteNone,\r\n    setCookie: coreSetCookie,\r\n    stringToBoolOrDefault: stringToBoolOrDefault,\r\n    getCookie: coreGetCookie,\r\n    deleteCookie: coreDeleteCookie,\r\n    trim: strTrim,\r\n    newId: newId,\r\n    random32: function () {\r\n        return random32(true);\r\n    },\r\n    generateW3CId: generateW3CId,\r\n    isArray: isArray,\r\n    isError: isError,\r\n    isDate: isDate,\r\n    toISOStringForIE8: toISOString,\r\n    getIEVersion: getIEVersion,\r\n    msToTimeSpan: msToTimeSpan,\r\n    isCrossOriginError: isCrossOriginError,\r\n    dump: dumpObj,\r\n    getExceptionName: coreGetExceptionName,\r\n    addEventHandler: attachEvent,\r\n    IsBeaconApiSupported: isBeaconsSupported,\r\n    getExtension: getExtensionByName\r\n};\r\nexport var UrlHelper = {\r\n    parseUrl: urlParseUrl,\r\n    getAbsoluteUrl: urlGetAbsoluteUrl,\r\n    getPathName: urlGetPathName,\r\n    getCompleteUrl: urlGetCompleteUrl,\r\n    parseHost: urlParseHost,\r\n    parseFullHost: urlParseFullHost\r\n};\r\nexport var CorrelationIdHelper = {\r\n    correlationIdPrefix: \"cid-v1:\",\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n     * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n     * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n     * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n     * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n     */\r\n    canIncludeCorrelationHeader: function (config, requestUrl, currentHost) {\r\n        if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n            return false;\r\n        }\r\n        if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n            for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        if (requestHost && (requestHost[_DYN_INDEX_OF /* @min:%2eindexOf */](\":443\") !== -1 || requestHost[_DYN_INDEX_OF /* @min:%2eindexOf */](\":80\") !== -1)) {\r\n            // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n            // try and parse it to remove if it matches the default protocol port\r\n            requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        }\r\n        if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            arrForEach(includedDomains, function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n        // Previously we always returned false for a falsy requestHost\r\n        return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n    },\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    getCorrelationContext: function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    getCorrelationContextValue: function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n            for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n                var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n                if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nexport var DateTimeUtils = {\r\n    Now: dateTimeUtilsNow,\r\n    GetDuration: dateTimeUtilsDuration\r\n};\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","import{sendAndHandleStatusAndReason as e,Communication as i,uninitializeCommunication as t,sendAndUnwrap as n,sendMessageToParent as a,initializeCommunication as o}from\"../internal/communication.js\";import{defaultSDKVersionForCompatCheck as r}from\"../internal/constants.js\";import{GlobalVars as s}from\"../internal/globalVars.js\";import{registerOnThemeChangeHandler as l,registerBeforeSuspendOrTerminateHandler as m,registerOnResumeHandler as d,initializeHandlers as p,uninitializeHandlers as c}from\"../internal/handlers.js\";import{ensureInitializeCalled as u,ensureInitialized as f,processAdditionalValidOrigins as g}from\"../internal/internalAPIs.js\";import{getLogger as h,getApiVersionTag as y}from\"../internal/telemetry.js\";import{isNullOrUndefined as S}from\"../internal/typeCheckUtilities.js\";import{inServerSideRenderingEnvironment as I,runWithTimeout as C,compareSDKVersions as w}from\"../internal/utils.js\";import{prefetchOriginsFromCDN as T}from\"../internal/validOrigins.js\";import{messageChannels as v}from\"../private/messageChannels.js\";import{authentication as P}from\"./authentication.js\";import{FrameContexts as z,HostName as j,HostClientType as x}from\"./constants.js\";import{dialog as O}from\"./dialog.js\";import{menus as F}from\"./menus.js\";import{pages as N}from\"./pages.js\";import{runtime as b,applyRuntimeConfig as D,generateVersionBasedTeamsRuntimeConfig as L,mapTeamsVersionToSupportedCapabilities as E,versionAndPlatformAgnosticTeamsRuntimeConfig as A}from\"./runtime.js\";import{version as k}from\"./version.js\";const H=\"v2\",R=h(\"app\");function M(e,i){if(I()){return R.extend(\"initialize\")(\"window object undefined at initialization\"),Promise.resolve()}return C((()=>function(e,i){return new Promise((t=>{s.initializeCalled||(s.initializeCalled=!0,p(),s.initializePromise=o(i,e).then((({context:e,clientType:i,runtimeConfig:t,clientSupportedSDKVersion:n=r})=>{s.frameContext=e,s.hostClientType=i,s.clientSupportedSDKVersion=n;try{W(\"Parsing %s\",t);const e=JSON.parse(t);if(W(\"Checking if %o is a valid runtime object\",null!=e?e:\"null\"),!e||!e.apiVersion)throw new Error(\"Received runtime config is invalid\");t&&D(e)}catch(e){if(!(e instanceof SyntaxError))throw e;try{W(\"Attempting to parse %s as an SDK version\",t),isNaN(w(t,r))||(s.clientSupportedSDKVersion=t);const e=JSON.parse(n);if(W(\"givenRuntimeConfig parsed to %o\",null!=e?e:\"null\"),!e)throw new Error(\"givenRuntimeConfig string was successfully parsed. However, it parsed to value of null\");D(e)}catch(e){if(!(e instanceof SyntaxError))throw e;D(L(s.clientSupportedSDKVersion,A,E))}}s.initializeCompleted=!0})),P.initialize(),F.initialize(),N.config.initialize(),O.initialize()),Array.isArray(i)&&g(i),void 0!==s.initializePromise?t(s.initializePromise):W(\"GlobalVars.initializePromise is unexpectedly undefined\")}))}(e,i)),5e3,new Error(\"SDK initialization timed out.\"))}function V(e){a(e,J.Messages.AppLoaded,[k])}function U(e,i){a(e,J.Messages.ExpectedFailure,[i.reason,i.message])}function K(e,i){a(e,J.Messages.Failure,[i.reason,i.message])}function B(e){a(e,J.Messages.Success,[k])}const W=R.extend(\"initializeHelper\");function _(e,i){!S(i)&&u(),l(e,i)}function G(i,t){return new Promise((n=>{f(b,z.content,z.sidePanel,z.settings,z.task,z.stage,z.meetingStage),n(e(i,\"executeDeepLink\",t))}))}var J;!function(e){const a=h(\"app\");var o,r,l;e.Messages={AppLoaded:\"appInitialization.appLoaded\",Success:\"appInitialization.success\",Failure:\"appInitialization.failure\",ExpectedFailure:\"appInitialization.expectedFailure\"},(o=e.FailedReason||(e.FailedReason={})).AuthFailed=\"AuthFailed\",o.Timeout=\"Timeout\",o.Other=\"Other\",(r=e.ExpectedFailureReason||(e.ExpectedFailureReason={})).PermissionError=\"PermissionError\",r.NotFound=\"NotFound\",r.Throttling=\"Throttling\",r.Offline=\"Offline\",r.Other=\"Other\",e.isInitialized=function(){return s.initializeCompleted},e.getFrameContext=function(){return s.frameContext},a(\"teamsjs instance is version %s, starting at %s UTC (%s local)\",k,(new Date).toISOString(),(new Date).toLocaleString()),function(){if(I())return;const e=document.getElementsByTagName(\"script\"),i=e&&e[e.length-1]&&e[e.length-1].src,t=\"Today, teamsjs can only be used from a single script or you may see undefined behavior. This log line is used to help detect cases where teamsjs is loaded multiple times -- it is always written. The presence of the log itself does not indicate a multi-load situation, but multiples of these log lines will. If you would like to use teamjs from more than one script at the same time, please open an issue at https://github.com/OfficeDev/microsoft-teams-library-js/issues\";i&&0!==i.length?a(\"teamsjs is being used from %s. %s\",i,t):a(\"teamsjs is being used from a script tag embedded directly in your html. %s\",t)}(),e.initialize=function(e){return T(),M(y(H,\"app.initialize\"),e)},e._initialize=function(e){i.currentWindow=e},e._uninitialize=function(){s.initializeCalled&&(c(),s.initializeCalled=!1,s.initializeCompleted=!1,s.initializePromise=void 0,s.additionalValidOrigins=[],s.frameContext=void 0,s.hostClientType=void 0,s.isFramelessWindow=!1,v.telemetry._clearTelemetryPort(),v.dataLayer._clearDataLayerPort(),t())},e.getContext=function(){return new Promise((e=>{u(),e(n(y(H,\"app.getContext\"),\"getContext\"))})).then((e=>function(e){var i;const t={actionInfo:e.actionInfo,app:{locale:e.locale,sessionId:e.appSessionId?e.appSessionId:\"\",theme:e.theme?e.theme:\"default\",iconPositionVertical:e.appIconPosition,osLocaleInfo:e.osLocaleInfo,parentMessageId:e.parentMessageId,userClickTime:e.userClickTime,userFileOpenPreference:e.userFileOpenPreference,host:{name:e.hostName?e.hostName:j.teams,clientType:e.hostClientType?e.hostClientType:x.web,sessionId:e.sessionId?e.sessionId:\"\",ringId:e.ringId},appLaunchId:e.appLaunchId},page:{id:e.entityId,frameContext:e.frameContext?e.frameContext:s.frameContext,subPageId:e.subEntityId,isFullScreen:e.isFullScreen,isMultiWindow:e.isMultiWindow,isBackgroundLoad:e.isBackgroundLoad,sourceOrigin:e.sourceOrigin},user:{id:null!==(i=e.userObjectId)&&void 0!==i?i:\"\",displayName:e.userDisplayName,isCallingAllowed:e.isCallingAllowed,isPSTNCallingAllowed:e.isPSTNCallingAllowed,licenseType:e.userLicenseType,loginHint:e.loginHint,userPrincipalName:e.userPrincipalName,tenant:e.tid?{id:e.tid,teamsSku:e.tenantSKU}:void 0},channel:e.channelId?{id:e.channelId,displayName:e.channelName,relativeUrl:e.channelRelativeUrl,membershipType:e.channelType,defaultOneNoteSectionId:e.defaultOneNoteSectionId,ownerGroupId:e.hostTeamGroupId,ownerTenantId:e.hostTeamTenantId}:void 0,chat:e.chatId?{id:e.chatId}:void 0,meeting:e.meetingId?{id:e.meetingId}:void 0,sharepoint:e.sharepoint,team:e.teamId?{internalId:e.teamId,displayName:e.teamName,type:e.teamType,groupId:e.groupId,templateId:e.teamTemplateId,isArchived:e.isTeamArchived,userRole:e.userTeamRole}:void 0,sharePointSite:e.teamSiteUrl||e.teamSiteDomain||e.teamSitePath||e.mySitePath||e.mySiteDomain?{teamSiteUrl:e.teamSiteUrl,teamSiteDomain:e.teamSiteDomain,teamSitePath:e.teamSitePath,teamSiteId:e.teamSiteId,mySitePath:e.mySitePath,mySiteDomain:e.mySiteDomain}:void 0,dialogParameters:e.dialogParameters||{}};return t}(e)))},e.notifyAppLoaded=function(){u(),V(y(H,\"app.notifyAppLoaded\"))},e.notifySuccess=function(){u(),B(y(H,\"app.notifySuccess\"))},e.notifyFailure=function(e){u(),K(y(H,\"app.notifyFailure\"),e)},e.notifyExpectedFailure=function(e){u(),U(y(H,\"app.notifyExpectedFailure\"),e)},e.registerOnThemeChangeHandler=function(e){_(y(H,\"app.registerOnThemeChangeHandler\"),e)},e.openLink=function(e){return G(y(H,\"app.openLink\"),e)},(l=e.lifecycle||(e.lifecycle={})).registerBeforeSuspendOrTerminateHandler=function(e){if(!e)throw new Error(\"[app.lifecycle.registerBeforeSuspendOrTerminateHandler] Handler cannot be null\");f(b),m(e)},l.registerOnResumeHandler=function(e){if(!e)throw new Error(\"[app.lifecycle.registerOnResumeHandler] Handler cannot be null\");f(b),d(e)}}(J||(J={}));export{J as app,M as appInitializeHelper,V as notifyAppLoadedHelper,U as notifyExpectedFailureHelper,K as notifyFailureHelper,B as notifySuccessHelper,G as openLinkHelper,_ as registerOnThemeChangeHandlerHelper};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT0, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { arrForEach, isArray, isFunction, isNullOrUndefined, proxyFunctionAs, setValue } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hooks;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        var oldHooks = _hooks;\r\n                        _hooks = [];\r\n                        // Remove all instrumentation hooks\r\n                        arrForEach(oldHooks, function (fn) {\r\n                            fn.rm();\r\n                        });\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self._addHook = function (hooks) {\r\n                if (hooks) {\r\n                    if (isArray(hooks)) {\r\n                        _hooks = _hooks.concat(hooks);\r\n                    }\r\n                    else {\r\n                        _hooks[_DYN_PUSH /* @min:%2epush */](hooks);\r\n                    }\r\n                }\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            if (config) {\r\n                // Make sure the extensionConfig exists\r\n                setValue(config, STR_EXTENSION_CONFIG, [], null, isNullOrUndefined);\r\n            }\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT0 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hooks = [];\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* id.ts\r\n* @author Ram Thiru (ramthi)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createGuid, generateW3CId, getCookieValue, getDocument, getLocation, safeGetCookieMgr } from \"@microsoft/1ds-core-js\";\r\n// Limit support to i, w, and c; make logging accidental PII data more difficult.\r\nvar userIdPrefixes = [\r\n    \"c:\",\r\n    \"i:\",\r\n    \"w:\" // domain user id as hash\r\n];\r\nvar supportedMuidHosts = {\r\n    \"microsoft.com\": \"c1.microsoft.com\",\r\n    \"xbox.com\": \"c.xbox.com\",\r\n    \"live.com\": \"c.live.com\",\r\n    \"microsoftstore.com\": \"c.microsoftstore.com\",\r\n    \"msn.com\": \"c.msn.com\",\r\n    \"windows.com\": \"c.windows.com\",\r\n    \"office.com\": \"c.office.com\"\r\n};\r\nvar Id = /** @class */ (function () {\r\n    function Id(core) {\r\n        this.core = core;\r\n        var lastPageViewId = createGuid();\r\n        var internalTraceId = generateW3CId();\r\n        var appUserId = null;\r\n        var firstPageView = false;\r\n        var deviceClass;\r\n        var _cookieMgr = safeGetCookieMgr(core);\r\n        dynamicProto(Id, this, function (_self) {\r\n            _self.getTraceId = function () {\r\n                if (core && core.getTraceCtx) {\r\n                    return core.getTraceCtx().getTraceId() || internalTraceId;\r\n                }\r\n                return internalTraceId;\r\n            };\r\n            _self.getLastPageViewId = function () {\r\n                return lastPageViewId;\r\n            };\r\n            _self.initializeIds = function () {\r\n                if (!firstPageView) {\r\n                    firstPageView = true;\r\n                }\r\n                else {\r\n                    // this.traceId = this.createTraceId();\r\n                    lastPageViewId = createGuid();\r\n                }\r\n            };\r\n            _self.getMuidUserId = function () {\r\n                var muidValue = getCookieValue(_cookieMgr, \"MUID\");\r\n                return muidValue && muidValue.length ? \"t:\" + muidValue : muidValue;\r\n            };\r\n            /// Set app user id.\r\n            _self.setAppUserId = function (uid) {\r\n                appUserId = null; // Make sure to reset the last user id.\r\n                if (!uid) {\r\n                    return; // No need to log null or empty user ids which can be used to reset app user ids.\r\n                }\r\n                for (var i = 0; i < userIdPrefixes.length; i++) {\r\n                    if (userIdPrefixes[i] === uid.substring(0, 2)) {\r\n                        appUserId = uid;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!appUserId) {\r\n                    // this._traceLogger.w('Unsupported app user id: ' + uid + '. Supported app user ids are: c:, i:, and w:');\r\n                }\r\n            };\r\n            _self.setDeviceClass = function (newDeviceClass) {\r\n                if (newDeviceClass) {\r\n                    deviceClass = newDeviceClass;\r\n                }\r\n            };\r\n            _self.getDeviceClass = function () {\r\n                return deviceClass;\r\n            };\r\n            _self.getAppUserId = function () {\r\n                return appUserId;\r\n            };\r\n            _self.syncMuid = function (muidHost) {\r\n                var location = getLocation();\r\n                if (location && muidHost) {\r\n                    var muidsrc = (location.protocol || \"http:\") + \"//\" + muidHost + \"/c.gif?DI=4050&did=1&t=\";\r\n                    var document_1 = getDocument();\r\n                    if (document_1) {\r\n                        var img = document_1.createElement(\"IMG\");\r\n                        img.style.display = \"none\";\r\n                        img.src = muidsrc;\r\n                        img.hidden = \"\";\r\n                        img[\"aria-hidden\"] = \"true\";\r\n                        img.role = \"presentation\";\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            _self.getMuidHost = function (rootDomain) {\r\n                return supportedMuidHosts[rootDomain];\r\n            };\r\n        });\r\n    }\r\n    Id.visitorId = function () {\r\n        var userId = getCookieValue(safeGetCookieMgr(null), \"MUID\");\r\n        return userId;\r\n    };\r\n// Removed Stub for Id.prototype.getTraceId.\r\n// Removed Stub for Id.prototype.getLastPageViewId.\r\n// Removed Stub for Id.prototype.initializeIds.\r\n// Removed Stub for Id.prototype.getMuidUserId.\r\n    /// Set app user id.\r\n// Removed Stub for Id.prototype.setAppUserId.\r\n// Removed Stub for Id.prototype.setDeviceClass.\r\n// Removed Stub for Id.prototype.getDeviceClass.\r\n// Removed Stub for Id.prototype.getAppUserId.\r\n// Removed Stub for Id.prototype.syncMuid.\r\n// Removed Stub for Id.prototype.getMuidHost.\r\n    return Id;\r\n}());\r\nexport default Id;\r\n//# sourceMappingURL=Id.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateTimeUtilsDuration } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, dumpObj, getDocument, getExceptionName, getLocation, isNullOrUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DURATION, _DYN_GET_PERFORMANCE_TIMI17, _DYN_HREF, _DYN_IS_PERFORMANCE_TIMIN16, _DYN_IS_PERFORMANCE_TIMIN19, _DYN_LENGTH, _DYN_NAVIGATION_START, _DYN_POPULATE_PAGE_VIEW_P12, _DYN_SEND_PAGE_VIEW_INTER10, _DYN_SEND_PAGE_VIEW_PERFO11, _DYN_SHOULD_COLLECT_DURAT18, _DYN_TRACK_PAGE_VIEW } from \"../../__DynamicConstants\";\r\nvar _isWebWorker = null;\r\nfunction isWebWorker() {\r\n    if (_isWebWorker == null) {\r\n        try {\r\n            _isWebWorker = !!(self && self instanceof WorkerGlobalScope);\r\n        }\r\n        catch (e) {\r\n            _isWebWorker = false;\r\n        }\r\n    }\r\n    return _isWebWorker;\r\n}\r\n/**\r\n * Class encapsulates sending page views and page view performance telemetry.\r\n */\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        dynamicProto(PageViewManager, this, function (_self) {\r\n            var intervalHandle = null;\r\n            var itemQueue = [];\r\n            var pageViewPerformanceSent = false;\r\n            var _logger;\r\n            if (core) {\r\n                _logger = core.logger;\r\n            }\r\n            function _flushChannels(isAsync) {\r\n                if (core) {\r\n                    core.flush(isAsync);\r\n                }\r\n            }\r\n            function _addQueue(cb) {\r\n                itemQueue.push(cb);\r\n                if (!intervalHandle) {\r\n                    intervalHandle = setInterval((function () {\r\n                        var allItems = itemQueue.slice(0);\r\n                        var doFlush = false;\r\n                        itemQueue = [];\r\n                        arrForEach(allItems, function (item) {\r\n                            if (!item()) {\r\n                                // Not processed so rescheduled\r\n                                itemQueue.push(item);\r\n                            }\r\n                            else {\r\n                                doFlush = true;\r\n                            }\r\n                        });\r\n                        if (itemQueue[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                            clearInterval(intervalHandle);\r\n                            intervalHandle = null;\r\n                        }\r\n                        if (doFlush) {\r\n                            // We process at least one item so flush the queue\r\n                            _flushChannels(true);\r\n                        }\r\n                    }), 100);\r\n                }\r\n            }\r\n            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */] = function (pageView, customProperties) {\r\n                var name = pageView.name;\r\n                if (isNullOrUndefined(name) || typeof name !== \"string\") {\r\n                    var doc = getDocument();\r\n                    name = pageView.name = doc && doc.title || \"\";\r\n                }\r\n                var uri = pageView.uri;\r\n                if (isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n                    var location_1 = getLocation();\r\n                    uri = pageView.uri = location_1 && location_1[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                }\r\n                // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n                // do not provide the duration, set duration to undefined\r\n                // Also this is case 4\r\n                if (!pageViewPerformanceManager[_DYN_IS_PERFORMANCE_TIMIN16 /* @min:%2eisPerformanceTimingSupported */]()) {\r\n                    appInsights[_DYN_SEND_PAGE_VIEW_INTER10 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                    _flushChannels(true);\r\n                    if (!isWebWorker()) {\r\n                        // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 25 /* _eInternalMessageId.NavigationTimingNotSupported */, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n                    }\r\n                    return;\r\n                }\r\n                var pageViewSent = false;\r\n                var customDuration;\r\n                // if the performance timing is supported by the browser, calculate the custom duration\r\n                var start = pageViewPerformanceManager[_DYN_GET_PERFORMANCE_TIMI17 /* @min:%2egetPerformanceTiming */]()[_DYN_NAVIGATION_START /* @min:%2enavigationStart */];\r\n                if (start > 0) {\r\n                    customDuration = dateTimeUtilsDuration(start, +new Date);\r\n                    if (!pageViewPerformanceManager[_DYN_SHOULD_COLLECT_DURAT18 /* @min:%2eshouldCollectDuration */](customDuration)) {\r\n                        customDuration = undefined;\r\n                    }\r\n                }\r\n                // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n                // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n                var duration;\r\n                if (!isNullOrUndefined(customProperties) &&\r\n                    !isNullOrUndefined(customProperties[_DYN_DURATION /* @min:%2eduration */])) {\r\n                    duration = customProperties[_DYN_DURATION /* @min:%2eduration */];\r\n                }\r\n                if (overridePageViewDuration || !isNaN(duration)) {\r\n                    if (isNaN(duration)) {\r\n                        // case 3\r\n                        if (!customProperties) {\r\n                            customProperties = {};\r\n                        }\r\n                        customProperties[_DYN_DURATION /* @min:%2eduration */] = customDuration;\r\n                    }\r\n                    // case 2\r\n                    appInsights[_DYN_SEND_PAGE_VIEW_INTER10 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                    _flushChannels(true);\r\n                    pageViewSent = true;\r\n                }\r\n                // now try to send the page view performance telemetry\r\n                var maxDurationLimit = 60000;\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                // Queue the event for processing\r\n                _addQueue(function () {\r\n                    var processed = false;\r\n                    try {\r\n                        if (pageViewPerformanceManager[_DYN_IS_PERFORMANCE_TIMIN19 /* @min:%2eisPerformanceTimingDataReady */]()) {\r\n                            processed = true;\r\n                            var pageViewPerformance = {\r\n                                name: name,\r\n                                uri: uri\r\n                            };\r\n                            pageViewPerformanceManager[_DYN_POPULATE_PAGE_VIEW_P12 /* @min:%2epopulatePageViewPerformanceEvent */](pageViewPerformance);\r\n                            if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                                // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                                // That's the best value we can get that makes sense.\r\n                                customProperties[_DYN_DURATION /* @min:%2eduration */] = customDuration;\r\n                                appInsights[_DYN_SEND_PAGE_VIEW_INTER10 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                            }\r\n                            else {\r\n                                if (!pageViewSent) {\r\n                                    customProperties[_DYN_DURATION /* @min:%2eduration */] = pageViewPerformance.durationMs;\r\n                                    appInsights[_DYN_SEND_PAGE_VIEW_INTER10 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                                }\r\n                                if (!pageViewPerformanceSent) {\r\n                                    appInsights[_DYN_SEND_PAGE_VIEW_PERFO11 /* @min:%2esendPageViewPerformanceInternal */](pageViewPerformance, customProperties);\r\n                                    pageViewPerformanceSent = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (start > 0 && dateTimeUtilsDuration(start, +new Date) > maxDurationLimit) {\r\n                            // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                            // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                            processed = true;\r\n                            if (!pageViewSent) {\r\n                                customProperties[_DYN_DURATION /* @min:%2eduration */] = maxDurationLimit;\r\n                                appInsights[_DYN_SEND_PAGE_VIEW_INTER10 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 38 /* _eInternalMessageId.TrackPVFailedCalc */, \"trackPageView failed on page load calculation: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                    return processed;\r\n                });\r\n            };\r\n            _self.teardown = function (unloadCtx, unloadState) {\r\n                if (intervalHandle) {\r\n                    clearInterval(intervalHandle);\r\n                    intervalHandle = null;\r\n                    var allItems = itemQueue.slice(0);\r\n                    var doFlush_1 = false;\r\n                    itemQueue = [];\r\n                    arrForEach(allItems, function (item) {\r\n                        if (item()) {\r\n                            doFlush_1 = true;\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PageViewManager.prototype.trackPageView.\r\n// Removed Stub for PageViewManager.prototype.teardown.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    PageViewManager.__ieDyn=1;\n\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* PageUnload.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { getPerformance, isDocumentObjectAvailable, isUndefined, isValueAssigned, isWindowObjectAvailable, objForEachKey } from \"@microsoft/1ds-core-js\";\r\nimport { _getViewportDimensions } from \"../common/Utils\";\r\nimport { WebEvent } from \"./WebEvent\";\r\nvar PageUnload = /** @class */ (function (_super) {\r\n    __extends(PageUnload, _super);\r\n    /**\r\n  * @param _webAnalyticsPlugin - Web Analytics plugin instance\r\n  * @param _config - WebAnalytics configuration object\r\n  * @param _id - Id\r\n  * @param _traceLogger - Trace logger to log to console.\r\n  * @param timestamp - Timespan instance.\r\n  * @param maxScroll - max scroll value\r\n  */\r\n    function PageUnload(_webAnalyticsPlugin, _config, _id, _traceLogger, timestamp, maxScroll) {\r\n        var _this = _super.call(this, _webAnalyticsPlugin, _config, null, _id, {}, {}, _traceLogger) || this;\r\n        _this._webAnalyticsPlugin = _webAnalyticsPlugin;\r\n        _this._config = _config;\r\n        _this._id = _id;\r\n        _this._traceLogger = _traceLogger;\r\n        _this._timestamp = timestamp;\r\n        _this._maxScroll = maxScroll;\r\n        return _this;\r\n    }\r\n    /**\r\n    * API to send PageUnload event\r\n    * @param pageUnloadEvent - PageUnload event\r\n    * @param properties - PageUnload properties(Part C)\r\n    */\r\n    PageUnload.prototype.trackPageUnload = function (pageUnloadEvent, properties) {\r\n        // Get part A properties\r\n        var ext = {};\r\n        ext[\"web\"] = {};\r\n        ext[\"web\"][\"isManual\"] = pageUnloadEvent.isManual;\r\n        var event = {\r\n            name: \"Ms.Web.PageUnload\",\r\n            baseType: \"PageUnloadData\",\r\n            ext: ext,\r\n            data: {},\r\n            baseData: {},\r\n            latency: 3 /* EventLatencyValue.RealTime */\r\n        };\r\n        var config = this._config || {};\r\n        if (isUndefined(config.syncUnloadAction) || config.syncUnloadAction) {\r\n            // Attempt to send the event immediately without blocking the JS execution\r\n            event.sync = 3 /* EventSendType.SyncFetch */;\r\n        }\r\n        event.baseData[\"name\"] = pageUnloadEvent.name;\r\n        event.baseData[\"uri\"] = pageUnloadEvent.uri;\r\n        event.baseData[\"id\"] = pageUnloadEvent.id;\r\n        event.baseData[\"properties\"] = pageUnloadEvent.properties;\r\n        event.baseData[\"ver\"] = pageUnloadEvent.ver;\r\n        event.baseData[\"market\"] = pageUnloadEvent.market;\r\n        event.baseData[\"pageType\"] = pageUnloadEvent.pageType;\r\n        event.baseData[\"isLoggedIn\"] = pageUnloadEvent.isLoggedIn;\r\n        objForEachKey(properties, function (property, value) {\r\n            if (!event.data[property]) {\r\n                event.data[property] = value;\r\n            }\r\n        });\r\n        this._webAnalyticsPlugin.core.track(event);\r\n    };\r\n    /**\r\n   * API to create and send a populated PageUnload event\r\n   * @param overrideValues - PageUnload overrides\r\n   * @param customProperties - Custom properties(Part C)\r\n   */\r\n    PageUnload.prototype.capturePageUnload = function (overrideValues, customProperties) {\r\n        overrideValues = !isValueAssigned(overrideValues) ? {} : overrideValues;\r\n        var event = {};\r\n        var properties = isValueAssigned(customProperties) ? customProperties : {};\r\n        var scrollHeight = isDocumentObjectAvailable ? document.body.scrollHeight : 0;\r\n        this._setBasicProperties(event, overrideValues);\r\n        event.isManual = !overrideValues.isAuto;\r\n        // Set PartC values\r\n        properties.dwellTime = this._timestamp._recordTimeSpan(\"dwellTime\", true);\r\n        properties.scrollDepth = overrideValues.scrollDepth || this._maxScroll.v.toString() + \"/\" + scrollHeight.toString();\r\n        properties.vpHeight = _getViewportDimensions().h;\r\n        properties.vScrollOffset = overrideValues.vScrollOffset || this._maxScroll.v;\r\n        if (isWindowObjectAvailable) {\r\n            var perf = getPerformance();\r\n            var windowPerformanceTiming = perf ? perf.timing : null;\r\n            if (windowPerformanceTiming && windowPerformanceTiming.loadEventStart && windowPerformanceTiming.navigationStart) {\r\n                if (windowPerformanceTiming.loadEventStart > 0) {\r\n                    properties.pageLoadTime = windowPerformanceTiming.loadEventStart - windowPerformanceTiming.navigationStart;\r\n                }\r\n            }\r\n        }\r\n        this.trackPageUnload(event, properties);\r\n    };\r\n    return PageUnload;\r\n}(WebEvent));\r\nexport { PageUnload };\r\n//# sourceMappingURL=PageUnload.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* ContentUpdate.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, isDocumentObjectAvailable, isValueAssigned, objForEachKey } from \"@microsoft/1ds-core-js\";\r\nimport { CONTENT_VERSION } from \"../common/Constants\";\r\nimport { _getScrollOffset, _getViewportDimensions } from \"../common/Utils\";\r\nimport { WebEvent } from \"./WebEvent\";\r\nvar ContentUpdate = /** @class */ (function (_super) {\r\n    __extends(ContentUpdate, _super);\r\n    function ContentUpdate() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n      * API to send ContentUpdate event\r\n      * @param contentUpdateEvent - ContentUpdate event\r\n      * @param  properties - ContentUpdate properties(Part C)\r\n      */\r\n    ContentUpdate.prototype.trackContentUpdate = function (contentUpdateEvent, properties) {\r\n        // Get part A properties\r\n        var ext = {};\r\n        ext[\"web\"] = {};\r\n        ext[\"web\"][\"isManual\"] = contentUpdateEvent.isManual;\r\n        var event = {\r\n            name: \"Ms.Web.ContentUpdate\",\r\n            baseType: \"ContentUpdateData\",\r\n            ext: ext,\r\n            data: {},\r\n            baseData: {},\r\n            latency: 3 /* EventLatencyValue.RealTime */\r\n        };\r\n        arrForEach([\r\n            \"name\",\r\n            \"uri\",\r\n            \"market\",\r\n            \"pageType\",\r\n            \"isLoggedIn\",\r\n            \"id\",\r\n            \"properties\",\r\n            \"ver\",\r\n            \"actionType\",\r\n            \"behavior\",\r\n            \"pageHeight\",\r\n            \"content\",\r\n            \"contentVer\",\r\n            \"vpHeight\",\r\n            \"vpWidth\",\r\n            \"vScrollOffset\",\r\n            \"hScrollOffset\"\r\n        ], function (key) {\r\n            event.baseData[key] = contentUpdateEvent[key];\r\n        });\r\n        objForEachKey(properties, function (property, value) {\r\n            if (!event.data[property]) {\r\n                event.data[property] = value;\r\n            }\r\n        });\r\n        this._webAnalyticsPlugin.core.track(event);\r\n    };\r\n    /**\r\n   * API to create and send a populated ContentUpdate event\r\n   * @param overrideValues - ContentUpdate overrides\r\n   * @param customProperties - Custom properties(Part C)\r\n   */\r\n    ContentUpdate.prototype.captureContentUpdate = function (overrideValues, customProperties) {\r\n        overrideValues = !isValueAssigned(overrideValues) ? {} : overrideValues;\r\n        var event = {};\r\n        var properties = isValueAssigned(customProperties) ? customProperties : {};\r\n        this._setCommonProperties(event, properties, overrideValues);\r\n        event.behavior = this._getBehavior(overrideValues);\r\n        if (isValueAssigned(overrideValues.actionType)) {\r\n            event.actionType = overrideValues.actionType;\r\n        }\r\n        var viewportDim = _getViewportDimensions();\r\n        var scrollOffset = _getScrollOffset();\r\n        event.pageHeight = isDocumentObjectAvailable ? document.body.scrollHeight : null;\r\n        event.vpHeight = viewportDim.h;\r\n        event.vpWidth = viewportDim.w;\r\n        event.vScrollOffset = scrollOffset.v;\r\n        event.hScrollOffset = scrollOffset.h;\r\n        event.contentVer = CONTENT_VERSION;\r\n        event.isManual = !overrideValues.isAuto;\r\n        var content = this._getContentFormatted(overrideValues.content) || JSON.stringify(this._contentHandler.getVisibleContent());\r\n        if (content) {\r\n            event.content = content;\r\n        }\r\n        // Set PartC values\r\n        if (isValueAssigned(overrideValues.isDomComplete)) {\r\n            properties.isDomComplete = overrideValues.isDomComplete;\r\n        }\r\n        else {\r\n            properties.isDomComplete = false;\r\n        }\r\n        this.trackContentUpdate(event, properties);\r\n    };\r\n    return ContentUpdate;\r\n}(WebEvent));\r\nexport { ContentUpdate };\r\n//# sourceMappingURL=ContentUpdate.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport * from \"./aria-telemetry-client\";\nexport * from \"./interfaces\";\nexport * from \"./logger\";\nexport * from \"./scenario-tracker\";\nexport * from \"./telemetry-clients\";\n//# sourceMappingURL=index.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Loc.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nvar Loc = /** @class */ (function () {\r\n    function Loc() {\r\n        // Add time zone\r\n        var timeZone = new Date().getTimezoneOffset();\r\n        var minutes = timeZone % 60;\r\n        var hours = (timeZone - minutes) / 60;\r\n        var timeZonePrefix = \"+\";\r\n        if (hours > 0) {\r\n            timeZonePrefix = \"-\";\r\n        }\r\n        hours = Math.abs(hours);\r\n        minutes = Math.abs(minutes);\r\n        this.tz = timeZonePrefix + (hours < 10 ? \"0\" + hours : hours.toString()) + \":\"\r\n            + (minutes < 10 ? \"0\" + minutes : minutes.toString());\r\n    }\r\n    return Loc;\r\n}());\r\nexport { Loc };\r\n//# sourceMappingURL=Loc.js.map","var r,e;function n(){if(e)return r;e=1;const n=function(){const r=/(Chrome|Chromium)\\/(?<chromeVersion>\\d+)\\./.exec(navigator.userAgent);if(r)return Number.parseInt(r.groups.chromeVersion,10)}()>=69&&{level:1,hasBasic:!0,has256:!1,has16m:!1};return r={stdout:n,stderr:n}}export{n as __require};\n","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Enums.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* Copyright (c) Microsoft and contributors. All rights reserved.\r\n*/\r\n// Behavior enum values\r\nexport var Behavior;\r\n(function (Behavior) {\r\n    Behavior[Behavior[\"UNDEFINED\"] = 0] = \"UNDEFINED\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Page Experience [1-19]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"NAVIGATIONBACK\"] = 1] = \"NAVIGATIONBACK\";\r\n    Behavior[Behavior[\"NAVIGATION\"] = 2] = \"NAVIGATION\";\r\n    Behavior[Behavior[\"NAVIGATIONFORWARD\"] = 3] = \"NAVIGATIONFORWARD\";\r\n    Behavior[Behavior[\"APPLY\"] = 4] = \"APPLY\";\r\n    Behavior[Behavior[\"REMOVE\"] = 5] = \"REMOVE\";\r\n    Behavior[Behavior[\"SORT\"] = 6] = \"SORT\";\r\n    Behavior[Behavior[\"EXPAND\"] = 7] = \"EXPAND\";\r\n    Behavior[Behavior[\"REDUCE\"] = 8] = \"REDUCE\";\r\n    Behavior[Behavior[\"CONTEXTMENU\"] = 9] = \"CONTEXTMENU\";\r\n    Behavior[Behavior[\"TAB\"] = 10] = \"TAB\";\r\n    Behavior[Behavior[\"COPY\"] = 11] = \"COPY\";\r\n    Behavior[Behavior[\"EXPERIMENTATION\"] = 12] = \"EXPERIMENTATION\";\r\n    Behavior[Behavior[\"PRINT\"] = 13] = \"PRINT\";\r\n    Behavior[Behavior[\"SHOW\"] = 14] = \"SHOW\";\r\n    Behavior[Behavior[\"HIDE\"] = 15] = \"HIDE\";\r\n    Behavior[Behavior[\"MAXIMIZE\"] = 16] = \"MAXIMIZE\";\r\n    Behavior[Behavior[\"MINIMIZE\"] = 17] = \"MINIMIZE\";\r\n    Behavior[Behavior[\"BACKBUTTON\"] = 18] = \"BACKBUTTON\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Scenario Process [20-39]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"STARTPROCESS\"] = 20] = \"STARTPROCESS\";\r\n    Behavior[Behavior[\"PROCESSCHECKPOINT\"] = 21] = \"PROCESSCHECKPOINT\";\r\n    Behavior[Behavior[\"COMPLETEPROCESS\"] = 22] = \"COMPLETEPROCESS\";\r\n    Behavior[Behavior[\"SCENARIOCANCEL\"] = 23] = \"SCENARIOCANCEL\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Download [40-59]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"DOWNLOADCOMMIT\"] = 40] = \"DOWNLOADCOMMIT\";\r\n    Behavior[Behavior[\"DOWNLOAD\"] = 41] = \"DOWNLOAD\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Search [60-79]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"SEARCHAUTOCOMPLETE\"] = 60] = \"SEARCHAUTOCOMPLETE\";\r\n    Behavior[Behavior[\"SEARCH\"] = 61] = \"SEARCH\";\r\n    Behavior[Behavior[\"SEARCHINITIATE\"] = 62] = \"SEARCHINITIATE\";\r\n    Behavior[Behavior[\"TEXTBOXINPUT\"] = 63] = \"TEXTBOXINPUT\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Commerce [80-99]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"PURCHASE\"] = 80] = \"PURCHASE\";\r\n    Behavior[Behavior[\"ADDTOCART\"] = 81] = \"ADDTOCART\";\r\n    Behavior[Behavior[\"VIEWCART\"] = 82] = \"VIEWCART\";\r\n    Behavior[Behavior[\"ADDWISHLIST\"] = 83] = \"ADDWISHLIST\";\r\n    Behavior[Behavior[\"FINDSTORE\"] = 84] = \"FINDSTORE\";\r\n    Behavior[Behavior[\"CHECKOUT\"] = 85] = \"CHECKOUT\";\r\n    Behavior[Behavior[\"REMOVEFROMCART\"] = 86] = \"REMOVEFROMCART\";\r\n    Behavior[Behavior[\"PURCHASECOMPLETE\"] = 87] = \"PURCHASECOMPLETE\";\r\n    Behavior[Behavior[\"VIEWCHECKOUTPAGE\"] = 88] = \"VIEWCHECKOUTPAGE\";\r\n    Behavior[Behavior[\"VIEWCARTPAGE\"] = 89] = \"VIEWCARTPAGE\";\r\n    Behavior[Behavior[\"VIEWPDP\"] = 90] = \"VIEWPDP\";\r\n    Behavior[Behavior[\"UPDATEITEMQUANTITY\"] = 91] = \"UPDATEITEMQUANTITY\";\r\n    Behavior[Behavior[\"INTENTTOBUY\"] = 92] = \"INTENTTOBUY\";\r\n    Behavior[Behavior[\"PUSHTOINSTALL\"] = 93] = \"PUSHTOINSTALL\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Authentication [100-119]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"SIGNIN\"] = 100] = \"SIGNIN\";\r\n    Behavior[Behavior[\"SIGNOUT\"] = 101] = \"SIGNOUT\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Social [120-139]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"SOCIALSHARE\"] = 120] = \"SOCIALSHARE\";\r\n    Behavior[Behavior[\"SOCIALLIKE\"] = 121] = \"SOCIALLIKE\";\r\n    Behavior[Behavior[\"SOCIALREPLY\"] = 122] = \"SOCIALREPLY\";\r\n    Behavior[Behavior[\"CALL\"] = 123] = \"CALL\";\r\n    Behavior[Behavior[\"EMAIL\"] = 124] = \"EMAIL\";\r\n    Behavior[Behavior[\"COMMUNITY\"] = 125] = \"COMMUNITY\";\r\n    Behavior[Behavior[\"SOCIALFOLLOW\"] = 126] = \"SOCIALFOLLOW\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Feedback [140-159]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"VOTE\"] = 140] = \"VOTE\";\r\n    Behavior[Behavior[\"SURVEYINITIATE\"] = 141] = \"SURVEYINITIATE\";\r\n    Behavior[Behavior[\"SURVEYCOMPLETE\"] = 142] = \"SURVEYCOMPLETE\";\r\n    Behavior[Behavior[\"REPORTAPPLICATION\"] = 143] = \"REPORTAPPLICATION\";\r\n    Behavior[Behavior[\"REPORTREVIEW\"] = 144] = \"REPORTREVIEW\";\r\n    Behavior[Behavior[\"SURVEYCHECKPOINT\"] = 145] = \"SURVEYCHECKPOINT\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Registration, Contact [160-179]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"CONTACT\"] = 160] = \"CONTACT\";\r\n    Behavior[Behavior[\"REGISTRATIONINITIATE\"] = 161] = \"REGISTRATIONINITIATE\";\r\n    Behavior[Behavior[\"REGISTRATIONCOMPLETE\"] = 162] = \"REGISTRATIONCOMPLETE\";\r\n    Behavior[Behavior[\"CANCELSUBSCRIPTION\"] = 163] = \"CANCELSUBSCRIPTION\";\r\n    Behavior[Behavior[\"RENEWSUBSCRIPTION\"] = 164] = \"RENEWSUBSCRIPTION\";\r\n    Behavior[Behavior[\"CHANGESUBSCRIPTION\"] = 165] = \"CHANGESUBSCRIPTION\";\r\n    Behavior[Behavior[\"REGISTRATIONCHECKPOINT\"] = 166] = \"REGISTRATIONCHECKPOINT\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Chat [180-199]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"CHATINITIATE\"] = 180] = \"CHATINITIATE\";\r\n    Behavior[Behavior[\"CHATEND\"] = 181] = \"CHATEND\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Trial [200-209]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"TRIALSIGNUP\"] = 200] = \"TRIALSIGNUP\";\r\n    Behavior[Behavior[\"TRIALINITIATE\"] = 201] = \"TRIALINITIATE\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Signup [210-219]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"SIGNUP\"] = 210] = \"SIGNUP\";\r\n    Behavior[Behavior[\"FREESIGNUP\"] = 211] = \"FREESIGNUP\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Referals [220-229]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"PARTNERREFERRAL\"] = 220] = \"PARTNERREFERRAL\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Intents [230-239]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"LEARNLOWFUNNEL\"] = 230] = \"LEARNLOWFUNNEL\";\r\n    Behavior[Behavior[\"LEARNHIGHFUNNEL\"] = 231] = \"LEARNHIGHFUNNEL\";\r\n    Behavior[Behavior[\"SHOPPINGINTENT\"] = 232] = \"SHOPPINGINTENT\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Video [240-259]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"VIDEOSTART\"] = 240] = \"VIDEOSTART\";\r\n    Behavior[Behavior[\"VIDEOPAUSE\"] = 241] = \"VIDEOPAUSE\";\r\n    Behavior[Behavior[\"VIDEOCONTINUE\"] = 242] = \"VIDEOCONTINUE\";\r\n    Behavior[Behavior[\"VIDEOCHECKPOINT\"] = 243] = \"VIDEOCHECKPOINT\";\r\n    Behavior[Behavior[\"VIDEOJUMP\"] = 244] = \"VIDEOJUMP\";\r\n    Behavior[Behavior[\"VIDEOCOMPLETE\"] = 245] = \"VIDEOCOMPLETE\";\r\n    Behavior[Behavior[\"VIDEOBUFFERING\"] = 246] = \"VIDEOBUFFERING\";\r\n    Behavior[Behavior[\"VIDEOERROR\"] = 247] = \"VIDEOERROR\";\r\n    Behavior[Behavior[\"VIDEOMUTE\"] = 248] = \"VIDEOMUTE\";\r\n    Behavior[Behavior[\"VIDEOUNMUTE\"] = 249] = \"VIDEOUNMUTE\";\r\n    Behavior[Behavior[\"VIDEOFULLSCREEN\"] = 250] = \"VIDEOFULLSCREEN\";\r\n    Behavior[Behavior[\"VIDEOUNFULLSCREEN\"] = 251] = \"VIDEOUNFULLSCREEN\";\r\n    Behavior[Behavior[\"VIDEOREPLAY\"] = 252] = \"VIDEOREPLAY\";\r\n    Behavior[Behavior[\"VIDEOPLAYERLOAD\"] = 253] = \"VIDEOPLAYERLOAD\";\r\n    Behavior[Behavior[\"VIDEOPLAYERCLICK\"] = 254] = \"VIDEOPLAYERCLICK\";\r\n    Behavior[Behavior[\"VIDEOVOLUMECONTROL\"] = 255] = \"VIDEOVOLUMECONTROL\";\r\n    Behavior[Behavior[\"VIDEOAUDIOTRACKCONTROL\"] = 256] = \"VIDEOAUDIOTRACKCONTROL\";\r\n    Behavior[Behavior[\"VIDEOCLOSEDCAPTIONCONTROL\"] = 257] = \"VIDEOCLOSEDCAPTIONCONTROL\";\r\n    Behavior[Behavior[\"VIDEOCLOSEDCAPTIONSTYLE\"] = 258] = \"VIDEOCLOSEDCAPTIONSTYLE\";\r\n    Behavior[Behavior[\"VIDEORESOLUTIONCONTROL\"] = 259] = \"VIDEORESOLUTIONCONTROL\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Virtual Event [260-279]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"VIRTUALEVENTJOIN\"] = 260] = \"VIRTUALEVENTJOIN\";\r\n    Behavior[Behavior[\"VIRTUALEVENTEND\"] = 261] = \"VIRTUALEVENTEND\";\r\n    Behavior[Behavior[\"JOINTEAMSMEETINGEVENT\"] = 262] = \"JOINTEAMSMEETINGEVENT\";\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // \tAdvertisement Engagement [280-299]\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Behavior[Behavior[\"IMPRESSION\"] = 280] = \"IMPRESSION\";\r\n    Behavior[Behavior[\"CLICK\"] = 281] = \"CLICK\";\r\n    Behavior[Behavior[\"RICHMEDIACOMPLETE\"] = 282] = \"RICHMEDIACOMPLETE\";\r\n    Behavior[Behavior[\"ADBUFFERING\"] = 283] = \"ADBUFFERING\";\r\n    Behavior[Behavior[\"ADERROR\"] = 284] = \"ADERROR\";\r\n    Behavior[Behavior[\"ADSTART\"] = 285] = \"ADSTART\";\r\n    Behavior[Behavior[\"ADCOMPLETE\"] = 286] = \"ADCOMPLETE\";\r\n    Behavior[Behavior[\"ADSKIP\"] = 287] = \"ADSKIP\";\r\n    Behavior[Behavior[\"ADTIMEOUT\"] = 288] = \"ADTIMEOUT\";\r\n    Behavior[Behavior[\"OTHER\"] = 300] = \"OTHER\"; // Other\r\n})(Behavior || (Behavior = {}));\r\n//# sourceMappingURL=Behaviors.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Device.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nvar Device = /** @class */ (function () {\r\n    function Device() {\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        storage.setItem(uid, uid);\r\n        var fail = storage.getItem(uid) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](uid);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys.push(key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport * from \"./AriaTelemetryClient\";\n//# sourceMappingURL=index.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* OperatingSystem.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport { getNavigator, isString } from \"@microsoft/1ds-core-js\";\r\nvar OSNAMEREGEX = {\r\n    WIN: /(windows|win32)/i,\r\n    WINRT: / arm;/i,\r\n    WINPHONE: /windows\\sphone\\s\\d+\\.\\d+/i,\r\n    OSX: /(macintosh|mac os x)/i,\r\n    IOS: /(ipad|iphone|ipod)(?=.*like mac os x)/i,\r\n    LINUX: /(linux|joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk)/i,\r\n    ANDROID: /android/i,\r\n    CROS: /CrOS/i\r\n};\r\nvar VERSION_MAPPINGS = {\r\n    \"5.1\": \"XP\",\r\n    \"6.0\": \"Vista\",\r\n    \"6.1\": \"7\",\r\n    \"6.2\": \"8\",\r\n    \"6.3\": \"8.1\",\r\n    \"10.0\": \"10\"\r\n};\r\nvar REGEX_VERSION = \"([\\\\d,.]+)\";\r\nvar REGEX_VERSION_MAC = \"([\\\\d,_,.]+)\";\r\nvar UNKNOWN = \"Unknown\";\r\nvar OSNAMES = [\r\n    { r: OSNAMEREGEX.WINPHONE, os: \"Windows Phone\" },\r\n    { r: OSNAMEREGEX.WINRT, os: \"Windows RT\" },\r\n    { r: OSNAMEREGEX.WIN, os: \"Windows\" /* OPERATING_SYSTEMS.WINDOWS */ },\r\n    { r: OSNAMEREGEX.IOS, os: \"iOS\" /* OPERATING_SYSTEMS.IOS */ },\r\n    { r: OSNAMEREGEX.ANDROID, os: \"Android\" /* OPERATING_SYSTEMS.ANDROID */ },\r\n    { r: OSNAMEREGEX.LINUX, os: \"Linux\" },\r\n    { r: OSNAMEREGEX.CROS, os: \"Chrome OS\" },\r\n    { s: \"x11\", os: \"Unix\" },\r\n    { s: \"blackberry\", os: \"BlackBerry\" },\r\n    { s: \"symbian\", os: \"Symbian\" },\r\n    { s: \"nokia\", os: \"Nokia\" },\r\n    { r: OSNAMEREGEX.OSX, os: \"Mac OS X\" /* OPERATING_SYSTEMS.MACOSX */ }\r\n];\r\nfunction _getOsName(lowerCaseUserAgent) {\r\n    for (var lp = 0; lp < OSNAMES.length; lp++) {\r\n        var match = OSNAMES[lp];\r\n        if (match.r && lowerCaseUserAgent.match(match.r)) {\r\n            return match.os;\r\n        }\r\n        else if (match.s && lowerCaseUserAgent.indexOf(match.s) !== -1) {\r\n            return match.os;\r\n        }\r\n    }\r\n    return UNKNOWN;\r\n}\r\nfunction _getOsVersion(userAgent, osName) {\r\n    if (osName === \"Windows\" /* OPERATING_SYSTEMS.WINDOWS */) {\r\n        return _getGenericOsVersion(userAgent, \"Windows NT\");\r\n    }\r\n    if (osName === \"Android\" /* OPERATING_SYSTEMS.ANDROID */) {\r\n        return _getGenericOsVersion(userAgent, osName);\r\n    }\r\n    if (osName === \"Mac OS X\" /* OPERATING_SYSTEMS.MACOSX */) {\r\n        return _getMacOsxVersion(userAgent);\r\n    }\r\n    if (osName === \"iOS\" /* OPERATING_SYSTEMS.IOS */) {\r\n        return _getIosVersion(userAgent);\r\n    }\r\n    return UNKNOWN;\r\n}\r\nfunction _getGenericOsVersion(userAgent, osName) {\r\n    var ntVersionMatches = userAgent.match(new RegExp(osName + \" \" + REGEX_VERSION));\r\n    if (ntVersionMatches) {\r\n        if (VERSION_MAPPINGS[ntVersionMatches[1]]) {\r\n            return VERSION_MAPPINGS[ntVersionMatches[1]];\r\n        }\r\n        return ntVersionMatches[1];\r\n    }\r\n    return UNKNOWN;\r\n}\r\nfunction _getMacOsxVersion(userAgent) {\r\n    var macOsxVersionInUserAgentMatches = userAgent.match(new RegExp(\"Mac OS X\" /* OPERATING_SYSTEMS.MACOSX */ + \" \" + REGEX_VERSION_MAC));\r\n    if (macOsxVersionInUserAgentMatches) {\r\n        var versionString = macOsxVersionInUserAgentMatches[1].replace(/_/g, \".\");\r\n        if (versionString) {\r\n            var delimiter = _getDelimiter(versionString);\r\n            if (delimiter) {\r\n                var components = versionString.split(delimiter);\r\n                return components[0];\r\n            }\r\n            else {\r\n                return versionString;\r\n            }\r\n        }\r\n    }\r\n    return UNKNOWN;\r\n}\r\nfunction _getIosVersion(userAgent) {\r\n    var iosVersionInUserAgentMatches = userAgent.match(new RegExp(\"OS \" + REGEX_VERSION_MAC));\r\n    if (iosVersionInUserAgentMatches) {\r\n        var versionString = iosVersionInUserAgentMatches[1].replace(/_/g, \".\");\r\n        if (versionString) {\r\n            var delimiter = _getDelimiter(versionString);\r\n            if (delimiter) {\r\n                var components = versionString.split(delimiter);\r\n                return components[0];\r\n            }\r\n            else {\r\n                return versionString;\r\n            }\r\n        }\r\n    }\r\n    return UNKNOWN;\r\n}\r\nfunction _getDelimiter(versionString) {\r\n    if (versionString.indexOf(\".\") > -1) {\r\n        return \".\";\r\n    }\r\n    if (versionString.indexOf(\"_\") > -1) {\r\n        return \"_\";\r\n    }\r\n    return null;\r\n}\r\nvar OperatingSystem = /** @class */ (function () {\r\n    function OperatingSystem(propertiesConfig) {\r\n        if (propertiesConfig.populateOperatingSystemInfo) {\r\n            var self_1 = this;\r\n            var theNav = getNavigator() || {};\r\n            var userAgent = propertiesConfig.userAgent || theNav.userAgent || \"\";\r\n            var userAgentData = propertiesConfig.userAgentData || theNav.userAgentData || {};\r\n            if (userAgent) {\r\n                var osName = _getOsName(userAgent.toLowerCase());\r\n                self_1.name = osName;\r\n                self_1.ver = _getOsVersion(userAgent, osName);\r\n            }\r\n            if ((!self_1.name || self_1.name === UNKNOWN) && isString(userAgentData.platform)) {\r\n                self_1.name = userAgentData.platform;\r\n            }\r\n        }\r\n    }\r\n    return OperatingSystem;\r\n}());\r\nexport { OperatingSystem };\r\n//# sourceMappingURL=OperatingSystem.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* AITrace.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport { generateW3CId, getLocation } from \"@microsoft/1ds-core-js\";\r\nvar Trace = /** @class */ (function () {\r\n    function Trace(propertiesConfig, id, parentId, name) {\r\n        var self = this;\r\n        self.traceId = id || generateW3CId();\r\n        if (propertiesConfig.enableDistributedTracing && !parentId) {\r\n            // When dt is enabled, both the traceId and spanId are required\r\n            parentId = generateW3CId().substring(0, 16);\r\n        }\r\n        self.parentId = parentId;\r\n        if (propertiesConfig.enableApplicationInsightsTrace) {\r\n            self.name = name;\r\n            var loc = getLocation();\r\n            if (loc && loc.pathname) {\r\n                self.name = loc.pathname;\r\n            }\r\n        }\r\n    }\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjDefineProperty } from \"@microsoft/applicationinsights-shims\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar _objDefineProperty = ObjDefineProperty;\r\nvar version = '2.8.12';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\nfunction _createAccessor(target, prop, value) {\r\n    if (_objDefineProperty) {\r\n        try {\r\n            _objDefineProperty(target, prop, {\r\n                value: value,\r\n                enumerable: false,\r\n                configurable: true\r\n            });\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            // IE8 Defines a defineProperty on Object but it's only supported for DOM elements so it will throw\r\n            // We will just ignore this here.\r\n        }\r\n    }\r\n    return false;\r\n}\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                if (!_createAccessor(target, data.id, theCache)) {\r\n                    // Environment doesn't support accessor, so just use direct assignment\r\n                    target[data.id] = theCache;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* WebAnalyticsPlugin.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n* File containing the interfaces for WebAnalytics SDK.\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport Id from \"./Id\";\r\nimport Timespan from \"./Timespan\";\r\nimport { _throwInternal, createGuid, extend, isDocumentObjectAvailable, isObject, isValueAssigned, objForEachKey, setProcessTelemetryTimings } from \"@microsoft/1ds-core-js\";\r\nimport { AnalyticsPlugin } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { onDomLoaded } from \"./DataCollector\";\r\nimport { _isClickTelemetryAllowed, _removeNonObjectsAndInvalidElements } from \"./common/Utils\";\r\nimport { ContentUpdate } from \"./events/ContentUpdate\";\r\nimport { PageAction } from \"./events/PageAction\";\r\nimport { PageUnload } from \"./events/PageUnload\";\r\nimport { PageView } from \"./events/PageView\";\r\nimport { PageViewPerformance } from \"./events/PageViewPerformance\";\r\nimport { AutoCaptureHandler } from \"./handlers/AutoCaptureHandler\";\r\nimport { DomContentHandler } from \"./handlers/DomContentHandler\";\r\n/**\r\n * @ignore\r\n * Merge passed in configuration with default configuration\r\n * @param overrideConfig\r\n */\r\nfunction _mergeConfig(overrideConfig) {\r\n    var defaultConfig = {\r\n        // General library settings\r\n        useDefaultContentName: true,\r\n        useShortNameForContentBlob: true,\r\n        debounceMs: {\r\n            scroll: 600,\r\n            resize: 3000\r\n        },\r\n        biBlobAttributeTag: \"data-m\",\r\n        isLoggedIn: false,\r\n        shareAuthStatus: false,\r\n        cookiesToCollect: [\"MSFPC\", \"ANON\"],\r\n        autoCapture: {\r\n            pageView: true,\r\n            onLoad: true,\r\n            onUnload: true,\r\n            click: true,\r\n            scroll: false,\r\n            resize: false,\r\n            lineage: false,\r\n            jsError: true,\r\n            msTags: true\r\n        },\r\n        callback: {\r\n            pageName: null,\r\n            pageActionPageTags: null,\r\n            pageViewPageTags: null,\r\n            contentUpdatePageTags: null,\r\n            pageActionContentTags: null,\r\n            signedinStatus: null\r\n        },\r\n        // overrideValues to use instead of collecting automatically\r\n        coreData: {\r\n            referrerUri: isDocumentObjectAvailable ? document.referrer : \"\",\r\n            requestUri: \"\",\r\n            pageName: \"\",\r\n            pageType: \"\",\r\n            product: \"\",\r\n            market: \"\",\r\n            pageTags: {}\r\n        },\r\n        autoPopulateParentIdAndParentName: false,\r\n        syncMuid: false,\r\n        muidDomain: \"microsoft.com\"\r\n    };\r\n    var attributesThatAreObjectsInConfig = [];\r\n    objForEachKey(defaultConfig, function (attribute, value) {\r\n        if (isObject(value)) {\r\n            attributesThatAreObjectsInConfig.push(attribute);\r\n        }\r\n    });\r\n    // delete attributes that should be object and\r\n    // delete properties that are null, undefined, ''\r\n    _removeNonObjectsAndInvalidElements(overrideConfig, attributesThatAreObjectsInConfig);\r\n    return extend(true, defaultConfig, overrideConfig);\r\n}\r\nvar ApplicationInsights = /** @class */ (function (_super) {\r\n    __extends(ApplicationInsights, _super);\r\n    /**\r\n     * @constructor\r\n     * @param WebAnalytics module configuration object.\r\n     */\r\n    function ApplicationInsights() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"WebAnalyticsPlugin\";\r\n        _this.version = '3.2.10';\r\n        var _pageView;\r\n        var _pageAction;\r\n        var _contentUpdate;\r\n        var _pageUnload;\r\n        var _pageViewPerformance;\r\n        var _cvPlugin;\r\n        var _theConfig;\r\n        var _maxScroll;\r\n        var _isPageUnloadFired = false;\r\n        var _timespan;\r\n        var _contentHandler;\r\n        var _autoCaptureHandler;\r\n        var _autoCaptureConfig;\r\n        dynamicProto(ApplicationInsights, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.updateCoreDataConfig = function (coreData) {\r\n                _theConfig.coreData = extend(true, _theConfig.coreData, coreData);\r\n            };\r\n            _self.refreshMetadata = function () {\r\n                var metaTags = _contentHandler.getMetadata();\r\n                _pageView.metaTags = metaTags;\r\n                _contentUpdate.metaTags = metaTags;\r\n                _pageAction.metaTags = metaTags;\r\n                _pageViewPerformance.metaTags = metaTags;\r\n            };\r\n            _self.initialize = function (coreConfig, core, extensions) {\r\n                var extendedCore = core;\r\n                coreConfig.extensionConfig = coreConfig.extensionConfig || [];\r\n                coreConfig.extensionConfig[_self.identifier] = coreConfig.extensionConfig[_self.identifier] || {};\r\n                // Also assigning the exposed private _config for testing\r\n                _self._config = _theConfig = _mergeConfig(coreConfig.extensionConfig[_self.identifier]);\r\n                _autoCaptureConfig = _theConfig.autoCapture;\r\n                var existingGetWParamMethod = extendedCore.getWParam;\r\n                extendedCore.getWParam = function () {\r\n                    var wparam = 0;\r\n                    if (_theConfig.mscomCookies) {\r\n                        wparam = wparam | 1;\r\n                    }\r\n                    return wparam | existingGetWParamMethod();\r\n                };\r\n                coreConfig.extensionConfig[_self.identifier].disableExceptionTracking = !_autoCaptureConfig.jsError;\r\n                _base.initialize(coreConfig, core, extensions);\r\n                // Default to DOM content handler\r\n                _contentHandler = _contentHandler ? _contentHandler : new DomContentHandler(_theConfig, _self.diagLog());\r\n                // Default to DOM autoCapture handler\r\n                _autoCaptureHandler = _autoCaptureHandler ? _autoCaptureHandler : new AutoCaptureHandler(_self, _self.diagLog());\r\n                if (_theConfig.manageCv) {\r\n                    for (var i = 0; i < extensions.length; i++) {\r\n                        if ((extensions[i]).identifier === \"CorrelationVectorPlugin\") {\r\n                            _theConfig.manageCv = true;\r\n                            _cvPlugin = extensions[i];\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!_cvPlugin) {\r\n                        _throwInternal(_self.diagLog(), 2 /* eLoggingSeverity.WARNING */, 508 /* _eExtendedInternalMessageId.CVPluginNotAvailable */, \"Automatic Cv management is set to \\\"true\\\" in config.  However, cv plugin is not available. Disabling automatic Cv management\");\r\n                        _theConfig.manageCv = false;\r\n                    }\r\n                }\r\n                _self.id = new Id(core);\r\n                _timespan = new Timespan();\r\n                var metaTags = _contentHandler.getMetadata();\r\n                _pageView = new PageView(_this, _theConfig, _contentHandler, _self.id, _theConfig.callback.pageViewPageTags, metaTags, _self.diagLog());\r\n                _pageAction = new PageAction(_this, _theConfig, _contentHandler, _self.id, _theConfig.callback.pageActionPageTags, metaTags, _self.diagLog());\r\n                _contentUpdate = new ContentUpdate(_this, _theConfig, _contentHandler, _self.id, _theConfig.callback.contentUpdatePageTags, metaTags, _self.diagLog());\r\n                _pageUnload = new PageUnload(_this, _theConfig, _self.id, _self.diagLog(), _timespan, _maxScroll);\r\n                _pageViewPerformance = new PageViewPerformance(_this, _theConfig, _contentHandler, _self.id, _theConfig.callback.pageViewPageTags, metaTags, _self.diagLog());\r\n                // Note: PageView is sent as soon as init is called (i.e. right after the Web Analytics script is loaded).\r\n                // No Muid Sync will happen as we wait to send PV as soon as possible while Muid Sync requires document ready to happen.\r\n                // This matches WEDCS in way of when they send PV without Muid Sync.\r\n                if (_theConfig.syncMuid) {\r\n                    onDomLoaded(function () {\r\n                        var muidDomain = _self.id.getMuidHost(_theConfig.muidDomain);\r\n                        _self.id.syncMuid(muidDomain);\r\n                    }, _self._evtNamespace);\r\n                }\r\n                // Cause the AutoCaptureHandler to register its events and fire the first time events\r\n                _setupAutoCapture(true);\r\n            };\r\n            _self.processTelemetry = function (evt, itemCtx) {\r\n                setProcessTelemetryTimings(evt, _self.identifier);\r\n                var event = evt;\r\n                if (event.baseType === \"PageviewData\") {\r\n                    event.name = \"Ms.Web.PageView\";\r\n                    event.latency = 3 /* EventLatencyValue.RealTime */;\r\n                }\r\n                else if (event.baseType === \"ExceptionData\") {\r\n                    event.name = \"Ms.Web.ClientError\";\r\n                    event.latency = 1 /* EventLatencyValue.Normal */;\r\n                    // Remove extra AI properties\r\n                    delete (event.baseData[\"aiDataContract\"]);\r\n                }\r\n                else if (event.baseType === \"PageviewPerformanceData\") {\r\n                    event.name = \"Ms.Web.PageViewPerformance\";\r\n                    event.latency = 1 /* EventLatencyValue.Normal */;\r\n                    // Remove extra AI properties\r\n                    delete (event.baseData[\"isValid\"]);\r\n                    delete (event.baseData[\"durationMs\"]);\r\n                }\r\n                // Correlation\r\n                var cv = null;\r\n                if (event.baseType !== \"PageviewData\") {\r\n                    // If automatic cV management is desired and cV plugin is available\r\n                    if (_theConfig.manageCv) {\r\n                        cv = _cvPlugin.getCv();\r\n                        if (cv) {\r\n                            cv.increment();\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (_theConfig.manageCv) {\r\n                        cv = _cvPlugin.getCv();\r\n                        // Seed a new cV for each event\r\n                        if (!cv) {\r\n                            cv = _cvPlugin.getCv();\r\n                        }\r\n                        else {\r\n                            cv.seed();\r\n                        }\r\n                    }\r\n                }\r\n                _base.processTelemetry(event, itemCtx);\r\n            };\r\n            _self.trackEvent = function (event, customProperties) {\r\n                event.latency = event.latency || 1 /* EventLatencyValue.Normal */;\r\n                event.baseData = event.baseData || {};\r\n                event.data = event.data || {};\r\n                // Add extra Part C\r\n                if (isValueAssigned(customProperties)) {\r\n                    objForEachKey(customProperties, function (prop, value) {\r\n                        event.data[prop] = value;\r\n                    });\r\n                }\r\n                _self.core.track(event);\r\n            };\r\n            _self.trackPageView = function (pageViewEvent, properties) {\r\n                _resetPageUnloadProperties();\r\n                // Initialize IDs to be used as parent and trace IDs\r\n                _self.id.initializeIds();\r\n                pageViewEvent.id = _self.id.getLastPageViewId();\r\n                _base.sendPageViewInternal(pageViewEvent, properties, _getSystemProperties(pageViewEvent));\r\n            };\r\n            _self.capturePageView = function (overrideValues, customProperties) {\r\n                _pageView.capturePageView(overrideValues, customProperties);\r\n            };\r\n            _self.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n                _base.sendPageViewPerformanceInternal(pageViewPerformance, customProperties, _getSystemProperties(pageViewPerformance));\r\n            };\r\n            _self.capturePageViewPerformance = function (overrideValues, customProperties) {\r\n                _pageViewPerformance.capturePageViewPerformance(overrideValues, customProperties);\r\n            };\r\n            _self.trackException = function (exception, customProperties) {\r\n                exception.id = exception.id || createGuid();\r\n                _base.sendExceptionInternal(exception, customProperties, _getSystemProperties(exception));\r\n            };\r\n            _self.trackPageAction = function (pageActionEvent, pageActionProperties) {\r\n                _pageAction.trackPageAction(pageActionEvent, pageActionProperties);\r\n            };\r\n            _self.capturePageAction = function (element, overrideValues, customProperties, isRightClick) {\r\n                if (_isClickTelemetryAllowed(element, overrideValues)) {\r\n                    _pageAction.capturePageAction(element, overrideValues, customProperties, isRightClick);\r\n                }\r\n            };\r\n            _self.trackContentUpdate = function (contentUpdateEvent, properties) {\r\n                _contentUpdate.trackContentUpdate(contentUpdateEvent, properties);\r\n            };\r\n            _self.captureContentUpdate = function (overrideValues, customProperties) {\r\n                _contentUpdate.captureContentUpdate(overrideValues, customProperties);\r\n            };\r\n            _self.trackPageUnload = function (pageUnloadEvent, properties) {\r\n                if (!_isPageUnloadFired) {\r\n                    _isPageUnloadFired = true;\r\n                    _pageUnload.trackPageUnload(pageUnloadEvent, properties);\r\n                }\r\n            };\r\n            _self.capturePageUnload = function (overrideValues, customProperties) {\r\n                if (!_isPageUnloadFired) {\r\n                    _isPageUnloadFired = true;\r\n                    _pageUnload.capturePageUnload(overrideValues, customProperties);\r\n                }\r\n            };\r\n            _self._populatePageViewPerformance = function (pageViewPerformance) {\r\n                var perfManager = _self._pageViewPerformanceManager;\r\n                if (perfManager) {\r\n                    perfManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                }\r\n            };\r\n            _self.setContentHandler = function (contentHandler) {\r\n                _contentHandler = contentHandler;\r\n            };\r\n            _self.setAutoCaptureHandler = function (autoCaptureHandler) {\r\n                if (_autoCaptureHandler !== autoCaptureHandler) {\r\n                    // Make sure it removes any event handlers\r\n                    _autoCaptureHandler && _autoCaptureHandler.teardown();\r\n                    _autoCaptureHandler = autoCaptureHandler;\r\n                    _setupAutoCapture(false);\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _autoCaptureHandler && _autoCaptureHandler.teardown(unloadCtx, unloadState);\r\n                _base._doTeardown(unloadCtx, unloadState);\r\n                _initDefaults();\r\n            };\r\n            function _initDefaults() {\r\n                _pageView = null;\r\n                _pageAction = null;\r\n                _contentUpdate = null;\r\n                _pageUnload = null;\r\n                _pageViewPerformance = null;\r\n                _cvPlugin = null;\r\n                _theConfig = null;\r\n                _maxScroll = { h: 0, v: 0 };\r\n                _isPageUnloadFired = false;\r\n                _timespan = null;\r\n                _contentHandler = null;\r\n                _autoCaptureHandler = null;\r\n                _autoCaptureConfig = null;\r\n            }\r\n            function _setupAutoCapture(isInitialize) {\r\n                if (_autoCaptureHandler) {\r\n                    if (isInitialize) {\r\n                        // Initialize only events\r\n                        if (_autoCaptureConfig.pageView) {\r\n                            _autoCaptureHandler.pageView();\r\n                        }\r\n                        if (_autoCaptureConfig.onLoad) {\r\n                            _autoCaptureHandler.onLoad();\r\n                        }\r\n                    }\r\n                    // handle automatic event firing on user click\r\n                    if (_autoCaptureConfig.click) {\r\n                        _autoCaptureHandler.click();\r\n                    }\r\n                    // handle automatic event firing on user scroll\r\n                    if (_autoCaptureConfig.scroll) {\r\n                        _autoCaptureHandler.scroll(_theConfig.debounceMs);\r\n                    }\r\n                    // handle automatic event firing on user resize\r\n                    if (_autoCaptureConfig.resize) {\r\n                        _autoCaptureHandler.resize(_theConfig.debounceMs);\r\n                    }\r\n                    // measure maxScroll\r\n                    if (_autoCaptureConfig.onUnload || _theConfig.manualPageUnload) {\r\n                        _autoCaptureHandler.maxScroll(_maxScroll);\r\n                    }\r\n                    if (_autoCaptureConfig.onUnload) {\r\n                        _autoCaptureHandler.onUnload();\r\n                    }\r\n                }\r\n            }\r\n            function _getSystemProperties(event) {\r\n                var ext = {};\r\n                if (event.isManual !== undefined) {\r\n                    ext[\"web\"] = {};\r\n                    ext[\"web\"][\"isManual\"] = event.isManual !== undefined ? event.isManual : true;\r\n                    delete (event.isManual);\r\n                }\r\n                return ext;\r\n            }\r\n            /**\r\n             * @ignore\r\n             * Resets the values used for pageUnload.\r\n             */\r\n            function _resetPageUnloadProperties() {\r\n                _timespan._recordTimeSpan(\"dwellTime\", false);\r\n                _maxScroll.v = 0;\r\n                _isPageUnloadFired = false;\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ApplicationInsights.prototype.updateCoreDataConfig.\r\n// Removed Stub for ApplicationInsights.prototype.refreshMetadata.\r\n// Removed Stub for ApplicationInsights.prototype.initialize.\r\n// Removed Stub for ApplicationInsights.prototype.processTelemetry.\r\n// Removed Stub for ApplicationInsights.prototype.trackEvent.\r\n// Removed Stub for ApplicationInsights.prototype.trackPageView.\r\n// Removed Stub for ApplicationInsights.prototype.capturePageView.\r\n// Removed Stub for ApplicationInsights.prototype.trackPageViewPerformance.\r\n// Removed Stub for ApplicationInsights.prototype.capturePageViewPerformance.\r\n// Removed Stub for ApplicationInsights.prototype.trackException.\r\n// Removed Stub for ApplicationInsights.prototype.trackPageAction.\r\n// Removed Stub for ApplicationInsights.prototype.capturePageAction.\r\n// Removed Stub for ApplicationInsights.prototype.trackContentUpdate.\r\n// Removed Stub for ApplicationInsights.prototype.captureContentUpdate.\r\n// Removed Stub for ApplicationInsights.prototype.trackPageUnload.\r\n// Removed Stub for ApplicationInsights.prototype.capturePageUnload.\r\n// Removed Stub for ApplicationInsights.prototype._populatePageViewPerformance.\r\n// Removed Stub for ApplicationInsights.prototype.setContentHandler.\r\n// Removed Stub for ApplicationInsights.prototype.setAutoCaptureHandler.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    ApplicationInsights.__ieDyn=1;\n\n    return ApplicationInsights;\r\n}(AnalyticsPlugin));\r\nexport { ApplicationInsights };\r\n//# sourceMappingURL=WebAnalyticsPlugin.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isNullOrUndefined, objForEachKey, throwError, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIkey, strNotSpecified } from \"./Constants\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { _DYN_NAME } from \"./__DynamicConstants\";\r\n/**\r\n * Create a telemetry item that the 1DS channel understands\r\n * @param item domain specific properties; part B\r\n * @param baseType telemetry item type. ie PageViewData\r\n * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n * @param customProperties user defined custom properties; part C\r\n * @param systemProperties system properties that are added to the context; part A\r\n * @returns ITelemetryItem that is sent to channel\r\n */\r\nexport function createTelemetryItem(item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n    var _a;\r\n    envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;\r\n    if (isNullOrUndefined(item) ||\r\n        isNullOrUndefined(baseType) ||\r\n        isNullOrUndefined(envelopeName)) {\r\n        throwError(\"Input doesn't contain all required fields\");\r\n    }\r\n    var iKey = \"\";\r\n    if (item[strIkey]) {\r\n        iKey = item[strIkey];\r\n        delete item[strIkey];\r\n    }\r\n    var telemetryItem = (_a = {},\r\n        _a[_DYN_NAME /* @min:name */] = envelopeName,\r\n        _a.time = toISOString(new Date()),\r\n        _a.iKey = iKey,\r\n        _a.ext = systemProperties ? systemProperties : {},\r\n        _a.tags = [],\r\n        _a.data = {},\r\n        _a.baseType = baseType,\r\n        _a.baseData = item // Part B\r\n    ,\r\n        _a);\r\n    // Part C\r\n    if (!isNullOrUndefined(customProperties)) {\r\n        objForEachKey(customProperties, function (prop, value) {\r\n            telemetryItem.data[prop] = value;\r\n        });\r\n    }\r\n    return telemetryItem;\r\n}\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = createTelemetryItem;\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nimport { ContextColumnsBase, EventBaseType, EventType, HttpColumns, PackageInformation, ScenarioColumns, SeverityLevel, UserBiColumns, } from '../interfaces/telemetry.constants';\nimport { logEvent, logException, logHttpEvent, logScenarioEvent, logTrace, logUIEvent, setCommonProperties, setCustomProperties, } from '../telemetry-clients/telemetryClients';\nimport { getNavigationProperties } from '../utils/getNavigationProperties';\n/**\n * TODO: JSDoc for this class and all its methods and members.\n * Logs messages and events to telemetry, and optionally to console using logToConsole\n * NOTES: DO NOT USE THIS CLASS TO LOG ANY PII (Personally Identifiable Information).\n *\n * Traces:\n * - debug: logs traces with verbose level\n * - info: logs traces with info level\n * - log: logs a general trace message\n * - warn: logs traces with warning level\n * - error: logs error traces. If the error is fatally critical (the app cannot function completely), set the severity to Critical.\n *\n * Exception: logs an exception that has been caught. This also logs an error trace\n * Event: logs an event, such as a user scenario like clicking the email button, going to the next step\n * Page View: logs that a page is opened\n * Metric: logs metrics for performance indicators, and for alerts.\n */\nclass Logger {\n    /**\n     * @param [context] Initializes logging context, sets the\n     * part A schema properties in 1DS, along with other custom properties defined\n     * by the application.\n     * @param [logToConsole] Parameter to log all events to console along with telemetry. Defaults to false.\n     */\n    initialize(context = {}, logToConsole = false) {\n        this._logToConsole = logToConsole;\n        if (this._logToConsole) {\n            console.info(`[Logger][initialize]: Initializing Logger with version:  ${PackageInformation.PackageVersion}`);\n        }\n        this._context = this._moveTenantIdToCustomProperties(context);\n        if (this._context.commonProperties) {\n            // Initialize Part A schema.\n            setCommonProperties(this._context.commonProperties);\n        }\n        if (this._context.customProperties) {\n            this._applyContextProperties();\n        }\n    }\n    /**\n     * TODO - remove this private method in v2.0.6 after deprecating `UserInfoTenantId` from `commonProperties`.\n     * @param context\n     */\n    _moveTenantIdToCustomProperties(context = {}) {\n        var _a;\n        if ((_a = context.commonProperties) === null || _a === void 0 ? void 0 : _a[ContextColumnsBase.UserInfoTenantId]) {\n            context.customProperties = Object.assign(Object.assign({}, context.customProperties), { [ContextColumnsBase.UserInfoTenantId]: context.commonProperties[ContextColumnsBase.UserInfoTenantId] });\n        }\n        return context;\n    }\n    /**\n     * @returns Singleton Logger instance.\n     */\n    static getInstance() {\n        if (!this._instance) {\n            this._instance = new Logger();\n        }\n        return this._instance;\n    }\n    /**\n     * @param [newCtx] The new Logger context to be updated.\n     * @returns Updated Logger context object.\n     */\n    updateContext(newCtx) {\n        this._context = this._moveTenantIdToCustomProperties(Object.assign(Object.assign({}, this._context), newCtx));\n        if (newCtx.customProperties) {\n            this._applyContextProperties();\n        }\n        if (newCtx.commonProperties) {\n            // Update Part A schema on update.\n            setCommonProperties(newCtx.commonProperties);\n        }\n    }\n    /**\n     *\n     */\n    getLoggerContext() {\n        // TODO: Fix TypeScript cast to LoggingContext.\n        return this._context;\n    }\n    /**\n     * Logs a debug trace message to telemetry and optionally to console\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param message\n     */\n    debug(message, properties = {}) {\n        if (this._logToConsole) {\n            console.debug(`[${new Date().toUTCString()}] ${message}`, properties);\n        }\n        logTrace(message, SeverityLevel.Verbose, properties);\n    }\n    /**\n     * Logs an info trace message to telemetry and optionally to console\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param message\n     */\n    info(message, properties = {}) {\n        if (this._logToConsole) {\n            console.info(`[${new Date().toUTCString()}] ${message}`, properties);\n        }\n        logTrace(message, SeverityLevel.Information, properties);\n    }\n    /**\n     * Logs a trace message to telemetry and optionally to console\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param message\n     */\n    log(message, properties = {}) {\n        if (this._logToConsole) {\n            console.log(`[${new Date().toUTCString()}] ${message}`, properties);\n        }\n        logTrace(message, SeverityLevel.Information, properties);\n    }\n    /**\n     * Logs a warning trace message to telemetry and optionally to console\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param message\n     */\n    warn(message, properties = {}) {\n        if (this._logToConsole) {\n            console.warn(`[${new Date().toUTCString()}] ${message}`, properties);\n        }\n        logTrace(message, SeverityLevel.Warning, properties);\n    }\n    /**\n     * Logs an error trace message to telemetry and optionally to console\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param message\n     * @param severity\n     */\n    error(message, severity = SeverityLevel.Error, properties = {}) {\n        if (this._logToConsole) {\n            console.error(`[${new Date().toUTCString()}] ${message}`, properties);\n        }\n        logTrace(message, severity, properties);\n    }\n    /**\n     * Logs an exception that has been caught to telemetry and optionally to console\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param error\n     * @param errorMessage\n     * @param severity\n     */\n    logException(error, errorMessage, severity = SeverityLevel.Error, properties = {}) {\n        const message = errorMessage !== null && errorMessage !== void 0 ? errorMessage : '';\n        if (this._logToConsole) {\n            console.error('[Error]: ', error);\n            console.error(`[${new Date().toUTCString()}] ${message}`, properties);\n        }\n        logException(error, severity, Object.assign(Object.assign({}, properties), { message }));\n        logTrace(`${message}: ${error === null || error === void 0 ? void 0 : error.message}`, severity, properties);\n    }\n    /**\n     * Logs custom events to telemetry and optionally to console.\n     * @param eventName Event name.\n     * @param properties Properties for the event in schema Part C.\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     */\n    logEvent(eventName, properties) {\n        if (this._logToConsole) {\n            console.log(`[${new Date().toUTCString()}] eventName: ${eventName}`, properties);\n        }\n        logEvent(eventName, properties);\n    }\n    /**\n     * Logs a UI panel action telemetry to telemetry and optionally to console.\n     * Should be used when a user performs actions on e.g. Click, scroll, hover etc.\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param properties\n     */\n    logPanelActionEvent(properties) {\n        const panelActionProperties = this._getPanelActionColumns(properties);\n        if (this._logToConsole) {\n            console.log(`[${new Date().toUTCString()}] ${EventBaseType.PanelAction}: `, panelActionProperties);\n        }\n        logUIEvent({\n            eventName: EventBaseType.PanelAction,\n            properties: panelActionProperties,\n        });\n    }\n    /**\n     * Logs a UI panel view telemetry to telemetry and optionally to console\n     * Should be used when a panel viewed is recorded from external/internal\n     * triggers for e.g. Page nivigation.\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param properties\n     */\n    logPanelViewEvent(properties) {\n        const panelViewProperties = this._getPanelViewColumns(properties);\n        if (this._logToConsole) {\n            console.log(`[${new Date().toUTCString()}] ${EventBaseType.PanelView}`, panelViewProperties);\n        }\n        logUIEvent({\n            eventName: EventBaseType.PanelView,\n            properties: panelViewProperties,\n        });\n    }\n    /**\n     * Logs an HTTP request/response times, network errors and data errors\n     * to telemetry and optionally to console.\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param properties\n     * @param eventType\n     */\n    logHttpRequestEvent(properties, eventType) {\n        const httpRequestProperties = this._getHttpRequestColumns(properties);\n        if (this._logToConsole) {\n            console.log(`[${new Date().toUTCString()}] HTTP Request: `, properties);\n        }\n        logHttpEvent({\n            properties: httpRequestProperties,\n            eventType,\n        });\n    }\n    /**\n     * Logs a UI scenario to telemetry and optionally to console.\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param properties\n     */\n    logScenarioTrackerEvent(properties) {\n        const eventProperties = this._getScenarioTrackerColumns(properties);\n        if (this._logToConsole) {\n            console.log(`[${new Date().toUTCString()}] Scenario: ${eventProperties === null || eventProperties === void 0 ? void 0 : eventProperties[ScenarioColumns.ScenarioName]}`, eventProperties);\n        }\n        const scenarioName = eventProperties === null || eventProperties === void 0 ? void 0 : eventProperties[ScenarioColumns.ScenarioName];\n        if (eventProperties.error && scenarioName) {\n            this.logException(eventProperties.error, `Scenario [${scenarioName}]`, SeverityLevel.Error, {\n                Scenario: scenarioName,\n            });\n        }\n        logScenarioEvent({\n            properties: eventProperties,\n        });\n    }\n    /**\n     * Logs that a page, or a container is displayed to the user to telemetry and optionally to console\n     * NOTES: DO NOT LOG PII (Personally Identifiable Information).\n     * @param properties\n     * @param eventType\n     */\n    logPageView(properties, eventType) {\n        const pageViewProperties = this._getPageViewColumns(properties);\n        const eventName = eventType !== null && eventType !== void 0 ? eventType : EventType.Performance;\n        // TODO: Fix TypeScript cast to { [key: string]: string | number | boolean }.\n        logEvent(eventName, pageViewProperties);\n    }\n    /**\n     * Appends telemetry common properties to the event log.\n     * @param [properties] Event properties.\n     */\n    _applyContextProperties() {\n        var _a, _b;\n        // TODO: Investigate proper behavior when context is undefined or properties are undefined.\n        const properties = (_b = (_a = this._context) === null || _a === void 0 ? void 0 : _a.customProperties) !== null && _b !== void 0 ? _b : {};\n        const navigatorProperties = getNavigationProperties();\n        if (!properties[ContextColumnsBase.AppInfoPlatformId]) {\n            properties[ContextColumnsBase.AppInfoPlatformId] = String(navigatorProperties.appPlatformId);\n        }\n        if (!properties[ContextColumnsBase.AppInfoClientType] && navigatorProperties.clientType) {\n            properties[ContextColumnsBase.AppInfoClientType] =\n                navigatorProperties.clientType;\n        }\n        if (!properties[ContextColumnsBase.UserAgent] && navigatorProperties.userAgent) {\n            properties[ContextColumnsBase.UserAgent] = navigatorProperties.userAgent;\n        }\n        properties[ContextColumnsBase.LoggerVersion] = `${PackageInformation.PackageName} ${PackageInformation.PackageVersion}`;\n        if (this._logToConsole) {\n            console.log(`[Logger][_applyContextProperties]: Apply custom context properties `, properties);\n        }\n        setCustomProperties(properties);\n    }\n    /**\n     * Transforms panel view data to align with business telemetry schema.\n     * @param data Panel view data.\n     * @returns Transformed panel view event data.\n     */\n    _getPanelViewColumns(data) {\n        const { panelRegion, panelType, panelLaunchMethod, databag, panelUri } = data;\n        const event = Object.assign({ [UserBiColumns.PanelRegion]: panelRegion, [UserBiColumns.PanelType]: panelType, [UserBiColumns.PanelLaunchMethod]: panelLaunchMethod, [UserBiColumns.PanelUri]: panelUri }, databag);\n        return event;\n    }\n    /**\n     * @param data\n     */\n    _getPageViewColumns(data) {\n        const { name, hostname, contentLength, duration, databag, fcp, refUri, uri, } = data;\n        return Object.assign({ SourceComponent: name, contentLength,\n            hostname,\n            duration,\n            fcp,\n            refUri,\n            uri }, databag);\n    }\n    /**\n     * Transforms data to align with business telemetry schema for panel action event.\n     * @param data Panel action properties.\n     * @returns Transformed panel action event data.\n     */\n    _getPanelActionColumns(data) {\n        const { actionGesture, actionOutcome, actionScenario, actionScenarioType, moduleName, moduleSummary, databag, } = data;\n        return Object.assign(Object.assign({ [UserBiColumns.Gesture]: actionGesture, [UserBiColumns.ActionOutcome]: actionOutcome, [UserBiColumns.Scenario]: actionScenario, [UserBiColumns.ScenarioType]: actionScenarioType, [UserBiColumns.ModuleName]: moduleName, [UserBiColumns.ModuleSummary]: moduleSummary }, this._getPanelViewColumns(data)), databag);\n    }\n    /**\n     * Extracts only the peroperties to be pushed down to telemetry.\n     * @param data  Middle tier request properties.\n     * @returns Middle tier request scenario data columns.\n     */\n    _getHttpRequestColumns(data) {\n        const { hostname, contentLength, method, requestCreatedTime, requestResult, resultCode, duration, start, databag, } = data;\n        return Object.assign({ [HttpColumns.Hostname]: hostname, [HttpColumns.ContentLength]: contentLength, [HttpColumns.Method]: method, [HttpColumns.RequestCreatedTime]: requestCreatedTime, [HttpColumns.RequestResult]: requestResult, [HttpColumns.ResultCode]: resultCode, [HttpColumns.Duration]: duration, [HttpColumns.Start]: start }, databag);\n    }\n    /**\n     * Extracts only the peroperties to be pushed down to telemetry.\n     * @param data Page load request data.\n     * @returns Page load scenario columns.\n     */\n    _getScenarioTrackerColumns(data) {\n        const { [ScenarioColumns.ScenarioName]: scenarioName, [ScenarioColumns.ScenarioStep]: step, [ScenarioColumns.ScenarioStatus]: status, elapsed, error, errorCode, delta, stepDelta, id, startReason, statusCode, databag, } = data;\n        return Object.assign({ [ScenarioColumns.ScenarioName]: scenarioName, [ScenarioColumns.ScenarioStep]: step, [ScenarioColumns.ScenarioStatus]: status, [ScenarioColumns.Delta]: delta, [ScenarioColumns.StepDelta]: stepDelta, [ScenarioColumns.Elapsed]: elapsed, [ScenarioColumns.Error]: error, [ScenarioColumns.ErrorCode]: errorCode, [ScenarioColumns.StartReason]: startReason, [ScenarioColumns.StatusCode]: statusCode, id }, databag);\n    }\n}\nexport const logger = Logger.getInstance();\n//# sourceMappingURL=Logger.js.map","import{sendAndHandleStatusAndReason as e}from\"../internal/communication.js\";import{createTeamsDeepLinkForChat as t}from\"../internal/deepLinkUtilities.js\";import{ensureInitialized as s}from\"../internal/internalAPIs.js\";import{getApiVersionTag as r}from\"../internal/telemetry.js\";import{FrameContexts as n,errorNotSupportedOnPlatform as o}from\"./constants.js\";import{runtime as i}from\"./runtime.js\";var a;!function(a){function m(r,a){return new Promise((m=>{if(s(i,n.content,n.task),!p())throw o;if(i.isLegacyTeams)m(e(r,\"executeDeepLink\",t([a.user],void 0,a.message)));else{m(e(r,\"chat.openChat\",{members:[a.user],message:a.message}))}}))}function p(){return!(!s(i)||!i.supports.chat)}a.openChat=function(e){return m(r(\"v2\",\"chat.openChat\"),e)},a.openGroupChat=function(a){const u=r(\"v2\",\"chat.openGroupChat\");return new Promise((r=>{if(a.users.length<1)throw Error(\"OpenGroupChat Failed: No users specified\");if(1===a.users.length){const e={user:a.users[0],message:a.message};r(m(u,e))}else{if(s(i,n.content,n.task),!p())throw o;if(i.isLegacyTeams)r(e(u,\"executeDeepLink\",t(a.users,a.topic,a.message)));else{r(e(u,\"chat.openChat\",{members:a.users,message:a.message,topic:a.topic}))}}}))},a.isSupported=p}(a||(a={}));export{a as chat};\n","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Utils.ts\r\n* @author  Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n* File containing utility functions.\r\n*/\r\nimport { getGlobal, isFunction, _throwInternal } from \"@microsoft/1ds-core-js\";\r\nvar _canUseLocalStorage;\r\n/**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\nexport function canUseLocalStorage() {\r\n    if (_canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(0 /* StorageType.LocalStorage */);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\n/**\r\n* Gets the localStorage object if available\r\n* @returns Returns the storage object if available else returns null\r\n*/\r\nfunction _getLocalStorageObject() {\r\n    if (canUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(0 /* StorageType.LocalStorage */);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType - Type of storage\r\n     * @returns Returns storage object verified that it is usable\r\n     */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    var storage = null;\r\n    var fail;\r\n    var uid;\r\n    try {\r\n        var global_1 = getGlobal();\r\n        if (!global_1) {\r\n            return null;\r\n        }\r\n        uid = new Date();\r\n        storage = storageType === 0 /* StorageType.LocalStorage */ ? global_1.localStorage : global_1.sessionStorage;\r\n        if (storage && isFunction(storage.setItem)) {\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) !== uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n    }\r\n    catch (exception) {\r\n        storage = null;\r\n    }\r\n    return storage;\r\n}\r\n/**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param name - the name of the object to set in storage\r\n     *  @param data - the contents of the object to set in storage\r\n     *  @returns True if the storage object could be written.\r\n     */\r\nexport function setStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 504 /* _eExtendedInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + e);\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param name - the name of the object to get from storage\r\n     *  @returns The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\nexport function getStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 503 /* _eExtendedInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + e);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=Utils.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \r\n// \r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { dumpObj } from \"./EnvUtils\";\r\nimport { arrForEach, getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                var theInitializer = {\r\n                    id: _id++,\r\n                    fn: telemetryInitializer\r\n                };\r\n                _initializers[_DYN_PUSH /* @min:%2epush */](theInitializer);\r\n                var handler = {\r\n                    remove: function () {\r\n                        arrForEach(_initializers, function (initializer, idx) {\r\n                            if (initializer.id === theInitializer.id) {\r\n                                _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                                return -1;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                return handler;\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                var doNotSendItem = false;\r\n                var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n                    var telemetryInitializer = _initializers[i];\r\n                    if (telemetryInitializer) {\r\n                        try {\r\n                            if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                                doNotSendItem = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    }\r\n                }\r\n                if (!doNotSendItem) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    TelemetryInitializerPlugin.__ieDyn=1;\n\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\n/**\n * Package name and version.\n * Needs to be updated in time of merge. Please see readme.md file.\n * Sample values: PackageVersion, PackageName.\n */\nexport var PackageInformation;\n(function (PackageInformation) {\n    PackageInformation[\"PackageVersion\"] = \"2.0.10\";\n    PackageInformation[\"PackageName\"] = \"@microsoft/teams-telemetry\";\n})(PackageInformation || (PackageInformation = {}));\n/**\n * How a panel was opened up\n * Sample values: nav, notification, direct, toast, userInitiated, update,\n * login, appNav, redererTerminated.\n */\nexport var PanelLaunchMethod;\n(function (PanelLaunchMethod) {\n    PanelLaunchMethod[\"ActivityFeed\"] = \"activityFeed\";\n    PanelLaunchMethod[\"AppNav\"] = \"appNav\";\n    PanelLaunchMethod[\"Direct\"] = \"direct\";\n    PanelLaunchMethod[\"Nav\"] = \"nav\";\n    PanelLaunchMethod[\"Notification\"] = \"notification\";\n    PanelLaunchMethod[\"Posts\"] = \"posts\";\n    PanelLaunchMethod[\"Toast\"] = \"toast\";\n    PanelLaunchMethod[\"Update\"] = \"update\";\n    PanelLaunchMethod[\"UserInitiated\"] = \"userInitiated\";\n})(PanelLaunchMethod || (PanelLaunchMethod = {}));\nexport var EventBaseType;\n(function (EventBaseType) {\n    /**\n     * Casing is matching teams implementation.\n     */\n    EventBaseType[\"PanelAction\"] = \"panelaction\";\n    /**\n     * Casing is matching teams implementation.\n     */\n    EventBaseType[\"PanelView\"] = \"panelview\";\n})(EventBaseType || (EventBaseType = {}));\nexport var EventType;\n(function (EventType) {\n    EventType[\"HttpEvent\"] = \"http\";\n    EventType[\"Scenario\"] = \"scenario\";\n    EventType[\"Trace\"] = \"trace\";\n    EventType[\"UserBI\"] = \"userbi\";\n    EventType[\"Performance\"] = \"performance\";\n})(EventType || (EventType = {}));\nexport var ActionGesture;\n(function (ActionGesture) {\n    ActionGesture[\"Click\"] = \"click\";\n    ActionGesture[\"Hover\"] = \"hover\";\n    ActionGesture[\"KeyPress\"] = \"keypress\";\n    ActionGesture[\"None\"] = \"none\";\n    ActionGesture[\"Scroll\"] = \"scroll\";\n})(ActionGesture || (ActionGesture = {}));\nexport var UserBiColumns;\n(function (UserBiColumns) {\n    UserBiColumns[\"ActionOutcome\"] = \"Action.Outcome\";\n    UserBiColumns[\"Gesture\"] = \"Action.Gesture\";\n    UserBiColumns[\"ModuleName\"] = \"Module.Name\";\n    /**\n     * Summary of the module's content. Should not include any channel name or team name.\n     * Sample values: taskBarIcon item clicked, Send, chat toast, Minimize desktop app, show new messages button,\n     * toast, Close/Minimize desktop app, app bar - chat, App bar - Teams.\n     */\n    UserBiColumns[\"ModuleSummary\"] = \"Module.Summary\";\n    /**\n     * How a panel was opened up. E.g. Nav, notification, direct, toast, userInitiated, update, login, appNav, redererTerminated.\n     */\n    UserBiColumns[\"PanelLaunchMethod\"] = \"Panel.LaunchMethod\";\n    /**\n     * The region of the page the panel is located in (Ex: Panel_Type = Channel, Panel_Region = Main or Right).\n     */\n    UserBiColumns[\"PanelRegion\"] = \"Panel.Region\";\n    /**\n     * Indicates which panel the action was performed in\n     * Sample values: Chat, Channel, taskBarMenu, toast, teamList, chatlisList, activity, notification, documentStage,\n     * offlineBanner,{other, alertList, chat, chatList, channel, teamChannelList, meSpace, calendar, calendarList,\n     * replyChain, files, fileSources, call, document, team, toast}.\n     */\n    UserBiColumns[\"PanelType\"] = \"Panel.Type\";\n    /**\n     * Optional property. Literal URL to reach the loaded panel.\n     */\n    UserBiColumns[\"PanelUri\"] = \"Panel.Uri\";\n    /**\n     * Classifies the scenario driven by a panel action. (Ex: Action_Scenario = \"composeSendMessage\"\n     * is logged when a user clicks on the compose message button).\n     */\n    UserBiColumns[\"Scenario\"] = \"Action.Scenario\";\n    /**\n     * Classifies the type of action scenario (Ex: Action_Scenario = \"openFile\", Action_ScenarioType = \"files\").\n     */\n    UserBiColumns[\"ScenarioType\"] = \"Action.ScenarioType\";\n})(UserBiColumns || (UserBiColumns = {}));\nexport var ContextColumnsBase;\n(function (ContextColumnsBase) {\n    ContextColumnsBase[\"AppId\"] = \"App.Id\";\n    ContextColumnsBase[\"AppInfoArchVersion\"] = \"AppInfo.ArchVersion\";\n    ContextColumnsBase[\"AppInfoClientType\"] = \"AppInfo.ClientType\";\n    ContextColumnsBase[\"AppInfoEnvironment\"] = \"AppInfo.Environment\";\n    ContextColumnsBase[\"AppInfoExpIds\"] = \"AppInfo.ExpIds\";\n    ContextColumnsBase[\"AppInfoExperienceName\"] = \"AppInfo.ExperienceName\";\n    ContextColumnsBase[\"AppInfoHostAppVersion\"] = \"AppInfo.HostAppVersion\";\n    ContextColumnsBase[\"AppInfoLanguage\"] = \"AppInfo.Language\";\n    ContextColumnsBase[\"AppInfoLocale\"] = \"AppInfo.Locale\";\n    ContextColumnsBase[\"AppInfoPlatformId\"] = \"AppInfo.PlatformId\";\n    ContextColumnsBase[\"AppInfoProcessArchitecture\"] = \"AppInfo.ProcessArchitecture\";\n    ContextColumnsBase[\"AppInfoVersion\"] = \"AppInfo.Version\";\n    ContextColumnsBase[\"AppInfoWebVersion\"] = \"AppInfo.WebVersion\";\n    ContextColumnsBase[\"DeviceInfoId\"] = \"DeviceInfo.Id\";\n    ContextColumnsBase[\"DeviceInfoOsName\"] = \"DeviceInfo.OsName\";\n    ContextColumnsBase[\"DeviceInfoOsVersion\"] = \"DeviceInfo.OsVersion\";\n    ContextColumnsBase[\"DeviceInfoMake\"] = \"DeviceInfo.Make\";\n    ContextColumnsBase[\"DeviceInfoModel\"] = \"DeviceInfo.Model\";\n    ContextColumnsBase[\"DeviceInfoNetworkProvider\"] = \"DeviceInfo.NetworkProvider\";\n    ContextColumnsBase[\"EventInfoIsSNS\"] = \"EventInfo.isNS\";\n    ContextColumnsBase[\"LoggerVersion\"] = \"Logger.Version\";\n    ContextColumnsBase[\"LoggerIsCollectorUrlCompliant\"] = \"Logger.isCollectorUrlCompliant\";\n    ContextColumnsBase[\"PanelContext\"] = \"Panel.Context\";\n    ContextColumnsBase[\"PanelWindowID\"] = \"Panel.WindowID\";\n    ContextColumnsBase[\"SessionId\"] = \"Session.Id\";\n    ContextColumnsBase[\"StartReason\"] = \"startReason\";\n    /**\n     * Browser UserAgent.\n     */\n    ContextColumnsBase[\"UserAgent\"] = \"userAgent\";\n    ContextColumnsBase[\"UserInfoETag\"] = \"UserInfo.ETag\";\n    ContextColumnsBase[\"UserInfoHostETag\"] = \"UserInfo.HostETag\";\n    ContextColumnsBase[\"UserInfoId\"] = \"UserInfo.Id\";\n    ContextColumnsBase[\"UserInfoLanguage\"] = \"UserInfo.Language\";\n    ContextColumnsBase[\"UserInfoLicenseType\"] = \"UserInfo.LicenseType\";\n    ContextColumnsBase[\"UserInfoMsaId\"] = \"UserInfo.MsaId\";\n    ContextColumnsBase[\"UserInfoRegion\"] = \"UserInfo.Region\";\n    ContextColumnsBase[\"UserInfoTenantId\"] = \"UserInfo.TenantId\";\n    ContextColumnsBase[\"UserInfoTenantRole\"] = \"UserInfo.TenantRole\";\n    ContextColumnsBase[\"UserRole\"] = \"userRole\";\n    ContextColumnsBase[\"UserType\"] = \"userType\";\n    ContextColumnsBase[\"WindowId\"] = \"WindowId\";\n    ContextColumnsBase[\"WindowType\"] = \"Window.Type\";\n})(ContextColumnsBase || (ContextColumnsBase = {}));\nexport var SeverityLevel;\n(function (SeverityLevel) {\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\n})(SeverityLevel || (SeverityLevel = {}));\n/**\n * The region of the page the panel is located\n * in (Ex: Panel_Type = Channel, Panel.Region = Main or Right)\n * Note: Keep the enums Alphabetically Sorted.\n */\nexport var PanelRegion;\n(function (PanelRegion) {\n    PanelRegion[\"Banner\"] = \"banner\";\n    PanelRegion[\"Dialog\"] = \"dialog\";\n    PanelRegion[\"Footer\"] = \"footer\";\n    PanelRegion[\"Header\"] = \"header\";\n    PanelRegion[\"Left\"] = \"left\";\n    PanelRegion[\"Main\"] = \"main\";\n    PanelRegion[\"Modal\"] = \"modal\";\n    PanelRegion[\"Popover\"] = \"popover\";\n    PanelRegion[\"Right\"] = \"right\";\n    PanelRegion[\"Toast\"] = \"toast\";\n    PanelRegion[\"Virtual\"] = \"virtual\";\n})(PanelRegion || (PanelRegion = {}));\nexport var PanelViewOutcome;\n(function (PanelViewOutcome) {\n    PanelViewOutcome[\"Failure\"] = \"failure\";\n    PanelViewOutcome[\"Init\"] = \"init\";\n    PanelViewOutcome[\"None\"] = \"none\";\n    PanelViewOutcome[\"Success\"] = \"success\";\n})(PanelViewOutcome || (PanelViewOutcome = {}));\n/**\n * Outcome of action taken\n * (Ex: Action_Outcome = \"read\" is logged when \"scroll\" action happens)\n * Note: Keep the enums Alphabetically Sorted.\n */\nexport var PanelActionOutcome;\n(function (PanelActionOutcome) {\n    PanelActionOutcome[\"CopyToClipboard\"] = \"copyToClipboard\";\n    PanelActionOutcome[\"Disable\"] = \"disable\";\n    PanelActionOutcome[\"DismissBanner\"] = \"dismissBanner\";\n    PanelActionOutcome[\"Enable\"] = \"enable\";\n    PanelActionOutcome[\"Hide\"] = \"hide\";\n    PanelActionOutcome[\"Inspect\"] = \"inspect\";\n    PanelActionOutcome[\"Launch\"] = \"launch\";\n    PanelActionOutcome[\"Nav\"] = \"nav\";\n    PanelActionOutcome[\"None\"] = \"none\";\n    PanelActionOutcome[\"OpenChat\"] = \"openChat\";\n    PanelActionOutcome[\"OpenDialog\"] = \"openDialog\";\n    PanelActionOutcome[\"OpenPopup\"] = \"openPopup\";\n    PanelActionOutcome[\"Read\"] = \"read\";\n    PanelActionOutcome[\"RemoveBanner\"] = \"removeBanner\";\n    PanelActionOutcome[\"RemoveChiclet\"] = \"removeChiclet\";\n    PanelActionOutcome[\"Retry\"] = \"retry\";\n    PanelActionOutcome[\"Select\"] = \"select\";\n    PanelActionOutcome[\"Show\"] = \"show\";\n    PanelActionOutcome[\"ShowBanner\"] = \"showBanner\";\n    PanelActionOutcome[\"Submit\"] = \"submit\";\n    PanelActionOutcome[\"Toggle\"] = \"toggle\";\n    PanelActionOutcome[\"Update\"] = \"update\";\n})(PanelActionOutcome || (PanelActionOutcome = {}));\nexport var ScenarioColumns;\n(function (ScenarioColumns) {\n    ScenarioColumns[\"Delta\"] = \"delta\";\n    ScenarioColumns[\"Elapsed\"] = \"elapsed\";\n    ScenarioColumns[\"Error\"] = \"error\";\n    ScenarioColumns[\"ErrorCode\"] = \"errorCode\";\n    ScenarioColumns[\"ScenarioName\"] = \"Scenario.Name\";\n    ScenarioColumns[\"ScenarioStatus\"] = \"Scenario.Status\";\n    ScenarioColumns[\"ScenarioStep\"] = \"Scenario.Step\";\n    ScenarioColumns[\"StartReason\"] = \"startReason\";\n    ScenarioColumns[\"StatusCode\"] = \"statusCode\";\n    ScenarioColumns[\"StepDelta\"] = \"stepDelta\";\n})(ScenarioColumns || (ScenarioColumns = {}));\nexport var TelemetryScenarioStatus;\n(function (TelemetryScenarioStatus) {\n    TelemetryScenarioStatus[\"Abandoned\"] = \"abandoned\";\n    TelemetryScenarioStatus[\"Failure\"] = \"failure\";\n    TelemetryScenarioStatus[\"Incomplete\"] = \"incomplete\";\n    TelemetryScenarioStatus[\"Init\"] = \"init\";\n    TelemetryScenarioStatus[\"Success\"] = \"success\";\n    TelemetryScenarioStatus[\"Timeout\"] = \"timeout\";\n})(TelemetryScenarioStatus || (TelemetryScenarioStatus = {}));\nexport var TelemetryScenarioStep;\n(function (TelemetryScenarioStep) {\n    TelemetryScenarioStep[\"Finish\"] = \"finish\";\n    TelemetryScenarioStep[\"Pause\"] = \"pause\";\n    TelemetryScenarioStep[\"Start\"] = \"start\";\n    TelemetryScenarioStep[\"Test\"] = \"test\";\n})(TelemetryScenarioStep || (TelemetryScenarioStep = {}));\nexport var HttpColumns;\n(function (HttpColumns) {\n    HttpColumns[\"ClientRequestId\"] = \"clientRequestId\";\n    HttpColumns[\"ContentLength\"] = \"contentLength\";\n    HttpColumns[\"Duration\"] = \"duration\";\n    HttpColumns[\"Hostname\"] = \"hostname\";\n    HttpColumns[\"Method\"] = \"method\";\n    HttpColumns[\"NetworkState\"] = \"networkState\";\n    HttpColumns[\"Payload\"] = \"payload\";\n    HttpColumns[\"Redirect\"] = \"redirect\";\n    HttpColumns[\"RequestCreatedTime\"] = \"requestCreatedTime\";\n    HttpColumns[\"RequestResult\"] = \"requestResult\";\n    HttpColumns[\"ResultCode\"] = \"resultCode\";\n    HttpColumns[\"Start\"] = \"start\";\n    HttpColumns[\"ReqStart\"] = \"reqStart\";\n    HttpColumns[\"RespStart\"] = \"respStart\";\n})(HttpColumns || (HttpColumns = {}));\nexport var NetworkState;\n(function (NetworkState) {\n    NetworkState[\"Offline\"] = \"offline\";\n    NetworkState[\"Online\"] = \"online\";\n})(NetworkState || (NetworkState = {}));\n//# sourceMappingURL=telemetry.constants.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport {};\n//# sourceMappingURL=telemetryClients.types.js.map","import{sendMessageToParentAsync as t,Communication as e,sendMessageEventToChild as n,sendMessageToParent as i,waitForMessageQueue as r}from\"../internal/communication.js\";import{GlobalVars as a}from\"../internal/globalVars.js\";import{registerHandler as o,removeHandler as c}from\"../internal/handlers.js\";import{ensureInitialized as l,ensureInitializeCalled as u}from\"../internal/internalAPIs.js\";import{getApiVersionTag as s}from\"../internal/telemetry.js\";import{fullyQualifyUrlString as h,validateUrl as d}from\"../internal/utils.js\";import{FrameContexts as f,HostClientType as w}from\"./constants.js\";import{runtime as m}from\"./runtime.js\";const g=\"v1\",b=\"v2\";var W;!function(W){let C,k,y;function p(){v();try{e.childWindow&&e.childWindow.close()}finally{e.childWindow=null,e.childOrigin=null}}function v(){k&&(clearInterval(k),k=0),c(\"initialize\"),c(\"navigateCrossDomain\")}function T(t){try{C&&C.success(t)}finally{C=void 0,p()}}function j(t){try{C&&C.fail(new Error(t))}finally{C=void 0,p()}}var A;W.initialize=function(){o(s(g,\"authentication.registerAuthenticateSuccessHandler\"),\"authentication.authenticate.success\",T,!1),o(s(g,\"authentication.registerAuthenticateFailureHandler\"),\"authentication.authenticate.failure\",j,!1)},W.registerAuthenticationHandlers=function(t){y=t},W.authenticate=function(i){const r=void 0!==i,c=r?i:y;if(!c)throw new Error(\"No parameters are provided for authentication\");return l(m,f.content,f.sidePanel,f.settings,f.remove,f.task,f.stage,f.meetingStage),function(i,r){return new Promise(((c,l)=>{if(a.hostClientType!==w.web){const e=h(r.url);d(e),c(t(i,\"authentication.authenticate\",[e.href,r.width,r.height,r.isExternal]).then((([t,e])=>{if(t)return e;throw new Error(e)})))}else C={success:c,fail:l},function(t){p();let i=t.width||600,r=t.height||400;i=Math.min(i,e.currentWindow.outerWidth-400),r=Math.min(r,e.currentWindow.outerHeight-200);const c=h(t.url.replace(\"{oauthRedirectMethod}\",\"web\"));d(c);let l=void 0!==e.currentWindow.screenLeft?e.currentWindow.screenLeft:e.currentWindow.screenX,u=void 0!==e.currentWindow.screenTop?e.currentWindow.screenTop:e.currentWindow.screenY;l+=e.currentWindow.outerWidth/2-i/2,u+=e.currentWindow.outerHeight/2-r/2,e.childWindow=e.currentWindow.open(c.href,\"_blank\",\"toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top=\"+u+\", left=\"+l+\", width=\"+i+\", height=\"+r),e.childWindow?(v(),k=e.currentWindow.setInterval((()=>{if(!e.childWindow||e.childWindow.closed)j(\"CancelledByUser\");else{const t=e.childOrigin;try{e.childOrigin=\"*\",n(\"ping\")}finally{e.childOrigin=t}}}),100),o(s(g,\"authentication.authenticationWindow.registerInitializeHandler\"),\"initialize\",(()=>[f.authentication,a.hostClientType])),o(s(g,\"authentication.authenticationWindow.registerNavigateCrossDomainHandler\"),\"navigateCrossDomain\",(()=>!1))):j(\"FailedToOpenWindow\")}(r)}))}(c.successCallback||c.failureCallback?s(g,\"authentication.authenticate\"):s(b,\"authentication.authenticate\"),c).then((t=>{try{return c&&c.successCallback?(c.successCallback(t),\"\"):t}finally{r||(y=void 0)}})).catch((t=>{try{if(c&&c.failureCallback)return c.failureCallback(t.message),\"\";throw t}finally{r||(y=void 0)}}))},W.getAuthToken=function(e){return u(),function(e,n){return new Promise((i=>{i(t(e,\"authentication.getAuthToken\",[null==n?void 0:n.resources,null==n?void 0:n.claims,null==n?void 0:n.silent,null==n?void 0:n.tenantId]))})).then((([t,e])=>{if(t)return e;throw new Error(e)}))}(e&&(e.successCallback||e.failureCallback)?s(g,\"authentication.getAuthToken\"):s(b,\"authentication.getAuthToken\"),e).then((t=>e&&e.successCallback?(e.successCallback(t),\"\"):t)).catch((t=>{if(e&&e.failureCallback)return e.failureCallback(t.message),\"\";throw t}))},W.getUser=function(e){return u(),function(e){return new Promise((n=>{n(t(e,\"authentication.getUser\"))})).then((([t,e])=>{if(t)return e;throw e}))}(e&&(e.successCallback||e.failureCallback)?s(g,\"authentication.getUser\"):s(b,\"authentication.getUser\")).then((t=>e&&e.successCallback?(e.successCallback(t),null):t)).catch((t=>{const n=`Error returned, code = ${t.errorCode}, message = ${t.message}`;if(e&&e.failureCallback)return e.failureCallback(n),null;throw new Error(n)}))},W.notifySuccess=function(t,n){l(m,f.authentication);const a=s(n?g:b,\"authentication.notifySuccess\");i(a,\"authentication.authenticate.success\",[t]),r(e.parentWindow,(()=>setTimeout((()=>e.currentWindow.close()),200)))},W.notifyFailure=function(t,n){l(m,f.authentication);const a=s(n?g:b,\"authentication.notifyFailure\");i(a,\"authentication.authenticate.failure\",[t]),r(e.parentWindow,(()=>setTimeout((()=>e.currentWindow.close()),200)))},(A=W.DataResidency||(W.DataResidency={})).Public=\"public\",A.EUDB=\"eudb\",A.Other=\"other\"}(W||(W={}));export{W as authentication};\n","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* PageViewPerformance.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport { isValueAssigned } from \"@microsoft/1ds-core-js\";\r\nimport { WebEvent } from \"./WebEvent\";\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    __extends(PageViewPerformance, _super);\r\n    function PageViewPerformance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n      * API to populate and send a PageViewPerformance event\r\n      * @param overrideValues - PageView overrides\r\n      * @param customProperties - Custom properties(Part C)\r\n      */\r\n    PageViewPerformance.prototype.capturePageViewPerformance = function (overrideValues, customProperties) {\r\n        overrideValues = !isValueAssigned(overrideValues) ? {} : overrideValues;\r\n        var event = {};\r\n        var properties = isValueAssigned(customProperties) ? customProperties : {};\r\n        this._setBasicProperties(event, overrideValues);\r\n        this._setPageTags(event, overrideValues);\r\n        event.isManual = !overrideValues.isAuto;\r\n        properties.behavior = this._getBehavior(overrideValues);\r\n        properties.vpHeight = overrideValues.vpHeight;\r\n        properties.vpWidth = overrideValues.vpWidth;\r\n        properties.framework = overrideValues.framework;\r\n        properties.systemTiming = overrideValues.systemTiming;\r\n        properties.customTiming = overrideValues.customTiming;\r\n        this._webAnalyticsPlugin._populatePageViewPerformance(event);\r\n        this._webAnalyticsPlugin.trackPageViewPerformance(event, properties);\r\n    };\r\n    return PageViewPerformance;\r\n}(WebEvent));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objForEachKey, deepFreeze } from \"../JavaScriptSDK/HelperFuncs\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport function createEnumStyle(values) {\r\n    var enumClass = {};\r\n    objForEachKey(values, function (field, value) {\r\n        enumClass[field] = value;\r\n        enumClass[value] = field;\r\n    });\r\n    return deepFreeze(enumClass);\r\n}\r\n/**\r\n * Create a 2 index map that maps an enum's key as both the key and value, X[\"key\"] => \"key\" and X[0] => \"keyof 0\".\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport function createEnumMap(values) {\r\n    var mapClass = {};\r\n    objForEachKey(values, function (field, value) {\r\n        mapClass[field] = field;\r\n        mapClass[value] = field;\r\n    });\r\n    return deepFreeze(mapClass);\r\n}\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport function createValueMap(values) {\r\n    var mapClass = {};\r\n    objForEachKey(values, function (field, value) {\r\n        mapClass[field] = value[1];\r\n        mapClass[value[0]] = value[1];\r\n    });\r\n    return deepFreeze(mapClass);\r\n}\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","const t=[];for(let n=0;n<256;++n)t.push((n+256).toString(16).slice(1));function n(n,o=0){return t[n[o+0]]+t[n[o+1]]+t[n[o+2]]+t[n[o+3]]+\"-\"+t[n[o+4]]+t[n[o+5]]+\"-\"+t[n[o+6]]+t[n[o+7]]+\"-\"+t[n[o+8]]+t[n[o+9]]+\"-\"+t[n[o+10]]+t[n[o+11]]+t[n[o+12]]+t[n[o+13]]+t[n[o+14]]+t[n[o+15]]}export{n as unsafeStringify};\n","import{hasScriptTags as t}from\"./utils.js\";function i(i){if(t(i))throw new Error(`Potential app id (${i}) is invalid; it contains script tags.`);if(!o(i))throw new Error(`Potential app id (${i}) is invalid; its length ${i.length} is not within the length limits (${n}-${r}).`);if(e(i))throw new Error(`Potential app id (${i}) is invalid; it contains non-printable characters.`)}const n=4,r=256;function o(t){return t.length<r&&t.length>n}function e(t){return[...t].some((t=>{const i=t.charCodeAt(0);return i<32||i>126}))}export{e as doesStringContainNonPrintableCharacters,o as isStringWithinAppIdLengthLimits,r as maximumValidAppIdLength,n as minimumValidAppIdLength,i as validateStringAsAppId};\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_POST_METHOD = \"POST\";\r\nexport var STR_DISABLED_PROPERTY_NAME = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var STR_DROPPED = \"drop\";\r\nexport var STR_SENDING = \"send\";\r\nexport var STR_REQUEUE = \"requeue\";\r\nexport var STR_RESPONSE_FAIL = \"rspFail\";\r\nexport var STR_OTHER = \"oth\";\r\nexport var DEFAULT_CACHE_CONTROL = \"no-cache, no-store\";\r\nexport var DEFAULT_CONTENT_TYPE = \"application/x-json-stream\";\r\nexport var STR_CACHE_CONTROL = \"cache-control\";\r\nexport var STR_CONTENT_TYPE_HEADER = \"content-type\";\r\nexport var STR_KILL_TOKENS_HEADER = \"kill-tokens\";\r\nexport var STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nexport var STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nexport var STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\nexport var STR_CLIENT_VERSION = \"client-version\";\r\nexport var STR_CLIENT_ID = \"client-id\";\r\nexport var STR_TIME_DELTA_TO_APPLY = \"time-delta-to-apply-millis\";\r\nexport var STR_UPLOAD_TIME = \"upload-time\";\r\nexport var STR_API_KEY = \"apikey\";\r\nexport var STR_MSA_DEVICE_TICKET = \"AuthMsaDeviceTicket\";\r\nexport var STR_AUTH_XTOKEN = \"AuthXToken\";\r\nexport var STR_SDK_VERSION = \"sdk-version\";\r\nexport var STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nexport var STR_MSFPC = \"msfpc\";\r\nexport var STR_TRACE = \"trace\";\r\nexport var STR_USER = \"user\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* ApplicationInsights.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AnalyticsPluginIdentifier, Event as EventTelemetry, Exception, Metric, PageView, PageViewPerformance, PropertiesPluginIdentifier, RemoteDependencyData, Trace, createDistributedTraceContextFromTrace, createDomEvent, createTelemetryItem, dataSanitizeString, isCrossOriginError, strNotSpecified, stringToBoolOrDefault, utlDisableStorage, utlEnableStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, InstrumentEvent, arrForEach, createProcessTelemetryContext, createUniqueNamespace, dumpObj, eventOff, eventOn, generateW3CId, getDocument, getExceptionName, getHistory, getLocation, getWindow, hasHistory, hasWindow, isError, isFunction, isNullOrUndefined, isString, isUndefined, mergeEvtNamespace, objDefineAccessors, objForEachKey, safeGetCookieMgr, strUndefined, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_ADD_TELEMETRY_INITIA15, _DYN_AUTO_TRACK_PAGE_VISI1, _DYN_COLUMN_NUMBER, _DYN_CORE, _DYN_DATA_TYPE, _DYN_DIAG_LOG, _DYN_DISABLE_EXCEPTION_TR0, _DYN_DISABLE_FLUSH_ON_BEF7, _DYN_ENABLE_AUTO_ROUTE_TR6, _DYN_ENABLE_UNHANDLED_PRO3, _DYN_ENVELOPE_TYPE, _DYN_ERROR, _DYN_ERROR_SRC, _DYN_EXCEPTION, _DYN_HREF, _DYN_IS_BROWSER_LINK_TRAC5, _DYN_IS_STORAGE_USE_DISAB4, _DYN_LENGTH, _DYN_LINE_NUMBER, _DYN_MESSAGE, _DYN_NAME_PREFIX, _DYN_OVERRIDE_PAGE_VIEW_D2, _DYN_POPULATE_PAGE_VIEW_P12, _DYN_SAMPLING_PERCENTAGE, _DYN_SEND_EXCEPTION_INTER13, _DYN_SEND_PAGE_VIEW_INTER10, _DYN_SEND_PAGE_VIEW_PERFO11, _DYN_TO_STRING, _DYN_TRACK, _DYN_TRACK_PAGE_VIEW, _DYN_TRACK_PREVIOUS_PAGE_9, _DYN__CREATE_AUTO_EXCEPTI14, _DYN__ONERROR } from \"../__DynamicConstants\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageViewPerformanceManager } from \"./Telemetry/PageViewPerformanceManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { Timing } from \"./Timing\";\r\nvar strEvent = \"event\";\r\nfunction _dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n    }\r\n}\r\nfunction _getReason(error) {\r\n    if (error && error.reason) {\r\n        var reason = error.reason;\r\n        if (!isString(reason) && isFunction(reason[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n            return reason[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        }\r\n        return dumpObj(reason);\r\n    }\r\n    // Pass the original object down which will eventually get evaluated for any message or description\r\n    return error || \"\";\r\n}\r\nvar MinMilliSeconds = 60000;\r\nfunction _configMilliseconds(value, defValue) {\r\n    value = value || defValue;\r\n    if (value < MinMilliSeconds) {\r\n        value = MinMilliSeconds;\r\n    }\r\n    return value;\r\n}\r\nfunction _getDefaultConfig(config) {\r\n    if (!config) {\r\n        config = {};\r\n    }\r\n    // set default values\r\n    config.sessionRenewalMs = _configMilliseconds(config.sessionRenewalMs, 30 * 60 * 1000);\r\n    config.sessionExpirationMs = _configMilliseconds(config.sessionExpirationMs, 24 * 60 * 60 * 1000);\r\n    config[_DYN_DISABLE_EXCEPTION_TR0 /* @min:%2edisableExceptionTracking */] = stringToBoolOrDefault(config[_DYN_DISABLE_EXCEPTION_TR0 /* @min:%2edisableExceptionTracking */]);\r\n    config[_DYN_AUTO_TRACK_PAGE_VISI1 /* @min:%2eautoTrackPageVisitTime */] = stringToBoolOrDefault(config[_DYN_AUTO_TRACK_PAGE_VISI1 /* @min:%2eautoTrackPageVisitTime */]);\r\n    config[_DYN_OVERRIDE_PAGE_VIEW_D2 /* @min:%2eoverridePageViewDuration */] = stringToBoolOrDefault(config[_DYN_OVERRIDE_PAGE_VIEW_D2 /* @min:%2eoverridePageViewDuration */]);\r\n    config[_DYN_ENABLE_UNHANDLED_PRO3 /* @min:%2eenableUnhandledPromiseRejectionTracking */] = stringToBoolOrDefault(config[_DYN_ENABLE_UNHANDLED_PRO3 /* @min:%2eenableUnhandledPromiseRejectionTracking */]);\r\n    if (isNaN(config[_DYN_SAMPLING_PERCENTAGE /* @min:%2esamplingPercentage */]) || config[_DYN_SAMPLING_PERCENTAGE /* @min:%2esamplingPercentage */] <= 0 || config[_DYN_SAMPLING_PERCENTAGE /* @min:%2esamplingPercentage */] >= 100) {\r\n        config[_DYN_SAMPLING_PERCENTAGE /* @min:%2esamplingPercentage */] = 100;\r\n    }\r\n    config[_DYN_IS_STORAGE_USE_DISAB4 /* @min:%2eisStorageUseDisabled */] = stringToBoolOrDefault(config[_DYN_IS_STORAGE_USE_DISAB4 /* @min:%2eisStorageUseDisabled */]);\r\n    config[_DYN_IS_BROWSER_LINK_TRAC5 /* @min:%2eisBrowserLinkTrackingEnabled */] = stringToBoolOrDefault(config[_DYN_IS_BROWSER_LINK_TRAC5 /* @min:%2eisBrowserLinkTrackingEnabled */]);\r\n    config[_DYN_ENABLE_AUTO_ROUTE_TR6 /* @min:%2eenableAutoRouteTracking */] = stringToBoolOrDefault(config[_DYN_ENABLE_AUTO_ROUTE_TR6 /* @min:%2eenableAutoRouteTracking */]);\r\n    config[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] = config[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] || \"\";\r\n    config.enableDebug = stringToBoolOrDefault(config.enableDebug);\r\n    config[_DYN_DISABLE_FLUSH_ON_BEF7 /* @min:%2edisableFlushOnBeforeUnload */] = stringToBoolOrDefault(config[_DYN_DISABLE_FLUSH_ON_BEF7 /* @min:%2edisableFlushOnBeforeUnload */]);\r\n    config.disableFlushOnUnload = stringToBoolOrDefault(config.disableFlushOnUnload, config[_DYN_DISABLE_FLUSH_ON_BEF7 /* @min:%2edisableFlushOnBeforeUnload */]);\r\n    return config;\r\n}\r\nfunction _updateStorageUsage(extConfig) {\r\n    // Not resetting the storage usage as someone may have manually called utlDisableStorage, so this will only\r\n    // reset based if the configuration option is provided\r\n    if (!isUndefined(extConfig[_DYN_IS_STORAGE_USE_DISAB4 /* @min:%2eisStorageUseDisabled */])) {\r\n        if (extConfig[_DYN_IS_STORAGE_USE_DISAB4 /* @min:%2eisStorageUseDisabled */]) {\r\n            utlDisableStorage();\r\n        }\r\n        else {\r\n            utlEnableStorage();\r\n        }\r\n    }\r\n}\r\nvar AnalyticsPlugin = /** @class */ (function (_super) {\r\n    __extends(AnalyticsPlugin, _super);\r\n    function AnalyticsPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AnalyticsPluginIdentifier; // do not change name or priority\r\n        _this.priority = 180; // take from reserved priority range 100- 200\r\n        _this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        var _eventTracking;\r\n        var _pageTracking;\r\n        var _pageViewManager;\r\n        var _pageViewPerformanceManager;\r\n        var _pageVisitTimeManager;\r\n        var _preInitTelemetryInitializers;\r\n        var _isBrowserLinkTrackingEnabled;\r\n        var _browserLinkInitializerAdded;\r\n        var _enableAutoRouteTracking;\r\n        var _historyListenerAdded;\r\n        var _disableExceptionTracking;\r\n        var _autoExceptionInstrumented;\r\n        var _enableUnhandledPromiseRejectionTracking;\r\n        var _autoUnhandledPromiseInstrumented;\r\n        // Counts number of trackAjax invocations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        var _trackAjaxAttempts = 0;\r\n        // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n        var _prevUri; // Assigned in the constructor\r\n        var _currUri;\r\n        var _evtNamespace;\r\n        dynamicProto(AnalyticsPlugin, _this, function (_self, _base) {\r\n            var _addHook = _base._addHook;\r\n            _initDefaults();\r\n            _self.getCookieMgr = function () {\r\n                return safeGetCookieMgr(_self[_DYN_CORE /* @min:%2ecore */]);\r\n            };\r\n            _self.processTelemetry = function (env, itemCtx) {\r\n                _self.processNext(env, itemCtx);\r\n            };\r\n            _self.trackEvent = function (event, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(event, EventTelemetry[_DYN_DATA_TYPE /* @min:%2edataType */], EventTelemetry[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(2 /* eLoggingSeverity.WARNING */, 39 /* _eInternalMessageId.TrackTraceFailed */, \"trackTrace failed, trace will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n             * @param   name    A string that identifies this event uniquely within the document.\r\n             */\r\n            _self.startTrackEvent = function (name) {\r\n                try {\r\n                    _eventTracking.start(name);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 29 /* _eInternalMessageId.StartTrackEventFailed */, \"startTrackEvent failed, event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Log an extended event that you started timing with `startTrackEvent`.\r\n             * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n             * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n             * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n             */\r\n            _self.stopTrackEvent = function (name, properties, measurements) {\r\n                try {\r\n                    _eventTracking.stop(name, undefined, properties, measurements);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 30 /* _eInternalMessageId.StopTrackEventFailed */, \"stopTrackEvent failed, event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Log a diagnostic message\r\n             * @param {ITraceTelemetry} trace\r\n             * @param ICustomProperties.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackTrace = function (trace, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(trace, Trace[_DYN_DATA_TYPE /* @min:%2edataType */], Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(2 /* eLoggingSeverity.WARNING */, 39 /* _eInternalMessageId.TrackTraceFailed */, \"trackTrace failed, trace will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Log a numeric value that is not associated with a specific event. Typically\r\n             * used to send regular reports of performance indicators. To send single measurement, just\r\n             * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n             * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n             * and sending the resulting average at intervals\r\n             * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n             * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n             * portal. Defaults to empty.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackMetric = function (metric, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(metric, Metric[_DYN_DATA_TYPE /* @min:%2edataType */], Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 36 /* _eInternalMessageId.TrackMetricFailed */, \"trackMetric failed, metric will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Logs that a page or other item was viewed.\r\n             * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n             * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n             * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n             */\r\n            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */] = function (pageView, customProperties) {\r\n                try {\r\n                    var inPv = pageView || {};\r\n                    _pageViewManager[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */](inPv, __assign(__assign(__assign({}, inPv.properties), inPv.measurements), customProperties));\r\n                    if (_self.config[_DYN_AUTO_TRACK_PAGE_VISI1 /* @min:%2eautoTrackPageVisitTime */]) {\r\n                        _pageVisitTimeManager[_DYN_TRACK_PREVIOUS_PAGE_9 /* @min:%2etrackPreviousPageVisit */](inPv.name, inPv.uri);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 37 /* _eInternalMessageId.TrackPVFailed */, \"trackPageView failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n             * @param pageView Page view item to be sent\r\n             * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n             * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n             */\r\n            _self[_DYN_SEND_PAGE_VIEW_INTER10 /* @min:%2esendPageViewInternal */] = function (pageView, properties, systemProperties) {\r\n                var doc = getDocument();\r\n                if (doc) {\r\n                    pageView.refUri = pageView.refUri === undefined ? doc.referrer : pageView.refUri;\r\n                }\r\n                var telemetryItem = createTelemetryItem(pageView, PageView[_DYN_DATA_TYPE /* @min:%2edataType */], PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                // reset ajaxes counter\r\n                _trackAjaxAttempts = 0;\r\n            };\r\n            /**\r\n             * @ignore INTERNAL ONLY\r\n             * @param pageViewPerformance\r\n             * @param properties\r\n             */\r\n            _self[_DYN_SEND_PAGE_VIEW_PERFO11 /* @min:%2esendPageViewPerformanceInternal */] = function (pageViewPerformance, properties, systemProperties) {\r\n                var telemetryItem = createTelemetryItem(pageViewPerformance, PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            };\r\n            /**\r\n             * Send browser performance metrics.\r\n             * @param pageViewPerformance\r\n             * @param customProperties\r\n             */\r\n            _self.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n                var inPvp = pageViewPerformance || {};\r\n                try {\r\n                    _pageViewPerformanceManager[_DYN_POPULATE_PAGE_VIEW_P12 /* @min:%2epopulatePageViewPerformanceEvent */](inPvp);\r\n                    _self[_DYN_SEND_PAGE_VIEW_PERFO11 /* @min:%2esendPageViewPerformanceInternal */](inPvp, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 37 /* _eInternalMessageId.TrackPVFailed */, \"trackPageViewPerformance failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n             * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n             * and send the event.\r\n             * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n             */\r\n            _self.startTrackPage = function (name) {\r\n                try {\r\n                    if (typeof name !== \"string\") {\r\n                        var doc = getDocument();\r\n                        name = doc && doc.title || \"\";\r\n                    }\r\n                    _pageTracking.start(name);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 31 /* _eInternalMessageId.StartTrackFailed */, \"startTrackPage failed, page view may not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n             * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n             * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n             * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n             * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n             * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n             */\r\n            _self.stopTrackPage = function (name, url, properties, measurement) {\r\n                try {\r\n                    if (typeof name !== \"string\") {\r\n                        var doc = getDocument();\r\n                        name = doc && doc.title || \"\";\r\n                    }\r\n                    if (typeof url !== \"string\") {\r\n                        var loc = getLocation();\r\n                        url = loc && loc[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    _pageTracking.stop(name, url, properties, measurement);\r\n                    if (_self.config[_DYN_AUTO_TRACK_PAGE_VISI1 /* @min:%2eautoTrackPageVisitTime */]) {\r\n                        _pageVisitTimeManager[_DYN_TRACK_PREVIOUS_PAGE_9 /* @min:%2etrackPreviousPageVisit */](name, url);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 32 /* _eInternalMessageId.StopTrackFailed */, \"stopTrackPage failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n            * @ignore INTERNAL ONLY\r\n            * @param exception\r\n            * @param properties\r\n            * @param systemProperties\r\n            */\r\n            _self[_DYN_SEND_EXCEPTION_INTER13 /* @min:%2esendExceptionInternal */] = function (exception, customProperties, systemProperties) {\r\n                // Adding additional edge cases to handle\r\n                // - Not passing anything (null / undefined)\r\n                var theError = (exception && (exception[_DYN_EXCEPTION /* @min:%2eexception */] || exception[_DYN_ERROR /* @min:%2eerror */])) ||\r\n                    // - Handle someone calling trackException based of v1 API where the exception was the Error\r\n                    isError(exception) && exception ||\r\n                    // - Handles no error being defined and instead of creating a new Error() instance attempt to map so any stacktrace\r\n                    //   is preserved and does not list ApplicationInsights code as the source\r\n                    { name: (exception && typeof exception), message: exception || strNotSpecified };\r\n                // If no exception object was passed assign to an empty object to avoid internal exceptions\r\n                exception = exception || {};\r\n                var exceptionPartB = new Exception(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), theError, exception.properties || customProperties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n                var telemetryItem = createTelemetryItem(exceptionPartB, Exception[_DYN_DATA_TYPE /* @min:%2edataType */], Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            };\r\n            /**\r\n             * Log an exception you have caught.\r\n             *\r\n             * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n             * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n             *\r\n             * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackException = function (exception, customProperties) {\r\n                if (exception && !exception[_DYN_EXCEPTION /* @min:%2eexception */] && exception[_DYN_ERROR /* @min:%2eerror */]) {\r\n                    exception[_DYN_EXCEPTION /* @min:%2eexception */] = exception[_DYN_ERROR /* @min:%2eerror */];\r\n                }\r\n                try {\r\n                    _self[_DYN_SEND_EXCEPTION_INTER13 /* @min:%2esendExceptionInternal */](exception, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 35 /* _eInternalMessageId.TrackExceptionFailed */, \"trackException failed, exception will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Custom error handler for Application Insights Analytics\r\n             * @param {IAutoExceptionTelemetry} exception\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self[_DYN__ONERROR /* @min:%2e_onerror */] = function (exception) {\r\n                var error = exception && exception[_DYN_ERROR /* @min:%2eerror */];\r\n                var evt = exception && exception.evt;\r\n                try {\r\n                    if (!evt) {\r\n                        var _window = getWindow();\r\n                        if (_window) {\r\n                            evt = _window[strEvent];\r\n                        }\r\n                    }\r\n                    var url = (exception && exception.url) || (getDocument() || {}).URL;\r\n                    // If no error source is provided assume the default window.onerror handler\r\n                    var errorSrc = exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */] || \"window.onerror@\" + url + \":\" + (exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0) + \":\" + (exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0);\r\n                    var properties = {\r\n                        errorSrc: errorSrc,\r\n                        url: url,\r\n                        lineNumber: exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0,\r\n                        columnNumber: exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0,\r\n                        message: exception[_DYN_MESSAGE /* @min:%2emessage */]\r\n                    };\r\n                    if (isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception[_DYN_ERROR /* @min:%2eerror */])) {\r\n                        _sendCORSException(Exception[_DYN__CREATE_AUTO_EXCEPTI14 /* @min:%2eCreateAutoException */](\"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\", url, exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0, exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0, error, evt, null, errorSrc), properties);\r\n                    }\r\n                    else {\r\n                        if (!exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */]) {\r\n                            exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */] = errorSrc;\r\n                        }\r\n                        _self.trackException({ exception: exception, severityLevel: 3 /* eSeverityLevel.Error */ }, properties);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    var errorString = error ? (error.name + \", \" + error[_DYN_MESSAGE /* @min:%2emessage */]) : \"null\";\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 11 /* _eInternalMessageId.ExceptionWhileLoggingError */, \"_onError threw exception while logging error, error will not be collected: \"\r\n                        + getExceptionName(e), { exception: dumpObj(e), errorString: errorString });\r\n                }\r\n            };\r\n            _self[_DYN_ADD_TELEMETRY_INITIA15 /* @min:%2eaddTelemetryInitializer */] = function (telemetryInitializer) {\r\n                if (_self[_DYN_CORE /* @min:%2ecore */]) {\r\n                    // Just add to the core\r\n                    return _self[_DYN_CORE /* @min:%2ecore */][_DYN_ADD_TELEMETRY_INITIA15 /* @min:%2eaddTelemetryInitializer */](telemetryInitializer);\r\n                }\r\n                // Handle \"pre-initialization\" telemetry initializers (for backward compatibility)\r\n                if (!_preInitTelemetryInitializers) {\r\n                    _preInitTelemetryInitializers = [];\r\n                }\r\n                _preInitTelemetryInitializers.push(telemetryInitializer);\r\n            };\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    return;\r\n                }\r\n                if (isNullOrUndefined(core)) {\r\n                    throwError(\"Error initializing\");\r\n                }\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                try {\r\n                    _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self.identifier), core.evtNamespace && core.evtNamespace());\r\n                    if (_preInitTelemetryInitializers) {\r\n                        arrForEach(_preInitTelemetryInitializers, function (initializer) {\r\n                            core[_DYN_ADD_TELEMETRY_INITIA15 /* @min:%2eaddTelemetryInitializer */](initializer);\r\n                        });\r\n                        _preInitTelemetryInitializers = null;\r\n                    }\r\n                    var extConfig = _populateDefaults(config);\r\n                    _updateStorageUsage(extConfig);\r\n                    _pageViewPerformanceManager = new PageViewPerformanceManager(_self[_DYN_CORE /* @min:%2ecore */]);\r\n                    _pageViewManager = new PageViewManager(_this, extConfig[_DYN_OVERRIDE_PAGE_VIEW_D2 /* @min:%2eoverridePageViewDuration */], _self[_DYN_CORE /* @min:%2ecore */], _pageViewPerformanceManager);\r\n                    _pageVisitTimeManager = new PageVisitTimeManager(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), function (pageName, pageUrl, pageVisitTime) { return trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n                    _updateBrowserLinkTracking(extConfig, config);\r\n                    _eventTracking = new Timing(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), \"trackEvent\");\r\n                    _eventTracking.action =\r\n                        function (name, url, duration, properties, measurements) {\r\n                            if (!properties) {\r\n                                properties = {};\r\n                            }\r\n                            if (!measurements) {\r\n                                measurements = {};\r\n                            }\r\n                            properties.duration = duration[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            _self.trackEvent({ name: name, properties: properties, measurements: measurements });\r\n                        };\r\n                    // initialize page view timing\r\n                    _pageTracking = new Timing(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), \"trackPageView\");\r\n                    _pageTracking.action = function (name, url, duration, properties, measurements) {\r\n                        // duration must be a custom property in order for the collector to extract it\r\n                        if (isNullOrUndefined(properties)) {\r\n                            properties = {};\r\n                        }\r\n                        properties.duration = duration[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                        var pageViewItem = {\r\n                            name: name,\r\n                            uri: url,\r\n                            properties: properties,\r\n                            measurements: measurements\r\n                        };\r\n                        _self[_DYN_SEND_PAGE_VIEW_INTER10 /* @min:%2esendPageViewInternal */](pageViewItem, properties);\r\n                    };\r\n                    if (hasWindow()) {\r\n                        _updateExceptionTracking(extConfig);\r\n                        _updateLocationChange(extConfig);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // resetting the initialized state because of failure\r\n                    _self.setInitialized(false);\r\n                    throw e;\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _pageViewManager && _pageViewManager.teardown(unloadCtx, unloadState);\r\n                // Just register to remove all events associated with this namespace\r\n                eventOff(window, null, null, _evtNamespace);\r\n                _initDefaults();\r\n            };\r\n            function _populateDefaults(config) {\r\n                var ctx = createProcessTelemetryContext(null, config, _self[_DYN_CORE /* @min:%2ecore */]);\r\n                var identifier = _self.identifier;\r\n                // load default values if specified\r\n                var defaults = _getDefaultConfig(config);\r\n                var extConfig = _self.config = ctx.getExtCfg(identifier);\r\n                if (defaults !== undefined) {\r\n                    objForEachKey(defaults, function (field, value) {\r\n                        // for each unspecified field, set the default value\r\n                        extConfig[field] = ctx.getConfig(identifier, field, value);\r\n                        if (extConfig[field] === undefined) {\r\n                            extConfig = value;\r\n                        }\r\n                    });\r\n                }\r\n                return extConfig;\r\n            }\r\n            function _updateBrowserLinkTracking(extConfig, config) {\r\n                _isBrowserLinkTrackingEnabled = extConfig[_DYN_IS_BROWSER_LINK_TRAC5 /* @min:%2eisBrowserLinkTrackingEnabled */] || config[_DYN_IS_BROWSER_LINK_TRAC5 /* @min:%2eisBrowserLinkTrackingEnabled */];\r\n                _addDefaultTelemetryInitializers();\r\n            }\r\n            /**\r\n             * Log a page visit time\r\n             * @param    pageName    Name of page\r\n             * @param    pageVisitDuration Duration of visit to the page in milleseconds\r\n             */\r\n            function trackPageVisitTime(pageName, pageUrl, pageVisitTime) {\r\n                var properties = { PageName: pageName, PageUrl: pageUrl };\r\n                _self.trackMetric({\r\n                    name: \"PageVisitTime\",\r\n                    average: pageVisitTime,\r\n                    max: pageVisitTime,\r\n                    min: pageVisitTime,\r\n                    sampleCount: 1\r\n                }, properties);\r\n            }\r\n            function _addDefaultTelemetryInitializers() {\r\n                if (!_browserLinkInitializerAdded && _isBrowserLinkTrackingEnabled) {\r\n                    var browserLinkPaths_1 = [\"/browserLinkSignalR/\", \"/__browserLink/\"];\r\n                    var dropBrowserLinkRequests = function (envelope) {\r\n                        if (_isBrowserLinkTrackingEnabled && envelope.baseType === RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n                            var remoteData = envelope.baseData;\r\n                            if (remoteData) {\r\n                                for (var i = 0; i < browserLinkPaths_1[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                                    if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return true;\r\n                    };\r\n                    _self[_DYN_ADD_TELEMETRY_INITIA15 /* @min:%2eaddTelemetryInitializer */](dropBrowserLinkRequests);\r\n                    _browserLinkInitializerAdded = true;\r\n                }\r\n            }\r\n            function _sendCORSException(exception, properties) {\r\n                var telemetryItem = createTelemetryItem(exception, Exception[_DYN_DATA_TYPE /* @min:%2edataType */], Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            }\r\n            function _updateExceptionTracking(extConfig) {\r\n                var _window = getWindow();\r\n                var locn = getLocation(true);\r\n                _disableExceptionTracking = extConfig[_DYN_DISABLE_EXCEPTION_TR0 /* @min:%2edisableExceptionTracking */];\r\n                if (!_disableExceptionTracking && !_autoExceptionInstrumented && !extConfig.autoExceptionInstrumented) {\r\n                    // We want to enable exception auto collection and it has not been done so yet\r\n                    _addHook(InstrumentEvent(_window, \"onerror\", {\r\n                        ns: _evtNamespace,\r\n                        rsp: function (callDetails, message, url, lineNumber, columnNumber, error) {\r\n                            if (!_disableExceptionTracking && callDetails.rslt !== true) {\r\n                                _self[_DYN__ONERROR /* @min:%2e_onerror */](Exception[_DYN__CREATE_AUTO_EXCEPTI14 /* @min:%2eCreateAutoException */](message, url, lineNumber, columnNumber, error, callDetails.evt));\r\n                            }\r\n                        }\r\n                    }, false));\r\n                    _autoExceptionInstrumented = true;\r\n                }\r\n                _addUnhandledPromiseRejectionTracking(extConfig, _window, locn);\r\n            }\r\n            function _updateLocationChange(extConfig) {\r\n                var win = getWindow();\r\n                var locn = getLocation(true);\r\n                _enableAutoRouteTracking = extConfig[_DYN_ENABLE_AUTO_ROUTE_TR6 /* @min:%2eenableAutoRouteTracking */] === true;\r\n                /**\r\n                 * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n                 */\r\n                if (win && _enableAutoRouteTracking && hasHistory()) {\r\n                    var _history = getHistory();\r\n                    if (isFunction(_history.pushState) && isFunction(_history.replaceState) && typeof Event !== strUndefined) {\r\n                        _addHistoryListener(extConfig, win, _history, locn);\r\n                    }\r\n                }\r\n            }\r\n            function _getDistributedTraceCtx() {\r\n                var distributedTraceCtx = null;\r\n                if (_self[_DYN_CORE /* @min:%2ecore */] && _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx) {\r\n                    distributedTraceCtx = _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx(false);\r\n                }\r\n                if (!distributedTraceCtx) {\r\n                    // Fallback when using an older Core and PropertiesPlugin\r\n                    var properties = _self[_DYN_CORE /* @min:%2ecore */].getPlugin(PropertiesPluginIdentifier);\r\n                    if (properties) {\r\n                        var context = properties.plugin.context;\r\n                        if (context) {\r\n                            distributedTraceCtx = createDistributedTraceContextFromTrace(context.telemetryTrace);\r\n                        }\r\n                    }\r\n                }\r\n                return distributedTraceCtx;\r\n            }\r\n            /**\r\n             * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n             */\r\n            function _addHistoryListener(extConfig, win, history, locn) {\r\n                var namePrefix = extConfig[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] || \"\";\r\n                function _popstateHandler() {\r\n                    if (_enableAutoRouteTracking) {\r\n                        _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                    }\r\n                }\r\n                function _locationChangeHandler() {\r\n                    // We always track the changes (if the handler is installed) to handle the feature being disabled between location changes\r\n                    if (_currUri) {\r\n                        _prevUri = _currUri;\r\n                        _currUri = locn && locn[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    else {\r\n                        _currUri = locn && locn[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    if (_enableAutoRouteTracking) {\r\n                        var distributedTraceCtx = _getDistributedTraceCtx();\r\n                        if (distributedTraceCtx) {\r\n                            distributedTraceCtx.setTraceId(generateW3CId());\r\n                            var traceLocationName = \"_unknown_\";\r\n                            if (locn && locn.pathname) {\r\n                                traceLocationName = locn.pathname + (locn.hash || \"\");\r\n                            }\r\n                            // This populates the ai.operation.name which has a maximum size of 1024 so we need to sanitize it\r\n                            distributedTraceCtx.setName(dataSanitizeString(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), traceLocationName));\r\n                        }\r\n                        setTimeout((function (uri) {\r\n                            // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */]({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                        }).bind(this, _prevUri), _self.autoRoutePVDelay);\r\n                    }\r\n                }\r\n                if (!_historyListenerAdded) {\r\n                    _addHook(InstrumentEvent(history, \"pushState\", {\r\n                        ns: _evtNamespace,\r\n                        rsp: function () {\r\n                            if (_enableAutoRouteTracking) {\r\n                                _dispatchEvent(win, createDomEvent(namePrefix + \"pushState\"));\r\n                                _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                            }\r\n                        }\r\n                    }, true));\r\n                    _addHook(InstrumentEvent(history, \"replaceState\", {\r\n                        ns: _evtNamespace,\r\n                        rsp: function () {\r\n                            if (_enableAutoRouteTracking) {\r\n                                _dispatchEvent(win, createDomEvent(namePrefix + \"replaceState\"));\r\n                                _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                            }\r\n                        }\r\n                    }, true));\r\n                    eventOn(win, namePrefix + \"popstate\", _popstateHandler, _evtNamespace);\r\n                    eventOn(win, namePrefix + \"locationchange\", _locationChangeHandler, _evtNamespace);\r\n                    _historyListenerAdded = true;\r\n                }\r\n            }\r\n            function _addUnhandledPromiseRejectionTracking(extConfig, _window, _location) {\r\n                _enableUnhandledPromiseRejectionTracking = extConfig[_DYN_ENABLE_UNHANDLED_PRO3 /* @min:%2eenableUnhandledPromiseRejectionTracking */] === true;\r\n                if (_enableUnhandledPromiseRejectionTracking && !_autoUnhandledPromiseInstrumented) {\r\n                    // We want to enable exception auto collection and it has not been done so yet\r\n                    _addHook(InstrumentEvent(_window, \"onunhandledrejection\", {\r\n                        ns: _evtNamespace,\r\n                        rsp: function (callDetails, error) {\r\n                            if (_enableUnhandledPromiseRejectionTracking && callDetails.rslt !== true) { // handled could be typeof function\r\n                                _self[_DYN__ONERROR /* @min:%2e_onerror */](Exception[_DYN__CREATE_AUTO_EXCEPTI14 /* @min:%2eCreateAutoException */](_getReason(error), _location ? _location[_DYN_HREF /* @min:%2ehref */] : \"\", 0, 0, error, callDetails.evt));\r\n                            }\r\n                        }\r\n                    }, false));\r\n                    _autoUnhandledPromiseInstrumented = true;\r\n                    extConfig.autoUnhandledPromiseInstrumented = _autoUnhandledPromiseInstrumented;\r\n                }\r\n            }\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity {eLoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The log message.\r\n             */\r\n            function _throwInternal(severity, msgId, msg, properties, isUserAct) {\r\n                _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]().throwInternal(severity, msgId, msg, properties, isUserAct);\r\n            }\r\n            function _initDefaults() {\r\n                _eventTracking = null;\r\n                _pageTracking = null;\r\n                _pageViewManager = null;\r\n                _pageViewPerformanceManager = null;\r\n                _pageVisitTimeManager = null;\r\n                _preInitTelemetryInitializers = null;\r\n                _isBrowserLinkTrackingEnabled = false;\r\n                _browserLinkInitializerAdded = false;\r\n                _enableAutoRouteTracking = false;\r\n                _historyListenerAdded = false;\r\n                _disableExceptionTracking = false;\r\n                _autoExceptionInstrumented = false;\r\n                _enableUnhandledPromiseRejectionTracking = false;\r\n                _autoUnhandledPromiseInstrumented = false;\r\n                // Counts number of trackAjax invocations.\r\n                // By default we only monitor X ajax call per view to avoid too much load.\r\n                // Default value is set in config.\r\n                // This counter keeps increasing even after the limit is reached.\r\n                _trackAjaxAttempts = 0;\r\n                // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n                var location = getLocation(true);\r\n                _prevUri = location && location[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                _currUri = null;\r\n                _evtNamespace = null;\r\n            }\r\n            // For backward compatibility\r\n            objDefineAccessors(_self, \"_pageViewManager\", function () { return _pageViewManager; });\r\n            objDefineAccessors(_self, \"_pageViewPerformanceManager\", function () { return _pageViewPerformanceManager; });\r\n            objDefineAccessors(_self, \"_pageVisitTimeManager\", function () { return _pageVisitTimeManager; });\r\n            objDefineAccessors(_self, \"_evtNamespace\", function () { return \".\" + _evtNamespace; });\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AnalyticsPlugin.prototype.getCookieMgr.\r\n// Removed Stub for AnalyticsPlugin.prototype.processTelemetry.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.startTrackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.stopTrackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackTrace.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackMetric.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackPageView.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendPageViewInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendPageViewPerformanceInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackPageViewPerformance.\r\n// Removed Stub for AnalyticsPlugin.prototype.startTrackPage.\r\n// Removed Stub for AnalyticsPlugin.prototype.stopTrackPage.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendExceptionInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackException.\r\n// Removed Stub for AnalyticsPlugin.prototype._onerror.\r\n// Removed Stub for AnalyticsPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for AnalyticsPlugin.prototype.initialize.\r\n    AnalyticsPlugin.Version = '2.8.12'; // Not currently used anywhere\r\n    AnalyticsPlugin.getDefaultConfig = _getDefaultConfig;\r\n    return AnalyticsPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { AnalyticsPlugin };\r\n//# sourceMappingURL=AnalyticsPlugin.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Utc.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\n/**\r\n * Client has hashed or dropped any PII information in the event. Vortex will hash any server-supplied PII fields such\r\n * as PUID or Global Device ID. This value is used to populate the `ext.utc.eventFlags`.\r\n * See https://1dsdocs.azurewebsites.net/schema/PartA/utc.html#eventflags and\r\n * further details https://www.osgwiki.com/wiki/Telemetry#De-Identification_of_Telemetry_Events.\r\n */\r\nexport var HASH_IDENTIFIERS_FLAG = 0x100000;\r\n/**\r\n * Client has dropped any PII information in the event. Information contained within attached MSA token will not be inserted.\r\n * This value is used to populate the `ext.utc.eventFlags`.\r\n * See https://1dsdocs.azurewebsites.net/schema/PartA/utc.html#eventflags and\r\n * further details https://www.osgwiki.com/wiki/Telemetry#De-Identification_of_Telemetry_Events.\r\n */\r\nexport var DROP_IDENTIFIERS_FLAG = 0x200000;\r\n/**\r\n * Client has dropped any PII information in the event, but the IP address is allowed to be retained on the server side.\r\n * This value is used to populate the `ext.utc.eventFlags`.\r\n * See https://1dsdocs.azurewebsites.net/schema/PartA/utc.html#eventflags and\r\n * further details https://www.osgwiki.com/wiki/Telemetry#De-Identification_of_Telemetry_Events.\r\n */\r\nexport var DROP_IDENTIFIERS_EXCEPT_IP_FLAG = 0x400000;\r\nvar Utc = /** @class */ (function () {\r\n    function Utc(propertiesConfig) {\r\n        var self = this;\r\n        self.popSample = 100;\r\n        self.eventFlags = 0;\r\n        if (propertiesConfig.hashIdentifiers) {\r\n            self.eventFlags = self.eventFlags | HASH_IDENTIFIERS_FLAG;\r\n        }\r\n        if (propertiesConfig.dropIdentifiers) {\r\n            self.eventFlags = self.eventFlags | DROP_IDENTIFIERS_FLAG;\r\n        }\r\n    }\r\n    return Utc;\r\n}());\r\nexport { Utc };\r\n//# sourceMappingURL=Utc.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getTelemetryUrlEcsConfig } from '../ecs/getTelemetryUrlEcsConfig';\nimport { TelemetryResponse } from './TelemetryResponse';\n// Stores telemetry response by tenant id to prevent JavaScript exception when using multiple compliant telemetry clients:\n//   - ECS client will throw an exception when trying to initialize an already loaded configuration.\nconst telemetryResponseByTenantId = new Map();\nexport const loadTelemetryRegion = (tenantId, logToConsole = false) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    if (telemetryResponseByTenantId.has(tenantId)) {\n        // TODO: Fix TypeScript cast to TelemetryResponse.\n        return Promise.resolve(telemetryResponseByTenantId.get(tenantId));\n    }\n    try {\n        const resp = yield getTelemetryUrlEcsConfig(tenantId);\n        // telemetryUrl for US region is empty. So only checking telemetry region since it shouldn't be null.\n        if (!((_a = resp === null || resp === void 0 ? void 0 : resp.TeamsClientMwtPackages) === null || _a === void 0 ? void 0 : _a.TelemetryRegion)) {\n            // This check is to catch any malformed ECS response (like the one that caused Teams outage of 2022)\n            throw new Error('Telemetry region or url is not defined');\n        }\n        const telemetryModel = new TelemetryResponse(resp.TeamsClientMwtPackages.TelemetryRegion, \n        // TODO: Fix TypeScript cast to string.\n        resp.TeamsClientMwtPackages.TelemetryUrl);\n        telemetryResponseByTenantId.set(tenantId, telemetryModel);\n        return telemetryModel;\n    }\n    catch (exception) {\n        // TODO: Investigate if exception will always be of type Error\n        const error = exception;\n        if (logToConsole) {\n            console.log(error.message + error.stack);\n        }\n        throw error;\n    }\n});\n//# sourceMappingURL=TelemetryRegionInfo.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strShimHasOwnProperty = \"hasOwnProperty\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\nexport var ObjAssign = ObjClass[\"assign\"];\r\nexport var ObjCreate = ObjClass[\"create\"];\r\nexport var ObjDefineProperty = ObjClass[\"defineProperty\"];\r\nexport var ObjHasOwnProperty = ObjProto[strShimHasOwnProperty];\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_GET_NOTIFY_MGR, _DYN_INITIALIZE, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { BaseCore } from \"./BaseCore\";\r\nimport { DiagnosticLogger } from \"./DiagnosticLogger\";\r\nimport { isNullOrUndefined, throwError } from \"./HelperFuncs\";\r\nimport { STR_EVENTS_DISCARDED, STR_GET_PERF_MGR } from \"./InternalConstants\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { doPerf } from \"./PerfManager\";\r\nvar AppInsightsCore = /** @class */ (function (_super) {\r\n    __extends(AppInsightsCore, _super);\r\n    function AppInsightsCore() {\r\n        var _this = _super.call(this) || this;\r\n        dynamicProto(AppInsightsCore, _this, function (_self, _base) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                _base[_DYN_INITIALIZE /* @min:%2einitialize */](config, extensions, logger || new DiagnosticLogger(config), notificationManager || new NotificationManager(config));\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */](), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throwError(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    _validateTelemetryItem(telemetryItem);\r\n                    _base.track(telemetryItem);\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            function _validateTelemetryItem(telemetryItem) {\r\n                if (isNullOrUndefined(telemetryItem[_DYN_NAME /* @min:%2ename */])) {\r\n                    _notifyInvalidEvent(telemetryItem);\r\n                    throwError(\"telemetry name required\");\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]();\r\n                if (manager) {\r\n                    manager[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */]([telemetryItem], 2 /* eEventsDiscardedReason.InvalidEvent */);\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}(BaseCore));\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nimport { v4 as uuid } from 'uuid';\nimport { ScenarioColumns, TelemetryScenarioStatus, TelemetryScenarioStep, } from '../interfaces/telemetry.constants';\nimport { logger } from '../logger/Logger';\n/**\n * TODO: JSDoc for this class and all its methods and members.\n * A class designed to be used by Components to track a scenario.\n *\n * \"mark()\" method marks a telemetry scenario. (e.g. The Component starts loading)\n * or logs additional events on that scenario.\n * \"measure()\" method logs telemetry scenario when it is done and measures the duration and other metrics etc. (e.g. The Component has loaded).\n */\nexport class ScenarioTracker {\n    /**\n     * TODO: JSDoc.\n     */\n    constructor() {\n        this.mark = ({ scenarioName, databag, step, status }) => {\n            var _a, _b;\n            let telemetryEvent = this.trackerMap.get(scenarioName);\n            if (!telemetryEvent) {\n                const startTime = new Date();\n                const id = uuid();\n                logger.info(`[ScenarioTracker] scenario [${scenarioName}]: has started.`);\n                telemetryEvent = {\n                    id,\n                    [ScenarioColumns.ScenarioName]: scenarioName,\n                    [ScenarioColumns.ScenarioStep]: TelemetryScenarioStep.Start,\n                    [ScenarioColumns.ScenarioStatus]: TelemetryScenarioStatus.Init,\n                    startTime,\n                    lastUpdatedTime: startTime,\n                    elapsed: 1,\n                    stepDelta: 0,\n                    databag,\n                };\n                this.trackerMap.set(scenarioName, telemetryEvent);\n                logger.logScenarioTrackerEvent(telemetryEvent);\n            }\n            else {\n                logger.info(`[ScenarioTracker] scenario [${scenarioName}]: has already started. Adding a step event.`);\n                const telemetryEvent = (_a = this.trackerMap.get(scenarioName)) !== null && _a !== void 0 ? _a : {};\n                const currentDateTime = new Date();\n                telemetryEvent.elapsed = (_b = telemetryEvent.elapsed) !== null && _b !== void 0 ? _b : 0 + 1;\n                telemetryEvent.lastUpdatedTime = currentDateTime;\n                telemetryEvent[ScenarioColumns.ScenarioStep] = step;\n                telemetryEvent[ScenarioColumns.ScenarioStatus] = status;\n                if (telemetryEvent.stepDelta) {\n                    telemetryEvent.stepDelta = +currentDateTime - +telemetryEvent.stepDelta;\n                }\n                else if (telemetryEvent.startTime) {\n                    telemetryEvent.stepDelta = +currentDateTime - +telemetryEvent.startTime;\n                }\n                if (databag) {\n                    telemetryEvent.databag = databag;\n                }\n                this.trackerMap.set(scenarioName, telemetryEvent);\n                logger.logScenarioTrackerEvent(telemetryEvent);\n            }\n            return telemetryEvent;\n        };\n        this.trackerMap = new Map();\n    }\n    /**\n     * @param root0\n     */\n    measure({ scenarioName, error, databag, status, errorCode, }) {\n        const finishTime = new Date();\n        const telemetryEvent = this.trackerMap.get(scenarioName);\n        if (!telemetryEvent) {\n            logger.error(`Trying to call measure without previously calling start for scenario ${scenarioName}.`);\n        }\n        else {\n            const stepDelta = telemetryEvent.lastUpdatedTime ? +finishTime - +telemetryEvent.lastUpdatedTime : undefined;\n            const duration = telemetryEvent.startTime ? +finishTime - +telemetryEvent.startTime : undefined;\n            let scenarioStatus = status !== null && status !== void 0 ? status : telemetryEvent[ScenarioColumns.ScenarioStatus];\n            telemetryEvent.elapsed\n                ? (telemetryEvent.elapsed += 1)\n                : (telemetryEvent.elapsed = 1);\n            telemetryEvent.lastUpdatedTime = finishTime;\n            telemetryEvent.finishTime = finishTime;\n            if (databag) {\n                telemetryEvent.databag = databag;\n            }\n            if (error) {\n                telemetryEvent.error = error;\n                telemetryEvent.errorCode = errorCode;\n                if (!status) {\n                    scenarioStatus = TelemetryScenarioStatus.Failure;\n                }\n            }\n            logger.logScenarioTrackerEvent(Object.assign(Object.assign({}, telemetryEvent), { [ScenarioColumns.ScenarioName]: scenarioName, id: telemetryEvent.id, [ScenarioColumns.ScenarioStep]: TelemetryScenarioStep.Finish, [ScenarioColumns.ScenarioStatus]: scenarioStatus, stepDelta: stepDelta, delta: duration, elapsed: telemetryEvent.elapsed }));\n            this.trackerMap.delete(scenarioName);\n            return telemetryEvent;\n        }\n    }\n}\n//# sourceMappingURL=ScenarioTracker.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eEventsDiscardedReason.Unknown */,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1 /* eEventsDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2 /* eEventsDiscardedReason.InvalidEvent */,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3 /* eEventsDiscardedReason.SizeLimitExceeded */,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4 /* eEventsDiscardedReason.KillSwitch */,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5 /* eEventsDiscardedReason.QueueFull */\r\n});\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","function t(t,n){var e={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&n.indexOf(r)<0&&(e[r]=t[r]);if(null!=t&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(t);o<r.length;o++)n.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(t,r[o])&&(e[r[o]]=t[r[o]])}return e}function n(t,n,e,r){return new(e||(e=Promise))((function(o,c){function p(t){try{u(r.next(t))}catch(t){c(t)}}function f(t){try{u(r.throw(t))}catch(t){c(t)}}function u(t){var n;t.done?o(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(p,f)}u((r=r.apply(t,n||[])).next())}))}\"function\"==typeof SuppressedError&&SuppressedError;export{n as __awaiter,t as __rest};\n","import{__module as t}from\"../../../../../../_virtual/node.js\";import e from\"../../../../../../_virtual/__polyfill-node.tty.js\";import s from\"../../../../../../_virtual/__polyfill-node.util.js\";import{__require as o}from\"../../../../supports-color@8.1.1/node_modules/supports-color/browser.js\";import{__require as r}from\"./common.js\";var n;function i(){return n||(n=1,function(t,n){const i=e,p=s;n.init=function(t){t.inspectOpts={};const e=Object.keys(n.inspectOpts);for(let s=0;s<e.length;s++)t.inspectOpts[e[s]]=n.inspectOpts[e[s]]},n.log=function(...t){return process.stderr.write(p.formatWithOptions(n.inspectOpts,...t)+\"\\n\")},n.formatArgs=function(e){const{namespace:s,useColors:o}=this;if(o){const o=this.color,r=\"\u001b[3\"+(o<8?o:\"8;5;\"+o),n=`  ${r};1m${s} \u001b[0m`;e[0]=n+e[0].split(\"\\n\").join(\"\\n\"+n),e.push(r+\"m+\"+t.exports.humanize(this.diff)+\"\u001b[0m\")}else e[0]=function(){if(n.inspectOpts.hideDate)return\"\";return(new Date).toISOString()+\" \"}()+s+\" \"+e[0]},n.save=function(t){t?process.env.DEBUG=t:delete process.env.DEBUG},n.load=function(){return process.env.DEBUG},n.useColors=function(){return\"colors\"in n.inspectOpts?Boolean(n.inspectOpts.colors):i.isatty(process.stderr.fd)},n.destroy=p.deprecate((()=>{}),\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"),n.colors=[6,2,3,4,5,1];try{const t=o();t&&(t.stderr||t).level>=2&&(n.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(t){}n.inspectOpts=Object.keys(process.env).filter((t=>/^debug_/i.test(t))).reduce(((t,e)=>{const s=e.substring(6).toLowerCase().replace(/_([a-z])/g,((t,e)=>e.toUpperCase()));let o=process.env[e];return o=!!/^(yes|on|true|enabled)$/i.test(o)||!/^(no|off|false|disabled)$/i.test(o)&&(\"null\"===o?null:Number(o)),t[s]=o,t}),{}),t.exports=r()(n);const{formatters:c}=t.exports;c.o=function(t){return this.inspectOpts.colors=this.useColors,p.inspect(t,this.inspectOpts).split(\"\\n\").map((t=>t.trim())).join(\" \")},c.O=function(t){return this.inspectOpts.colors=this.useColors,p.inspect(t,this.inspectOpts)}}(t,t.exports)),t.exports}export{i as __require};\n","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nvar _a;\r\n/**\r\n* HttpManager.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport EVTClockSkewManager from \"./ClockSkewManager\";\r\nimport EVTKillSwitch from \"./KillSwitch\";\r\nimport { FullVersionString, _throwInternal, _warnToConsole, arrForEach, dateNow, doPerf, dumpObj, extend, getLocation, getNavigator, getTime, hasOwnProperty, isArray, isBeaconsSupported, isFetchSupported, isNullOrUndefined, isNumber, isReactNative, isString, isUndefined, isValueAssigned, isXhrSupported, objForEachKey, objKeys, openXhr, strTrim, strUndefined, useXDomainRequest } from \"@microsoft/1ds-core-js\";\r\nimport { DEFAULT_CACHE_CONTROL, DEFAULT_CONTENT_TYPE, STR_API_KEY, STR_AUTH_XTOKEN, STR_CACHE_CONTROL, STR_CLIENT_ID, STR_CLIENT_VERSION, STR_CONTENT_TYPE_HEADER, STR_DISABLED_PROPERTY_NAME, STR_DROPPED, STR_EMPTY, STR_KILL_DURATION_HEADER, STR_KILL_DURATION_SECONDS_HEADER, STR_KILL_TOKENS_HEADER, STR_MSA_DEVICE_TICKET, STR_MSFPC, STR_NO_RESPONSE_BODY, STR_OTHER, STR_POST_METHOD, STR_REQUEUE, STR_RESPONSE_FAIL, STR_SENDING, STR_TIME_DELTA_HEADER, STR_TIME_DELTA_TO_APPLY, STR_UPLOAD_TIME } from \"./InternalConstants\";\r\nimport { retryPolicyGetMillisToBackoffForRetry, retryPolicyShouldRetryForStatus } from \"./RetryPolicy\";\r\nimport { Serializer } from \"./Serializer\";\r\nvar strSendAttempt = \"sendAttempt\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\n/**\r\n * Identifies the default notification reason to the action names\r\n */\r\nvar _eventActionMap = (_a = {},\r\n    _a[1 /* EventBatchNotificationReason.Paused */] = STR_REQUEUE,\r\n    _a[100 /* EventBatchNotificationReason.RequeueEvents */] = STR_REQUEUE,\r\n    _a[200 /* EventBatchNotificationReason.Complete */] = \"sent\",\r\n    _a[8004 /* EventBatchNotificationReason.KillSwitch */] = STR_DROPPED,\r\n    _a[8003 /* EventBatchNotificationReason.SizeLimitExceeded */] = STR_DROPPED,\r\n    _a);\r\nvar _collectorQsHeaders = {};\r\nvar _collectorHeaderToQs = {};\r\nfunction _addCollectorHeaderQsMapping(qsName, headerName, allowQs) {\r\n    _collectorQsHeaders[qsName] = headerName;\r\n    if (allowQs !== false) {\r\n        _collectorHeaderToQs[headerName] = qsName;\r\n    }\r\n}\r\n_addCollectorHeaderQsMapping(STR_MSA_DEVICE_TICKET, STR_MSA_DEVICE_TICKET, false);\r\n_addCollectorHeaderQsMapping(STR_CLIENT_VERSION, STR_CLIENT_VERSION);\r\n_addCollectorHeaderQsMapping(STR_CLIENT_ID, \"Client-Id\");\r\n_addCollectorHeaderQsMapping(STR_API_KEY, STR_API_KEY);\r\n_addCollectorHeaderQsMapping(STR_TIME_DELTA_TO_APPLY, STR_TIME_DELTA_TO_APPLY);\r\n_addCollectorHeaderQsMapping(STR_UPLOAD_TIME, STR_UPLOAD_TIME);\r\n_addCollectorHeaderQsMapping(STR_AUTH_XTOKEN, STR_AUTH_XTOKEN);\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _hasHeader(headers, header) {\r\n    var hasHeader = false;\r\n    if (headers && header) {\r\n        var keys = objKeys(headers);\r\n        if (keys && keys.length > 0) {\r\n            var lowerHeader = header.toLowerCase();\r\n            for (var lp = 0; lp < keys.length; lp++) {\r\n                var value = keys[lp];\r\n                if (value && hasOwnProperty(header, value) &&\r\n                    value.toLowerCase() === lowerHeader) {\r\n                    hasHeader = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return hasHeader;\r\n}\r\nfunction _addRequestDetails(details, name, value, useHeaders) {\r\n    if (name && value && value.length > 0) {\r\n        if (useHeaders && _collectorQsHeaders[name]) {\r\n            details.hdrs[_collectorQsHeaders[name]] = value;\r\n            details.useHdrs = true;\r\n        }\r\n        else {\r\n            details.url += \"&\" + name + \"=\" + value;\r\n        }\r\n    }\r\n}\r\nfunction _prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\n/**\r\n * Class managing the sending of requests.\r\n */\r\nvar HttpManager = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param requestQueue   - The queue that contains the requests to be sent.\r\n     */\r\n    function HttpManager(maxEventsPerBatch, maxConnections, maxRequestRetriesBeforeBackoff, actions, timeoutOverride) {\r\n        this._responseHandlers = [];\r\n        var _urlString = \"?cors=true&\" + STR_CONTENT_TYPE_HEADER.toLowerCase() + \"=\" + DEFAULT_CONTENT_TYPE;\r\n        var _killSwitch = new EVTKillSwitch();\r\n        var _paused = false;\r\n        var _clockSkewManager = new EVTClockSkewManager();\r\n        var _useBeacons = false;\r\n        var _outstandingRequests = 0; // Holds the number of outstanding async requests that have not returned a response yet\r\n        var _postManager;\r\n        var _logger;\r\n        var _sendInterfaces;\r\n        var _core;\r\n        var _customHttpInterface = true;\r\n        var _queryStringParameters = [];\r\n        var _headers = {};\r\n        var _batchQueue = [];\r\n        var _serializer = null;\r\n        var _enableEventTimings = false;\r\n        var _cookieMgr;\r\n        var _isUnloading = false;\r\n        var _useHeaders = false;\r\n        var _xhrTimeout;\r\n        var _disableXhrSync;\r\n        var _disableFetchKeepAlive;\r\n        var _canHaveReducedPayload;\r\n        var _addNoResponse;\r\n        dynamicProto(HttpManager, this, function (_self) {\r\n            var _sendCredentials = true;\r\n            _self.initialize = function (endpointUrl, core, postChannel, httpInterface, channelConfig) {\r\n                var _a;\r\n                if (!channelConfig) {\r\n                    channelConfig = {};\r\n                }\r\n                _urlString = endpointUrl + _urlString;\r\n                _useHeaders = !isUndefined(channelConfig.avoidOptions) ? !channelConfig.avoidOptions : true;\r\n                _core = core;\r\n                _cookieMgr = core.getCookieMgr();\r\n                _enableEventTimings = !_core.config.disableEventTimings;\r\n                var enableCompoundKey = !!_core.config.enableCompoundKey;\r\n                _postManager = postChannel;\r\n                _logger = _postManager.diagLog();\r\n                var valueSanitizer = channelConfig.valueSanitizer;\r\n                var stringifyObjects = channelConfig.stringifyObjects;\r\n                if (!isUndefined(channelConfig.enableCompoundKey)) {\r\n                    enableCompoundKey = !!channelConfig.enableCompoundKey;\r\n                }\r\n                _xhrTimeout = channelConfig.xhrTimeout;\r\n                _disableXhrSync = !!channelConfig.disableXhrSync;\r\n                _disableFetchKeepAlive = !!channelConfig.disableFetchKeepAlive;\r\n                _addNoResponse = channelConfig.addNoResponse !== false;\r\n                _useBeacons = !isReactNative(); // Only use beacons if not running in React Native\r\n                _serializer = new Serializer(_core, valueSanitizer, stringifyObjects, enableCompoundKey);\r\n                if (!isNullOrUndefined(channelConfig.useSendBeacon)) {\r\n                    _useBeacons = !!channelConfig.useSendBeacon;\r\n                }\r\n                var syncHttpInterface = httpInterface;\r\n                var beaconHttpInterface = channelConfig.alwaysUseXhrOverride ? httpInterface : null;\r\n                var fetchSyncHttpInterface = channelConfig.alwaysUseXhrOverride ? httpInterface : null;\r\n                var beaconUnloadTransports = [3 /* TransportType.Beacon */, 2 /* TransportType.Fetch */];\r\n                if (!httpInterface) {\r\n                    _customHttpInterface = false;\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1.protocol && location_1.protocol.toLowerCase() === \"file:\") {\r\n                        // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                        _sendCredentials = false;\r\n                    }\r\n                    var theTransports = [];\r\n                    if (isReactNative()) {\r\n                        // Use Fetch or XDR/XHR\r\n                        theTransports = [2 /* TransportType.Fetch */, 1 /* TransportType.Xhr */];\r\n                        beaconUnloadTransports = [2 /* TransportType.Fetch */, 1 /* TransportType.Xhr */, 3 /* TransportType.Beacon */];\r\n                    }\r\n                    else {\r\n                        // Use XDR/XHR, Fetch or beacons\r\n                        theTransports = [1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */];\r\n                    }\r\n                    // Prefix any user requested transport(s) values\r\n                    theTransports = _prependTransports(theTransports, channelConfig.transports);\r\n                    httpInterface = _getSenderInterface(theTransports, false);\r\n                    if (!httpInterface) {\r\n                        _warnToConsole(_logger, \"No available transport to send events\");\r\n                    }\r\n                    syncHttpInterface = _getSenderInterface(theTransports, true);\r\n                }\r\n                if (!beaconHttpInterface) {\r\n                    // Allow overriding the usage of sendBeacon\r\n                    beaconUnloadTransports = _prependTransports(beaconUnloadTransports, channelConfig.unloadTransports);\r\n                    beaconHttpInterface = _getSenderInterface(beaconUnloadTransports, true);\r\n                }\r\n                _canHaveReducedPayload = !_customHttpInterface && ((_useBeacons && isBeaconsSupported()) || (!_disableFetchKeepAlive && isFetchSupported(true)));\r\n                _sendInterfaces = (_a = {},\r\n                    _a[0 /* EventSendType.Batched */] = httpInterface,\r\n                    _a[1 /* EventSendType.Synchronous */] = syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */], true),\r\n                    _a[2 /* EventSendType.SendBeacon */] = beaconHttpInterface || syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */], true),\r\n                    _a[3 /* EventSendType.SyncFetch */] = fetchSyncHttpInterface || _getSenderInterface([2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */], true) || syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */], true),\r\n                    _a);\r\n            };\r\n            // Special internal method to allow the DebugPlugin to hook embedded objects\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports.length) {\r\n                    transportType = transports[lp];\r\n                    if (transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            sendPostFunc = _xdrSendPost;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSendPost;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || (syncSupport && !_disableFetchKeepAlive))) {\r\n                        sendPostFunc = _fetchSendPost;\r\n                    }\r\n                    else if (_useBeacons && transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported()) {\r\n                        sendPostFunc = _beaconSendPost;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return {\r\n                        _transport: transportType,\r\n                        _isSync: syncSupport,\r\n                        sendPOST: sendPostFunc\r\n                    };\r\n                }\r\n                return null;\r\n            }\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_sendInterfaces[0 /* EventSendType.Batched */], _killSwitch, _serializer, _sendInterfaces];\r\n            };\r\n            function _xdrSendPost(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var xdr = new XDomainRequest();\r\n                xdr.open(STR_POST_METHOD, payload.urlString);\r\n                if (payload.timeout) {\r\n                    xdr.timeout = payload.timeout;\r\n                }\r\n                // can't get the status code in xdr.\r\n                xdr.onload = function () {\r\n                    // we will assume onload means the request succeeded.\r\n                    var response = _getResponseText(xdr);\r\n                    _doOnComplete(oncomplete, 200, {}, response);\r\n                    _handleCollectorResponse(response);\r\n                };\r\n                // we will assume onerror means we need to drop the events.\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {});\r\n                };\r\n                // we will assume ontimeout means we need to retry the events.\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                // https://cypressnorth.com/web-programming-and-development/internet-explorer-aborting-ajax-requests-fixed/\r\n                // tslint:disable-next-line:no-empty\r\n                xdr.onprogress = function () { };\r\n                if (sync) {\r\n                    xdr.send(payload.data);\r\n                }\r\n                else {\r\n                    timeoutOverride.set(function () {\r\n                        xdr.send(payload.data);\r\n                    }, 0);\r\n                }\r\n            }\r\n            function _fetchSendPost(payload, oncomplete, sync) {\r\n                var _a;\r\n                var theUrl = payload.urlString;\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var requestInit = (_a = {\r\n                        body: payload.data,\r\n                        method: STR_POST_METHOD\r\n                    },\r\n                    _a[STR_DISABLED_PROPERTY_NAME] = true,\r\n                    _a);\r\n                if (sync) {\r\n                    requestInit.keepalive = true;\r\n                    if (payload._sendReason === 2 /* SendRequestReason.Unload */) {\r\n                        // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                        // just like beacon send assume that the events have been accepted and processed\r\n                        ignoreResponse = true;\r\n                        if (_addNoResponse) {\r\n                            theUrl += _noResponseQs;\r\n                        }\r\n                    }\r\n                }\r\n                if (_sendCredentials) {\r\n                    // Don't send credentials when URL is file://\r\n                    requestInit.credentials = \"include\";\r\n                }\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers).length > 0) {\r\n                    requestInit.headers = payload.headers;\r\n                }\r\n                fetch(theUrl, requestInit).then(function (response) {\r\n                    var headerMap = {};\r\n                    var responseText = STR_EMPTY;\r\n                    var headers = response.headers;\r\n                    if (headers) {\r\n                        headers[\"forEach\"](function (value, name) {\r\n                            headerMap[name] = value;\r\n                        });\r\n                    }\r\n                    if (response.body) {\r\n                        response.text().then(function (text) {\r\n                            responseText = text;\r\n                        });\r\n                    }\r\n                    if (!responseHandled) {\r\n                        responseHandled = true;\r\n                        _doOnComplete(oncomplete, response.status, headerMap, responseText);\r\n                        _handleCollectorResponse(responseText);\r\n                    }\r\n                })[\"catch\"](function (error) {\r\n                    // In case there is an error in the request. Set the status to 0\r\n                    // so that the events can be retried later.\r\n                    if (!responseHandled) {\r\n                        responseHandled = true;\r\n                        _doOnComplete(oncomplete, 0, {});\r\n                    }\r\n                });\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                }\r\n                if (!responseHandled && payload.timeout > 0) {\r\n                    // Simulate timeout\r\n                    timeoutOverride.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                        }\r\n                    }, payload.timeout);\r\n                }\r\n            }\r\n            function _xhrSendPost(payload, oncomplete, sync) {\r\n                var theUrl = payload.urlString;\r\n                function _appendHeader(theHeaders, xhr, name) {\r\n                    if (!theHeaders[name] && xhr && xhr.getResponseHeader) {\r\n                        var value = xhr.getResponseHeader(name);\r\n                        if (value) {\r\n                            theHeaders[name] = strTrim(value);\r\n                        }\r\n                    }\r\n                    return theHeaders;\r\n                }\r\n                function _getAllResponseHeaders(xhr) {\r\n                    var theHeaders = {};\r\n                    if (!xhr.getAllResponseHeaders) {\r\n                        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n                        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n                        // as collector is not currently returning the correct header to allow JS to access these headers\r\n                        theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n                        theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n                        theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n                    }\r\n                    else {\r\n                        theHeaders = _convertAllHeadersToMap(xhr.getAllResponseHeaders());\r\n                    }\r\n                    return theHeaders;\r\n                }\r\n                function xhrComplete(xhr, responseTxt) {\r\n                    _doOnComplete(oncomplete, xhr.status, _getAllResponseHeaders(xhr), responseTxt);\r\n                }\r\n                if (sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                var xhrRequest = openXhr(STR_POST_METHOD, theUrl, _sendCredentials, true, sync, payload.timeout);\r\n                // Set custom headers (e.g. gzip) here (after open())\r\n                objForEachKey(payload.headers, function (name, value) {\r\n                    xhrRequest.setRequestHeader(name, value);\r\n                });\r\n                xhrRequest.onload = function () {\r\n                    var response = _getResponseText(xhrRequest);\r\n                    xhrComplete(xhrRequest, response);\r\n                    _handleCollectorResponse(response);\r\n                };\r\n                xhrRequest.onerror = function () {\r\n                    xhrComplete(xhrRequest);\r\n                };\r\n                xhrRequest.ontimeout = function () {\r\n                    xhrComplete(xhrRequest);\r\n                };\r\n                xhrRequest.send(payload.data);\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 518 /* _eExtendedInternalMessageId.SendPostOnCompleteFailure */, dumpObj(e));\r\n                }\r\n            }\r\n            function _beaconSendPost(payload, oncomplete, sync) {\r\n                // Custom headers not supported in sendBeacon payload.headers would be ignored\r\n                var internalPayloadData = payload;\r\n                var status = 200;\r\n                var thePayload = internalPayloadData._thePayload;\r\n                var theUrl = payload.urlString + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                try {\r\n                    var nav_1 = getNavigator();\r\n                    if (!nav_1.sendBeacon(theUrl, payload.data)) {\r\n                        if (thePayload) {\r\n                            // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                            var droppedBatches_1 = [];\r\n                            arrForEach(thePayload.batches, function (theBatch) {\r\n                                if (droppedBatches_1 && theBatch && theBatch.count() > 0) {\r\n                                    var theEvents = theBatch.events();\r\n                                    for (var lp = 0; lp < theEvents.length; lp++) {\r\n                                        if (!nav_1.sendBeacon(theUrl, _serializer.getEventBlob(theEvents[lp]))) {\r\n                                            // Can't send anymore, so split the batch and drop the rest\r\n                                            droppedBatches_1.push(theBatch.split(lp));\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    // Remove all of the events from the existing batch in the payload as the copy includes the original\r\n                                    droppedBatches_1.push(theBatch.split(0));\r\n                                }\r\n                            });\r\n                            _sendBatchesNotification(droppedBatches_1, 8003 /* EventBatchNotificationReason.SizeLimitExceeded */, thePayload.sendType, true);\r\n                        }\r\n                        else {\r\n                            status = 0;\r\n                        }\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    _warnToConsole(_logger, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(ex));\r\n                    status = 0;\r\n                }\r\n                finally {\r\n                    _doOnComplete(oncomplete, status, {}, STR_EMPTY);\r\n                }\r\n            }\r\n            function _isBeaconPayload(sendType) {\r\n                // Sync Fetch has the same payload limitation as sendBeacon -- 64kb limit, so treat both as a beacon send\r\n                return sendType === 2 /* EventSendType.SendBeacon */ || sendType === 3 /* EventSendType.SyncFetch */;\r\n            }\r\n            function _adjustSendType(sendType) {\r\n                if (_isUnloading && _isBeaconPayload(sendType)) {\r\n                    sendType = 2 /* EventSendType.SendBeacon */;\r\n                }\r\n                return sendType;\r\n            }\r\n            _self.addQueryStringParameter = function (name, value) {\r\n                for (var i = 0; i < _queryStringParameters.length; i++) {\r\n                    if (_queryStringParameters[i].name === name) {\r\n                        _queryStringParameters[i].value = value;\r\n                        return;\r\n                    }\r\n                }\r\n                _queryStringParameters.push({ name: name, value: value });\r\n            };\r\n            _self.addHeader = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self.canSendRequest = function () {\r\n                return _hasIdleConnection() && _clockSkewManager.allowRequestSending();\r\n            };\r\n            _self.sendQueuedRequests = function (sendType, sendReason) {\r\n                if (isUndefined(sendType)) {\r\n                    sendType = 0 /* EventSendType.Batched */;\r\n                }\r\n                if (_isUnloading) {\r\n                    sendType = _adjustSendType(sendType);\r\n                    sendReason = 2 /* SendRequestReason.Unload */;\r\n                }\r\n                if (_canSendPayload(_batchQueue, sendType, 0)) {\r\n                    _sendBatches(_clearQueue(), 0, false, sendType, sendReason || 0 /* SendRequestReason.Undefined */);\r\n                }\r\n            };\r\n            _self.isCompletelyIdle = function () {\r\n                return !_paused && _outstandingRequests === 0 && _batchQueue.length === 0;\r\n            };\r\n            _self.setUnloading = function (value) {\r\n                _isUnloading = value;\r\n            };\r\n            _self.addBatch = function (theBatch) {\r\n                if (theBatch && theBatch.count() > 0) {\r\n                    // Try and kill the event faster\r\n                    if (_killSwitch.isTenantKilled(theBatch.iKey())) {\r\n                        return false;\r\n                    }\r\n                    _batchQueue.push(theBatch);\r\n                }\r\n                return true;\r\n            };\r\n            /**\r\n             * Queue all the remaining requests to be sent. The requests will be\r\n             * sent using HTML5 Beacons if they are available.\r\n             */\r\n            _self.teardown = function () {\r\n                if (_batchQueue.length > 0) {\r\n                    _sendBatches(_clearQueue(), 0, true, 2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                }\r\n            };\r\n            /**\r\n             * Pause the sending of requests. No new requests will be sent.\r\n             */\r\n            _self.pause = function () {\r\n                _paused = true;\r\n            };\r\n            /**\r\n             * Resume the sending of requests.\r\n             */\r\n            _self.resume = function () {\r\n                _paused = false;\r\n                _self.sendQueuedRequests(0 /* EventSendType.Batched */, 4 /* SendRequestReason.Resumed */);\r\n            };\r\n            /**\r\n             * Sends a request synchronously to the Aria collector. This api is used to send\r\n             * a request containing a single immediate event.\r\n             *\r\n             * @param batch - The request to be sent.\r\n             * @param sendReason   - The token used to send the request.\r\n             */\r\n            _self.sendSynchronousBatch = function (batch, sendType, sendReason) {\r\n                // This will not take into account the max connections restriction. Since this is sync, we can\r\n                // only send one of this request at a time and thus should not worry about multiple connections\r\n                // being used to send synchronous events.\r\n                // Increment active connection since we are still going to use a connection to send the request.\r\n                if (batch && batch.count() > 0) {\r\n                    if (isNullOrUndefined(sendType)) {\r\n                        sendType = 1 /* EventSendType.Synchronous */;\r\n                    }\r\n                    if (_isUnloading) {\r\n                        sendType = _adjustSendType(sendType);\r\n                        sendReason = 2 /* SendRequestReason.Unload */;\r\n                    }\r\n                    // For sync requests we will not wait for the clock skew.\r\n                    _sendBatches([batch], 0, false, sendType, sendReason || 0 /* SendRequestReason.Undefined */);\r\n                }\r\n            };\r\n            function _hasIdleConnection() {\r\n                return !_paused && _outstandingRequests < maxConnections;\r\n            }\r\n            function _clearQueue() {\r\n                var theQueue = _batchQueue;\r\n                _batchQueue = [];\r\n                return theQueue;\r\n            }\r\n            function _canSendPayload(theBatches, sendType, retryCnt) {\r\n                var result = false;\r\n                if (theBatches && theBatches.length > 0 && !_paused && _sendInterfaces[sendType] && _serializer) {\r\n                    // Always attempt to send synchronous events don't wait for idle or clockSkew\r\n                    // and don't block retry requests if clockSkew is not yet set\r\n                    result = (sendType !== 0 /* EventSendType.Batched */) || (_hasIdleConnection() && (retryCnt > 0 || _clockSkewManager.allowRequestSending()));\r\n                }\r\n                return result;\r\n            }\r\n            function _createDebugBatches(theBatches) {\r\n                var values = {};\r\n                if (theBatches) {\r\n                    arrForEach(theBatches, function (theBatch, idx) {\r\n                        values[idx] = {\r\n                            iKey: theBatch.iKey(),\r\n                            evts: theBatch.events()\r\n                        };\r\n                    });\r\n                }\r\n                return values;\r\n            }\r\n            function _sendBatches(theBatches, retryCount, isTeardown, sendType, sendReason) {\r\n                if (!theBatches || theBatches.length === 0) {\r\n                    // Nothing to do\r\n                    return;\r\n                }\r\n                if (_paused) {\r\n                    _sendBatchesNotification(theBatches, 1 /* EventBatchNotificationReason.Paused */, sendType);\r\n                    return;\r\n                }\r\n                // Make sure that if we are unloading the sendType is a supported version\r\n                sendType = _adjustSendType(sendType);\r\n                try {\r\n                    var orgBatches_1 = theBatches;\r\n                    var isSynchronous_1 = sendType !== 0 /* EventSendType.Batched */;\r\n                    doPerf(_core, function () { return \"HttpManager:_sendBatches\"; }, function (perfEvt) {\r\n                        if (perfEvt) {\r\n                            // Perf Monitoring is enabled, so create a \"Quick\" copy of the original batches so we still report\r\n                            // the original values as part of the perfEvent. This is because theBatches uses .shift() to remove each\r\n                            // batch as they are processed - removing from the original array, so by the time the _createDebugBatches()\r\n                            // function is called the passed in value has changed and therefore the reported value for the perfEvent is incorrect\r\n                            theBatches = theBatches.slice(0);\r\n                        }\r\n                        var droppedBatches = [];\r\n                        var thePayload = null;\r\n                        var serializationStart = getTime();\r\n                        var sendInterface = _sendInterfaces[sendType] || (isSynchronous_1 ? _sendInterfaces[1 /* EventSendType.Synchronous */] : _sendInterfaces[0 /* EventSendType.Batched */]);\r\n                        var sendTransport = sendInterface && sendInterface._transport;\r\n                        // Sync Fetch has the same payload limitation as sendBeacon -- 64kb limit\r\n                        var isReducedPayload = _canHaveReducedPayload && (_isUnloading || _isBeaconPayload(sendType) || (sendTransport === 3 /* TransportType.Beacon */ || (sendInterface._isSync && sendTransport === 2 /* TransportType.Fetch */)));\r\n                        while (_canSendPayload(theBatches, sendType, retryCount)) {\r\n                            var theBatch = theBatches.shift();\r\n                            if (theBatch && theBatch.count() > 0) {\r\n                                if (!_killSwitch.isTenantKilled(theBatch.iKey())) {\r\n                                    // Make sure we have a payload object\r\n                                    thePayload = thePayload || _serializer.createPayload(retryCount, isTeardown, isSynchronous_1, isReducedPayload, sendReason, sendType);\r\n                                    // Add the batch to the current payload\r\n                                    if (!_serializer.appendPayload(thePayload, theBatch, maxEventsPerBatch)) {\r\n                                        // Entire batch was not added so send the payload and retry adding this batch\r\n                                        _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                                        serializationStart = getTime();\r\n                                        theBatches = [theBatch].concat(theBatches);\r\n                                        thePayload = null;\r\n                                    }\r\n                                    else if (thePayload.overflow !== null) {\r\n                                        // Total Payload size was exceeded so send the payload and add the unsent as the next batch to send\r\n                                        theBatches = [thePayload.overflow].concat(theBatches);\r\n                                        thePayload.overflow = null;\r\n                                        _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                                        serializationStart = getTime();\r\n                                        thePayload = null;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    droppedBatches.push(theBatch);\r\n                                }\r\n                            }\r\n                        }\r\n                        // Make sure to flush any remaining payload\r\n                        if (thePayload) {\r\n                            _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                        }\r\n                        if (theBatches.length > 0) {\r\n                            // Add any unsent batches back to the head of the queue\r\n                            _batchQueue = theBatches.concat(_batchQueue);\r\n                        }\r\n                        // Now send notification about any dropped events\r\n                        _sendBatchesNotification(droppedBatches, 8004 /* EventBatchNotificationReason.KillSwitch */, sendType);\r\n                    }, function () { return ({ batches: _createDebugBatches(orgBatches_1), retryCount: retryCount, isTeardown: isTeardown, isSynchronous: isSynchronous_1, sendReason: sendReason, useSendBeacon: _isBeaconPayload(sendType), sendType: sendType }); }, !isSynchronous_1);\r\n                }\r\n                catch (ex) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"Unexpected Exception sending batch: \" + dumpObj(ex));\r\n                }\r\n            }\r\n            function _buildRequestDetails(thePayload, useHeaders) {\r\n                var requestDetails = {\r\n                    url: _urlString,\r\n                    hdrs: {},\r\n                    useHdrs: false // Assume no headers\r\n                };\r\n                if (!useHeaders) {\r\n                    // Attempt to map headers to a query string if possible\r\n                    objForEachKey(_headers, function (name, value) {\r\n                        if (_collectorHeaderToQs[name]) {\r\n                            _addRequestDetails(requestDetails, _collectorHeaderToQs[name], value, false);\r\n                        }\r\n                        else {\r\n                            // No mapping, so just include in the headers anyway (may not get sent if using sendBeacon())\r\n                            requestDetails.hdrs[name] = value;\r\n                            requestDetails.useHdrs = true;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    // Copy the pre-defined headers into the payload headers\r\n                    requestDetails.hdrs = extend(requestDetails.hdrs, _headers);\r\n                    requestDetails.useHdrs = (objKeys(requestDetails.hdrs).length > 0);\r\n                }\r\n                _addRequestDetails(requestDetails, STR_CLIENT_ID, \"NO_AUTH\", useHeaders);\r\n                _addRequestDetails(requestDetails, STR_CLIENT_VERSION, FullVersionString, useHeaders);\r\n                var apiQsKeys = STR_EMPTY;\r\n                arrForEach(thePayload.apiKeys, function (apiKey) {\r\n                    if (apiQsKeys.length > 0) {\r\n                        apiQsKeys += \",\";\r\n                    }\r\n                    apiQsKeys += apiKey;\r\n                });\r\n                _addRequestDetails(requestDetails, STR_API_KEY, apiQsKeys, useHeaders);\r\n                _addRequestDetails(requestDetails, STR_UPLOAD_TIME, dateNow().toString(), useHeaders);\r\n                var msfpc = _getMsfpc(thePayload);\r\n                if (isValueAssigned(msfpc)) {\r\n                    requestDetails.url += \"&ext.intweb.msfpc=\" + msfpc;\r\n                }\r\n                if (_clockSkewManager.shouldAddClockSkewHeaders()) {\r\n                    _addRequestDetails(requestDetails, STR_TIME_DELTA_TO_APPLY, _clockSkewManager.getClockSkewHeaderValue(), useHeaders);\r\n                }\r\n                if (_core.getWParam) {\r\n                    var wParam = _core.getWParam();\r\n                    if (wParam >= 0) {\r\n                        requestDetails.url += \"&w=\" + wParam;\r\n                    }\r\n                }\r\n                for (var i = 0; i < _queryStringParameters.length; i++) {\r\n                    requestDetails.url += \"&\" + _queryStringParameters[i].name + \"=\" + _queryStringParameters[i].value;\r\n                }\r\n                return requestDetails;\r\n            }\r\n            function _setTimingValue(timings, name, value) {\r\n                timings[name] = timings[name] || {};\r\n                timings[name][_postManager.identifier] = value;\r\n            }\r\n            function _doPayloadSend(thePayload, serializationStart, serializationCompleted, sendReason) {\r\n                if (thePayload && thePayload.payloadBlob && thePayload.payloadBlob.length > 0) {\r\n                    var useSendHook_1 = !!_self.sendHook;\r\n                    var sendInterface_1 = _sendInterfaces[thePayload.sendType];\r\n                    // Send all data using a beacon style transport if closing mode is on or channel was teared down\r\n                    if (!_isBeaconPayload(thePayload.sendType) && thePayload.isBeacon && thePayload.sendReason === 2 /* SendRequestReason.Unload */) {\r\n                        sendInterface_1 = _sendInterfaces[2 /* EventSendType.SendBeacon */] || _sendInterfaces[3 /* EventSendType.SyncFetch */] || sendInterface_1;\r\n                    }\r\n                    var useHeaders_1 = _useHeaders;\r\n                    // Disable header usage if we know we are using sendBeacon as additional headers are not supported\r\n                    if (thePayload.isBeacon || sendInterface_1._transport === 3 /* TransportType.Beacon */) {\r\n                        useHeaders_1 = false;\r\n                    }\r\n                    var requestDetails_1 = _buildRequestDetails(thePayload, useHeaders_1);\r\n                    useHeaders_1 = useHeaders_1 || requestDetails_1.useHdrs;\r\n                    var sendEventStart_1 = getTime();\r\n                    doPerf(_core, function () { return \"HttpManager:_doPayloadSend\"; }, function () {\r\n                        // Increment the send attempt count and add timings after packaging (So it's not serialized in the 1st attempt)\r\n                        for (var batchLp = 0; batchLp < thePayload.batches.length; batchLp++) {\r\n                            var theBatch = thePayload.batches[batchLp];\r\n                            var theEvents = theBatch.events();\r\n                            for (var evtLp = 0; evtLp < theEvents.length; evtLp++) {\r\n                                var telemetryItem = theEvents[evtLp];\r\n                                if (_enableEventTimings) {\r\n                                    var timings = telemetryItem.timings = telemetryItem.timings || {};\r\n                                    _setTimingValue(timings, \"sendEventStart\", sendEventStart_1);\r\n                                    _setTimingValue(timings, \"serializationStart\", serializationStart);\r\n                                    _setTimingValue(timings, \"serializationCompleted\", serializationCompleted);\r\n                                }\r\n                                telemetryItem[strSendAttempt] > 0 ? telemetryItem[strSendAttempt]++ : telemetryItem[strSendAttempt] = 1;\r\n                            }\r\n                        }\r\n                        // Note: always sending this notification in a synchronous manner.\r\n                        _sendBatchesNotification(thePayload.batches, (1000 /* EventBatchNotificationReason.SendingUndefined */ + (sendReason || 0 /* SendRequestReason.Undefined */)), thePayload.sendType, true);\r\n                        // Disabling the use of const because of Issue: \r\n                        // - Task 9227844: [1DS] Some environments and packagers automatically \"freeze\" objects which are defined as const which causes any mutations to throw\r\n                        // eslint-disable-next-line prefer-const\r\n                        var orgPayloadData = {\r\n                            data: thePayload.payloadBlob,\r\n                            urlString: requestDetails_1.url,\r\n                            headers: requestDetails_1.hdrs,\r\n                            _thePayload: thePayload,\r\n                            _sendReason: sendReason,\r\n                            timeout: _xhrTimeout,\r\n                            disableXhrSync: _disableXhrSync,\r\n                            disableFetchKeepAlive: _disableFetchKeepAlive\r\n                        };\r\n                        // Only automatically add the following headers if already sending headers and we are not attempting to avoid an options call\r\n                        if (useHeaders_1) {\r\n                            if (!_hasHeader(orgPayloadData.headers, STR_CACHE_CONTROL)) {\r\n                                orgPayloadData.headers[STR_CACHE_CONTROL] = DEFAULT_CACHE_CONTROL;\r\n                            }\r\n                            if (!_hasHeader(orgPayloadData.headers, STR_CONTENT_TYPE_HEADER)) {\r\n                                orgPayloadData.headers[STR_CONTENT_TYPE_HEADER] = DEFAULT_CONTENT_TYPE;\r\n                            }\r\n                        }\r\n                        var sender = null;\r\n                        if (sendInterface_1) {\r\n                            // Send sync requests if the request is immediate or we are tearing down telemetry.\r\n                            sender = function (payload) {\r\n                                // Notify the clock skew manager that we are sending the first request (Potentially blocking all further requests)\r\n                                _clockSkewManager.firstRequestSent();\r\n                                var onComplete = function (status, headers) {\r\n                                    _retryRequestIfNeeded(status, headers, thePayload, sendReason);\r\n                                };\r\n                                var isSync = thePayload.isTeardown || thePayload.isSync;\r\n                                try {\r\n                                    sendInterface_1.sendPOST(payload, onComplete, isSync);\r\n                                    if (_self.sendListener) {\r\n                                        // Send the original payload to the listener\r\n                                        _self.sendListener(orgPayloadData, payload, isSync, thePayload.isBeacon);\r\n                                    }\r\n                                }\r\n                                catch (ex) {\r\n                                    _warnToConsole(_logger, \"Unexpected exception sending payload. Ex:\" + dumpObj(ex));\r\n                                    _doOnComplete(onComplete, 0, {});\r\n                                }\r\n                            };\r\n                        }\r\n                        doPerf(_core, function () { return \"HttpManager:_doPayloadSend.sender\"; }, function () {\r\n                            if (sender) {\r\n                                if (thePayload.sendType === 0 /* EventSendType.Batched */) {\r\n                                    _outstandingRequests++;\r\n                                }\r\n                                // Only call the hook if it's defined and we are not using sendBeacon as additional headers are not supported\r\n                                if (useSendHook_1 && !thePayload.isBeacon && sendInterface_1._transport !== 3 /* TransportType.Beacon */) {\r\n                                    // Create a new IPayloadData that is sent into the hook method, so that the hook method\r\n                                    // can't change the object references to the orgPayloadData (it can still change the content -- mainly the headers)\r\n                                    // Disabling the use of const because of Issue: \r\n                                    // - Task 9227844: [1DS] Some environments and packagers automatically \"freeze\" objects which are defined as const which causes any mutations to throw\r\n                                    // eslint-disable-next-line prefer-const\r\n                                    var hookData_1 = {\r\n                                        data: orgPayloadData.data,\r\n                                        urlString: orgPayloadData.urlString,\r\n                                        headers: extend({}, orgPayloadData.headers),\r\n                                        timeout: orgPayloadData.timeout,\r\n                                        disableXhrSync: orgPayloadData.disableXhrSync,\r\n                                        disableFetchKeepAlive: orgPayloadData.disableFetchKeepAlive\r\n                                    };\r\n                                    var senderCalled_1 = false;\r\n                                    doPerf(_core, function () { return \"HttpManager:_doPayloadSend.sendHook\"; }, function () {\r\n                                        try {\r\n                                            _self.sendHook(hookData_1, function (payload) {\r\n                                                senderCalled_1 = true;\r\n                                                // Add back the internal properties\r\n                                                if (!_customHttpInterface && !payload._thePayload) {\r\n                                                    payload._thePayload = payload._thePayload || orgPayloadData._thePayload;\r\n                                                    payload._sendReason = payload._sendReason || orgPayloadData._sendReason;\r\n                                                }\r\n                                                sender(payload);\r\n                                            }, thePayload.isSync || thePayload.isTeardown);\r\n                                        }\r\n                                        catch (ex) {\r\n                                            if (!senderCalled_1) {\r\n                                                // The hook never called the sender -- assume that it never will\r\n                                                sender(orgPayloadData);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    sender(orgPayloadData);\r\n                                }\r\n                            }\r\n                        });\r\n                    }, function () { return ({ thePayload: thePayload, serializationStart: serializationStart, serializationCompleted: serializationCompleted, sendReason: sendReason }); }, thePayload.isSync);\r\n                }\r\n                if (thePayload.sizeExceed && thePayload.sizeExceed.length > 0) {\r\n                    // Ensure that we send any discard events for oversize events even when there was no payload to send\r\n                    _sendBatchesNotification(thePayload.sizeExceed, 8003 /* EventBatchNotificationReason.SizeLimitExceeded */, thePayload.sendType);\r\n                }\r\n                if (thePayload.failedEvts && thePayload.failedEvts.length > 0) {\r\n                    // Ensure that we send any discard events for events that could not be serialized even when there was no payload to send\r\n                    _sendBatchesNotification(thePayload.failedEvts, 8002 /* EventBatchNotificationReason.InvalidEvent */, thePayload.sendType);\r\n                }\r\n            }\r\n            function _addEventCompletedTimings(theEvents, sendEventCompleted) {\r\n                if (_enableEventTimings) {\r\n                    arrForEach(theEvents, function (theEvent) {\r\n                        var timings = theEvent.timings = theEvent.timings || {};\r\n                        _setTimingValue(timings, \"sendEventCompleted\", sendEventCompleted);\r\n                    });\r\n                }\r\n            }\r\n            function _retryRequestIfNeeded(status, headers, thePayload, sendReason) {\r\n                var reason = 9000 /* EventBatchNotificationReason.ResponseFailure */;\r\n                var droppedBatches = null;\r\n                var isRetrying = false;\r\n                var backOffTrans = false;\r\n                try {\r\n                    var shouldRetry = true;\r\n                    if (typeof status !== strUndefined) {\r\n                        if (headers) {\r\n                            _clockSkewManager.setClockSkew(headers[STR_TIME_DELTA_HEADER]);\r\n                            var killDuration = headers[STR_KILL_DURATION_HEADER] || headers[\"kill-duration-seconds\"];\r\n                            arrForEach(_killSwitch.setKillSwitchTenants(headers[STR_KILL_TOKENS_HEADER], killDuration), function (killToken) {\r\n                                arrForEach(thePayload.batches, function (theBatch) {\r\n                                    if (theBatch.iKey() === killToken) {\r\n                                        // Make sure we have initialized the array\r\n                                        droppedBatches = droppedBatches || [];\r\n                                        // Create a copy of the batch with all of the events (and more importantly the action functions)\r\n                                        var removedEvents = theBatch.split(0);\r\n                                        // And then remove the events for the payload batch and reduce the actual number of processed\r\n                                        thePayload.numEvents -= removedEvents.count();\r\n                                        droppedBatches.push(removedEvents);\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        // Disabling triple-equals rule to avoid httpOverrides from failing because they are returning a string value\r\n                        // tslint:disable-next-line:triple-equals\r\n                        if (status == 200 || status == 204) {\r\n                            // Response was successfully sent\r\n                            reason = 200 /* EventBatchNotificationReason.Complete */;\r\n                            return;\r\n                        }\r\n                        if (!retryPolicyShouldRetryForStatus(status) || thePayload.numEvents <= 0) {\r\n                            // Only retry for specific response codes and if there is still events after kill switch processing\r\n                            shouldRetry = false;\r\n                        }\r\n                        // Derive the notification response from the HttpStatus Code\r\n                        reason = 9000 /* EventBatchNotificationReason.ResponseFailure */ + (status % 1000);\r\n                    }\r\n                    if (shouldRetry) {\r\n                        // The events should be retried -- so change notification to requeue them\r\n                        reason = 100 /* EventBatchNotificationReason.RequeueEvents */;\r\n                        var retryCount_1 = thePayload.retryCnt;\r\n                        if (thePayload.sendType === 0 /* EventSendType.Batched */) {\r\n                            // attempt to resend the entire batch\r\n                            if (retryCount_1 < maxRequestRetriesBeforeBackoff) {\r\n                                isRetrying = true;\r\n                                _doAction(function () {\r\n                                    // try to resend the same batches\r\n                                    if (thePayload.sendType === 0 /* EventSendType.Batched */) {\r\n                                        // Reduce the outstanding request count (if this was an async request) as we didn't reduce the count\r\n                                        // previously and we are about to reschedule our retry attempt and we want an attempt to send\r\n                                        // to occur, it's also required to ensure that a follow up handleRequestFinished() call occurs\r\n                                        _outstandingRequests--;\r\n                                    }\r\n                                    _sendBatches(thePayload.batches, retryCount_1 + 1, thePayload.isTeardown, _isUnloading ? 2 /* EventSendType.SendBeacon */ : thePayload.sendType, 5 /* SendRequestReason.Retry */);\r\n                                }, _isUnloading, retryPolicyGetMillisToBackoffForRetry(retryCount_1));\r\n                            }\r\n                            else {\r\n                                backOffTrans = true;\r\n                                if (_isUnloading) {\r\n                                    // we are unloading so don't try and requeue the events otherwise let the events get requeued and resent during the backoff sending\r\n                                    // This will also cause the events to be purged based on the priority (if necessary)\r\n                                    reason = 8001 /* EventBatchNotificationReason.NonRetryableStatus */;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                finally {\r\n                    if (!isRetrying) {\r\n                        // Make sure the clockSkewManager doesn't blocking further sending of requests once we have a proper response\r\n                        // This won't override any previously sent clock Skew value\r\n                        _clockSkewManager.setClockSkew();\r\n                        _handleRequestFinished(thePayload, reason, sendReason, backOffTrans);\r\n                    }\r\n                    _sendBatchesNotification(droppedBatches, 8004 /* EventBatchNotificationReason.KillSwitch */, thePayload.sendType);\r\n                }\r\n            }\r\n            function _handleRequestFinished(thePayload, batchReason, sendReason, backOffTrans) {\r\n                try {\r\n                    if (backOffTrans) {\r\n                        // Slow down the transmission requests\r\n                        _postManager._backOffTransmission();\r\n                    }\r\n                    if (batchReason === 200 /* EventBatchNotificationReason.Complete */) {\r\n                        if (!backOffTrans && !thePayload.isSync) {\r\n                            // We have a successful async response, so the lets open the floodgates\r\n                            // The reason for checking isSync is to avoid unblocking if beacon send occurred as it\r\n                            // doesn't wait for a response.\r\n                            _postManager._clearBackOff();\r\n                        }\r\n                        _addCompleteTimings(thePayload.batches);\r\n                    }\r\n                    // Send the notifications synchronously\r\n                    _sendBatchesNotification(thePayload.batches, batchReason, thePayload.sendType, true);\r\n                }\r\n                finally {\r\n                    if (thePayload.sendType === 0 /* EventSendType.Batched */) {\r\n                        // we always need to decrement this value otherwise the httpmanager locks up and won't send any more events\r\n                        _outstandingRequests--;\r\n                        // Don't try to send additional queued events if this is a retry operation as the retried\r\n                        // response will eventually call _handleRequestFinished for the retried event\r\n                        if (sendReason !== 5 /* SendRequestReason.Retry */) {\r\n                            // Try and send any other queued batched events\r\n                            _self.sendQueuedRequests(thePayload.sendType, sendReason);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _addCompleteTimings(theBatches) {\r\n                if (_enableEventTimings) {\r\n                    var sendEventCompleted_1 = getTime();\r\n                    arrForEach(theBatches, function (theBatch) {\r\n                        if (theBatch && theBatch.count() > 0) {\r\n                            _addEventCompletedTimings(theBatch.events(), sendEventCompleted_1);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            function _doAction(cb, isSync, interval) {\r\n                if (isSync) {\r\n                    cb();\r\n                }\r\n                else {\r\n                    timeoutOverride.set(cb, interval);\r\n                }\r\n            }\r\n            /**\r\n            * Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n            */\r\n            // tslint:disable-next-line: align\r\n            function _convertAllHeadersToMap(headersString) {\r\n                var headers = {};\r\n                if (isString(headersString)) {\r\n                    var headersArray = strTrim(headersString).split(/[\\r\\n]+/);\r\n                    arrForEach(headersArray, function (headerEntry) {\r\n                        if (headerEntry) {\r\n                            var idx = headerEntry.indexOf(\": \");\r\n                            if (idx !== -1) {\r\n                                // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                                var header = strTrim(headerEntry.substring(0, idx)).toLowerCase();\r\n                                var value = strTrim(headerEntry.substring(idx + 1));\r\n                                headers[header] = value;\r\n                            }\r\n                            else {\r\n                                headers[strTrim(headerEntry)] = 1;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                return headers;\r\n            }\r\n            function _getMsfpc(thePayload) {\r\n                for (var lp = 0; lp < thePayload.batches.length; lp++) {\r\n                    var msfpc = thePayload.batches[lp].Msfpc();\r\n                    if (msfpc) {\r\n                        return encodeURIComponent(msfpc);\r\n                    }\r\n                }\r\n                return STR_EMPTY;\r\n            }\r\n            function _handleCollectorResponse(responseText) {\r\n                var responseHandlers = _self._responseHandlers;\r\n                try {\r\n                    for (var i = 0; i < responseHandlers.length; i++) {\r\n                        try {\r\n                            responseHandlers[i](responseText);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 519 /* _eExtendedInternalMessageId.PostResponseHandler */, \"Response handler failed: \" + e);\r\n                        }\r\n                    }\r\n                    if (responseText) {\r\n                        var response = JSON.parse(responseText);\r\n                        if (isValueAssigned(response.webResult) && isValueAssigned(response.webResult[STR_MSFPC])) {\r\n                            // Set cookie\r\n                            _cookieMgr.set(\"MSFPC\", response.webResult[STR_MSFPC], 365 * 86400);\r\n                        }\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    // Doing nothing\r\n                }\r\n            }\r\n            function _sendBatchesNotification(theBatches, batchReason, sendType, sendSync) {\r\n                if (theBatches && theBatches.length > 0 && actions) {\r\n                    var theAction_1 = actions[_getNotificationAction(batchReason)];\r\n                    if (theAction_1) {\r\n                        var isSyncRequest_1 = sendType !== 0 /* EventSendType.Batched */;\r\n                        doPerf(_core, function () { return \"HttpManager:_sendBatchesNotification\"; }, function () {\r\n                            _doAction(function () {\r\n                                try {\r\n                                    theAction_1.call(actions, theBatches, batchReason, isSyncRequest_1, sendType);\r\n                                }\r\n                                catch (e) {\r\n                                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + e);\r\n                                }\r\n                            }, sendSync || isSyncRequest_1, 0);\r\n                        }, function () { return ({ batches: _createDebugBatches(theBatches), reason: batchReason, isSync: isSyncRequest_1, sendSync: sendSync, sendType: sendType }); }, !isSyncRequest_1);\r\n                    }\r\n                }\r\n            }\r\n            function _getNotificationAction(reason) {\r\n                var action = _eventActionMap[reason];\r\n                if (!isValueAssigned(action)) {\r\n                    action = STR_OTHER;\r\n                    if (reason >= 9000 /* EventBatchNotificationReason.ResponseFailure */ && reason <= 9999 /* EventBatchNotificationReason.ResponseFailureMax */) {\r\n                        action = STR_RESPONSE_FAIL;\r\n                    }\r\n                    else if (reason >= 8000 /* EventBatchNotificationReason.EventsDropped */ && reason <= 8999 /* EventBatchNotificationReason.EventsDroppedMax */) {\r\n                        action = STR_DROPPED;\r\n                    }\r\n                    else if (reason >= 1000 /* EventBatchNotificationReason.SendingUndefined */ && reason <= 1999 /* EventBatchNotificationReason.SendingEventMax */) {\r\n                        action = STR_SENDING;\r\n                    }\r\n                }\r\n                return action;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for HttpManager.prototype.initialize.\r\n// Removed Stub for HttpManager.prototype.addQueryStringParameter.\r\n// Removed Stub for HttpManager.prototype.addHeader.\r\n// Removed Stub for HttpManager.prototype.addBatch.\r\n// Removed Stub for HttpManager.prototype.canSendRequest.\r\n// Removed Stub for HttpManager.prototype.sendQueuedRequests.\r\n// Removed Stub for HttpManager.prototype.isCompletelyIdle.\r\n// Removed Stub for HttpManager.prototype.setUnloading.\r\n// Removed Stub for HttpManager.prototype.teardown.\r\n// Removed Stub for HttpManager.prototype.pause.\r\n// Removed Stub for HttpManager.prototype.resume.\r\n// Removed Stub for HttpManager.prototype.sendSynchronousBatch.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    HttpManager.__ieDyn=1;\n\n    return HttpManager;\r\n}());\r\nexport { HttpManager };\r\n//# sourceMappingURL=HttpManager.js.map","/*\n * 1DS JS SDK Core, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* AppInsightsCore.ts\r\n* @author Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AppInsightsCore as InternalCore, DiagnosticLogger, _throwInternal, arrForEach, doPerf, dumpObj, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DEFAULT_ENDPOINT_URL, STR_EMPTY, STR_PROPERTIES, STR_VERSION } from \"./InternalConstants\";\r\nimport { FullVersionString, getTime, isLatency } from \"./Utils\";\r\nvar AppInsightsCore = /** @class */ (function (_super) {\r\n    __extends(AppInsightsCore, _super);\r\n    function AppInsightsCore() {\r\n        var _this = _super.call(this) || this;\r\n        _this.pluginVersionStringArr = [];\r\n        dynamicProto(AppInsightsCore, _this, function (_self, _base) {\r\n            if (!_self.logger || !_self.logger.queue) {\r\n                // The AI Base can inject a No-Op logger so if not defined or the No-Op, change to use a default logger so initialization errors\r\n                // are not dropped on the floor if one is not already defined\r\n                _self.logger = new DiagnosticLogger({ loggingLevelConsole: 1 /* eLoggingSeverity.CRITICAL */ });\r\n            }\r\n            _self.initialize = function (config, extensions, logger, notificationManager) {\r\n                doPerf(_self, function () { return \"AppInsightsCore.initialize\"; }, function () {\r\n                    var _pluginVersionStringArr = _self.pluginVersionStringArr;\r\n                    // Add default collector url\r\n                    if (config) {\r\n                        if (!config.endpointUrl) {\r\n                            config.endpointUrl = STR_DEFAULT_ENDPOINT_URL;\r\n                        }\r\n                        var propertyStorageOverride = config.propertyStorageOverride;\r\n                        // Validate property storage override\r\n                        if (propertyStorageOverride && (!propertyStorageOverride.getProperty || !propertyStorageOverride.setProperty)) {\r\n                            throwError(\"Invalid property storage override passed.\");\r\n                        }\r\n                        if (config.channels) {\r\n                            arrForEach(config.channels, function (channels) {\r\n                                if (channels) {\r\n                                    arrForEach(channels, function (channel) {\r\n                                        if (channel.identifier && channel.version) {\r\n                                            var ver = channel.identifier + \"=\" + channel.version;\r\n                                            _pluginVersionStringArr.push(ver);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    _self.getWParam = function () {\r\n                        return (typeof document !== \"undefined\" || !!config.enableWParam) ? 0 : -1;\r\n                    };\r\n                    if (extensions) {\r\n                        arrForEach(extensions, function (ext) {\r\n                            if (ext && ext.identifier && ext.version) {\r\n                                var ver = ext.identifier + \"=\" + ext.version;\r\n                                _pluginVersionStringArr.push(ver);\r\n                            }\r\n                        });\r\n                    }\r\n                    _self.pluginVersionString = _pluginVersionStringArr.join(\";\");\r\n                    _self.pluginVersionStringArr = _pluginVersionStringArr;\r\n                    try {\r\n                        _base.initialize(config, extensions, logger, notificationManager);\r\n                        _self.pollInternalLogs(\"InternalLog\");\r\n                    }\r\n                    catch (e) {\r\n                        var logger_1 = _self.logger;\r\n                        var message = dumpObj(e);\r\n                        if (message.indexOf(\"channels\") !== -1) {\r\n                            // Add some additional context to the underlying reported error\r\n                            message += \"\\n - Channels must be provided through config.channels only!\";\r\n                        }\r\n                        _throwInternal(logger_1, 1 /* eLoggingSeverity.CRITICAL */, 514 /* _eExtendedInternalMessageId.FailedToInitializeSDK */, \"SDK Initialization Failed - no telemetry will be sent: \" + message);\r\n                    }\r\n                }, function () { return ({ config: config, extensions: extensions, logger: logger, notificationManager: notificationManager }); });\r\n            };\r\n            _self.track = function (item) {\r\n                doPerf(_self, function () { return \"AppInsightsCore.track\"; }, function () {\r\n                    var telemetryItem = item;\r\n                    if (telemetryItem) {\r\n                        telemetryItem.timings = telemetryItem.timings || {};\r\n                        telemetryItem.timings.trackStart = getTime();\r\n                        if (!isLatency(telemetryItem.latency)) {\r\n                            telemetryItem.latency = 1 /* EventLatencyValue.Normal */;\r\n                        }\r\n                        var itemExt = telemetryItem.ext = telemetryItem.ext || {};\r\n                        itemExt.sdk = itemExt.sdk || {};\r\n                        itemExt.sdk.ver = FullVersionString;\r\n                        var baseData = telemetryItem.baseData = telemetryItem.baseData || {};\r\n                        baseData[STR_PROPERTIES] = baseData[STR_PROPERTIES] || {};\r\n                        var itemProperties = baseData[STR_PROPERTIES];\r\n                        itemProperties[STR_VERSION] = itemProperties[STR_VERSION] || _self.pluginVersionString || STR_EMPTY;\r\n                    }\r\n                    _base.track(telemetryItem);\r\n                }, function () { return ({ item: item }); }, !(item.sync));\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}(InternalCore));\r\nexport default AppInsightsCore;\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { dateNow, isArray, isFunction, objDefineAccessors } from \"./HelperFuncs\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        var accessorDefined = false;\r\n        _self.start = dateNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            accessorDefined = objDefineAccessors(_self, \"payload\", function () {\r\n                // Delay the execution of the payloadDetails until needed\r\n                if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                    theDetails_1 = payloadDetails();\r\n                    // clear it out now so the referenced objects can be garbage collected\r\n                    payloadDetails = null;\r\n                }\r\n                return theDetails_1;\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = dateNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n            if (!accessorDefined && isFunction(payloadDetails)) {\r\n                // If we couldn't define the property set during complete -- to minimize the perf impact until after the time\r\n                _self.payload = payloadDetails();\r\n            }\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","var e={exports:{}};export{e as __module};\n","import t from\"./regex.js\";function e(e){return\"string\"==typeof e&&t.test(e)}export{e as default};\n","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","var o={randomUUID:\"undefined\"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};export{o as default};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nimport { ApplicationInsights, } from '@microsoft/1ds-analytics-web-js';\nimport { EventType, SeverityLevel } from '../interfaces/telemetry.constants';\nimport { loadTelemetryRegion } from '../telemetry-clients/TelemetryRegionInfo';\nimport { applyAppContext, applyCustomContext, applyDeviceContext, applyOSContext, applySessionContext, applyUserContext, } from '../utils/convertCommonPropsTo1DS';\n/**\n * TODO: JSDoc for class and all its methods and members.\n */\nexport class AriaTelemetryClient {\n    /**\n     * @param config\n     * @param logToConsole\n     */\n    constructor(config, logToConsole = false) {\n        this._isEndpointCompliant = false;\n        this._isBufferForced = false;\n        this._config = Object.assign({ disableCookiesUsage: true, propertyStorageOverride: {\n                getProperty: (key) => sessionStorage.getItem.bind(sessionStorage)(key) || '',\n                setProperty: sessionStorage.setItem.bind(sessionStorage),\n            } }, config);\n        this._config.enableCompoundKey = true;\n        this._logToConsole = logToConsole;\n        this._analytics = new ApplicationInsights();\n        this._analytics.initialize(this._config, []);\n    }\n    /**\n     *\n     */\n    isInitialized() {\n        return this._analytics.isInitialized();\n    }\n    /**\n     *\n     */\n    isEUDBCompliant() {\n        return this._isEndpointCompliant;\n    }\n    /**\n     *\n     */\n    isBufferForced() {\n        return this._isBufferForced;\n    }\n    /**\n     * @param isBufferForced\n     */\n    setBufferForced(isBufferForced) {\n        this._isBufferForced = isBufferForced;\n    }\n    /**\n     *\n     */\n    getClient() {\n        return this._analytics;\n    }\n    /**\n     * @param tenantId\n     * @param config\n     */\n    getCompliantAriaClient(tenantId, config) {\n        // forcing to buffer here since we don't have compliant telemetry region yet\n        // we're only setting this buffer here as forced, and since after the update\n        // in the telemetry client, we're going to delete this client. So It'll not\n        // be forced anymore.\n        this._isBufferForced = true;\n        return loadTelemetryRegion(tenantId)\n            .then((telemetryInfo) => {\n            //checking telemetry URL since it might be empty/null.\n            if (telemetryInfo.telemetryUrl && config) {\n                config.endpointUrl = telemetryInfo.telemetryUrl;\n            }\n            const newClient = new AriaTelemetryClient(config, true);\n            newClient._isEndpointCompliant = true;\n            return newClient;\n        })\n            .catch((error) => {\n            this.logException(error, SeverityLevel.Error);\n            this.flush();\n            this._isBufferForced = false;\n            throw error;\n        });\n    }\n    /**\n     * @param properties\n     */\n    setCommonProperties(properties) {\n        if (this._logToConsole) {\n            console.log(`[AriaTelemetryClient][setCommonProperties]: properties `, properties);\n        }\n        const context = this._analytics.getPropertyManager().getPropertiesContext();\n        applyAppContext(properties, context);\n        applyUserContext(properties, context);\n        applyDeviceContext(properties, context);\n        applyOSContext(properties, context);\n        applySessionContext(properties, context);\n    }\n    /**\n     * @param properties\n     */\n    setCustomProperties(properties) {\n        if (this._logToConsole) {\n            console.log(`[AriaTelemetryClient][setCustomProperties]: properties `, properties);\n        }\n        const ctxMgr = this._analytics.getPropertyManager();\n        applyCustomContext(properties, ctxMgr);\n    }\n    /**\n     * @param event\n     */\n    logUIEvent(event) {\n        // Set user-bi specific columns on telemetry client.\n        const eventName = EventType.UserBI;\n        const eventType = event.eventName;\n        const oneDsEventProperties = this._convertToAriaProperties(eventName, \n        // TODO: Fix TypeScript cast to PropertiesBaseType\n        event.properties);\n        this._analytics.trackEvent(Object.assign(Object.assign({}, oneDsEventProperties), { baseType: eventType }));\n    }\n    /**\n     * @param event\n     */\n    logScenario(event) {\n        const eventName = EventType.Scenario;\n        const oneDsEventProperties = this._convertToAriaProperties(eventName, \n        // TODO: Fix TypeScript cast to PropertiesBaseType\n        event.properties);\n        this._analytics.trackEvent(oneDsEventProperties);\n    }\n    /**\n     * @param event\n     */\n    logHttpEvent(event) {\n        var _a;\n        const eventName = (_a = event.eventType) !== null && _a !== void 0 ? _a : EventType.HttpEvent;\n        const oneDsEventProperties = this._convertToAriaProperties(eventName, \n        // TODO: Fix TypeScript cast to PropertiesBaseType\n        event.properties);\n        this._analytics.trackEvent(oneDsEventProperties);\n    }\n    /**\n     * @param event\n     */\n    logPageView(event) {\n        this._analytics.trackPageView({\n            name: event.properties.name,\n            pageType: event.properties.pageType,\n            uri: event.properties.uri,\n            refUri: event.properties.refUri,\n            properties: event.properties.properties,\n        });\n    }\n    /**\n     * @param error\n     * @param severityLevel\n     */\n    logException(error, severityLevel, properties) {\n        this._analytics.trackException({\n            exception: error,\n            properties,\n            severityLevel,\n        });\n    }\n    /**\n     * @param message\n     * @param severityLevel\n     */\n    logTrace(message, severityLevel, properties) {\n        this._analytics.trackEvent({\n            name: EventType.Trace,\n            data: Object.assign(Object.assign({}, properties), { traceLevel: severityLevel, logMessage: message }),\n        });\n    }\n    /**\n     * @param eventName\n     */\n    logEvent(eventName, properties) {\n        const oneDsEventProperties = this._convertToAriaProperties(eventName, properties);\n        this._analytics.trackEvent(oneDsEventProperties);\n    }\n    /**\n     * @param callback\n     */\n    flush(callback) {\n        callback === null || callback === void 0 ? void 0 : callback();\n        this._analytics.emptySnippetQueue({ config: this._config });\n    }\n    /**\n     * @param name\n     * @param properties\n     */\n    _convertToAriaProperties(name, properties) {\n        const eventProperties = {\n            data: {},\n            name,\n        };\n        for (const propertyKey in properties) {\n            if (eventProperties.data) {\n                const propertyValue = properties === null || properties === void 0 ? void 0 : properties[propertyKey];\n                const propertyName = propertyKey.replace(' ', '');\n                eventProperties.data[propertyName] = propertyValue;\n            }\n        }\n        return eventProperties;\n    }\n}\n//# sourceMappingURL=AriaTelemetryClient.js.map","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* PostManager.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, EventsDiscardedReason, _throwInternal, addPageHideEventListener, addPageShowEventListener, addPageUnloadEventListener, arrForEach, createUniqueNamespace, doPerf, getWindow, isChromium, isNumber, isValueAssigned, mergeEvtNamespace, objDefineAccessors, objForEachKey, optimizeObject, removePageHideEventListener, removePageShowEventListener, removePageUnloadEventListener, setProcessTelemetryTimings } from \"@microsoft/1ds-core-js\";\r\nimport { BE_PROFILE, NRT_PROFILE, RT_PROFILE } from \"./DataModels\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { HttpManager } from \"./HttpManager\";\r\nimport { STR_MSA_DEVICE_TICKET, STR_TRACE, STR_USER } from \"./InternalConstants\";\r\nimport { retryPolicyGetMillisToBackoffForRetry } from \"./RetryPolicy\";\r\nimport { createTimeoutWrapper } from \"./TimeoutOverrideWrapper\";\r\nvar FlushCheckTimer = 0.250; // This needs to be in seconds, so this is 250ms\r\nvar MaxNumberEventPerBatch = 500;\r\nvar EventsDroppedAtOneTime = 20;\r\nvar MaxSendAttempts = 6;\r\nvar MaxSyncUnloadSendAttempts = 2; // Assuming 2 based on beforeunload and unload\r\nvar MaxBackoffCount = 4;\r\nvar MaxConnections = 2;\r\nvar MaxRequestRetriesBeforeBackoff = 1;\r\nvar strEventsDiscarded = \"eventsDiscarded\";\r\nvar strOverrideInstrumentationKey = \"overrideInstrumentationKey\";\r\nvar strMaxEventRetryAttempts = \"maxEventRetryAttempts\";\r\nvar strMaxUnloadEventRetryAttempts = \"maxUnloadEventRetryAttempts\";\r\nvar strAddUnloadCb = \"addUnloadCb\";\r\n/**\r\n * Class that manages adding events to inbound queues and batching of events\r\n * into requests.\r\n */\r\nvar PostChannel = /** @class */ (function (_super) {\r\n    __extends(PostChannel, _super);\r\n    function PostChannel() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"PostChannel\";\r\n        _this.priority = 1011;\r\n        _this.version = '3.2.10';\r\n        var _config;\r\n        var _isTeardownCalled = false;\r\n        var _flushCallbackQueue = [];\r\n        var _flushCallbackTimerId = null;\r\n        var _paused = false;\r\n        var _immediateQueueSize = 0;\r\n        var _immediateQueueSizeLimit = 500;\r\n        var _queueSize = 0;\r\n        var _queueSizeLimit = 10000;\r\n        var _profiles = {};\r\n        var _currentProfile = RT_PROFILE;\r\n        var _scheduledTimerId = null;\r\n        var _immediateTimerId = null;\r\n        var _currentBackoffCount = 0;\r\n        var _timerCount = 0;\r\n        var _xhrOverride;\r\n        var _httpManager;\r\n        var _batchQueues = {};\r\n        var _autoFlushEventsLimit;\r\n        // either MaxBatchSize * (1+ Max Connections) or _queueLimit / 6 (where 3 latency Queues [normal, realtime, cost deferred] * 2 [allow half full -- allow for retry])\r\n        var _autoFlushBatchLimit;\r\n        var _delayedBatchSendLatency = -1;\r\n        var _delayedBatchReason;\r\n        var _optimizeObject = true;\r\n        var _isPageUnloadTriggered = false;\r\n        var _maxEventSendAttempts = MaxSendAttempts;\r\n        var _maxUnloadEventSendAttempts = MaxSyncUnloadSendAttempts;\r\n        var _evtNamespace;\r\n        var _timeoutWrapper;\r\n        dynamicProto(PostChannel, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            // Special internal method to allow the DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_httpManager];\r\n            };\r\n            _self.initialize = function (coreConfig, core, extensions) {\r\n                doPerf(core, function () { return \"PostChannel:initialize\"; }, function () {\r\n                    var extendedCore = core;\r\n                    _base.initialize(coreConfig, core, extensions);\r\n                    try {\r\n                        var hasAddUnloadCb = !!core[strAddUnloadCb];\r\n                        _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self.identifier), core.evtNamespace && core.evtNamespace());\r\n                        var ctx = _self._getTelCtx();\r\n                        coreConfig.extensionConfig[_self.identifier] = coreConfig.extensionConfig[_self.identifier] || {};\r\n                        _config = ctx.getExtCfg(_self.identifier);\r\n                        _timeoutWrapper = createTimeoutWrapper(_config.setTimeoutOverride, _config.clearTimeoutOverride);\r\n                        // Only try and use the optimizeObject() if this appears to be a chromium based browser and it has not been explicitly disabled\r\n                        _optimizeObject = !_config.disableOptimizeObj && isChromium();\r\n                        _hookWParam(extendedCore);\r\n                        if (_config.eventsLimitInMem > 0) {\r\n                            _queueSizeLimit = _config.eventsLimitInMem;\r\n                        }\r\n                        if (_config.immediateEventLimit > 0) {\r\n                            _immediateQueueSizeLimit = _config.immediateEventLimit;\r\n                        }\r\n                        if (_config.autoFlushEventsLimit > 0) {\r\n                            _autoFlushEventsLimit = _config.autoFlushEventsLimit;\r\n                        }\r\n                        if (isNumber(_config[strMaxEventRetryAttempts])) {\r\n                            _maxEventSendAttempts = _config[strMaxEventRetryAttempts];\r\n                        }\r\n                        if (isNumber(_config[strMaxUnloadEventRetryAttempts])) {\r\n                            _maxUnloadEventSendAttempts = _config[strMaxUnloadEventRetryAttempts];\r\n                        }\r\n                        _setAutoLimits();\r\n                        if (_config.httpXHROverride && _config.httpXHROverride.sendPOST) {\r\n                            _xhrOverride = _config.httpXHROverride;\r\n                        }\r\n                        if (isValueAssigned(coreConfig.anonCookieName)) {\r\n                            _httpManager.addQueryStringParameter(\"anoncknm\", coreConfig.anonCookieName);\r\n                        }\r\n                        _httpManager.sendHook = _config.payloadPreprocessor;\r\n                        _httpManager.sendListener = _config.payloadListener;\r\n                        // Override endpointUrl if provided in Post config\r\n                        var endpointUrl = _config.overrideEndpointUrl ? _config.overrideEndpointUrl : coreConfig.endpointUrl;\r\n                        _self._notificationManager = core.getNotifyMgr();\r\n                        _httpManager.initialize(endpointUrl, _self.core, _self, _xhrOverride, _config);\r\n                        var excludePageUnloadEvents = coreConfig.disablePageUnloadEvents || [];\r\n                        // When running in Web browsers try to send all telemetry if page is unloaded\r\n                        addPageUnloadEventListener(_handleUnloadEvents, excludePageUnloadEvents, _evtNamespace);\r\n                        addPageHideEventListener(_handleUnloadEvents, excludePageUnloadEvents, _evtNamespace);\r\n                        addPageShowEventListener(_handleShowEvents, coreConfig.disablePageShowEvents, _evtNamespace);\r\n                    }\r\n                    catch (e) {\r\n                        // resetting the initialized state because of failure\r\n                        _self.setInitialized(false);\r\n                        throw e;\r\n                    }\r\n                }, function () { return ({ coreConfig: coreConfig, core: core, extensions: extensions }); });\r\n            };\r\n            _self.processTelemetry = function (ev, itemCtx) {\r\n                setProcessTelemetryTimings(ev, _self.identifier);\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                // Get the channel instance from the current request/instance\r\n                var channelConfig = itemCtx.getExtCfg(_self.identifier);\r\n                // DisableTelemetry was defined in the config provided during initialization\r\n                var disableTelemetry = !!_config.disableTelemetry;\r\n                if (channelConfig) {\r\n                    // DisableTelemetry is defined in the config for this request/instance\r\n                    disableTelemetry = disableTelemetry || !!channelConfig.disableTelemetry;\r\n                }\r\n                var event = ev;\r\n                if (!disableTelemetry && !_isTeardownCalled) {\r\n                    // Override iKey if provided in Post config if provided for during initialization\r\n                    if (_config[strOverrideInstrumentationKey]) {\r\n                        event.iKey = _config[strOverrideInstrumentationKey];\r\n                    }\r\n                    // Override iKey if provided in Post config if provided for this instance\r\n                    if (channelConfig && channelConfig[strOverrideInstrumentationKey]) {\r\n                        event.iKey = channelConfig[strOverrideInstrumentationKey];\r\n                    }\r\n                    _addEventToQueues(event, true);\r\n                    if (_isPageUnloadTriggered) {\r\n                        // Unload event has been received so we need to try and flush new events\r\n                        _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                    }\r\n                    else {\r\n                        _scheduleTimer();\r\n                    }\r\n                }\r\n                _self.processNext(event, itemCtx);\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                _isTeardownCalled = true;\r\n                _httpManager.teardown();\r\n                removePageUnloadEventListener(null, _evtNamespace);\r\n                removePageHideEventListener(null, _evtNamespace);\r\n                removePageShowEventListener(null, _evtNamespace);\r\n                // Just register to remove all events associated with this namespace\r\n                _initDefaults();\r\n            };\r\n            function _hookWParam(extendedCore) {\r\n                var existingGetWParamMethod = extendedCore.getWParam;\r\n                extendedCore.getWParam = function () {\r\n                    var wparam = 0;\r\n                    if (_config.ignoreMc1Ms0CookieProcessing) {\r\n                        wparam = wparam | 2;\r\n                    }\r\n                    return wparam | existingGetWParamMethod();\r\n                };\r\n            }\r\n            // Moving event handlers out from the initialize closure so that any local variables can be garbage collected\r\n            function _handleUnloadEvents(evt) {\r\n                var theEvt = evt || getWindow().event; // IE 8 does not pass the event\r\n                if (theEvt.type !== \"beforeunload\") {\r\n                    // Only set the unload trigger if not beforeunload event as beforeunload can be cancelled while the other events can't\r\n                    _isPageUnloadTriggered = true;\r\n                    _httpManager.setUnloading(_isPageUnloadTriggered);\r\n                }\r\n                _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n            }\r\n            function _handleShowEvents(evt) {\r\n                // Handle the page becoming visible again\r\n                _isPageUnloadTriggered = false;\r\n                _httpManager.setUnloading(_isPageUnloadTriggered);\r\n            }\r\n            function _addEventToQueues(event, append) {\r\n                // If send attempt field is undefined we should set it to 0.\r\n                if (!event.sendAttempt) {\r\n                    event.sendAttempt = 0;\r\n                }\r\n                // Add default latency\r\n                if (!event.latency) {\r\n                    event.latency = 1 /* EventLatencyValue.Normal */;\r\n                }\r\n                // Remove extra AI properties if present\r\n                if (event.ext && event.ext[STR_TRACE]) {\r\n                    delete (event.ext[STR_TRACE]);\r\n                }\r\n                if (event.ext && event.ext[STR_USER] && event.ext[STR_USER][\"id\"]) {\r\n                    delete (event.ext[STR_USER][\"id\"]);\r\n                }\r\n                // v8 performance optimization for iterating over the keys\r\n                if (_optimizeObject) {\r\n                    setProcessTelemetryTimings;\r\n                    event.ext = optimizeObject(event.ext);\r\n                    if (event.baseData) {\r\n                        event.baseData = optimizeObject(event.baseData);\r\n                    }\r\n                    if (event.data) {\r\n                        event.data = optimizeObject(event.data);\r\n                    }\r\n                }\r\n                if (event.sync) {\r\n                    // If the transmission is backed off then do not send synchronous events.\r\n                    // We will convert these events to Real time latency instead.\r\n                    if (_currentBackoffCount || _paused) {\r\n                        event.latency = 3 /* EventLatencyValue.RealTime */;\r\n                        event.sync = false;\r\n                    }\r\n                    else {\r\n                        // Log the event synchronously\r\n                        if (_httpManager) {\r\n                            // v8 performance optimization for iterating over the keys\r\n                            if (_optimizeObject) {\r\n                                event = optimizeObject(event);\r\n                            }\r\n                            _httpManager.sendSynchronousBatch(EventBatch.create(event.iKey, [event]), event.sync === true ? 1 /* EventSendType.Synchronous */ : event.sync, 3 /* SendRequestReason.SyncEvent */);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                var evtLatency = event.latency;\r\n                var queueSize = _queueSize;\r\n                var queueLimit = _queueSizeLimit;\r\n                if (evtLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                    queueSize = _immediateQueueSize;\r\n                    queueLimit = _immediateQueueSizeLimit;\r\n                }\r\n                var eventDropped = false;\r\n                // Only add the event if the queue isn't full or it's a direct event (which don't add to the queue sizes)\r\n                if (queueSize < queueLimit) {\r\n                    eventDropped = !_addEventToProperQueue(event, append);\r\n                }\r\n                else {\r\n                    var dropLatency = 1 /* EventLatencyValue.Normal */;\r\n                    var dropNumber = EventsDroppedAtOneTime;\r\n                    if (evtLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                        // Only drop other immediate events as they are not technically sharing the general queue\r\n                        dropLatency = 4 /* EventLatencyValue.Immediate */;\r\n                        dropNumber = 1;\r\n                    }\r\n                    // Drop old event from lower or equal latency\r\n                    eventDropped = true;\r\n                    if (_dropEventWithLatencyOrLess(event.iKey, event.latency, dropLatency, dropNumber)) {\r\n                        eventDropped = !_addEventToProperQueue(event, append);\r\n                    }\r\n                }\r\n                if (eventDropped) {\r\n                    // Can't drop events from current queues because the all the slots are taken by queues that are being flushed.\r\n                    _notifyEvents(strEventsDiscarded, [event], EventsDiscardedReason.QueueFull);\r\n                }\r\n            }\r\n            _self.setEventQueueLimits = function (eventLimit, autoFlushLimit) {\r\n                _queueSizeLimit = eventLimit > 0 ? eventLimit : 10000;\r\n                _autoFlushEventsLimit = autoFlushLimit > 0 ? autoFlushLimit : 0;\r\n                _setAutoLimits();\r\n                // We only do this check here as during normal event addition if the queue is > then events start getting dropped\r\n                var doFlush = _queueSize > eventLimit;\r\n                if (!doFlush && _autoFlushBatchLimit > 0) {\r\n                    // Check the auto flush max batch size\r\n                    for (var latency = 1 /* EventLatencyValue.Normal */; !doFlush && latency <= 3 /* EventLatencyValue.RealTime */; latency++) {\r\n                        var batchQueue = _batchQueues[latency];\r\n                        if (batchQueue && batchQueue.batches) {\r\n                            arrForEach(batchQueue.batches, function (theBatch) {\r\n                                if (theBatch && theBatch.count() >= _autoFlushBatchLimit) {\r\n                                    // If any 1 batch is > than the limit then trigger an auto flush\r\n                                    doFlush = true;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                _performAutoFlush(true, doFlush);\r\n            };\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n                _httpManager.pause();\r\n            };\r\n            _self.resume = function () {\r\n                _paused = false;\r\n                _httpManager.resume();\r\n                _scheduleTimer();\r\n            };\r\n            _self.addResponseHandler = function (responseHandler) {\r\n                _httpManager._responseHandlers.push(responseHandler);\r\n            };\r\n            _self._loadTransmitProfiles = function (profiles) {\r\n                _resetTransmitProfiles();\r\n                objForEachKey(profiles, function (profileName, profileValue) {\r\n                    var profLen = profileValue.length;\r\n                    if (profLen >= 2) {\r\n                        var directValue = (profLen > 2 ? profileValue[2] : 0);\r\n                        profileValue.splice(0, profLen - 2);\r\n                        // Make sure if a higher latency is set to not send then don't send lower latency\r\n                        if (profileValue[1] < 0) {\r\n                            profileValue[0] = -1;\r\n                        }\r\n                        // Make sure each latency is multiple of the latency higher then it. If not a multiple\r\n                        // we round up so that it becomes a multiple.\r\n                        if (profileValue[1] > 0 && profileValue[0] > 0) {\r\n                            var timerMultiplier = profileValue[0] / profileValue[1];\r\n                            profileValue[0] = Math.ceil(timerMultiplier) * profileValue[1];\r\n                        }\r\n                        // Add back the direct profile timeout\r\n                        if (directValue >= 0 && profileValue[1] >= 0 && directValue > profileValue[1]) {\r\n                            // Make sure if it's not disabled (< 0) then make sure it's not larger than RealTime\r\n                            directValue = profileValue[1];\r\n                        }\r\n                        profileValue.push(directValue);\r\n                        _profiles[profileName] = profileValue;\r\n                    }\r\n                });\r\n            };\r\n            _self.flush = function (async, callback, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                if (!_paused) {\r\n                    sendReason = sendReason || 1 /* SendRequestReason.ManualFlush */;\r\n                    if (async) {\r\n                        if (_flushCallbackTimerId == null) {\r\n                            // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                            _clearScheduledTimer();\r\n                            // Move all queued events to the HttpManager so that we don't discard new events (Auto flush scenario)\r\n                            _queueBatches(1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, sendReason);\r\n                            _flushCallbackTimerId = _createTimer(function () {\r\n                                _flushCallbackTimerId = null;\r\n                                _flushImpl(callback, sendReason);\r\n                            }, 0);\r\n                        }\r\n                        else {\r\n                            // Even if null (no callback) this will ensure after the flushImpl finishes waiting\r\n                            // for a completely idle connection it will attempt to re-flush any queued events on the next cycle\r\n                            _flushCallbackQueue.push(callback);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                        var cleared = _clearScheduledTimer();\r\n                        // Now cause all queued events to be sent synchronously\r\n                        _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, 1 /* EventSendType.Synchronous */, sendReason);\r\n                        if (callback !== null && callback !== undefined) {\r\n                            callback();\r\n                        }\r\n                        if (cleared) {\r\n                            // restart the normal event timer if it was cleared\r\n                            _scheduleTimer();\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            _self.setMsaAuthTicket = function (ticket) {\r\n                _httpManager.addHeader(STR_MSA_DEVICE_TICKET, ticket);\r\n            };\r\n            _self.hasEvents = _hasEvents;\r\n            _self._setTransmitProfile = function (profileName) {\r\n                if (_currentProfile !== profileName && _profiles[profileName] !== undefined) {\r\n                    _clearScheduledTimer();\r\n                    _currentProfile = profileName;\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            /**\r\n             * Batch and send events currently in the queue for the given latency.\r\n             * @param latency - Latency for which to send events.\r\n             */\r\n            function _sendEventsForLatencyAndAbove(latency, sendType, sendReason) {\r\n                var queued = _queueBatches(latency, sendType, sendReason);\r\n                // Always trigger the request as while the post channel may not have queued additional events, the httpManager may already have waiting events\r\n                _httpManager.sendQueuedRequests(sendType, sendReason);\r\n                return queued;\r\n            }\r\n            function _hasEvents() {\r\n                return _queueSize > 0;\r\n            }\r\n            /**\r\n             * Try to schedule the timer after which events will be sent. If there are\r\n             * no events to be sent, or there is already a timer scheduled, or the\r\n             * http manager doesn't have any idle connections this method is no-op.\r\n             */\r\n            function _scheduleTimer() {\r\n                // If we had previously attempted to send requests, but the http manager didn't have any idle connections then the requests where delayed\r\n                // so try and requeue then again now\r\n                if (_delayedBatchSendLatency >= 0 && _queueBatches(_delayedBatchSendLatency, 0 /* EventSendType.Batched */, _delayedBatchReason)) {\r\n                    _httpManager.sendQueuedRequests(0 /* EventSendType.Batched */, _delayedBatchReason);\r\n                }\r\n                if (_immediateQueueSize > 0 && !_immediateTimerId && !_paused) {\r\n                    // During initialization _profiles enforce that the direct [2] is less than real time [1] timer value\r\n                    // If the immediateTimeout is disabled the immediate events will be sent with Real Time events\r\n                    var immediateTimeOut = _profiles[_currentProfile][2];\r\n                    if (immediateTimeOut >= 0) {\r\n                        _immediateTimerId = _createTimer(function () {\r\n                            _immediateTimerId = null;\r\n                            // Only try to send direct events\r\n                            _sendEventsForLatencyAndAbove(4 /* EventLatencyValue.Immediate */, 0 /* EventSendType.Batched */, 1 /* SendRequestReason.NormalSchedule */);\r\n                            _scheduleTimer();\r\n                        }, immediateTimeOut);\r\n                    }\r\n                }\r\n                // During initialization the _profiles enforce that the normal [0] is a multiple of the real time [1] timer value\r\n                var timeOut = _profiles[_currentProfile][1];\r\n                if (!_scheduledTimerId && !_flushCallbackTimerId && timeOut >= 0 && !_paused) {\r\n                    if (_hasEvents()) {\r\n                        _scheduledTimerId = _createTimer(function () {\r\n                            _scheduledTimerId = null;\r\n                            _sendEventsForLatencyAndAbove(_timerCount === 0 ? 3 /* EventLatencyValue.RealTime */ : 1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, 1 /* SendRequestReason.NormalSchedule */);\r\n                            // Increment the count for next cycle\r\n                            _timerCount++;\r\n                            _timerCount %= 2;\r\n                            _scheduleTimer();\r\n                        }, timeOut);\r\n                    }\r\n                    else {\r\n                        _timerCount = 0;\r\n                    }\r\n                }\r\n            }\r\n            _self._backOffTransmission = function () {\r\n                if (_currentBackoffCount < MaxBackoffCount) {\r\n                    _currentBackoffCount++;\r\n                    _clearScheduledTimer();\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            _self._clearBackOff = function () {\r\n                if (_currentBackoffCount) {\r\n                    _currentBackoffCount = 0;\r\n                    _clearScheduledTimer();\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            function _initDefaults() {\r\n                _config = null;\r\n                _isTeardownCalled = false;\r\n                _flushCallbackQueue = [];\r\n                _flushCallbackTimerId = null;\r\n                _paused = false;\r\n                _immediateQueueSize = 0;\r\n                _immediateQueueSizeLimit = 500;\r\n                _queueSize = 0;\r\n                _queueSizeLimit = 10000;\r\n                _profiles = {};\r\n                _currentProfile = RT_PROFILE;\r\n                _scheduledTimerId = null;\r\n                _immediateTimerId = null;\r\n                _currentBackoffCount = 0;\r\n                _timerCount = 0;\r\n                _xhrOverride = null;\r\n                _batchQueues = {};\r\n                _autoFlushEventsLimit = undefined;\r\n                // either MaxBatchSize * (1+ Max Connections) or _queueLimit / 6 (where 3 latency Queues [normal, realtime, cost deferred] * 2 [allow half full -- allow for retry])\r\n                _autoFlushBatchLimit = 0;\r\n                _delayedBatchSendLatency = -1;\r\n                _delayedBatchReason = null;\r\n                _optimizeObject = true;\r\n                _isPageUnloadTriggered = false;\r\n                _maxEventSendAttempts = MaxSendAttempts;\r\n                _maxUnloadEventSendAttempts = MaxSyncUnloadSendAttempts;\r\n                _evtNamespace = null;\r\n                _timeoutWrapper = createTimeoutWrapper();\r\n                _httpManager = new HttpManager(MaxNumberEventPerBatch, MaxConnections, MaxRequestRetriesBeforeBackoff, {\r\n                    requeue: _requeueEvents,\r\n                    send: _sendingEvent,\r\n                    sent: _eventsSentEvent,\r\n                    drop: _eventsDropped,\r\n                    rspFail: _eventsResponseFail,\r\n                    oth: _otherEvent\r\n                }, _timeoutWrapper);\r\n                _initializeProfiles();\r\n                _clearQueues();\r\n                _setAutoLimits();\r\n            }\r\n            function _createTimer(theTimerFunc, timeOut) {\r\n                // If the transmission is backed off make the timer at least 1 sec to allow for back off.\r\n                if (timeOut === 0 && _currentBackoffCount) {\r\n                    timeOut = 1;\r\n                }\r\n                var timerMultiplier = 1000;\r\n                if (_currentBackoffCount) {\r\n                    timerMultiplier = retryPolicyGetMillisToBackoffForRetry(_currentBackoffCount - 1);\r\n                }\r\n                return _timeoutWrapper.set(theTimerFunc, timeOut * timerMultiplier);\r\n            }\r\n            function _clearScheduledTimer() {\r\n                if (_scheduledTimerId !== null) {\r\n                    _timeoutWrapper.clear(_scheduledTimerId);\r\n                    _scheduledTimerId = null;\r\n                    _timerCount = 0;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            // Try to send all queued events using beacons if available\r\n            function _releaseAllQueues(sendType, sendReason) {\r\n                _clearScheduledTimer();\r\n                // Cancel all flush callbacks\r\n                if (_flushCallbackTimerId) {\r\n                    _timeoutWrapper.clear(_flushCallbackTimerId);\r\n                    _flushCallbackTimerId = null;\r\n                }\r\n                if (!_paused) {\r\n                    // Queue all the remaining requests to be sent. The requests will be sent using HTML5 Beacons if they are available.\r\n                    _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, sendType, sendReason);\r\n                }\r\n            }\r\n            /**\r\n             * Add empty queues for all latencies in the inbound queues map. This is called\r\n             * when Transmission Manager is being flushed. This ensures that new events added\r\n             * after flush are stored separately till we flush the current events.\r\n             */\r\n            function _clearQueues() {\r\n                _batchQueues[4 /* EventLatencyValue.Immediate */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[3 /* EventLatencyValue.RealTime */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[2 /* EventLatencyValue.CostDeferred */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[1 /* EventLatencyValue.Normal */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n            }\r\n            function _getEventBatch(iKey, latency, create) {\r\n                var batchQueue = _batchQueues[latency];\r\n                if (!batchQueue) {\r\n                    latency = 1 /* EventLatencyValue.Normal */;\r\n                    batchQueue = _batchQueues[latency];\r\n                }\r\n                var eventBatch = batchQueue.iKeyMap[iKey];\r\n                if (!eventBatch && create) {\r\n                    eventBatch = EventBatch.create(iKey);\r\n                    batchQueue.batches.push(eventBatch);\r\n                    batchQueue.iKeyMap[iKey] = eventBatch;\r\n                }\r\n                return eventBatch;\r\n            }\r\n            function _performAutoFlush(isAsync, doFlush) {\r\n                // Only perform the auto flush check if the httpManager has an idle connection and we are not in a backoff situation\r\n                if (_httpManager.canSendRequest() && !_currentBackoffCount) {\r\n                    if (_autoFlushEventsLimit > 0 && _queueSize > _autoFlushEventsLimit) {\r\n                        // Force flushing\r\n                        doFlush = true;\r\n                    }\r\n                    if (doFlush && _flushCallbackTimerId == null) {\r\n                        // Auto flush the queue\r\n                        _self.flush(isAsync, null, 20 /* SendRequestReason.MaxQueuedEvents */);\r\n                    }\r\n                }\r\n            }\r\n            function _addEventToProperQueue(event, append) {\r\n                // v8 performance optimization for iterating over the keys\r\n                if (_optimizeObject) {\r\n                    event = optimizeObject(event);\r\n                }\r\n                var latency = event.latency;\r\n                var eventBatch = _getEventBatch(event.iKey, latency, true);\r\n                if (eventBatch.addEvent(event)) {\r\n                    if (latency !== 4 /* EventLatencyValue.Immediate */) {\r\n                        _queueSize++;\r\n                        // Check for auto flushing based on total events in the queue, but not for requeued or retry events\r\n                        if (append && event.sendAttempt === 0) {\r\n                            // Force the flushing of the batch if the batch (specific iKey / latency combination) reaches it's auto flush limit\r\n                            _performAutoFlush(!event.sync, _autoFlushBatchLimit > 0 && eventBatch.count() >= _autoFlushBatchLimit);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Direct events don't need auto flushing as they are scheduled (by default) for immediate delivery\r\n                        _immediateQueueSize++;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _dropEventWithLatencyOrLess(iKey, latency, currentLatency, dropNumber) {\r\n                while (currentLatency <= latency) {\r\n                    var eventBatch = _getEventBatch(iKey, latency, true);\r\n                    if (eventBatch && eventBatch.count() > 0) {\r\n                        // Dropped oldest events from lowest possible latency\r\n                        var droppedEvents = eventBatch.split(0, dropNumber);\r\n                        var droppedCount = droppedEvents.count();\r\n                        if (droppedCount > 0) {\r\n                            if (currentLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                                _immediateQueueSize -= droppedCount;\r\n                            }\r\n                            else {\r\n                                _queueSize -= droppedCount;\r\n                            }\r\n                            _notifyBatchEvents(strEventsDiscarded, [droppedEvents], EventsDiscardedReason.QueueFull);\r\n                            return true;\r\n                        }\r\n                    }\r\n                    currentLatency++;\r\n                }\r\n                // Unable to drop any events -- lets just make sure the queue counts are correct to avoid exhaustion\r\n                _resetQueueCounts();\r\n                return false;\r\n            }\r\n            /**\r\n             * Internal helper to reset the queue counts, used as a backstop to avoid future queue exhaustion errors\r\n             * that might occur because of counting issues.\r\n             */\r\n            function _resetQueueCounts() {\r\n                var immediateQueue = 0;\r\n                var normalQueue = 0;\r\n                var _loop_1 = function (latency) {\r\n                    var batchQueue = _batchQueues[latency];\r\n                    if (batchQueue && batchQueue.batches) {\r\n                        arrForEach(batchQueue.batches, function (theBatch) {\r\n                            if (latency === 4 /* EventLatencyValue.Immediate */) {\r\n                                immediateQueue += theBatch.count();\r\n                            }\r\n                            else {\r\n                                normalQueue += theBatch.count();\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                for (var latency = 1 /* EventLatencyValue.Normal */; latency <= 4 /* EventLatencyValue.Immediate */; latency++) {\r\n                    _loop_1(latency);\r\n                }\r\n                _queueSize = normalQueue;\r\n                _immediateQueueSize = immediateQueue;\r\n            }\r\n            function _queueBatches(latency, sendType, sendReason) {\r\n                var eventsQueued = false;\r\n                var isAsync = sendType === 0 /* EventSendType.Batched */;\r\n                // Only queue batches (to the HttpManager) if this is a sync request or the httpManager has an idle connection\r\n                // Thus keeping the events within the PostChannel until the HttpManager has a connection available\r\n                // This is so we can drop \"old\" events if the queue is getting full because we can't successfully send events\r\n                if (!isAsync || _httpManager.canSendRequest()) {\r\n                    doPerf(_self.core, function () { return \"PostChannel._queueBatches\"; }, function () {\r\n                        var droppedEvents = [];\r\n                        var latencyToProcess = 4 /* EventLatencyValue.Immediate */;\r\n                        while (latencyToProcess >= latency) {\r\n                            var batchQueue = _batchQueues[latencyToProcess];\r\n                            if (batchQueue && batchQueue.batches && batchQueue.batches.length > 0) {\r\n                                arrForEach(batchQueue.batches, function (theBatch) {\r\n                                    // Add the batch to the http manager to send the requests\r\n                                    if (!_httpManager.addBatch(theBatch)) {\r\n                                        // The events from this iKey are being dropped (killed)\r\n                                        droppedEvents = droppedEvents.concat(theBatch.events());\r\n                                    }\r\n                                    else {\r\n                                        eventsQueued = eventsQueued || (theBatch && theBatch.count() > 0);\r\n                                    }\r\n                                    if (latencyToProcess === 4 /* EventLatencyValue.Immediate */) {\r\n                                        _immediateQueueSize -= theBatch.count();\r\n                                    }\r\n                                    else {\r\n                                        _queueSize -= theBatch.count();\r\n                                    }\r\n                                });\r\n                                // Remove all batches from this Queue\r\n                                batchQueue.batches = [];\r\n                                batchQueue.iKeyMap = {};\r\n                            }\r\n                            latencyToProcess--;\r\n                        }\r\n                        if (droppedEvents.length > 0) {\r\n                            _notifyEvents(strEventsDiscarded, droppedEvents, EventsDiscardedReason.KillSwitch);\r\n                        }\r\n                        if (eventsQueued && _delayedBatchSendLatency >= latency) {\r\n                            // We have queued events at the same level as the delayed values so clear the setting\r\n                            _delayedBatchSendLatency = -1;\r\n                            _delayedBatchReason = 0 /* SendRequestReason.Undefined */;\r\n                        }\r\n                    }, function () { return ({ latency: latency, sendType: sendType, sendReason: sendReason }); }, !isAsync);\r\n                }\r\n                else {\r\n                    // remember the min latency so that we can re-trigger later\r\n                    _delayedBatchSendLatency = _delayedBatchSendLatency >= 0 ? Math.min(_delayedBatchSendLatency, latency) : latency;\r\n                    _delayedBatchReason = Math.max(_delayedBatchReason, sendReason);\r\n                }\r\n                return eventsQueued;\r\n            }\r\n            /**\r\n             * This is the callback method is called as part of the manual flushing process.\r\n             * @param callback\r\n             * @param sendReason\r\n             */\r\n            function _flushImpl(callback, sendReason) {\r\n                // Add any additional queued events and cause all queued events to be sent asynchronously\r\n                _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, sendReason);\r\n                // All events (should) have been queue -- lets just make sure the queue counts are correct to avoid queue exhaustion (previous bug #9685112)\r\n                _resetQueueCounts();\r\n                _waitForIdleManager(function () {\r\n                    // Only called AFTER the httpManager does not have any outstanding requests\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                    if (_flushCallbackQueue.length > 0) {\r\n                        _flushCallbackTimerId = _createTimer(function () {\r\n                            _flushCallbackTimerId = null;\r\n                            _flushImpl(_flushCallbackQueue.shift(), sendReason);\r\n                        }, 0);\r\n                    }\r\n                    else {\r\n                        // No more flush requests\r\n                        _flushCallbackTimerId = null;\r\n                        // Restart the normal timer schedule\r\n                        _scheduleTimer();\r\n                    }\r\n                });\r\n            }\r\n            function _waitForIdleManager(callback) {\r\n                if (_httpManager.isCompletelyIdle()) {\r\n                    callback();\r\n                }\r\n                else {\r\n                    _flushCallbackTimerId = _createTimer(function () {\r\n                        _flushCallbackTimerId = null;\r\n                        _waitForIdleManager(callback);\r\n                    }, FlushCheckTimer);\r\n                }\r\n            }\r\n            /**\r\n             * Resets the transmit profiles to the default profiles of Real Time, Near Real Time\r\n             * and Best Effort. This removes all the custom profiles that were loaded.\r\n             */\r\n            function _resetTransmitProfiles() {\r\n                _clearScheduledTimer();\r\n                _initializeProfiles();\r\n                _currentProfile = RT_PROFILE;\r\n                _scheduleTimer();\r\n            }\r\n            function _initializeProfiles() {\r\n                _profiles = {};\r\n                _profiles[RT_PROFILE] = [2, 1, 0];\r\n                _profiles[NRT_PROFILE] = [6, 3, 0];\r\n                _profiles[BE_PROFILE] = [18, 9, 0];\r\n            }\r\n            /**\r\n             * The notification handler for requeue events\r\n             * @ignore\r\n             */\r\n            function _requeueEvents(batches, reason) {\r\n                var droppedEvents = [];\r\n                var maxSendAttempts = _maxEventSendAttempts;\r\n                if (_isPageUnloadTriggered) {\r\n                    // If a page unlaod has been triggered reduce the number of times we try to \"retry\"\r\n                    maxSendAttempts = _maxUnloadEventSendAttempts;\r\n                }\r\n                arrForEach(batches, function (theBatch) {\r\n                    if (theBatch && theBatch.count() > 0) {\r\n                        arrForEach(theBatch.events(), function (theEvent) {\r\n                            if (theEvent) {\r\n                                // Check if the request being added back is for a sync event in which case mark it no longer a sync event\r\n                                if (theEvent.sync) {\r\n                                    theEvent.latency = 4 /* EventLatencyValue.Immediate */;\r\n                                    theEvent.sync = false;\r\n                                }\r\n                                if (theEvent.sendAttempt < maxSendAttempts) {\r\n                                    // Reset the event timings\r\n                                    setProcessTelemetryTimings(theEvent, _self.identifier);\r\n                                    _addEventToQueues(theEvent, false);\r\n                                }\r\n                                else {\r\n                                    droppedEvents.push(theEvent);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                if (droppedEvents.length > 0) {\r\n                    _notifyEvents(strEventsDiscarded, droppedEvents, EventsDiscardedReason.NonRetryableStatus);\r\n                }\r\n                if (_isPageUnloadTriggered) {\r\n                    // Unload event has been received so we need to try and flush new events\r\n                    _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                }\r\n            }\r\n            function _callNotification(evtName, theArgs) {\r\n                var manager = (_self._notificationManager || {});\r\n                var notifyFunc = manager[evtName];\r\n                if (notifyFunc) {\r\n                    try {\r\n                        notifyFunc.apply(manager, theArgs);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, evtName + \" notification failed: \" + e);\r\n                    }\r\n                }\r\n            }\r\n            function _notifyEvents(evtName, theEvents) {\r\n                var extraArgs = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    extraArgs[_i - 2] = arguments[_i];\r\n                }\r\n                if (theEvents && theEvents.length > 0) {\r\n                    _callNotification(evtName, [theEvents].concat(extraArgs));\r\n                }\r\n            }\r\n            function _notifyBatchEvents(evtName, batches) {\r\n                var extraArgs = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    extraArgs[_i - 2] = arguments[_i];\r\n                }\r\n                if (batches && batches.length > 0) {\r\n                    arrForEach(batches, function (theBatch) {\r\n                        if (theBatch && theBatch.count() > 0) {\r\n                            _callNotification(evtName, [theBatch.events()].concat(extraArgs));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            /**\r\n             * The notification handler for when batches are about to be sent\r\n             * @ignore\r\n             */\r\n            function _sendingEvent(batches, reason, isSyncRequest) {\r\n                if (batches && batches.length > 0) {\r\n                    _callNotification(\"eventsSendRequest\", [(reason >= 1000 /* EventBatchNotificationReason.SendingUndefined */ && reason <= 1999 /* EventBatchNotificationReason.SendingEventMax */ ?\r\n                            reason - 1000 /* EventBatchNotificationReason.SendingUndefined */ :\r\n                            0 /* SendRequestReason.Undefined */), isSyncRequest !== true]);\r\n                }\r\n            }\r\n            /**\r\n             * This event represents that a batch of events have been successfully sent and a response received\r\n             * @param batches The notification handler for when the batches have been successfully sent\r\n             * @param reason For this event the reason will always be EventBatchNotificationReason.Complete\r\n             */\r\n            function _eventsSentEvent(batches, reason) {\r\n                _notifyBatchEvents(\"eventsSent\", batches, reason);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _eventsDropped(batches, reason) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, (reason >= 8000 /* EventBatchNotificationReason.EventsDropped */ && reason <= 8999 /* EventBatchNotificationReason.EventsDroppedMax */ ?\r\n                    reason - 8000 /* EventBatchNotificationReason.EventsDropped */ :\r\n                    EventsDiscardedReason.Unknown));\r\n            }\r\n            function _eventsResponseFail(batches) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, EventsDiscardedReason.NonRetryableStatus);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _otherEvent(batches, reason) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, EventsDiscardedReason.Unknown);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _setAutoLimits() {\r\n                if (!_config || !_config.disableAutoBatchFlushLimit) {\r\n                    _autoFlushBatchLimit = Math.max(MaxNumberEventPerBatch * (MaxConnections + 1), _queueSizeLimit / 6);\r\n                }\r\n                else {\r\n                    _autoFlushBatchLimit = 0;\r\n                }\r\n            }\r\n            // Provided for backward compatibility they are not \"expected\" to be in current use but they are public\r\n            objDefineAccessors(_self, \"_setTimeoutOverride\", function () { return _timeoutWrapper.set; }, function (value) {\r\n                // Recreate the timeout wrapper\r\n                _timeoutWrapper = createTimeoutWrapper(value, _timeoutWrapper.clear);\r\n            });\r\n            objDefineAccessors(_self, \"_clearTimeoutOverride\", function () { return _timeoutWrapper.clear; }, function (value) {\r\n                // Recreate the timeout wrapper\r\n                _timeoutWrapper = createTimeoutWrapper(_timeoutWrapper.set, value);\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PostChannel.prototype.initialize.\r\n// Removed Stub for PostChannel.prototype.processTelemetry.\r\n// Removed Stub for PostChannel.prototype.setEventQueueLimits.\r\n// Removed Stub for PostChannel.prototype.pause.\r\n// Removed Stub for PostChannel.prototype.resume.\r\n// Removed Stub for PostChannel.prototype.addResponseHandler.\r\n// Removed Stub for PostChannel.prototype.flush.\r\n// Removed Stub for PostChannel.prototype.setMsaAuthTicket.\r\n// Removed Stub for PostChannel.prototype.hasEvents.\r\n// Removed Stub for PostChannel.prototype._loadTransmitProfiles.\r\n// Removed Stub for PostChannel.prototype._setTransmitProfile.\r\n// Removed Stub for PostChannel.prototype._backOffTransmission.\r\n// Removed Stub for PostChannel.prototype._clearBackOff.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    PostChannel.__ieDyn=1;\n\n    return PostChannel;\r\n}(BaseTelemetryPlugin));\r\nexport default PostChannel;\r\n//# sourceMappingURL=PostChannel.js.map","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ObjAssign, ObjClass, ObjCreate, ObjDefineProperty, ObjHasOwnProperty, ObjProto, strDefault, strShimFunction, strShimHasOwnProperty, strShimPrototype } from \"./Constants\";\r\nimport { getGlobal, objCreateFn, throwTypeError } from \"./Helpers\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES3 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasSymbol = !!SymbolObj;\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strShimHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = ObjAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strShimHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreateFn(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (ObjHasOwnProperty.call(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && ObjDefineProperty(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !ObjHasOwnProperty.call(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!ObjCreate) {\r\n        ObjDefineProperty(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (ObjDefineProperty) {\r\n        ObjDefineProperty(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!ObjCreate) {\r\n        ObjDefineProperty(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","import{ErrorCode as e}from\"./interfaces.js\";var o,a,s,t,n,i;!function(e){e.desktop=\"desktop\",e.web=\"web\",e.android=\"android\",e.ios=\"ios\",e.ipados=\"ipados\",e.macos=\"macos\",e.rigel=\"rigel\",e.surfaceHub=\"surfaceHub\",e.teamsRoomsWindows=\"teamsRoomsWindows\",e.teamsRoomsAndroid=\"teamsRoomsAndroid\",e.teamsPhones=\"teamsPhones\",e.teamsDisplays=\"teamsDisplays\"}(o||(o={})),function(e){e.office=\"Office\",e.outlook=\"Outlook\",e.outlookWin32=\"OutlookWin32\",e.orange=\"Orange\",e.places=\"Places\",e.teams=\"Teams\",e.teamsModern=\"TeamsModern\"}(a||(a={})),function(e){e.settings=\"settings\",e.content=\"content\",e.authentication=\"authentication\",e.remove=\"remove\",e.task=\"task\",e.sidePanel=\"sidePanel\",e.stage=\"stage\",e.meetingStage=\"meetingStage\"}(s||(s={})),function(e){e[e.Standard=0]=\"Standard\",e[e.Edu=1]=\"Edu\",e[e.Class=2]=\"Class\",e[e.Plc=3]=\"Plc\",e[e.Staff=4]=\"Staff\"}(t||(t={})),function(e){e[e.Admin=0]=\"Admin\",e[e.User=1]=\"User\",e[e.Guest=2]=\"Guest\"}(n||(n={})),function(e){e.Large=\"large\",e.Medium=\"medium\",e.Small=\"small\"}(i||(i={}));var r,m=i;!function(e){e.Regular=\"Regular\",e.Private=\"Private\",e.Shared=\"Shared\"}(r||(r={}));const d={errorCode:e.NOT_SUPPORTED_ON_PLATFORM},u={majorVersion:1,minorVersion:5},l={adaptiveCardSchemaVersion:{majorVersion:1,minorVersion:5}},c=new Error(\"Invalid input count: Must supply a valid image count (limit of 10).\"),f=new Error(\"Invalid response: Received more images than the specified max limit in the response.\");export{r as ChannelType,i as DialogDimension,s as FrameContexts,o as HostClientType,a as HostName,m as TaskModuleDimension,t as TeamType,n as UserTeamRole,c as errorInvalidCount,f as errorInvalidResponse,d as errorNotSupportedOnPlatform,u as minAdaptiveCardVersion,l as teamsMinAdaptiveCardVersion};\n","/*\n * Application Insights JavaScript SDK - Web Analytics, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateTimeUtilsDuration, msToTimeSpan } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, getNavigator, getPerformance, safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_CONNECT_END, _DYN_DURATION, _DYN_GET_ENTRIES_BY_TYPE, _DYN_GET_PERFORMANCE_TIMI17, _DYN_IS_PERFORMANCE_TIMIN16, _DYN_IS_PERFORMANCE_TIMIN19, _DYN_LENGTH, _DYN_LOAD_EVENT_END, _DYN_NAVIGATION_START, _DYN_POPULATE_PAGE_VIEW_P12, _DYN_REQUEST_START, _DYN_RESPONSE_END, _DYN_RESPONSE_START, _DYN_SHOULD_COLLECT_DURAT18 } from \"../../__DynamicConstants\";\r\nvar MAX_DURATION_ALLOWED = 3600000; // 1h\r\nvar botAgentNames = [\"googlebot\", \"adsbot-google\", \"apis-google\", \"mediapartners-google\"];\r\nfunction _isPerformanceTimingSupported() {\r\n    var perf = getPerformance();\r\n    return perf && !!perf.timing;\r\n}\r\nfunction _isPerformanceNavigationTimingSupported() {\r\n    var perf = getPerformance();\r\n    return perf && perf.getEntriesByType && perf.getEntriesByType(\"navigation\")[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\nfunction _isPerformanceTimingDataReady() {\r\n    var perf = getPerformance();\r\n    var timing = perf ? perf.timing : 0;\r\n    return timing\r\n        && timing.domainLookupStart > 0\r\n        && timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */] > 0\r\n        && timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */] > 0\r\n        && timing[_DYN_REQUEST_START /* @min:%2erequestStart */] > 0\r\n        && timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */] > 0\r\n        && timing[_DYN_RESPONSE_END /* @min:%2eresponseEnd */] > 0\r\n        && timing[_DYN_CONNECT_END /* @min:%2econnectEnd */] > 0\r\n        && timing.domLoading > 0;\r\n}\r\nfunction _getPerformanceTiming() {\r\n    if (_isPerformanceTimingSupported()) {\r\n        return getPerformance().timing;\r\n    }\r\n    return null;\r\n}\r\nfunction _getPerformanceNavigationTiming() {\r\n    if (_isPerformanceNavigationTimingSupported()) {\r\n        return getPerformance()[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */](\"navigation\")[0];\r\n    }\r\n    return null;\r\n}\r\n/**\r\n* This method tells if given durations should be excluded from collection.\r\n*/\r\nfunction _shouldCollectDuration() {\r\n    var durations = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        durations[_i] = arguments[_i];\r\n    }\r\n    var _navigator = getNavigator() || {};\r\n    // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n    var userAgent = _navigator.userAgent;\r\n    var isGoogleBot = false;\r\n    if (userAgent) {\r\n        for (var i = 0; i < botAgentNames[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i]) !== -1;\r\n        }\r\n    }\r\n    if (isGoogleBot) {\r\n        // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n        return false;\r\n    }\r\n    else {\r\n        // for other page views, don't report if it's outside of a reasonable range\r\n        for (var i = 0; i < durations[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (durations[i] < 0 || durations[i] >= MAX_DURATION_ALLOWED) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Class encapsulates sending page view performance telemetry.\r\n */\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        var _this = this;\r\n        var _logger = safeGetLogger(core);\r\n        dynamicProto(PageViewPerformanceManager, this, function (_self) {\r\n            _self[_DYN_POPULATE_PAGE_VIEW_P12 /* @min:%2epopulatePageViewPerformanceEvent */] = function (pageViewPerformance) {\r\n                pageViewPerformance.isValid = false;\r\n                /*\r\n                 * http://www.w3.org/TR/navigation-timing/#processing-model\r\n                 *  |-navigationStart\r\n                 *  |             |-connectEnd\r\n                 *  |             ||-requestStart\r\n                 *  |             ||             |-responseStart\r\n                 *  |             ||             |              |-responseEnd\r\n                 *  |             ||             |              |\r\n                 *  |             ||             |              |         |-loadEventEnd\r\n                 *  |---network---||---request---|---response---|---dom---|\r\n                 *  |--------------------------total----------------------|\r\n                 *\r\n                 *  total = The difference between the load event of the current document is completed and the first recorded timestamp of the performance entry : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#duration\r\n                 *  network = Redirect time + App Cache + DNS lookup time + TCP connection time\r\n                 *  request = Request time : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#request_time\r\n                 *  response = Response time\r\n                 *  dom = Document load time : https://html.spec.whatwg.org/multipage/dom.html#document-load-timing-info\r\n                 *      = Document processing time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#document_processing\r\n                 *      + Loading time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#loading\r\n                 */\r\n                var navigationTiming = _getPerformanceNavigationTiming();\r\n                var timing = _getPerformanceTiming();\r\n                var total = 0;\r\n                var network = 0;\r\n                var request = 0;\r\n                var response = 0;\r\n                var dom = 0;\r\n                if (navigationTiming || timing) {\r\n                    if (navigationTiming) {\r\n                        total = navigationTiming[_DYN_DURATION /* @min:%2eduration */];\r\n                        /**\r\n                         * support both cases:\r\n                         * - startTime is always zero: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming\r\n                         * - for older browsers where the startTime is not zero\r\n                         */\r\n                        network = navigationTiming.startTime === 0 ? navigationTiming[_DYN_CONNECT_END /* @min:%2econnectEnd */] : dateTimeUtilsDuration(navigationTiming.startTime, navigationTiming[_DYN_CONNECT_END /* @min:%2econnectEnd */]);\r\n                        request = dateTimeUtilsDuration(navigationTiming.requestStart, navigationTiming[_DYN_RESPONSE_START /* @min:%2eresponseStart */]);\r\n                        response = dateTimeUtilsDuration(navigationTiming[_DYN_RESPONSE_START /* @min:%2eresponseStart */], navigationTiming[_DYN_RESPONSE_END /* @min:%2eresponseEnd */]);\r\n                        dom = dateTimeUtilsDuration(navigationTiming.responseEnd, navigationTiming[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                    }\r\n                    else {\r\n                        total = dateTimeUtilsDuration(timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */], timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                        network = dateTimeUtilsDuration(timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */], timing[_DYN_CONNECT_END /* @min:%2econnectEnd */]);\r\n                        request = dateTimeUtilsDuration(timing.requestStart, timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */]);\r\n                        response = dateTimeUtilsDuration(timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */], timing[_DYN_RESPONSE_END /* @min:%2eresponseEnd */]);\r\n                        dom = dateTimeUtilsDuration(timing.responseEnd, timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                    }\r\n                    if (total === 0) {\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 10 /* _eInternalMessageId.ErrorPVCalc */, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else if (!_this[_DYN_SHOULD_COLLECT_DURAT18 /* @min:%2eshouldCollectDuration */](total, network, request, response, dom)) {\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 45 /* _eInternalMessageId.InvalidDurationValue */, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                        // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                        // in this case, don't report client performance from this page\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 8 /* _eInternalMessageId.ClientPerformanceMathError */, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else {\r\n                        pageViewPerformance.durationMs = total;\r\n                        // // convert to timespans\r\n                        pageViewPerformance.perfTotal = pageViewPerformance[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(total);\r\n                        pageViewPerformance.networkConnect = msToTimeSpan(network);\r\n                        pageViewPerformance.sentRequest = msToTimeSpan(request);\r\n                        pageViewPerformance.receivedResponse = msToTimeSpan(response);\r\n                        pageViewPerformance.domProcessing = msToTimeSpan(dom);\r\n                        pageViewPerformance.isValid = true;\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_GET_PERFORMANCE_TIMI17 /* @min:%2egetPerformanceTiming */] = _getPerformanceTiming;\r\n            _self[_DYN_IS_PERFORMANCE_TIMIN16 /* @min:%2eisPerformanceTimingSupported */] = _isPerformanceTimingSupported;\r\n            _self[_DYN_IS_PERFORMANCE_TIMIN19 /* @min:%2eisPerformanceTimingDataReady */] = _isPerformanceTimingDataReady;\r\n            _self[_DYN_SHOULD_COLLECT_DURAT18 /* @min:%2eshouldCollectDuration */] = _shouldCollectDuration;\r\n        });\r\n    }\r\n// Removed Stub for PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent.\r\n// Removed Stub for PageViewPerformanceManager.prototype.getPerformanceTiming.\r\n// Removed Stub for PageViewPerformanceManager.prototype.isPerformanceTimingSupported.\r\n// Removed Stub for PageViewPerformanceManager.prototype.isPerformanceTimingDataReady.\r\n// Removed Stub for PageViewPerformanceManager.prototype.shouldCollectDuration.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    PageViewPerformanceManager.__ieDyn=1;\n\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { _DYN_CALL, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { arrForEach, isFunction } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config The current config for the instance\r\n * @param core THe current core instance\r\n * @param extensions The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin &&\r\n                isFunction(lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]) &&\r\n                isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            var isInitialized = false;\r\n            if (isFunction(thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */])) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            else {\r\n                pluginState = _getPluginState(thePlugin);\r\n                isInitialized = pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extent from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = isFunction(extB[STR_PROCESS_TELEMETRY]);\r\n            if (isFunction(extA[STR_PROCESS_TELEMETRY])) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func[_DYN_CALL /* @min:%2ecall */](component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","import{__awaiter as e}from\"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.0_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";import{getLogger as n,isFollowingApiVersionTagFormat as i,getApiVersionTag as t}from\"./telemetry.js\";import{latestRuntimeApiVersion as o}from\"../public/runtime.js\";import{version as s}from\"../public/version.js\";import{GlobalVars as r}from\"./globalVars.js\";import{callHandler as a}from\"./handlers.js\";import{serializeMessageRequest as d,deserializeMessageResponse as c,deserializeMessageRequest as u,serializeMessageResponse as l}from\"./messageObjects.js\";import{tryPolyfillWithNestedAppAuthBridge as g}from\"./nestedAppAuthUtils.js\";import{ssrSafeWindow as p}from\"./utils.js\";import{UUID as f}from\"./uuidObject.js\";import{validateOrigin as w}from\"./validOrigins.js\";const m=n(\"communication\");class h{}class W{}function v(n,i){if(W.messageListener=n=>function(n){return e(this,void 0,void 0,(function*(){if(!n||!n.data||\"object\"!=typeof n.data)return void C(\"Unrecognized message format received by app, message being ignored. Message: %o\",n);const e=n.source||n.originalEvent&&n.originalEvent.source,i=n.origin||n.originalEvent&&n.originalEvent.origin;return N(e,i).then((o=>{o?(function(e,n){r.isFramelessWindow||h.parentWindow&&!h.parentWindow.closed&&e!==h.parentWindow?h.childWindow&&!h.childWindow.closed&&e!==h.childWindow||(h.childWindow=e,h.childOrigin=n):(h.parentWindow=e,h.parentOrigin=n);h.parentWindow&&h.parentWindow.closed&&(h.parentWindow=null,h.parentOrigin=null);h.childWindow&&h.childWindow.closed&&(h.childWindow=null,h.childOrigin=null);K(h.parentWindow),K(h.childWindow)}(e,i),e===h.parentWindow?_(n):e===h.childWindow&&function(e){if(\"id\"in e.data&&\"func\"in e.data){const n=u(e.data),[i,o]=a(n.func,n.args);i&&void 0!==o?(z(\"Returning message %s from child back to child, action: %s.\",Z(n),n.func),X(n.id,n.uuid,Array.isArray(o)?o:[o])):(z(\"Relaying message %s from child to parent, action: %s. Relayed message will have a new id.\",Z(n),n.func),S(t(\"v2\",\"tasks.startTask\"),n.func,n.args,((...e)=>{if(h.childWindow){const i=e.pop();z(\"Message from parent being relayed to child, id: %s\",Z(n)),X(n.id,n.uuid,e,i)}})))}}(n)):C(\"Message being ignored by app because it is either coming from the current window or a different window with an invalid origin, message: %o, source: %o, origin: %o\",n,e,i)}))}))}(n),h.currentWindow=h.currentWindow||p(),h.parentWindow=h.currentWindow.parent!==h.currentWindow.self?h.currentWindow.parent:h.currentWindow.opener,h.topWindow=h.currentWindow.top,(h.parentWindow||n)&&h.currentWindow.addEventListener(\"message\",W.messageListener,!1),!h.parentWindow){const e=h.currentWindow;if(!e.nativeInterface)return Promise.reject(new Error(\"Initialization Failed. No Parent window found.\"));r.isFramelessWindow=!0,e.onNativeMessage=_}try{return h.parentOrigin=\"*\",T(i,\"initialize\",[s,o,n]).then((([e,n,i,t])=>(g(t,h.currentWindow,{onMessage:Q,sendPostMessage:R}),{context:e,clientType:n,runtimeConfig:i,clientSupportedSDKVersion:t})))}finally{h.parentOrigin=null}}function M(){h.currentWindow&&h.currentWindow.removeEventListener(\"message\",W.messageListener,!1),h.currentWindow=null,h.parentWindow=null,h.parentOrigin=null,h.childWindow=null,h.childOrigin=null,W.parentMessageQueue=[],W.childMessageQueue=[],W.nextMessageId=0,W.callbacks.clear(),W.promiseCallbacks.clear(),W.portCallbacks.clear(),W.legacyMessageIdsToUuidMap={}}function b(e,n,...i){return T(e,n,i).then((([e])=>e))}function y(e,n,...i){return T(e,n,i).then((([e,n])=>{if(!e)throw new Error(n)}))}function k(e,n,i,...t){return T(e,n,t).then((([e,n])=>{if(!e)throw new Error(n||i)}))}function I(e,n,...i){return T(e,n,i).then((([e,n])=>{if(e)throw e;return n}))}function T(e,n,t=void 0){if(!i(e))throw Error(`apiVersionTag: ${e} passed in doesn't follow the pattern starting with 'v' followed by digits, then underscore with words, please check.`);return new Promise((i=>{const o=A(e,n,t);var s;i((s=o.uuid,new Promise((e=>{W.promiseCallbacks.set(s,e)}))))}))}function O(e,n,t=void 0){if(!i(e))throw Error(`apiVersionTag: ${e} passed in doesn't follow the pattern starting with 'v' followed by digits, then underscore with words, please check.`);const o=A(e,n,t);return s=o.uuid,new Promise(((e,n)=>{W.portCallbacks.set(s,((i,t)=>{i instanceof MessagePort?e(i):n(t&&t.length>0?t[0]:new Error(\"Host responded without port or error details.\"))}))}));var s}function S(e,n,t,o){let s;if(t instanceof Function?o=t:t instanceof Array&&(s=t),!i(e))throw Error(`apiVersionTag: ${e} passed in doesn't follow the pattern starting with 'v' followed by digits, then underscore with words, please check.`);const r=A(e,n,s);o&&W.callbacks.set(r.uuid,o)}W.parentMessageQueue=[],W.childMessageQueue=[],W.topMessageQueue=[],W.nextMessageId=0,W.callbacks=new Map,W.promiseCallbacks=new Map,W.portCallbacks=new Map,W.legacyMessageIdsToUuidMap={};const j=m.extend(\"sendNestedAuthRequestToTopWindow\");function R(e){const n=j,i=h.topWindow,t=function(e){const n=W.nextMessageId++,i=new f;return W.legacyMessageIdsToUuidMap[n]=i,{id:n,uuid:i,func:\"nestedAppAuth.execute\",timestamp:Date.now(),args:[],data:e}}(e);return n(\"Message %s information: %o\",Z(t),{actionName:t.func}),P(i,t)}const x=m.extend(\"sendRequestToTargetWindowHelper\");function P(e,n){const i=x,t=J(e),o=d(n);if(r.isFramelessWindow)h.currentWindow&&h.currentWindow.nativeInterface&&(i(\"Sending message %s to %s via framelessPostMessage interface\",Z(o),t),h.currentWindow.nativeInterface.framelessPostMessage(JSON.stringify(o)));else{const s=H(e);e&&s?(i(\"Sending message %s to %s via postMessage\",Z(o),t),e.postMessage(o,s)):(i(\"Adding message %s to %s message queue\",Z(o),t),D(e).push(n))}return n}const E=m.extend(\"sendMessageToParentHelper\");function A(e,n,i){const t=E,o=h.parentWindow,s=function(e,n,i){const t=W.nextMessageId++,o=new f;return W.legacyMessageIdsToUuidMap[t]=o,{id:t,uuid:o,func:n,timestamp:Date.now(),args:i||[],apiVersionTag:e}}(e,n,i);return t(\"Message %s information: %o\",Z(s),{actionName:n,args:i}),P(o,s)}const C=m.extend(\"processIncomingMessage\");const U=m.extend(\"processAuthBridgeMessage\");function Q(e,n){var i,t;const o=U;if(!e||!e.data||\"object\"!=typeof e.data)return void o(\"Unrecognized message format received by app, message being ignored. Message: %o\",e);const{args:s}=e.data,[,r]=null!=s?s:[],a=(()=>{try{return JSON.parse(r)}catch(e){return null}})();if(!a||\"object\"!=typeof a||\"NestedAppAuthResponse\"!==a.messageType)return void o(\"Unrecognized data format received by app, message being ignored. Message: %o\",e);const d=e.source||(null===(i=null==e?void 0:e.originalEvent)||void 0===i?void 0:i.source),c=e.origin||(null===(t=null==e?void 0:e.originalEvent)||void 0===t?void 0:t.origin);d?N(d,c)?(h.topWindow&&!h.topWindow.closed&&d!==h.topWindow||(h.topWindow=d,h.topOrigin=c),h.topWindow&&h.topWindow.closed&&(h.topWindow=null,h.topOrigin=null),K(h.topWindow),n(r)):o(\"Message being ignored by app because it is either coming from the current window or a different window with an invalid origin\"):o(\"Message being ignored by app because it is coming for a target that is null\")}const F=m.extend(\"shouldProcessIncomingMessage\");function N(n,i){return e(this,void 0,void 0,(function*(){if(h.currentWindow&&n===h.currentWindow)return F(\"Should not process message because it is coming from the current window\"),!1;if(h.currentWindow&&h.currentWindow.location&&i&&i===h.currentWindow.location.origin)return!0;{let e;try{e=new URL(i)}catch(e){return F(\"Message has an invalid origin of %s\",i),!1}const n=yield w(e);return n||F(\"Message has an invalid origin of %s\",i),n}}))}const $=m.extend(\"handleIncomingMessageFromParent\");function L(e,n){if(n){const i=[...e].find((([e,i])=>e.toString()===n.toString()));if(i)return i[0]}}function V(e,n){const i=L(n,e.uuid);i&&n.delete(i),e.uuid?W.legacyMessageIdsToUuidMap={}:delete W.legacyMessageIdsToUuidMap[e.id]}function _(e){const n=$;if(\"id\"in e.data&&\"number\"==typeof e.data.id){const i=e.data,t=c(i),o=function(e){const n=$;if(!e.uuid)return W.legacyMessageIdsToUuidMap[e.id];{const n=e.uuid,i=L(W.callbacks,n);if(i)return i;const t=L(W.promiseCallbacks,n);if(t)return t;const o=L(W.portCallbacks,n);if(o)return o}n(\"Received message %s that failed to produce a callbackId\",Z(e))}(t);if(o){const i=W.callbacks.get(o);n(\"Received a response from parent for message %s\",o.toString()),i&&(n(\"Invoking the registered callback for message %s with arguments %o\",o.toString(),t.args),i.apply(null,[...t.args,t.isPartialResponse]),function(e){return!0===e.data.isPartialResponse}(e)||(n(\"Removing registered callback for message %s\",o.toString()),V(t,W.callbacks)));const s=W.promiseCallbacks.get(o);s&&(n(\"Invoking the registered promise callback for message %s with arguments %o\",o.toString(),t.args),s(t.args),n(\"Removing registered promise callback for message %s\",o.toString()),V(t,W.promiseCallbacks));const r=W.portCallbacks.get(o);if(r){let i;n(\"Invoking the registered port callback for message %s with arguments %o\",o.toString(),t.args),e.ports&&e.ports[0]instanceof MessagePort&&(i=e.ports[0]),r(i,t.args),n(\"Removing registered port callback for message %s\",o.toString()),V(t,W.portCallbacks)}t.uuid&&(W.legacyMessageIdsToUuidMap={})}}else if(\"func\"in e.data&&\"string\"==typeof e.data.func){const i=e.data;n('Received a message from parent %s, action: \"%s\"',Z(i),i.func),a(i.func,i.args)}else n(\"Received an unknown message: %O\",e)}const z=m.extend(\"handleIncomingMessageFromChild\");function q(){return h.topWindow!==h.parentWindow}function D(e){return e===h.topWindow&&q()?W.topMessageQueue:e===h.parentWindow?W.parentMessageQueue:e===h.childWindow?W.childMessageQueue:[]}function H(e){return e===h.topWindow&&q()?h.topOrigin:e===h.parentWindow?h.parentOrigin:e===h.childWindow?h.childOrigin:null}function J(e){return e===h.topWindow&&q()?\"top\":e===h.parentWindow?\"parent\":e===h.childWindow?\"child\":null}const B=m.extend(\"flushMessageQueue\");function K(e){const n=H(e),i=D(e),t=J(e);for(;e&&n&&i.length>0;){const o=i.shift();if(o){const i=d(o);B(\"Flushing message %s from %s message queue via postMessage.\",Z(i),t),e.postMessage(i,n)}}}function G(e,n){let i;i=h.currentWindow.setInterval((()=>{0===D(e).length&&(clearInterval(i),n())}),100)}function X(e,n,i,t){const o=h.childWindow,s=function(e,n,i,t){return{id:e,uuid:n,args:i||[],isPartialResponse:t}}(e,n,i,t),r=l(s),a=H(o);o&&a&&o.postMessage(r,a)}function Y(e,n){const i=h.childWindow,t=function(e,n){return{func:e,args:n||[]}}(e,n),o=H(i);i&&o?i.postMessage(t,o):D(i).push(t)}function Z(e){return\"uuidAsString\"in e?`${e.uuidAsString} (legacy id: ${e.id})`:\"uuid\"in e&&void 0!==e.uuid?`${e.uuid.toString()} (legacy id: ${e.id})`:`legacy id: ${e.id} (no uuid)`}export{h as Communication,v as initializeCommunication,O as requestPortFromParentWithVersion,I as sendAndHandleSdkError,y as sendAndHandleStatusAndReason,k as sendAndHandleStatusAndReasonWithDefaultError,b as sendAndUnwrap,Y as sendMessageEventToChild,S as sendMessageToParent,T as sendMessageToParentAsync,R as sendNestedAuthRequestToTopWindow,M as uninitializeCommunication,G as waitForMessageQueue};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDocument, getWindow } from \"./EnvUtils\";\r\nimport { arrForEach, arrIndexOf, isArray, objForEachKey, objKeys } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj Object to add the event too.\r\n * @param eventName String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object to remove the event from\r\n * @param eventName {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj Object to add the event too.\r\n * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef Pointer that specifies the function to call when event fires\r\n * @param useCapture [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object to remove the event from\r\n * @param eventNameWithoutOn {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName {string} - The name of the event\r\n * @param callback {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events An string array of event names to bind the listener to\r\n * @param listener The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events An string array of event names to bind the listener to\r\n * @param listener The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events An string array of event names to bind the listener to\r\n * @param listener The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nimport { ContextColumnsBase } from '../interfaces/telemetry.constants';\nexport const applyAppContext = (properties, context) => {\n    const appInfoLang = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.AppInfoLanguage];\n    const appInfoVersion = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.AppInfoVersion];\n    if (appInfoLang) {\n        context.app.locale = appInfoLang;\n    }\n    if (appInfoVersion) {\n        context.app.ver = appInfoVersion;\n    }\n};\nexport const applyUserContext = (properties, context) => {\n    const userInfoId = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.UserInfoId];\n    const userInfoLanguage = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.UserInfoLanguage];\n    if (userInfoId) {\n        context.user.id = userInfoId;\n        context.user.localId = `a:${userInfoId}`; // Docs - https://1dsdocs.azurewebsites.net/schema/Types/UserId.html#kinds-of-ids\n    }\n    if (userInfoLanguage) {\n        context.user.locale = userInfoLanguage;\n    }\n};\nexport const applyDeviceContext = (properties, context) => {\n    const localId = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.DeviceInfoId];\n    const make = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.DeviceInfoMake];\n    const model = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.DeviceInfoModel];\n    if (localId) {\n        context.device.localId = localId;\n    }\n    if (make) {\n        context.device.make = make;\n    }\n    if (model) {\n        context.device.model = model;\n    }\n};\nexport const applySessionContext = (properties, context) => {\n    const sesId = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.SessionId];\n    if (sesId) {\n        context.session.id = sesId;\n    }\n};\nexport const applyOSContext = (properties, context) => {\n    const version = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.DeviceInfoOsVersion];\n    const name = properties === null || properties === void 0 ? void 0 : properties[ContextColumnsBase.DeviceInfoOsName];\n    if (version) {\n        context.os.ver = version;\n    }\n    if (name) {\n        context.os.name = name;\n    }\n};\nexport const applyCustomContext = (properties, ctxMgr) => {\n    for (const property in properties) {\n        ctxMgr.setProperty(property, properties[property]);\n    }\n};\n//# sourceMappingURL=convertCommonPropsTo1DS.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Enums.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nexport var ActionType = {\r\n    CLICKLEFT: \"CL\",\r\n    CLICKRIGHT: \"CR\",\r\n    CLICKMIDDLE: \"CM\",\r\n    SCROLL: \"S\",\r\n    ZOOM: \"Z\",\r\n    RESIZE: \"R\",\r\n    KEYBOARDENTER: \"KE\",\r\n    KEYBOARDSPACE: \"KS\",\r\n    OTHER: \"O\"\r\n};\r\nexport var EventType;\r\n(function (EventType) {\r\n    EventType[EventType[\"PAGE_ACTION\"] = 0] = \"PAGE_ACTION\";\r\n    EventType[EventType[\"CONTENT_UPDATE\"] = 1] = \"CONTENT_UPDATE\";\r\n})(EventType || (EventType = {}));\r\n//# sourceMappingURL=Enums.js.map","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* TimeoutOverrideWrapper.ts\r\n* @author  Nev Wylie (newylie)\r\n* @copyright Microsoft 2022\r\n* Simple internal timeout wrapper\r\n*/\r\nexport function defaultSetTimeout(callback, ms) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    return setTimeout(callback, ms, args);\r\n}\r\nexport function defaultClearTimeout(timeoutId) {\r\n    clearTimeout(timeoutId);\r\n}\r\nexport function createTimeoutWrapper(argSetTimeout, argClearTimeout) {\r\n    return {\r\n        set: argSetTimeout || defaultSetTimeout,\r\n        clear: argClearTimeout || defaultClearTimeout\r\n    };\r\n}\r\n//# sourceMappingURL=TimeoutOverrideWrapper.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* timespan.ts\r\n* @author Ram Thiru (ramthi)\r\n* @copyright Microsoft 2018\r\n*/\r\nvar Timespan = /** @class */ (function () {\r\n    function Timespan() {\r\n        this._timers = [];\r\n    }\r\n    /**\r\n     * Records the current time on a timer object identified by the counterName passed in\r\n     * Returns a number > 0  that denotes the milliseconds elapsed between start and current time, if isComplete param is set to true.\r\n     * @param counterName - Unique name for the counter instance that needs to be operated on.\r\n     * @param isComplete - Indicates if the call is to complete a timer or start a new one.\r\n     */\r\n    Timespan.prototype._recordTimeSpan = function (counterName, isComplete) {\r\n        var timestamp = new Date().getTime();\r\n        if (!isComplete) {\r\n            this._timers[counterName] = timestamp;\r\n        }\r\n        else {\r\n            return timestamp - this._timers[counterName];\r\n        }\r\n    };\r\n    return Timespan;\r\n}());\r\nexport default Timespan;\r\n//# sourceMappingURL=Timespan.js.map","var e,r;function s(){if(r)return e;r=1;var s=1e3,n=60*s,a=60*n,t=24*a,c=7*t,u=365.25*t;function i(e,r,s,n){var a=r>=1.5*s;return Math.round(e/s)+\" \"+n+(a?\"s\":\"\")}return e=function(e,r){r=r||{};var o=typeof e;if(\"string\"===o&&e.length>0)return function(e){if((e=String(e)).length>100)return;var r=/^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!r)return;var i=parseFloat(r[1]);switch((r[2]||\"ms\").toLowerCase()){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return i*u;case\"weeks\":case\"week\":case\"w\":return i*c;case\"days\":case\"day\":case\"d\":return i*t;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return i*a;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return i*n;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return i*s;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return i;default:return}}(e);if(\"number\"===o&&isFinite(e))return r.long?function(e){var r=Math.abs(e);if(r>=t)return i(e,r,t,\"day\");if(r>=a)return i(e,r,a,\"hour\");if(r>=n)return i(e,r,n,\"minute\");if(r>=s)return i(e,r,s,\"second\");return e+\" ms\"}(e):function(e){var r=Math.abs(e);if(r>=t)return Math.round(e/t)+\"d\";if(r>=a)return Math.round(e/a)+\"h\";if(r>=n)return Math.round(e/n)+\"m\";if(r>=s)return Math.round(e/s)+\"s\";return e+\"ms\"}(e);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(e))}}export{s as __require};\n","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Utils.ts\r\n* @author Ram Thiru (ramthi) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n* File containing utility functions.\r\n*/\r\nimport { arrForEach, getDocument, getPerformance, getWindow, isObject, isValueAssigned, isWindowObjectAvailable, objForEachKey } from \"@microsoft/1ds-core-js\";\r\nimport { APPID_PREFIX } from \"./Constants\";\r\nvar doNotTrackFieldName = \"data-bi-dnt\";\r\nvar manualTrackOnlyFieldName = \"data-bi-mto\";\r\n/**\r\n* Check if appId has a colon as the third character. If it does\r\n* do nothing otherwise prefix it with 'JS:'.A colon is valid in an appId\r\n* @param appId - appId\r\n* @returns An appId with js:prefix\r\n*/\r\nexport function _getAppIdWithPrefix(appId) {\r\n    var result;\r\n    if (appId) {\r\n        var appIdArray = appId.split(\":\");\r\n        result = appIdArray.length > 1 && appIdArray[0].toLowerCase() === \"js\" ? appId : APPID_PREFIX + appId;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n* Finds attributes in overrideConfig which are invalid or should be objects\r\n* and deletes them. useful in override config\r\n* @param overrideConfig - override config object\r\n* @param attributeNamesExpectedObjects - attributes that should be objects in override config object\r\n*/\r\nexport function _removeNonObjectsAndInvalidElements(overrideConfig, attributeNamesExpectedObjects) {\r\n    _removeInvalidElements(overrideConfig);\r\n    arrForEach(attributeNamesExpectedObjects, function (objectName, i) {\r\n        if (isObject(overrideConfig[objectName])) {\r\n            _removeInvalidElements(overrideConfig[objectName]);\r\n        }\r\n        else {\r\n            delete overrideConfig[objectName];\r\n        }\r\n    });\r\n}\r\n/**\r\n* Finds attributes in object which are invalid\r\n* and deletes them. useful in override config\r\n* @param object Input object\r\n*/\r\nexport function _removeInvalidElements(object) {\r\n    /// Because the config object 'callback' contains only functions,\r\n    /// when it is stringified it returns the empty object. This explains\r\n    /// the workaround regarding 'callback'\r\n    objForEachKey(object, function (property, value) {\r\n        if (!isValueAssigned(value) ||\r\n            (JSON.stringify(value) === \"{}\" && (property !== \"callback\"))) {\r\n            delete object[property];\r\n        }\r\n    });\r\n}\r\n/**\r\n* Gets intersection area of two rectangles\r\n* and deletes them. useful in override config\r\n* @param  rect1 - object containing top, left, right, and bottom numbers\r\n* @param  rect2 - object containing top, left, right, and bottom numbers\r\n* @returns Intersection area in px^2\r\n*/\r\nexport function _getIntersectionArea(rect1, rect2) {\r\n    var x11 = rect1.left;\r\n    var y11 = rect1.top;\r\n    var x12 = rect1.right;\r\n    var y12 = rect1.bottom;\r\n    var x21 = rect2.left;\r\n    var y21 = rect2.top;\r\n    var x22 = rect2.right;\r\n    var y22 = rect2.bottom;\r\n    var xOverlap = Math.max(0, Math.min(x12, x22) - Math.max(x11, x21));\r\n    var yOverlap = Math.max(0, Math.min(y12, y22) - Math.max(y11, y21));\r\n    return xOverlap * yOverlap;\r\n}\r\n/**\r\n* Walks up DOM tree to find anchor element\r\n* @param element - DOM element\r\n* @returns Dom element which is an anchor\r\n*/\r\nexport function _findClosestAnchor(element) {\r\n    /// <summary> Walks up DOM tree to find anchor element </summary>\r\n    /// <param type='object'> DOM element </param>\r\n    /// <returns> Dom element which is an anchor</returns>\r\n    return _walkUpDomChainWithElementValidation(element, _isElementAnAnchor);\r\n}\r\n/**\r\n* Stringify object\r\n* @param fieldName - Field name\r\n* @param value - Value\r\n* @returns Stringified value\r\n*/\r\nexport function _stringifyField(fieldName, value) {\r\n    if (value) {\r\n        try {\r\n            var stringified = JSON.stringify(value);\r\n            if (stringified === \"{}\") {\r\n                if (fieldName === \"timing\") {\r\n                    return _stringifyWindowPerformanceTiming();\r\n                }\r\n            }\r\n            return stringified;\r\n        }\r\n        catch (e) {\r\n            // JSON.Strigify has issues with circular references.\r\n            // http://stackoverflow.com/questions/4816099/chrome-sendrequest-error-typeerror-converting-circular-structure-to-json\r\n            var message = \"{'error': 'ERROR: could not stringify {0} {1}'}\";\r\n            var token = (typeof value === \"string\") ? value : \"\";\r\n            return message.replace(\"{0}\", fieldName).replace(\"{1}\", token);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n* Stringify window timing object\r\n* Safari does not serialize window.performance.timing, therefore this shim is necessary.\r\n* @returns stringified window.performance.timing\r\n*/\r\nfunction _stringifyWindowPerformanceTiming() {\r\n    var performanceString = \"{\";\r\n    if (isWindowObjectAvailable) {\r\n        var WPTfields = [\"navigationStart\",\r\n            \"unloadEventStart\",\r\n            \"unloadEventEnd\",\r\n            \"redirectStart\",\r\n            \"redirectEnd\",\r\n            \"fetchStart\",\r\n            \"domainLookupStart\",\r\n            \"domainLookupEnd\",\r\n            \"connectStart\",\r\n            \"connectEnd\",\r\n            \"secureConnectionStart\",\r\n            \"requestStart\",\r\n            \"responseStart\",\r\n            \"responseEnd\",\r\n            \"domLoading\",\r\n            \"domInteractive\",\r\n            \"domContentLoadedEventStart\",\r\n            \"domContentLoadedEventEnd\",\r\n            \"domComplete\",\r\n            \"loadEventStart\",\r\n            \"loadEventEnd\"];\r\n        var perf = getPerformance();\r\n        var windowPerformanceTiming = perf ? perf.timing : {};\r\n        for (var i = 0; i < WPTfields.length; i++) {\r\n            var WindowPerformanceTimingTempValue = windowPerformanceTiming[WPTfields[i]];\r\n            if (isValueAssigned(WindowPerformanceTimingTempValue)) {\r\n                performanceString += \"'\" + WPTfields[i] + \"':\" + WindowPerformanceTimingTempValue;\r\n                if (i < WPTfields.length - 1) {\r\n                    performanceString += \",\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    performanceString += \"}\";\r\n    return performanceString;\r\n}\r\n/**\r\n* Walks up DOM tree to find element which matches validationMethod\r\n* @param el - DOM element\r\n* @param validationMethod - DOM element validation method\r\n* @param validationMethodParam - DOM element validation method parameters\r\n* @returns Dom element which is an anchor\r\n*/\r\nexport function _walkUpDomChainWithElementValidation(el, validationMethod, validationMethodParam) {\r\n    var element = el;\r\n    if (element) {\r\n        element = _returnDomObjectIfjQuery(element);\r\n        while (!validationMethod(element, validationMethodParam)) {\r\n            element = element.parentNode;\r\n            element = _returnDomObjectIfjQuery(element);\r\n            if (!element || !(element.getAttribute)) {\r\n                return null;\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n}\r\n/**\r\n* Determine if DOM element is an anchor\r\n* @param element - DOM element\r\n* @returns Is element an anchor\r\n*/\r\nexport function _isElementAnAnchor(element) {\r\n    return element.nodeName === \"A\";\r\n}\r\n/**\r\n* Some elements might be jQuery, do not have method getAttribute\r\n* @param element - DOM or jQuery element\r\n* @returns DOM element\r\n*/\r\nexport function _returnDomObjectIfjQuery(element) {\r\n    // TODO: Fix Jquery reference.\r\n    // if (typeof jQuery === 'function' && element instanceof jQuery) {\r\n    //    return element[0];\r\n    // }\r\n    return element;\r\n}\r\n/**\r\n* Determines if an element is currently visible to the user\r\n* @param element - element to check for visibility\r\n* @param viewportBoundingRect - Viewport bounding rectangle\r\n* @returns true if element is truly visible\r\n*/\r\nexport function _isElementTrulyVisible(element, viewportBoundingRect) {\r\n    element = _returnDomObjectIfjQuery(element);\r\n    var rect = element.getBoundingClientRect();\r\n    var intersectionArea = _getIntersectionArea(rect, viewportBoundingRect);\r\n    if (intersectionArea > 0) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n* Returns the specified field and also removes the property from the object if exists.\r\n* @param obj - Input object\r\n* @param fieldName - >Name of the field/property to be extracted\r\n* @returns Value of the specified tag\r\n*/\r\nexport function _extractFieldFromObject(obj, fieldName) {\r\n    var fieldValue;\r\n    if (obj && obj[fieldName]) {\r\n        fieldValue = obj[fieldName];\r\n        delete obj[fieldName];\r\n    }\r\n    return fieldValue;\r\n}\r\n/**\r\n* Determines whether an event is a right click or not\r\n* @param evt - Mouse event\r\n* @returns true if the event is a right click\r\n*/\r\nexport function _isRightClick(evt) {\r\n    if (\"which\" in evt) { // Chrome, FF, ...\r\n        return (evt.which === 3);\r\n    }\r\n    else if (\"button\" in evt) { // IE, ...\r\n        return (evt.button === 2);\r\n    }\r\n}\r\n/**\r\n* Determines whether an event is a left click or not\r\n* @param evt - Mouse event\r\n* @returns true if the event is a left click\r\n*/\r\nexport function _isLeftClick(evt) {\r\n    if (\"which\" in evt) { // Chrome, FF, ...\r\n        return (evt.which === 1);\r\n    }\r\n    else if (\"button\" in evt) { // IE, ...\r\n        return (evt.button === 1);\r\n    }\r\n}\r\n/**\r\n* Determines whether an event is a middle click or not\r\n* @param evt - Mouse event\r\n* @returns true if the event is a middle click\r\n*/\r\nexport function _isMiddleClick(evt) {\r\n    if (\"which\" in evt) { // Chrome, FF, ...\r\n        return (evt.which === 2);\r\n    }\r\n    else if (\"button\" in evt) { // IE, ...\r\n        return (evt.button === 4);\r\n    }\r\n}\r\n/**\r\n*  Determines whether an event is a keyboard enter or not\r\n* @param evt - Keyboard event\r\n* @returns true if the event is a keyboard enter\r\n*/\r\nexport function _isKeyboardEnter(evt) {\r\n    if (\"keyCode\" in evt) { // Chrome, FF, ...\r\n        return (evt.keyCode === 13);\r\n    }\r\n}\r\n/**\r\n*  Determines whether an event is a keyboard space or not\r\n* @param evt - Keyboard event\r\n* @returns true if the event is a space enter\r\n*/\r\nexport function _isKeyboardSpace(evt) {\r\n    if (\"keyCode\" in evt) { // Chrome, FF, ...\r\n        return (evt.keyCode === 32);\r\n    }\r\n}\r\n/**\r\n*  Determines whether the element have a DNT(Do Not Track) tag\r\n* @param element - DOM element\r\n* @param doNotTrackFieldName - Deprecated\r\n* @returns true if the element must not be tracked\r\n*/\r\nexport function _isElementDnt(element, deprecated) {\r\n    var dntElement = _findClosestByAttribute(element, doNotTrackFieldName);\r\n    if (!isValueAssigned(dntElement)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n*  Determines whether the element can generate pageAction telemetry using data-bi attributes mto and dnt\r\n* @param element - DOM element\r\n* @param overrides - Override to determine if auto or manual call\r\n* @returns true if the element is can be tracked\r\n*/\r\nexport function _isClickTelemetryAllowed(element, overrideValues) {\r\n    // MTO do not send auto telemetry for this element\r\n    if (overrideValues &&\r\n        overrideValues.isAuto &&\r\n        isValueAssigned(_findClosestByAttribute(element, manualTrackOnlyFieldName))) {\r\n        return false;\r\n    }\r\n    // Do not track element\r\n    if (_isElementDnt(element)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n* Walks up DOM tree to find element with attribute\r\n* @param el - DOM element\r\n* @param attribute - Attribute name\r\n* @returns Dom element which contains attribute\r\n*/\r\nexport function _findClosestByAttribute(el, attribute) {\r\n    return _walkUpDomChainWithElementValidation(el, _isAttributeInElement, attribute);\r\n}\r\n/**\r\n* checks if attribute is in element.\r\n* method checks for empty string, in case the attribute is set but no value is assigned to it\r\n* @param element - DOM element\r\n* @param attributeToLookFor - Attribute name\r\n* @returns true if attribute is in element, even if empty string\r\n*/\r\nexport function _isAttributeInElement(element, attributeToLookFor) {\r\n    var value = element.getAttribute(attributeToLookFor);\r\n    return isValueAssigned(value) || value === \"\";\r\n}\r\n/**\r\n*  Adds surrounding square brackets to the passed in text\r\n* @param str - Input string\r\n* @returns String with surrounding brackets\r\n*/\r\nexport function _bracketIt(str) {\r\n    /// <summary>\r\n    ///  Adds surrounding square brackets to the passed in text\r\n    /// </summary>\r\n    return \"[\" + str + \"]\";\r\n}\r\n/**\r\n *  When constantly called, debounce returns two functions, where:\r\n *  - function 1 will trigger at first call,\r\n *  - function 2 will be called at last call, after it stops being called for\r\n *  'wait' milliseconds\r\n * @param firstCallFunction - The function that will trigger at first call\r\n * @param secondCallFunction - The function that will trigger at last call after 'wait' milliseconds\r\n * @params wait - The debounce time interval\r\n */\r\nexport function _debounce(firstCallFunction, secondCallFunction, wait, context) {\r\n    var timeout;\r\n    return function () {\r\n        var args = arguments;\r\n        var later = function () {\r\n            timeout = 0;\r\n            if (secondCallFunction) {\r\n                secondCallFunction.apply(context, args);\r\n            }\r\n        };\r\n        var callNow = !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) {\r\n            if (firstCallFunction) {\r\n                firstCallFunction.apply(context, args);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n *  Get scroll offset\r\n * @returns Returns the scroll offset\r\n */\r\nexport function _getScrollOffset() {\r\n    var scrollOffset = { h: 0, v: 0 };\r\n    var win = getWindow();\r\n    var doc = getDocument();\r\n    if (doc && win) {\r\n        scrollOffset = {\r\n            h: parseInt(doc.body.scrollLeft || doc.documentElement.scrollLeft || win.pageXOffset, 10),\r\n            v: parseInt(doc.body.scrollTop || doc.documentElement.scrollTop || win.pageYOffset, 10)\r\n        };\r\n    }\r\n    return scrollOffset;\r\n}\r\n/**\r\n* Use window dimensions if available before reaching into DOM.\r\n* Accessing DOM frequently causes layout to reflow and impacts perf.\r\n* @returns Returns a Viewport object that contains dimensions of the current viewport\r\n* @description When this is executed from within an iFrame, the dimensions would be that of the iFrame and not the browser window.\r\n*/\r\nexport function _getViewportDimensions() {\r\n    var viewport = { h: 0, w: 0 };\r\n    var win = getWindow();\r\n    var doc = getDocument();\r\n    if (win && doc && win.screen) {\r\n        var body = doc.body || {};\r\n        var docElem = doc.documentElement || {};\r\n        viewport.h = win.innerHeight || body.clientHeight || docElem.clientHeight;\r\n        viewport.w = win.innerWidth || body.clientWidth || docElem.clientWidth;\r\n    }\r\n    return viewport;\r\n}\r\n/**\r\n *  Get viewport bounding dimensions\r\n * @param viewportDimensions Dimensions of the viewport\r\n * @returns Returns viewport bounding rect\r\n */\r\nexport function _getViewportBoundingRect(viewportDimensions) {\r\n    var viewportBoundingRect = {\r\n        top: 0,\r\n        bottom: viewportDimensions.h,\r\n        left: 0,\r\n        right: viewportDimensions.w\r\n    };\r\n    return viewportBoundingRect;\r\n}\r\n//# sourceMappingURL=Utils.js.map","/*\n * 1DS JS SDK Core, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nvar _a;\r\n/**\r\n* Utils.ts\r\n* @author  Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n* File containing utility functions.\r\n*/\r\nimport { addEventHandler, addPageUnloadEventListener, areCookiesSupported, arrForEach, arrIndexOf, arrMap, arrReduce, dateNow, generateW3CId, getDocument, getGlobalInst, getNavigator, getWindow, hasOwnProperty, isArray, isBeaconsSupported, isBoolean, isDate, isError, isFunction, isIE, isNullOrUndefined, isNumber, isObject, isReactNative, isString, isTypeof, isUndefined, mwcRandom32, mwcRandomSeed, newGuid, newId, objDefineAccessors, objForEachKey, objKeys, perfNow, random32, randomValue, safeGetCookieMgr, strEndsWith, strObject, strTrim, strUndefined, toISOString, uaDisallowsSameSiteNone, useXDomainRequest } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ObjHasOwnProperty, objCreateFn, strShimObject, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nexport var Version = '3.2.10';\r\nexport var FullVersionString = \"1DS-Web-JS-\" + Version;\r\n// Defining here so we don't need to take (import) the ApplicationInsights Common module\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n// If value is array just get the type for the first element\r\nvar _fieldTypeEventPropMap = (_a = {},\r\n    _a[0 /* FieldValueSanitizerType.NotSet */] = 0 /* eEventPropertyType.Unspecified */,\r\n    _a[2 /* FieldValueSanitizerType.Number */] = 6 /* eEventPropertyType.Double */,\r\n    _a[1 /* FieldValueSanitizerType.String */] = 1 /* eEventPropertyType.String */,\r\n    _a[3 /* FieldValueSanitizerType.Boolean */] = 7 /* eEventPropertyType.Bool */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 2 /* FieldValueSanitizerType.Number */] = 6 /* eEventPropertyType.Double */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 1 /* FieldValueSanitizerType.String */] = 1 /* eEventPropertyType.String */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 3 /* FieldValueSanitizerType.Boolean */] = 7 /* eEventPropertyType.Bool */,\r\n    _a);\r\n/**\r\n * @ignore\r\n */\r\n// let _uaDisallowsSameSiteNone = null;\r\nvar uInt8ArraySupported = null;\r\n// var _areCookiesAvailable: boolean | undefined;\r\n/**\r\n * Checks if document object is available\r\n */\r\nexport var isDocumentObjectAvailable = Boolean(getDocument());\r\n/**\r\n * Checks if window object is available\r\n */\r\nexport var isWindowObjectAvailable = Boolean(getWindow());\r\n/**\r\n * Checks if value is assigned to the given param.\r\n * @param value - The token from which the tenant id is to be extracted.\r\n * @returns True/false denoting if value is assigned to the param.\r\n */\r\nexport function isValueAssigned(value) {\r\n    /// <summary> takes a value and checks for undefined, null and empty string </summary>\r\n    /// <param type=\"any\"> value to be tested </param>\r\n    /// <returns> true if value is null undefined or emptyString </returns>\r\n    return !(value === STR_EMPTY || isNullOrUndefined(value));\r\n}\r\n/**\r\n * Gets the tenant id from the tenant token.\r\n * @param apiKey - The token from which the tenant id is to be extracted.\r\n * @returns The tenant id.\r\n */\r\nexport function getTenantId(apiKey) {\r\n    if (apiKey) {\r\n        var indexTenantId = apiKey.indexOf(\"-\");\r\n        if (indexTenantId > -1) {\r\n            return apiKey.substring(0, indexTenantId);\r\n        }\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Checks if Uint8Array are available in the current environment. Safari and Firefox along with\r\n * ReactNative are known to not support Uint8Array properly.\r\n * @returns True if available, false otherwise.\r\n */\r\nexport function isUint8ArrayAvailable() {\r\n    if (uInt8ArraySupported === null) {\r\n        uInt8ArraySupported = !isUndefined(Uint8Array) && !isSafariOrFirefox() && !isReactNative();\r\n    }\r\n    return uInt8ArraySupported;\r\n}\r\n/**\r\n * Checks if the value is a valid EventLatency.\r\n * @param value - The value that needs to be checked.\r\n * @returns True if the value is in AWTEventLatency, false otherwise.\r\n */\r\nexport function isLatency(value) {\r\n    if (value && isNumber(value) && value >= 1 /* EventLatencyValue.Normal */ && value <= 4 /* EventLatencyValue.Immediate */) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Sanitizes the Property. It checks the that the property name and value are valid. It also\r\n * checks/populates the correct type and pii of the property value.\r\n * @param name - property name                          - The property name.\r\n * @param property - The property value or an IEventProperty containing value,\r\n * type ,pii and customer content.\r\n * @returns IEventProperty containing valid name, value, pii and type or null if invalid.\r\n */\r\nexport function sanitizeProperty(name, property, stringifyObjects) {\r\n    // Check that property is valid\r\n    if ((!property && !isValueAssigned(property)) || typeof name !== \"string\") {\r\n        return null;\r\n    }\r\n    // Perf optimization -- only need to get the type once not multiple times\r\n    var propType = typeof property;\r\n    // If the property isn't IEventProperty (and is either string, number, boolean or array), convert it into one.\r\n    if (propType === \"string\" || propType === \"number\" || propType === \"boolean\" || isArray(property)) {\r\n        property = { value: property };\r\n    }\r\n    else if (propType === \"object\" && !ObjHasOwnProperty.call(property, \"value\")) {\r\n        property = { value: stringifyObjects ? JSON.stringify(property) : property };\r\n    }\r\n    else if (isNullOrUndefined(property.value)\r\n        || property.value === STR_EMPTY || (!isString(property.value)\r\n        && !isNumber(property.value) && !isBoolean(property.value)\r\n        && !isArray(property.value))) {\r\n        // Since property is IEventProperty, we need to validate its value\r\n        return null;\r\n    }\r\n    // We need to check that if the property value is an array, it is valid\r\n    if (isArray(property.value) &&\r\n        !isArrayValid(property.value)) {\r\n        return null;\r\n    }\r\n    // If either pii or cc is set convert value to string (since only string pii/cc is allowed).\r\n    // If the value is a complex type like an array that can't be converted to string we will drop\r\n    // the property.\r\n    if (!isNullOrUndefined(property.kind)) {\r\n        if (isArray(property.value) || !isValueKind(property.kind)) {\r\n            return null;\r\n        }\r\n        property.value = property.value.toString();\r\n    }\r\n    return property;\r\n}\r\nexport function getCommonSchemaMetaData(value, kind, type) {\r\n    var encodedTypeValue = -1;\r\n    if (!isUndefined(value)) {\r\n        if (kind > 0) {\r\n            if (kind === 32) {\r\n                // encode customer content. Value can only be string. bit 13-16 are for cc\r\n                encodedTypeValue = (1 << 13);\r\n            }\r\n            else if (kind <= 13) {\r\n                // encode PII. Value can only be string. bits 5-12 are for Pii\r\n                encodedTypeValue = (kind << 5);\r\n            }\r\n        }\r\n        // isDataType checks that the \"type\" is a number so we don't need to check for undefined\r\n        if (isDataType(type)) {\r\n            // Data Type is provided and valid, so use that\r\n            if (encodedTypeValue === -1) {\r\n                // Don't return -1\r\n                encodedTypeValue = 0;\r\n            }\r\n            encodedTypeValue |= type;\r\n        }\r\n        else {\r\n            var propType = _fieldTypeEventPropMap[getFieldValueType(value)] || -1;\r\n            if (encodedTypeValue !== -1 && propType !== -1) {\r\n                // pii exists so we must return correct type\r\n                encodedTypeValue |= propType;\r\n            }\r\n            else if (propType === 6 /* eEventPropertyType.Double */) {\r\n                encodedTypeValue = propType;\r\n            }\r\n        }\r\n    }\r\n    return encodedTypeValue;\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().disable()\r\n * Force the SDK not to store and read any data from cookies.\r\n * Overriding the applicationinsights-core version for tree-shaking\r\n */\r\nexport function disableCookies() {\r\n    safeGetCookieMgr(null).setEnabled(false);\r\n}\r\n/**\r\n * @deprecated - Use the oneDs.getCookieMgr().set()\r\n * Sets the value of a cookie.\r\n * @param name - Cookie name.\r\n * @param value - Cookie value.\r\n * @param days - Expiration days.\r\n */\r\nexport function setCookie(name, value, days) {\r\n    if (areCookiesSupported(null)) {\r\n        safeGetCookieMgr(null).set(name, value, days * 86400, null, \"/\");\r\n    }\r\n}\r\n/**\r\n * @deprecated - Use the oneDs.getCookieMgr().del()\r\n * Deletes a cookie, by setting its expiration to -1.\r\n * @param name - Cookie name to delete.\r\n */\r\nexport function deleteCookie(name) {\r\n    if (areCookiesSupported(null)) {\r\n        safeGetCookieMgr(null).del(name);\r\n    }\r\n}\r\n/**\r\n * @deprecated - Use the oneDs.getCookieMgr().get()\r\n * Gets the cookie value for the specified cookie.\r\n * if value is k1=v1&k2==v2 then will return 'v1' for key 'k1'\r\n * @param cookieName - Cookie name.\r\n */\r\nexport function getCookie(name) {\r\n    if (areCookiesSupported(null)) {\r\n        return getCookieValue(safeGetCookieMgr(null), name);\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Helper to get and decode the cookie value using decodeURIComponent, this is for historical\r\n * backward compatibility where the document.cookie value was decoded before parsing.\r\n * @param cookieMgr - The cookie manager to use\r\n * @param name - The name of the cookie to get\r\n * @param decode - A flag to indicate whether the cookie value should be decoded\r\n * @returns The decoded cookie value (if available) otherwise an empty string.\r\n */\r\nexport function getCookieValue(cookieMgr, name, decode) {\r\n    if (decode === void 0) { decode = true; }\r\n    var cookieValue;\r\n    if (cookieMgr) {\r\n        cookieValue = cookieMgr.get(name);\r\n        if (decode && cookieValue && decodeURIComponent) {\r\n            cookieValue = decodeURIComponent(cookieValue);\r\n        }\r\n    }\r\n    return cookieValue || STR_EMPTY;\r\n}\r\n/**\r\n * Create a new guid.\r\n * @param style - The style of guid to generated, defaults to Digits\r\n * Digits (Default) : 32 digits separated by hyphens: 00000000-0000-0000-0000-000000000000\r\n * Braces - 32 digits separated by hyphens, enclosed in braces: {00000000-0000-0000-0000-000000000000}\r\n * Parentheses - 32 digits separated by hyphens, enclosed in parentheses: (00000000-0000-0000-0000-000000000000)\r\n * Numeric - 32 digits: 00000000000000000000000000000000\r\n * @returns The formatted guid.\r\n */\r\nexport function createGuid(style) {\r\n    if (style === void 0) { style = \"D\" /* GuidStyle.Digits */; }\r\n    var theGuid = newGuid();\r\n    if (style === \"B\" /* GuidStyle.Braces */) {\r\n        theGuid = \"{\" + theGuid + \"}\";\r\n    }\r\n    else if (style === \"P\" /* GuidStyle.Parentheses */) {\r\n        theGuid = \"(\" + theGuid + \")\";\r\n    }\r\n    else if (style === \"N\" /* GuidStyle.Numeric */) {\r\n        theGuid = theGuid.replace(/-/g, STR_EMPTY);\r\n    }\r\n    return theGuid;\r\n}\r\n/**\r\n * Pass in the objects to merge as arguments.\r\n * @param obj1 - object to merge.  Set this argument to 'true' for a deep extend.\r\n * @param obj2 - object to merge.\r\n * @param obj3 - object to merge.\r\n * @param obj4 - object to merge.\r\n * @param obj5 - object to merge.\r\n * @returns The extended object.\r\n */\r\nexport function extend(obj, obj2, obj3, obj4, obj5) {\r\n    // Variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    var length = arguments.length;\r\n    var objProto = Object[strShimPrototype];\r\n    var theArgs = arguments;\r\n    // Check if a deep merge\r\n    if (objProto.toString.call(theArgs[0]) === \"[object Boolean]\") {\r\n        deep = theArgs[0];\r\n        i++;\r\n    }\r\n    // Loop through each object and conduct a merge\r\n    for (; i < length; i++) {\r\n        var obj = theArgs[i];\r\n        objForEachKey(obj, function (prop, value) {\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && value && isObject(value)) {\r\n                if (isArray(value)) {\r\n                    extended[prop] = extended[prop] || [];\r\n                    arrForEach(value, function (arrayValue, arrayIndex) {\r\n                        if (arrayValue && isObject(arrayValue)) {\r\n                            extended[prop][arrayIndex] = extend(true, extended[prop][arrayIndex], arrayValue);\r\n                        }\r\n                        else {\r\n                            extended[prop][arrayIndex] = arrayValue;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    extended[prop] = extend(true, extended[prop], value);\r\n                }\r\n            }\r\n            else {\r\n                extended[prop] = value;\r\n            }\r\n        });\r\n    }\r\n    return extended;\r\n}\r\nexport var getTime = perfNow;\r\nexport function isValueKind(value) {\r\n    // Always assume that it's a number (no type checking) for performance as this is used during the JSON serialization\r\n    if (value === 0 /* eValueKind.NotSet */ || ((value > 0 /* eValueKind.NotSet */ && value <= 13 /* eValueKind.Pii_IPV4AddressLegacy */) || value === 32 /* eValueKind.CustomerContent_GenericContent */)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isDataType(value) {\r\n    // Remark: 0 returns false, but it doesn't affect encoding anyways\r\n    // Always assume that it's a number (no type checking) for performance as this is used during the JSON serialization\r\n    if (value >= 0 && value <= 9) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isSafariOrFirefox() {\r\n    var nav = getNavigator();\r\n    // If non-browser navigator will be undefined\r\n    if (!isUndefined(nav) && nav.userAgent) {\r\n        var ua = nav.userAgent.toLowerCase();\r\n        if ((ua.indexOf(\"safari\") >= 0 || ua.indexOf(\"firefox\") >= 0) && ua.indexOf(\"chrome\") < 0) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function isArrayValid(value) {\r\n    return value.length > 0;\r\n}\r\nexport function setProcessTelemetryTimings(event, identifier) {\r\n    var evt = event;\r\n    evt.timings = evt.timings || {};\r\n    evt.timings.processTelemetryStart = evt.timings.processTelemetryStart || {};\r\n    evt.timings.processTelemetryStart[identifier] = getTime();\r\n}\r\n/**\r\n * Returns a bitwise value for the FieldValueSanitizerType enum representing the decoded type of the passed value\r\n * @param value The value to determine the type\r\n */\r\nexport function getFieldValueType(value) {\r\n    var theType = 0 /* FieldValueSanitizerType.NotSet */;\r\n    if (value !== null && value !== undefined) {\r\n        var objType = typeof value;\r\n        if (objType === \"string\") {\r\n            theType = 1 /* FieldValueSanitizerType.String */;\r\n        }\r\n        else if (objType === \"number\") {\r\n            theType = 2 /* FieldValueSanitizerType.Number */;\r\n        }\r\n        else if (objType === \"boolean\") {\r\n            theType = 3 /* FieldValueSanitizerType.Boolean */;\r\n        }\r\n        else if (objType === strShimObject) {\r\n            theType = 4 /* FieldValueSanitizerType.Object */;\r\n            if (isArray(value)) {\r\n                theType = 4096 /* FieldValueSanitizerType.Array */;\r\n                if (value.length > 0) {\r\n                    // Empty arrays are not supported and are considered to be the same as null\r\n                    theType |= getFieldValueType(value[0]);\r\n                }\r\n            }\r\n            else if (ObjHasOwnProperty.call(value, \"value\")) {\r\n                // Looks like an IEventProperty\r\n                theType = 8192 /* FieldValueSanitizerType.EventProperty */ | getFieldValueType(value.value);\r\n            }\r\n        }\r\n    }\r\n    return theType;\r\n}\r\nexport var Utils = {\r\n    Version: Version,\r\n    FullVersionString: FullVersionString,\r\n    strUndefined: strUndefined,\r\n    strObject: strObject,\r\n    Undefined: strUndefined,\r\n    arrForEach: arrForEach,\r\n    arrIndexOf: arrIndexOf,\r\n    arrMap: arrMap,\r\n    arrReduce: arrReduce,\r\n    objKeys: objKeys,\r\n    toISOString: toISOString,\r\n    isReactNative: isReactNative,\r\n    isString: isString,\r\n    isNumber: isNumber,\r\n    isBoolean: isBoolean,\r\n    isFunction: isFunction,\r\n    isArray: isArray,\r\n    isObject: isObject,\r\n    strTrim: strTrim,\r\n    isDocumentObjectAvailable: isDocumentObjectAvailable,\r\n    isWindowObjectAvailable: isWindowObjectAvailable,\r\n    isValueAssigned: isValueAssigned,\r\n    getTenantId: getTenantId,\r\n    isBeaconsSupported: isBeaconsSupported,\r\n    isUint8ArrayAvailable: isUint8ArrayAvailable,\r\n    isLatency: isLatency,\r\n    sanitizeProperty: sanitizeProperty,\r\n    getISOString: toISOString,\r\n    useXDomainRequest: useXDomainRequest,\r\n    getCommonSchemaMetaData: getCommonSchemaMetaData,\r\n    cookieAvailable: areCookiesSupported,\r\n    disallowsSameSiteNone: uaDisallowsSameSiteNone,\r\n    setCookie: setCookie,\r\n    deleteCookie: deleteCookie,\r\n    getCookie: getCookie,\r\n    createGuid: createGuid,\r\n    extend: extend,\r\n    getTime: getTime,\r\n    isValueKind: isValueKind,\r\n    isArrayValid: isArrayValid,\r\n    objDefineAccessors: objDefineAccessors,\r\n    addPageUnloadEventListener: addPageUnloadEventListener,\r\n    setProcessTelemetryTimings: setProcessTelemetryTimings,\r\n    addEventHandler: addEventHandler,\r\n    getFieldValueType: getFieldValueType,\r\n    strEndsWith: strEndsWith,\r\n    objForEachKey: objForEachKey\r\n};\r\n/**\r\n * Provides a collection of utility functions, included for backward compatibility with previous releases.\r\n * @deprecated Marking this instance as deprecated in favor of direct usage of the helper functions\r\n * as direct usage provides better tree-shaking and minification by avoiding the inclusion of the unused items\r\n * in your resulting code.\r\n * Overriding the applicationinsights-core version for tree-shaking\r\n */\r\nexport var CoreUtils = {\r\n    _canUseCookies: undefined,\r\n    isTypeof: isTypeof,\r\n    isUndefined: isUndefined,\r\n    isNullOrUndefined: isNullOrUndefined,\r\n    hasOwnProperty: hasOwnProperty,\r\n    isFunction: isFunction,\r\n    isObject: isObject,\r\n    isDate: isDate,\r\n    isArray: isArray,\r\n    isError: isError,\r\n    isString: isString,\r\n    isNumber: isNumber,\r\n    isBoolean: isBoolean,\r\n    toISOString: toISOString,\r\n    arrForEach: arrForEach,\r\n    arrIndexOf: arrIndexOf,\r\n    arrMap: arrMap,\r\n    arrReduce: arrReduce,\r\n    strTrim: strTrim,\r\n    objCreate: objCreateFn,\r\n    objKeys: objKeys,\r\n    objDefineAccessors: objDefineAccessors,\r\n    addEventHandler: addEventHandler,\r\n    dateNow: dateNow,\r\n    isIE: isIE,\r\n    disableCookies: disableCookies,\r\n    newGuid: newGuid,\r\n    perfNow: perfNow,\r\n    newId: newId,\r\n    randomValue: randomValue,\r\n    random32: random32,\r\n    mwcRandomSeed: mwcRandomSeed,\r\n    mwcRandom32: mwcRandom32,\r\n    generateW3CId: generateW3CId\r\n};\r\n/**\r\n * Helper to identify whether we are running in a chromium based browser environment\r\n */\r\nexport function isChromium() {\r\n    return !!getGlobalInst(\"chrome\");\r\n}\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import*as o from\"./_polyfill-node.util.js\";import{getAugmentedNamespace as r}from\"./_commonjsHelpers.js\";var l=r(o);export{l as default};\n","var n,e,t,E,O,R,o,T,N,_;function i(n){return void 0!==(null==n?void 0:n.errorCode)}!function(n){n.Inline=\"inline\",n.Desktop=\"desktop\",n.Web=\"web\"}(n||(n={})),function(n){n.M365Content=\"m365content\"}(e||(e={})),function(n){n.DriveId=\"driveId\",n.GroupId=\"groupId\",n.SiteId=\"siteId\",n.UserId=\"userId\"}(t||(t={})),function(n){n[n.NOT_SUPPORTED_ON_PLATFORM=100]=\"NOT_SUPPORTED_ON_PLATFORM\",n[n.INTERNAL_ERROR=500]=\"INTERNAL_ERROR\",n[n.NOT_SUPPORTED_IN_CURRENT_CONTEXT=501]=\"NOT_SUPPORTED_IN_CURRENT_CONTEXT\",n[n.PERMISSION_DENIED=1e3]=\"PERMISSION_DENIED\",n[n.NETWORK_ERROR=2e3]=\"NETWORK_ERROR\",n[n.NO_HW_SUPPORT=3e3]=\"NO_HW_SUPPORT\",n[n.INVALID_ARGUMENTS=4e3]=\"INVALID_ARGUMENTS\",n[n.UNAUTHORIZED_USER_OPERATION=5e3]=\"UNAUTHORIZED_USER_OPERATION\",n[n.INSUFFICIENT_RESOURCES=6e3]=\"INSUFFICIENT_RESOURCES\",n[n.THROTTLE=7e3]=\"THROTTLE\",n[n.USER_ABORT=8e3]=\"USER_ABORT\",n[n.OPERATION_TIMED_OUT=8001]=\"OPERATION_TIMED_OUT\",n[n.OLD_PLATFORM=9e3]=\"OLD_PLATFORM\",n[n.FILE_NOT_FOUND=404]=\"FILE_NOT_FOUND\",n[n.SIZE_EXCEEDED=1e4]=\"SIZE_EXCEEDED\"}(E||(E={})),function(n){n.GeoLocation=\"geolocation\",n.Media=\"media\"}(O||(O={})),function(n){n.BCAIS=\"bcais\",n.BCWAF=\"bcwaf\",n.BCWBF=\"bcwbf\"}(R||(R={})),function(n){n.Faculty=\"faculty\",n.Student=\"student\",n.Other=\"other\"}(o||(o={})),function(n){n.Adult=\"adult\",n.MinorNoParentalConsentRequired=\"minorNoParentalConsentRequired\",n.MinorWithoutParentalConsent=\"minorWithoutParentalConsent\",n.MinorWithParentalConsent=\"minorWithParentalConsent\",n.NonAdult=\"nonAdult\"}(T||(T={})),function(n){n.HigherEducation=\"higherEducation\",n.K12=\"k12\",n.Other=\"other\"}(N||(N={})),function(n){n.TextPlain=\"text/plain\",n.TextHtml=\"text/html\",n.ImagePNG=\"image/png\",n.ImageJPEG=\"image/jpeg\"}(_||(_={}));export{e as ActionObjectType,_ as ClipboardSupportedMimeType,R as Cohort,O as DevicePermission,N as EduType,E as ErrorCode,n as FileOpenPreference,T as LegalAgeGroupClassification,o as Persona,t as SecondaryM365ContentIdName,i as isSdkError};\n","import{validateUuid as t,generateGUID as r}from\"./utils.js\";class i{constructor(i=r()){this.uuid=i,t(i)}toString(){return this.uuid}}export{i as UUID};\n","/*\n * Application Insights JavaScript SDK - Common, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","var e={exports:{}};export{e as __module};\n","import{__module as r}from\"../../../../../../_virtual/index.js\";import{__require as e}from\"./browser.js\";import{__require as s}from\"./node.js\";\"undefined\"==typeof process||\"renderer\"===process.type||!0===process.browser||process.__nwjs?r.exports=e():r.exports=s();var o=r.exports;export{o as s};\n","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* TelemetryContext.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isBoolean, isNullOrUndefined, isNumber, isString, isValidSpanId, isValidTraceId, objForEachKey } from \"@microsoft/1ds-core-js\";\r\nimport { AppExtensionKeys, CloudExtKeys, DeviceExtKeys, DistributedTraceExtKeys, Extensions, IntWebExtKeys, LocExtKeys, OSExtKeys, SDKExtKeys, SessionExtKeys, TraceExtKeys, UserExtensionKeys, UtcExtKeys, WebExtensionKeys } from \"./ExtensionKeys\";\r\nimport { SessionManager } from \"./SessionManager\";\r\nimport { Application } from \"./context/Application\";\r\nimport { Cloud } from \"./context/Cloud\";\r\nimport { Device } from \"./context/Device\";\r\nimport { IntWeb } from \"./context/IntWeb\";\r\nimport { Loc } from \"./context/Loc\";\r\nimport { OperatingSystem } from \"./context/OperatingSystem\";\r\nimport { Sdk } from \"./context/Sdk\";\r\nimport { Session } from \"./context/Session\";\r\nimport { Trace } from \"./context/Trace\";\r\nimport { User } from \"./context/User\";\r\nimport { Utc } from \"./context/Utc\";\r\nimport { Web } from \"./context/Web\";\r\nfunction _applyExtValues(extension, event, names, map, overwriteTarget) {\r\n    var target = event.ext[Extensions[extension]];\r\n    if (target) {\r\n        objForEachKey(map, function (field, value) {\r\n            if (isString(value) || isNumber(value) || isBoolean(value)) {\r\n                var targetValue = target[names[field]];\r\n                if (!overwriteTarget && (targetValue || isString(targetValue) || isNumber(targetValue) || isBoolean(targetValue))) {\r\n                    value = targetValue;\r\n                }\r\n                target[names[field]] = value;\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(coreConfig, propertiesConfig, core) {\r\n        dynamicProto(TelemetryContext, this, function (_self) {\r\n            _self.app = new Application(propertiesConfig, core);\r\n            _self.cloud = new Cloud();\r\n            _self.user = new User(coreConfig, propertiesConfig, core);\r\n            _self.os = new OperatingSystem(propertiesConfig);\r\n            _self.web = new Web(propertiesConfig, core);\r\n            var _sdk = new Sdk(coreConfig, core);\r\n            var _intWeb = new IntWeb(propertiesConfig, core);\r\n            var _utc = new Utc(propertiesConfig);\r\n            _self.loc = new Loc();\r\n            _self.device = new Device();\r\n            var _sessionManager = new SessionManager(core, propertiesConfig);\r\n            _self.session = new Session();\r\n            var _distributedTraceCtx = createDistributedTraceContextFromTraceCtx(new Trace(propertiesConfig), _getTraceCtx());\r\n            var _overwriteEventPartA = !(propertiesConfig || {}).eventContainExtFields;\r\n            function _getSessionId() {\r\n                var session = _self.session;\r\n                if (session && isString(session.customId)) {\r\n                    return session.customId;\r\n                }\r\n                _sessionManager.update();\r\n                var autoSession = _sessionManager.automaticSession;\r\n                if (autoSession) {\r\n                    var autoId = autoSession.getId();\r\n                    if (autoId && isString(autoId)) {\r\n                        session.automaticId = autoId;\r\n                    }\r\n                }\r\n                return session.automaticId;\r\n            }\r\n            _self.getTraceCtx = function () {\r\n                return _distributedTraceCtx;\r\n            };\r\n            _self.getSessionId = _getSessionId;\r\n            _self.applyApplicationContext = function (event) {\r\n                var _a;\r\n                var app = _self.app;\r\n                _applyExtValues(4 /* eExtensions.AppExt */, event, AppExtensionKeys, (_a = {},\r\n                    _a[0 /* eAppExtensionKeys.id */] = app.id,\r\n                    _a[1 /* eAppExtensionKeys.ver */] = app.ver,\r\n                    _a[2 /* eAppExtensionKeys.appName */] = app.name,\r\n                    _a[3 /* eAppExtensionKeys.locale */] = app.locale,\r\n                    _a[4 /* eAppExtensionKeys.expId */] = app.getExpId(),\r\n                    _a[5 /* eAppExtensionKeys.env */] = app.env,\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applyUserContext = function (event) {\r\n                var _a;\r\n                var user = _self.user;\r\n                _applyExtValues(0 /* eExtensions.UserExt */, event, UserExtensionKeys, (_a = {},\r\n                    _a[1 /* eUserExtensionKeys.localId */] = user.getLocalId(),\r\n                    _a[0 /* eUserExtensionKeys.locale */] = user.locale,\r\n                    _a[2 /* eUserExtensionKeys.id */] = user.id,\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applyWebContext = function (event) {\r\n                var _a;\r\n                var web = _self.web;\r\n                _applyExtValues(3 /* eExtensions.WebExt */, event, WebExtensionKeys, (_a = {},\r\n                    _a[0 /* eWebExtensionKeys.domain */] = web.domain,\r\n                    _a[1 /* eWebExtensionKeys.browser */] = web.browser,\r\n                    _a[2 /* eWebExtensionKeys.browserVer */] = web.browserVer,\r\n                    _a[3 /* eWebExtensionKeys.screenRes */] = web.screenRes,\r\n                    _a[5 /* eWebExtensionKeys.consentDetails */] = web.getUserConsentDetails(),\r\n                    _a[4 /* eWebExtensionKeys.userConsent */] = web.getUserConsent(),\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applyOsContext = function (event) {\r\n                var _a;\r\n                var os = _self.os;\r\n                _applyExtValues(5 /* eExtensions.OSExt */, event, OSExtKeys, (_a = {},\r\n                    _a[0 /* eOSExtKeys.osName */] = os.name,\r\n                    _a[1 /* eOSExtKeys.ver */] = os.ver,\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applySdkContext = function (event) {\r\n                var _a;\r\n                var evtSdk = _applyExtValues(6 /* eExtensions.SdkExt */, event, SDKExtKeys, (_a = {},\r\n                    _a[2 /* eSDKExtKeys.installId */] = _sdk.installId,\r\n                    _a[1 /* eSDKExtKeys.seq */] = _sdk.getSequenceId(),\r\n                    _a[3 /* eSDKExtKeys.epoch */] = _sdk.epoch,\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applyIntWebContext = function (event) {\r\n                var _a;\r\n                _applyExtValues(7 /* eExtensions.IntWebExt */, event, IntWebExtKeys, (_a = {},\r\n                    _a[0 /* eIntWebExtKeys.msfpc */] = _intWeb.getMsfpc(),\r\n                    _a[1 /* eIntWebExtKeys.anid */] = _intWeb.getAnid(),\r\n                    _a[2 /* eIntWebExtKeys.serviceName */] = _intWeb.serviceName,\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applyUtcContext = function (event) {\r\n                var _a;\r\n                var utcFields = (_a = {},\r\n                    _a[0 /* eUtcExtKeys.popSample */] = _utc.popSample,\r\n                    _a);\r\n                if (_utc.eventFlags > 0) {\r\n                    utcFields[1 /* eUtcExtKeys.eventFlags */] = _utc.eventFlags;\r\n                }\r\n                _applyExtValues(8 /* eExtensions.UtcExt */, event, UtcExtKeys, utcFields, _overwriteEventPartA);\r\n            };\r\n            _self.applyLocContext = function (event) {\r\n                var _a;\r\n                _applyExtValues(9 /* eExtensions.LocExt */, event, LocExtKeys, (_a = {},\r\n                    _a[0 /* eLocExtKeys.tz */] = _self.loc.tz,\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applySessionContext = function (event) {\r\n                var _a;\r\n                _applyExtValues(4 /* eExtensions.AppExt */, event, SessionExtKeys, (_a = {},\r\n                    _a[0 /* eSessionExtKeys.sessionId */] = _getSessionId(),\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applyDeviceContext = function (event) {\r\n                var _a;\r\n                var device = _self.device;\r\n                _applyExtValues(1 /* eExtensions.DeviceExt */, event, DeviceExtKeys, (_a = {},\r\n                    _a[0 /* eDeviceExtKeys.localId */] = device.localId,\r\n                    _a[2 /* eDeviceExtKeys.make */] = device.make,\r\n                    _a[3 /* eDeviceExtKeys.model */] = device.model,\r\n                    _a[1 /* eDeviceExtKeys.deviceClass */] = device.deviceClass,\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applyCloudContext = function (event) {\r\n                var _a;\r\n                var cloud = _self.cloud;\r\n                _applyExtValues(10 /* eExtensions.CloudExt */, event, CloudExtKeys, (_a = {},\r\n                    _a[0 /* eCloudExtKeys.role */] = cloud.role,\r\n                    _a[1 /* eCloudExtKeys.roleInstance */] = cloud.roleInstance,\r\n                    _a[2 /* eCloudExtKeys.roleVer */] = cloud.roleVer,\r\n                    _a), _overwriteEventPartA);\r\n            };\r\n            _self.applyAITraceContext = function (event) {\r\n                var _a;\r\n                if (propertiesConfig.enableApplicationInsightsTrace) {\r\n                    var distributedTrace = _getTraceCtx();\r\n                    if (distributedTrace) {\r\n                        _applyExtValues(2 /* eExtensions.TraceExt */, event, TraceExtKeys, (_a = {},\r\n                            _a[0 /* eTraceExtKeys.traceId */] = distributedTrace.getTraceId(),\r\n                            _a[1 /* eTraceExtKeys.traceName */] = distributedTrace.getName(),\r\n                            _a[2 /* eTraceExtKeys.parentId */] = distributedTrace.getSpanId(),\r\n                            _a), false); // Always allow the event to define these values\r\n                    }\r\n                }\r\n            };\r\n            _self.applyDistributedTraceContext = function (event) {\r\n                var _a;\r\n                var distributedTrace = _getTraceCtx();\r\n                if (distributedTrace) {\r\n                    var traceFields = (_a = {},\r\n                        _a[0 /* eDistributedTraceExtKeys.traceId */] = distributedTrace.getTraceId(),\r\n                        _a[1 /* eDistributedTraceExtKeys.spanId */] = distributedTrace.getSpanId(),\r\n                        _a);\r\n                    var traceFlags = distributedTrace.getTraceFlags();\r\n                    if (!isNullOrUndefined(traceFlags)) {\r\n                        traceFields[2 /* eDistributedTraceExtKeys.traceFlags */] = traceFlags;\r\n                    }\r\n                    // Always allow the event to define these values\r\n                    _applyExtValues(11 /* eExtensions.DtExt */, event, DistributedTraceExtKeys, traceFields, false);\r\n                }\r\n            };\r\n            function _getTraceCtx() {\r\n                var traceCtx = _distributedTraceCtx;\r\n                if (core && core.getTraceCtx) {\r\n                    traceCtx = core.getTraceCtx(false) || _distributedTraceCtx;\r\n                }\r\n                return traceCtx;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for TelemetryContext.prototype.getTraceCtx.\r\n// Removed Stub for TelemetryContext.prototype.getSessionId.\r\n// Removed Stub for TelemetryContext.prototype.applyApplicationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyUserContext.\r\n// Removed Stub for TelemetryContext.prototype.applyWebContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOsContext.\r\n// Removed Stub for TelemetryContext.prototype.applySdkContext.\r\n// Removed Stub for TelemetryContext.prototype.applyIntWebContext.\r\n// Removed Stub for TelemetryContext.prototype.applyUtcContext.\r\n// Removed Stub for TelemetryContext.prototype.applyLocContext.\r\n// Removed Stub for TelemetryContext.prototype.applySessionContext.\r\n// Removed Stub for TelemetryContext.prototype.applyDeviceContext.\r\n// Removed Stub for TelemetryContext.prototype.applyCloudContext.\r\n// Removed Stub for TelemetryContext.prototype.applyAITraceContext.\r\n// Removed Stub for TelemetryContext.prototype.applyDistributedTraceContext.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    TelemetryContext.__ieDyn=1;\n\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param traceContext - The ITraceContext instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the traceContext or temporary object\r\n */\r\nfunction createDistributedTraceContextFromTraceCtx(traceContext, parentCtx) {\r\n    var trace = traceContext || {};\r\n    return {\r\n        getName: function () {\r\n            return trace.name;\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace.name = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceId;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceId = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentId;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentId = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryContext.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\n/**\n * TODO: JSDoc for this class and all its methods.\n */\nexport class TelemetryResponse {\n    /**\n     * @param telemetryRegion\n     * @param telemetryUrl\n     */\n    constructor(telemetryRegion, telemetryUrl) {\n        this.telemetryRegion = telemetryRegion;\n        this.telemetryUrl = telemetryUrl;\n    }\n}\n//# sourceMappingURL=TelemetryResponse.js.map","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Web.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { getCookieValue, getLocation, getNavigator, getWindow, isArray, objDefineAccessors, safeGetCookieMgr } from \"@microsoft/1ds-core-js\";\r\nvar REGEX_VERSION = \"([\\\\d,.]+)\";\r\nvar UNKNOWN = \"Unknown\";\r\nvar EDGE_CHROMIUM = \"Edg/\";\r\nvar USER_AGENTS = [\r\n    { ua: \"OPR/\", b: \"Opera\" /* BROWSERS.OPERA */ },\r\n    { ua: \"PhantomJS\" /* BROWSERS.PHANTOMJS */, b: \"PhantomJS\" /* BROWSERS.PHANTOMJS */ },\r\n    { ua: \"Edge\" /* BROWSERS.EDGE */, b: \"Edge\" /* BROWSERS.EDGE */ },\r\n    { ua: EDGE_CHROMIUM, b: \"Edge\" /* BROWSERS.EDGE */ },\r\n    { ua: \"Electron\" /* BROWSERS.ELECTRON */, b: \"Electron\" /* BROWSERS.ELECTRON */ },\r\n    { ua: \"Chrome\" /* BROWSERS.CHROME */, b: \"Chrome\" /* BROWSERS.CHROME */ },\r\n    { ua: \"Trident\", b: \"MSIE\" /* BROWSERS.MSIE */ },\r\n    { ua: \"MSIE \", b: \"MSIE\" /* BROWSERS.MSIE */ },\r\n    { ua: \"Firefox\" /* BROWSERS.FIREFOX */, b: \"Firefox\" /* BROWSERS.FIREFOX */ },\r\n    { ua: \"Safari\" /* BROWSERS.SAFARI */, b: \"Safari\" /* BROWSERS.SAFARI */ },\r\n    { ua: \"SkypeShell\" /* BROWSERS.SKYPE_SHELL */, b: \"SkypeShell\" /* BROWSERS.SKYPE_SHELL */ } // Check for Skype shell\r\n];\r\nvar BRANDS = [\r\n    { br: \"Microsoft Edge\", b: \"Edge\" /* BROWSERS.EDGE */ },\r\n    { br: \"Google Chrome\", b: \"Chrome\" /* BROWSERS.CHROME */ },\r\n    { br: \"Opera\", b: \"Opera\" /* BROWSERS.OPERA */ }\r\n];\r\nfunction _userAgentContainsString(searchString, userAgent) {\r\n    return userAgent.indexOf(searchString) > -1;\r\n}\r\nfunction _getBrandVersion(match, brands) {\r\n    for (var lp = 0; lp < brands.length; lp++) {\r\n        if (match == brands[lp].brand) {\r\n            return brands[lp].version;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction _getBrowserName(userAgent) {\r\n    if (userAgent) {\r\n        for (var lp = 0; lp < USER_AGENTS.length; lp++) {\r\n            var ua = USER_AGENTS[lp].ua;\r\n            if (_userAgentContainsString(ua, userAgent)) {\r\n                return USER_AGENTS[lp].b;\r\n            }\r\n        }\r\n    }\r\n    return UNKNOWN;\r\n}\r\nfunction _getBrowserVersion(userAgent, browserName) {\r\n    if (browserName === \"MSIE\" /* BROWSERS.MSIE */) {\r\n        return _getIeVersion(userAgent);\r\n    }\r\n    return _getOtherVersion(browserName, userAgent);\r\n}\r\nfunction _getIeVersion(userAgent) {\r\n    var classicIeVersionMatches = userAgent.match(new RegExp(\"MSIE\" /* BROWSERS.MSIE */ + \" \" + REGEX_VERSION));\r\n    if (classicIeVersionMatches) {\r\n        return classicIeVersionMatches[1];\r\n    }\r\n    var ieVersionMatches = userAgent.match(new RegExp(\"rv:\" + REGEX_VERSION));\r\n    if (ieVersionMatches) {\r\n        return ieVersionMatches[1];\r\n    }\r\n}\r\nfunction _getOtherVersion(browserString, userAgent) {\r\n    if (browserString === \"Safari\" /* BROWSERS.SAFARI */) {\r\n        browserString = \"Version\";\r\n    }\r\n    else if (browserString === \"Edge\" /* BROWSERS.EDGE */) {\r\n        if (_userAgentContainsString(EDGE_CHROMIUM, userAgent)) {\r\n            browserString = \"Edg\";\r\n        }\r\n    }\r\n    var matches = userAgent.match(new RegExp(browserString + \"/\" + REGEX_VERSION));\r\n    if (matches) {\r\n        return matches[1];\r\n    }\r\n    if (browserString === \"Opera\" /* BROWSERS.OPERA */) {\r\n        matches = userAgent.match(new RegExp(\"OPR/\" + REGEX_VERSION));\r\n        if (matches) {\r\n            return matches[1];\r\n        }\r\n    }\r\n    return UNKNOWN;\r\n}\r\n/**\r\n* Get Screen resolution\r\n* @returns {ScreenResolution} - Screen resolution\r\n*/\r\nfunction _getScreenResolution() {\r\n    var screenRes = { h: 0, w: 0 };\r\n    var win = getWindow();\r\n    if (win && win.screen) {\r\n        screenRes.h = screen.height;\r\n        screenRes.w = screen.width;\r\n    }\r\n    return screenRes;\r\n}\r\nfunction _getUserConsent() {\r\n    return this.getUserConsent();\r\n}\r\nvar Web = /** @class */ (function () {\r\n    function Web(propertiesConfig, core) {\r\n        var _cookieMgr = safeGetCookieMgr(core);\r\n        var _propertiesConfig = propertiesConfig || {};\r\n        dynamicProto(Web, this, function (_self) {\r\n            // Add the domain\r\n            var windowLocation = getLocation();\r\n            if (windowLocation) {\r\n                var domain = windowLocation.hostname;\r\n                if (domain) {\r\n                    _self.domain = windowLocation.protocol === \"file:\" ? \"local\" : domain;\r\n                }\r\n            }\r\n            if (_propertiesConfig.populateBrowserInfo) {\r\n                var userAgent = _propertiesConfig.userAgent;\r\n                var userAgentBrands = (_propertiesConfig.userAgentData || {}).brands;\r\n                var theNav = getNavigator();\r\n                if (theNav) {\r\n                    userAgent = userAgent || theNav.userAgent || \"\";\r\n                    userAgentBrands = userAgentBrands || (theNav.userAgentData || {}).brands;\r\n                }\r\n                _parseUserAgent(userAgent, userAgentBrands);\r\n                var screenRes = _getScreenResolution();\r\n                _self.screenRes = screenRes.w + \"X\" + screenRes.h;\r\n            }\r\n            _self.getUserConsent = function () {\r\n                return _propertiesConfig.userConsented || (getCookieValue(_cookieMgr, _propertiesConfig.userConsentCookieName || \"MSCC\") ? true : false);\r\n            };\r\n            /**\r\n            *\r\n            ** Function to retrieve user consent details.\r\n            * @param callback - Callback function to get user consent details\r\n            * @returns IUserContentDetails stringified object\r\n            */\r\n            _self.getUserConsentDetails = function () {\r\n                try {\r\n                    var callback = _propertiesConfig.callback;\r\n                    if (callback && callback.userConsentDetails) {\r\n                        var result = callback.userConsentDetails();\r\n                        if (result) {\r\n                            return JSON.stringify({\r\n                                Required: result.Required || false,\r\n                                Analytics: result.Analytics || false,\r\n                                SocialMedia: result.SocialMedia || false,\r\n                                Advertising: result.Advertising || false\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // Unexpected - Just making sure we don't crash\r\n                }\r\n                return null;\r\n            };\r\n            function _parseUserAgent(userAgent, userAgentBrands) {\r\n                if (isArray(userAgentBrands)) {\r\n                    try {\r\n                        // Go through the ordered list of \"known\" brands and use the first matching value\r\n                        for (var lp = 0; lp < BRANDS.length; lp++) {\r\n                            var version = _getBrandVersion(BRANDS[lp].br, userAgentBrands);\r\n                            if (version) {\r\n                                _self.browser = BRANDS[lp].b;\r\n                                _self.browserVer = version;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Unexpected - Just making sure we don't crash\r\n                    }\r\n                }\r\n                if (userAgent) {\r\n                    var browserName = _getBrowserName(userAgent);\r\n                    _self.browser = browserName;\r\n                    _self.browserVer = _getBrowserVersion(userAgent, browserName);\r\n                }\r\n            }\r\n            // Remap this get userContext for this instance\r\n            objDefineAccessors(_self, \"userConsent\", _self.getUserConsent);\r\n        });\r\n    }\r\n// Removed Stub for Web.prototype.getUserConsent.\r\n// Removed Stub for Web.prototype.getUserConsentDetails.\r\n    /**\r\n     * Static constructor, attempt to create accessors\r\n     */\r\n    Web._staticInit = (function () {\r\n        // Dynamically create get/set property accessors\r\n        objDefineAccessors(Web.prototype, \"userConsent\", _getUserConsent);\r\n    })();\r\n    return Web;\r\n}());\r\nexport { Web };\r\n//# sourceMappingURL=Web.js.map","function e(e){if(e.__esModule)return e;var t=e.default;if(\"function\"==typeof t){var r=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};r.prototype=t.prototype}else r={};return Object.defineProperty(r,\"__esModule\",{value:!0}),Object.keys(e).forEach((function(t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})})),r}export{e as getAugmentedNamespace};\n","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Serializer.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\n// @skip-file-minify\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrIndexOf, doPerf, getCommonSchemaMetaData, getTenantId, isArray, isValueAssigned, objForEachKey, sanitizeProperty, strStartsWith } from \"@microsoft/1ds-core-js\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * Note: This is an optimization for V8-based browsers. When V8 concatenates a string,\r\n * the strings are only joined logically using a \"cons string\" or \"constructed/concatenated\r\n * string\". These containers keep references to one another and can result in very large\r\n * memory usage. For example, if a 2MB string is constructed by concatenating 4 bytes\r\n * together at a time, the memory usage will be ~44MB; so ~22x increase. The strings are\r\n * only joined together when an operation requiring their joining takes place, such as\r\n * substr(). This function is called when adding data to this buffer to ensure these\r\n * types of strings are periodically joined to reduce the memory footprint.\r\n * Setting to every 20 events as the JSON.stringify() may have joined many strings\r\n * and calling this too much causes a minor delay while processing.\r\n */\r\nvar _MAX_STRING_JOINS = 20;\r\nvar RequestSizeLimitBytes = 3984588; // approx 3.8 Mb\r\nvar BeaconRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nvar MaxRecordSize = 2000000; // approx 2 Mb\r\nvar MaxBeaconRecordSize = Math.min(MaxRecordSize, BeaconRequestSizeLimitBytes);\r\nvar metadata = \"metadata\";\r\nvar f = \"f\";\r\nvar rCheckDot = /\\./;\r\n/**\r\n* Class to handle serialization of event and request.\r\n* Currently uses Bond for serialization. Please note that this may be subject to change.\r\n*/\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(perfManager, valueSanitizer, stringifyObjects, enableCompoundKey) {\r\n        var strData = \"data\";\r\n        var strBaseData = \"baseData\";\r\n        var strExt = \"ext\";\r\n        var _checkForCompoundkey = !!enableCompoundKey;\r\n        var _processSubMetaData = true;\r\n        var _theSanitizer = valueSanitizer;\r\n        var _isReservedCache = {};\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            _self.createPayload = function (retryCnt, isTeardown, isSync, isReducedPayload, sendReason, sendType) {\r\n                return {\r\n                    apiKeys: [],\r\n                    payloadBlob: STR_EMPTY,\r\n                    overflow: null,\r\n                    sizeExceed: [],\r\n                    failedEvts: [],\r\n                    batches: [],\r\n                    numEvents: 0,\r\n                    retryCnt: retryCnt,\r\n                    isTeardown: isTeardown,\r\n                    isSync: isSync,\r\n                    isBeacon: isReducedPayload,\r\n                    sendType: sendType,\r\n                    sendReason: sendReason\r\n                };\r\n            };\r\n            _self.appendPayload = function (payload, theBatch, maxEventsPerBatch) {\r\n                var canAddEvents = payload && theBatch && !payload.overflow;\r\n                if (canAddEvents) {\r\n                    doPerf(perfManager, function () { return \"Serializer:appendPayload\"; }, function () {\r\n                        var theEvents = theBatch.events();\r\n                        var payloadBlob = payload.payloadBlob;\r\n                        var payloadEvents = payload.numEvents;\r\n                        var eventsAdded = false;\r\n                        var sizeExceeded = [];\r\n                        var failedEvts = [];\r\n                        var isBeaconPayload = payload.isBeacon;\r\n                        var requestMaxSize = isBeaconPayload ? BeaconRequestSizeLimitBytes : RequestSizeLimitBytes;\r\n                        var recordMaxSize = isBeaconPayload ? MaxBeaconRecordSize : MaxRecordSize;\r\n                        var lp = 0;\r\n                        var joinCount = 0;\r\n                        while (lp < theEvents.length) {\r\n                            var theEvent = theEvents[lp];\r\n                            if (theEvent) {\r\n                                if (payloadEvents >= maxEventsPerBatch) {\r\n                                    // Maximum events per payload reached, so don't add any more\r\n                                    payload.overflow = theBatch.split(lp);\r\n                                    break;\r\n                                }\r\n                                var eventBlob = _self.getEventBlob(theEvent);\r\n                                if (eventBlob && eventBlob.length <= recordMaxSize) {\r\n                                    // This event will fit into the payload\r\n                                    var blobLength = eventBlob.length;\r\n                                    var currentSize = payloadBlob.length;\r\n                                    if (currentSize + blobLength > requestMaxSize) {\r\n                                        // Request or batch size exceeded, so don't add any more to the payload\r\n                                        payload.overflow = theBatch.split(lp);\r\n                                        break;\r\n                                    }\r\n                                    if (payloadBlob) {\r\n                                        payloadBlob += \"\\n\";\r\n                                    }\r\n                                    payloadBlob += eventBlob;\r\n                                    joinCount++;\r\n                                    // v8 memory optimization only\r\n                                    if (joinCount > _MAX_STRING_JOINS) {\r\n                                        // this substr() should cause the constructed string to join\r\n                                        payloadBlob.substr(0, 1);\r\n                                        joinCount = 0;\r\n                                    }\r\n                                    eventsAdded = true;\r\n                                    payloadEvents++;\r\n                                }\r\n                                else {\r\n                                    if (eventBlob) {\r\n                                        // Single event size exceeded so remove from the batch\r\n                                        sizeExceeded.push(theEvent);\r\n                                    }\r\n                                    else {\r\n                                        failedEvts.push(theEvent);\r\n                                    }\r\n                                    // We also need to remove this event from the existing array, otherwise a notification will be sent\r\n                                    // indicating that it was successfully sent\r\n                                    theEvents.splice(lp, 1);\r\n                                    lp--;\r\n                                }\r\n                            }\r\n                            lp++;\r\n                        }\r\n                        if (sizeExceeded && sizeExceeded.length > 0) {\r\n                            payload.sizeExceed.push(EventBatch.create(theBatch.iKey(), sizeExceeded));\r\n                            // Remove the exceeded events from the batch\r\n                        }\r\n                        if (failedEvts && failedEvts.length > 0) {\r\n                            payload.failedEvts.push(EventBatch.create(theBatch.iKey(), failedEvts));\r\n                            // Remove the failed events from the batch\r\n                        }\r\n                        if (eventsAdded) {\r\n                            payload.batches.push(theBatch);\r\n                            payload.payloadBlob = payloadBlob;\r\n                            payload.numEvents = payloadEvents;\r\n                            var apiKey = theBatch.iKey();\r\n                            if (arrIndexOf(payload.apiKeys, apiKey) === -1) {\r\n                                payload.apiKeys.push(apiKey);\r\n                            }\r\n                        }\r\n                    }, function () { return ({ payload: payload, theBatch: { iKey: theBatch.iKey(), evts: theBatch.events() }, max: maxEventsPerBatch }); });\r\n                }\r\n                return canAddEvents;\r\n            };\r\n            _self.getEventBlob = function (eventData) {\r\n                try {\r\n                    return doPerf(perfManager, function () { return \"Serializer.getEventBlob\"; }, function () {\r\n                        var serializedEvent = {};\r\n                        // Adding as dynamic keys for v8 performance\r\n                        serializedEvent.name = eventData.name;\r\n                        serializedEvent.time = eventData.time;\r\n                        serializedEvent.ver = eventData.ver;\r\n                        serializedEvent.iKey = \"o:\" + getTenantId(eventData.iKey);\r\n                        // Assigning local var so usage in part b/c don't throw if there is no ext\r\n                        var serializedExt = {};\r\n                        // Part A\r\n                        var eventExt = eventData[strExt];\r\n                        if (eventExt) {\r\n                            // Only assign ext if the event had one (There are tests covering this use case)\r\n                            serializedEvent[strExt] = serializedExt;\r\n                            objForEachKey(eventExt, function (key, value) {\r\n                                var data = serializedExt[key] = {};\r\n                                // Don't include a metadata callback as we don't currently set metadata Part A fields\r\n                                _processPathKeys(value, data, \"ext.\" + key, true, null, null, true);\r\n                            });\r\n                        }\r\n                        var serializedData = serializedEvent[strData] = {};\r\n                        serializedData.baseType = eventData.baseType;\r\n                        var serializedBaseData = serializedData[strBaseData] = {};\r\n                        // Part B\r\n                        _processPathKeys(eventData.baseData, serializedBaseData, strBaseData, false, [strBaseData], function (pathKeys, name, value) {\r\n                            _addJSONPropertyMetaData(serializedExt, pathKeys, name, value);\r\n                        }, _processSubMetaData);\r\n                        // Part C\r\n                        _processPathKeys(eventData.data, serializedData, strData, false, [], function (pathKeys, name, value) {\r\n                            _addJSONPropertyMetaData(serializedExt, pathKeys, name, value);\r\n                        }, _processSubMetaData);\r\n                        return JSON.stringify(serializedEvent);\r\n                    }, function () { return ({ item: eventData }); });\r\n                }\r\n                catch (e) {\r\n                    return null;\r\n                }\r\n            };\r\n            function _isReservedField(path, name) {\r\n                var result = _isReservedCache[path];\r\n                if (result === undefined) {\r\n                    if (path.length >= 7) {\r\n                        // Do not allow the changing of fields located in the ext.metadata or ext.web extension\r\n                        result = strStartsWith(path, \"ext.metadata\") || strStartsWith(path, \"ext.web\");\r\n                    }\r\n                    _isReservedCache[path] = result;\r\n                }\r\n                return result;\r\n            }\r\n            function _processPathKeys(srcObj, target, thePath, checkReserved, metadataPathKeys, metadataCallback, processSubKeys) {\r\n                objForEachKey(srcObj, function (key, srcValue) {\r\n                    var prop = null;\r\n                    if (srcValue || isValueAssigned(srcValue)) {\r\n                        var path = thePath;\r\n                        var name_1 = key;\r\n                        var theMetaPathKeys = metadataPathKeys;\r\n                        var destObj = target;\r\n                        // Handle keys with embedded '.', like \"TestObject.testProperty\"\r\n                        if (_checkForCompoundkey && !checkReserved && rCheckDot.test(key)) {\r\n                            var subKeys = key.split(\".\");\r\n                            var keyLen = subKeys.length;\r\n                            if (keyLen > 1) {\r\n                                if (theMetaPathKeys) {\r\n                                    // Create a copy of the meta path keys so we can add the extra ones\r\n                                    theMetaPathKeys = theMetaPathKeys.slice();\r\n                                }\r\n                                for (var lp = 0; lp < keyLen - 1; lp++) {\r\n                                    var subKey = subKeys[lp];\r\n                                    // Add/reuse the sub key object\r\n                                    destObj = destObj[subKey] = destObj[subKey] || {};\r\n                                    path += \".\" + subKey;\r\n                                    if (theMetaPathKeys) {\r\n                                        theMetaPathKeys.push(subKey);\r\n                                    }\r\n                                }\r\n                                name_1 = subKeys[keyLen - 1];\r\n                            }\r\n                        }\r\n                        var isReserved = checkReserved && _isReservedField(path, name_1);\r\n                        if (!isReserved && _theSanitizer && _theSanitizer.handleField(path, name_1)) {\r\n                            prop = _theSanitizer.value(path, name_1, srcValue, stringifyObjects);\r\n                        }\r\n                        else {\r\n                            prop = sanitizeProperty(name_1, srcValue, stringifyObjects);\r\n                        }\r\n                        if (prop) {\r\n                            // Set the value\r\n                            var newValue = prop.value;\r\n                            destObj[name_1] = newValue;\r\n                            if (metadataCallback) {\r\n                                metadataCallback(theMetaPathKeys, name_1, prop);\r\n                            }\r\n                            if (processSubKeys && typeof newValue === \"object\" && !isArray(newValue)) {\r\n                                var newPath = theMetaPathKeys;\r\n                                if (newPath) {\r\n                                    newPath = newPath.slice();\r\n                                    newPath.push(name_1);\r\n                                }\r\n                                // Make sure we process sub objects as well (for value sanitization and metadata)\r\n                                _processPathKeys(srcValue, newValue, path + \".\" + name_1, checkReserved, newPath, metadataCallback, processSubKeys);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.createPayload.\r\n// Removed Stub for Serializer.prototype.appendPayload.\r\n// Removed Stub for Serializer.prototype.getEventBlob.\r\n// Removed Stub for Serializer.prototype.handleField.\r\n// Removed Stub for Serializer.prototype.getSanitizer.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n/**\r\n * @ignore\r\n */\r\nfunction _addJSONPropertyMetaData(json, propKeys, name, propertyValue) {\r\n    if (propertyValue && json) {\r\n        var encodedTypeValue = getCommonSchemaMetaData(propertyValue.value, propertyValue.kind, propertyValue.propertyType);\r\n        if (encodedTypeValue > -1) {\r\n            // Add the root metadata\r\n            var metaData = json[metadata];\r\n            if (!metaData) {\r\n                // Sets the root 'f'\r\n                metaData = json[metadata] = { f: {} };\r\n            }\r\n            var metaTarget = metaData[f];\r\n            if (!metaTarget) {\r\n                // This can occur if someone has manually added an ext.metadata object\r\n                // Such as ext.metadata.privLevel and ext.metadata.privTags\r\n                metaTarget = metaData[f] = {};\r\n            }\r\n            // Traverse the metadata path and build each object (contains an 'f' key) -- if required\r\n            if (propKeys) {\r\n                for (var lp = 0; lp < propKeys.length; lp++) {\r\n                    var key = propKeys[lp];\r\n                    if (!metaTarget[key]) {\r\n                        metaTarget[key] = { f: {} };\r\n                    }\r\n                    var newTarget = metaTarget[key][f];\r\n                    if (!newTarget) {\r\n                        // Not expected, but can occur if the metadata context was pre-created as part of the event\r\n                        newTarget = metaTarget[key][f] = {};\r\n                    }\r\n                    metaTarget = newTarget;\r\n                }\r\n            }\r\n            metaTarget = metaTarget[name] = {};\r\n            if (isArray(propertyValue.value)) {\r\n                metaTarget[\"a\"] = {\r\n                    t: encodedTypeValue\r\n                };\r\n            }\r\n            else {\r\n                metaTarget[\"t\"] = encodedTypeValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Serializer.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nimport Bowser from 'bowser';\n/**\n * TODO: JSDoc and export it from its own file.\n * Reference: https://domoreexp.visualstudio.com/Teamspace/_git/teams-modular-packages?path=%2Fpackages%2Fcore%2Fservices%2Fcore-services-platform%2Fsrc%2Fplatform-service.test.ts&version=GBmaster&_a=contents.\n */\nexport var PlatformId;\n(function (PlatformId) {\n    PlatformId[PlatformId[\"Android\"] = 1416] = \"Android\";\n    PlatformId[PlatformId[\"Desktop\"] = 27] = \"Desktop\";\n    PlatformId[PlatformId[\"IOS\"] = 1417] = \"IOS\";\n    PlatformId[PlatformId[\"Linux\"] = 41] = \"Linux\";\n    PlatformId[PlatformId[\"Mac\"] = 28] = \"Mac\";\n    PlatformId[PlatformId[\"Rigel\"] = 34] = \"Rigel\";\n    PlatformId[PlatformId[\"Web\"] = 1415] = \"Web\";\n    PlatformId[PlatformId[\"WindowsPhone\"] = 1423] = \"WindowsPhone\";\n})(PlatformId || (PlatformId = {}));\n/**\n * TODO: JSDoc and export it from its own file.\n */\nexport var ClientType;\n(function (ClientType) {\n    ClientType[\"CDLWorker\"] = \"cdlworker\";\n    ClientType[\"Desktop\"] = \"desktop\";\n    ClientType[\"Web\"] = \"web\";\n})(ClientType || (ClientType = {}));\n/**\n * TODO: JSDoc.\n * Reference: https://github.com/lancedikson/bowser/blob/master/src/constants.js.\n */\nexport var OsNames;\n(function (OsNames) {\n    OsNames[\"Android\"] = \"Android\";\n    OsNames[\"Bada\"] = \"Bada\";\n    OsNames[\"BlackBerry\"] = \"BlackBerry\";\n    OsNames[\"ChromeOS\"] = \"Chrome OS\";\n    OsNames[\"Linux\"] = \"Linux\";\n    OsNames[\"MacOS\"] = \"macOS\";\n    OsNames[\"PlayStation4\"] = \"PlayStation 4\";\n    OsNames[\"Roku\"] = \"Roku\";\n    OsNames[\"Tizen\"] = \"Tizen\";\n    OsNames[\"WebOS\"] = \"WebOS\";\n    OsNames[\"Windows\"] = \"Windows\";\n    OsNames[\"WindowsPhone\"] = \"Windows Phone\";\n    OsNames[\"iOS\"] = \"iOS\";\n})(OsNames || (OsNames = {}));\nconst getClientType = () => {\n    const userAgent = window.navigator.userAgent;\n    return (userAgent === null || userAgent === void 0 ? void 0 : userAgent.indexOf('Electron')) !== -1\n        ? ClientType.Desktop\n        : (userAgent === null || userAgent === void 0 ? void 0 : userAgent.indexOf('cdlworker')) !== -1\n            ? ClientType.CDLWorker\n            : ClientType.Web;\n};\nconst getOsPlatformId = () => {\n    const clientType = getClientType();\n    const userAgent = window.navigator.userAgent;\n    const osName = Bowser.getParser(userAgent).getOSName();\n    if (OsNames.Linux === osName) {\n        return PlatformId.Linux;\n    }\n    else if (OsNames.Android === osName) {\n        return PlatformId.Android;\n    }\n    else if (OsNames.iOS === osName) {\n        return PlatformId.IOS;\n    }\n    else if (OsNames.WindowsPhone === osName) {\n        return PlatformId.WindowsPhone;\n    }\n    else if (OsNames.MacOS === osName) {\n        return PlatformId.Mac;\n    }\n    else if (clientType === ClientType.Desktop) {\n        return PlatformId.Desktop;\n    }\n    else if (clientType === ClientType.Web) {\n        return PlatformId.Web;\n    }\n    else if (clientType === ClientType.CDLWorker) {\n        return PlatformId.Rigel;\n    }\n};\n/**\n * TODO: JSDoc and export it from its own file.\n * @returns Navigation properties.\n */\nexport const getNavigationProperties = () => {\n    const calculatedProperties = {};\n    calculatedProperties.appPlatformId = String(getOsPlatformId());\n    calculatedProperties.userAgent = window.navigator.userAgent;\n    calculatedProperties.clientType = getClientType();\n    return calculatedProperties;\n};\n//# sourceMappingURL=getNavigationProperties.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n */\nexport * from \"./ScenarioTracker\";\n//# sourceMappingURL=index.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* AutoCaptureHandler.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { addPageHideEventListener, addPageUnloadEventListener, createUniqueNamespace, eventOff, eventOn, getDocument, getWindow, mergeEvtNamespace, removePageHideEventListener, removePageUnloadEventListener } from \"@microsoft/1ds-core-js\";\r\nimport { onDomLoaded } from \"../DataCollector\";\r\nimport { ActionType } from \"../Enums\";\r\nimport { _debounce, _getScrollOffset, _isKeyboardEnter, _isKeyboardSpace, _isLeftClick, _isMiddleClick, _isRightClick } from \"../common/Utils\";\r\nvar clickCaptureInputTypes = { BUTTON: true, CHECKBOX: true, RADIO: true, RESET: true, SUBMIT: true };\r\nvar AutoCaptureHandler = /** @class */ (function () {\r\n    /**\r\n    * @param _plugin - WebAnalytics plugin\r\n    * @param _logger - Trace logger to log to console.\r\n    */\r\n    function AutoCaptureHandler(webAnalytics, diagLog) {\r\n        var _this = this;\r\n        var _plugin;\r\n        var _logger;\r\n        var _evtNamespace;\r\n        var _clickAdded;\r\n        var _scrollAdded;\r\n        var _maxScrollAdded;\r\n        var _resizeAdded;\r\n        var _unloadAdded;\r\n        var _domLoadedAdded;\r\n        dynamicProto(AutoCaptureHandler, this, function (_self) {\r\n            // Clears out all local values this is also used during teardown\r\n            _initDefaults();\r\n            // Assign the values that we want to use\r\n            _plugin = webAnalytics;\r\n            _logger = diagLog;\r\n            _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"AutoCaptureHandler\"), _plugin._evtNamespace);\r\n            // Re-Exposing as protected properties\r\n            _self._analyticsPlugin = _plugin;\r\n            _self._traceLogger = _logger;\r\n            _self.pageView = function () {\r\n                _plugin && _plugin.capturePageView({ isAuto: true });\r\n            };\r\n            _self.onLoad = function () {\r\n                if (_plugin && !_domLoadedAdded) {\r\n                    onDomLoaded(function () {\r\n                        _plugin && _plugin.capturePageViewPerformance({ isAuto: true });\r\n                        _plugin && _plugin.captureContentUpdate({ isAuto: true, isDomComplete: true });\r\n                    }, _evtNamespace);\r\n                    _domLoadedAdded = true;\r\n                }\r\n            };\r\n            // handle automatic event firing on user click\r\n            _self.click = function () {\r\n                if (!_clickAdded) {\r\n                    var win = getWindow();\r\n                    var doc = getDocument();\r\n                    if (win && win.addEventListener) {\r\n                        // IE9 onwards addEventListener is available, 'click' event captures mouse click. mousedown works on other browsers\r\n                        var event = (navigator.appVersion.indexOf(\"MSIE\") !== -1) ? \"click\" : \"mousedown\";\r\n                        eventOn(win, event, _processClick, _evtNamespace);\r\n                        eventOn(win, \"keyup\", _processClick, _evtNamespace);\r\n                    }\r\n                    else if (doc && doc.attachEvent) {\r\n                        // IE8 and below doesn't have addEventListener so it will use attachEvent\r\n                        // attaching to window does not work in IE8\r\n                        eventOn(doc, \"click\", _processClick, _evtNamespace);\r\n                        eventOn(doc, \"keyup\", _processClick, _evtNamespace);\r\n                    }\r\n                    _clickAdded = true;\r\n                }\r\n            };\r\n            // handle automatic event firing on user scroll\r\n            _self.scroll = function (debounceConfig) {\r\n                if (!_scrollAdded) {\r\n                    var processScroll = _debounce(\r\n                    // on first call do nothing\r\n                    null, \r\n                    // after debounce, send contentView with viewportOffset\r\n                    function () {\r\n                        _plugin && _plugin.captureContentUpdate({ isAuto: true, actionType: ActionType.SCROLL });\r\n                    }, debounceConfig.scroll, _this);\r\n                    eventOn(getWindow(), \"scroll\", processScroll, _evtNamespace);\r\n                    _scrollAdded = true;\r\n                }\r\n            };\r\n            // handle automatic event firing on user scroll\r\n            _self.maxScroll = function (maxScroll) {\r\n                if (!_maxScrollAdded) {\r\n                    var getMaxScrollDepth = function () {\r\n                        var currentScroll = _getScrollOffset();\r\n                        maxScroll.v = maxScroll.v > currentScroll.v ? maxScroll.v : currentScroll.v;\r\n                    };\r\n                    eventOn(getWindow(), \"scroll\", getMaxScrollDepth, _evtNamespace);\r\n                    _maxScrollAdded = true;\r\n                }\r\n            };\r\n            // handle automatic event firing on user resize\r\n            _self.resize = function (debounceConfig) {\r\n                /// I wasn't able to repro the bug\r\n                /// (https://microsoft.visualstudio.com/DefaultCollection/OSGS/_workitems/edit/7958464)\r\n                /// until new content was loaded on the page and the resize\r\n                /// rendering became slow. When resize happens, the page rendering\r\n                /// time is longer than the resize debounce, and resize render\r\n                /// happens in time > debounce, and so resize is acting like\r\n                /// it's being done twice: once at the beginning of user resize,\r\n                /// one at the end of browser render resize.\r\n                if (!_resizeAdded) {\r\n                    var processResize = _debounce(\r\n                    // on first call, send resize contentUpdate\r\n                    function () {\r\n                        _plugin && _plugin.captureContentUpdate({ isAuto: true, actionType: ActionType.RESIZE });\r\n                    }, \r\n                    // after debounce, do nothing\r\n                    null, debounceConfig.resize, _this);\r\n                    eventOn(getWindow(), \"resize\", processResize, _evtNamespace);\r\n                    _resizeAdded = true;\r\n                }\r\n            };\r\n            _self.onUnload = function () {\r\n                function _doUnload() {\r\n                    _plugin && _plugin.capturePageUnload({ isAuto: true });\r\n                }\r\n                if (!_unloadAdded) {\r\n                    var coreConfig = ((_plugin || {}).core || {}).config;\r\n                    var excludePageUnloadEvents = coreConfig.disablePageUnloadEvents;\r\n                    addPageUnloadEventListener(_doUnload, excludePageUnloadEvents, _evtNamespace);\r\n                    addPageHideEventListener(_doUnload, excludePageUnloadEvents, _evtNamespace);\r\n                    _unloadAdded = true;\r\n                }\r\n            };\r\n            _self.teardown = function (unloadCtx, unloadState) {\r\n                eventOff(getWindow(), null, null, _evtNamespace);\r\n                eventOff(getDocument(), null, null, _evtNamespace);\r\n                removePageUnloadEventListener(null, _evtNamespace);\r\n                removePageHideEventListener(null, _evtNamespace);\r\n                _initDefaults();\r\n            };\r\n            _self._processClick = _processClick;\r\n            function _processClick(clickEvent) {\r\n                var clickCaptureElements = { A: true, BUTTON: true, AREA: true, INPUT: true };\r\n                var win = getWindow();\r\n                clickEvent = clickEvent || win.event; // IE 8 does not pass the event\r\n                var element = clickEvent.srcElement || clickEvent.target;\r\n                // populate overrideValues\r\n                var overrideValues = {\r\n                    isAuto: true,\r\n                    clickCoordinateX: clickEvent.pageX,\r\n                    clickCoordinateY: clickEvent.pageY\r\n                };\r\n                var isRightClick = _isRightClick(clickEvent);\r\n                if (isRightClick) {\r\n                    overrideValues.actionType = ActionType.CLICKRIGHT;\r\n                }\r\n                else if (_isLeftClick(clickEvent)) {\r\n                    overrideValues.actionType = ActionType.CLICKLEFT;\r\n                }\r\n                else if (_isKeyboardEnter(clickEvent)) {\r\n                    overrideValues.actionType = ActionType.KEYBOARDENTER;\r\n                }\r\n                else if (_isKeyboardSpace(clickEvent)) {\r\n                    overrideValues.actionType = ActionType.KEYBOARDSPACE;\r\n                }\r\n                else if (_isMiddleClick(clickEvent)) {\r\n                    overrideValues.actionType = ActionType.CLICKMIDDLE;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n                while (element && element.tagName) {\r\n                    // control property will be available for <label> elements with 'for' attribute, only use it when is a\r\n                    // valid JSLL capture element to avoid infinite loops\r\n                    if (element.control && clickCaptureElements[element.control.tagName.toUpperCase()]) {\r\n                        element = element.control;\r\n                    }\r\n                    if (!clickCaptureElements[element.tagName.toUpperCase()]) {\r\n                        element = element.parentElement || element.parentNode;\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        // Check allowed INPUT types\r\n                        var sendEvent = element.tagName.toUpperCase() === \"INPUT\" ? clickCaptureInputTypes[element.type.toUpperCase()] : true;\r\n                        if (sendEvent) {\r\n                            _plugin && _plugin.capturePageAction(element, overrideValues, {}, isRightClick);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _self._analyticsPlugin = null;\r\n                _self._traceLogger = null;\r\n                _plugin = null;\r\n                _logger = null;\r\n                _evtNamespace = null;\r\n                _scrollAdded = false;\r\n                _maxScrollAdded = false;\r\n                _resizeAdded = false;\r\n                _unloadAdded = false;\r\n                _domLoadedAdded = false;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for AutoCaptureHandler.prototype.pageView.\r\n// Removed Stub for AutoCaptureHandler.prototype.onLoad.\r\n    // handle automatic event firing on user click\r\n// Removed Stub for AutoCaptureHandler.prototype.click.\r\n    // handle automatic event firing on user scroll\r\n// Removed Stub for AutoCaptureHandler.prototype.scroll.\r\n    // handle automatic event firing on user scroll\r\n// Removed Stub for AutoCaptureHandler.prototype.maxScroll.\r\n    // handle automatic event firing on user resize\r\n// Removed Stub for AutoCaptureHandler.prototype.resize.\r\n// Removed Stub for AutoCaptureHandler.prototype.onUnload.\r\n// Removed Stub for AutoCaptureHandler.prototype.teardown.\r\n// Removed Stub for AutoCaptureHandler.prototype._processClick.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    AutoCaptureHandler.__ieDyn=1;\n\n    return AutoCaptureHandler;\r\n}());\r\nexport { AutoCaptureHandler };\r\n//# sourceMappingURL=AutoCaptureHandler.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_ERROR_TO_CONSOLE = \"errorToConsole\";\r\nexport var STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* pageView.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport * as DataCollector from \"../DataCollector\";\r\nimport { isValueAssigned } from \"@microsoft/1ds-core-js\";\r\nimport { WebEvent } from \"./WebEvent\";\r\nvar PageView = /** @class */ (function (_super) {\r\n    __extends(PageView, _super);\r\n    function PageView() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n      * API to populate and send a PageView event\r\n      * @param overrideValues - PageView overrides\r\n      * @param customProperties - Custom properties(Part C)\r\n      */\r\n    PageView.prototype.capturePageView = function (overrideValues, customProperties) {\r\n        overrideValues = !isValueAssigned(overrideValues) ? {} : overrideValues;\r\n        var pageViewEvent = {};\r\n        var properties = isValueAssigned(customProperties) ? customProperties : {};\r\n        this._setCommonProperties(pageViewEvent, properties, overrideValues);\r\n        // Add pageView fields\r\n        pageViewEvent.refUri = isValueAssigned(overrideValues.referrerUri) ? overrideValues.referrerUri : this._config.coreData.referrerUri;\r\n        pageViewEvent.isManual = !overrideValues.isAuto;\r\n        var cookiesValue = DataCollector._getClientCookies(this._config, this._traceLogger);\r\n        if (cookiesValue) {\r\n            properties.cookies = cookiesValue;\r\n        }\r\n        properties.behavior = this._getBehavior(overrideValues);\r\n        this._webAnalyticsPlugin.trackPageView(pageViewEvent, properties);\r\n    };\r\n    return PageView;\r\n}(WebEvent));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { __spreadArrayFn as __spreadArray } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { objCreateFn } from \"@microsoft/applicationinsights-shims\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CONFIG, _DYN_FLUSH, _DYN_GET_NOTIFY_MGR, _DYN_GET_PLUGIN, _DYN_GET_PROCESS_TEL_CONT0, _DYN_IDENTIFIER, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_NAME, _DYN_ON_COMPLETE, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_2, _DYN_SET_ENABLED, _DYN_SPLICE, _DYN_STOP_POLLING_INTERNA3, _DYN_TEARDOWN, _DYN_TIME, _DYN__EXTENSIONS } from \"../__DynamicConstants\";\r\nimport { ChannelControllerPriority, createChannelControllerPlugin, createChannelQueues } from \"./ChannelController\";\r\nimport { createCookieMgr } from \"./CookieMgr\";\r\nimport { createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDebugListener } from \"./DbgExtensionUtils\";\r\nimport { DiagnosticLogger, _InternalLogMessage, _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { arrForEach, arrIndexOf, getCfgValue, getSetValue, isFunction, isNullOrUndefined, objExtend, objFreeze, proxyFunctionAs, proxyFunctions, throwError, toISOString } from \"./HelperFuncs\";\r\nimport { STR_CHANNELS, STR_CORE, STR_CREATE_PERF_MGR, STR_DISABLED, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_EXTENSIONS, STR_EXTENSION_CONFIG, STR_GET_PERF_MGR, STR_PRIORITY } from \"./InternalConstants\";\r\nimport { PerfManager, getGblPerfMgr } from \"./PerfManager\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { _getPluginState, createDistributedTraceContext, initializePlugins, sortPlugins } from \"./TelemetryHelpers\";\r\nimport { TelemetryInitializerPlugin } from \"./TelemetryInitializerPlugin\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nvar strValidationError = \"Plugins must provide initialize method\";\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar strSdkUnloadingError = \"SDK is still unloading...\";\r\nvar strSdkNotInitialized = \"SDK is not initialized\";\r\n// const strPluginUnloadFailed = \"Failed to unload plugin\";\r\nvar defaultInitConfig = {\r\n    // Have the Diagnostic Logger default to log critical errors to the console\r\n    loggingLevelConsole: 1 /* eLoggingSeverity.CRITICAL */\r\n};\r\n/**\r\n * Helper to create the default performance manager\r\n * @param core\r\n * @param notificationMgr\r\n */\r\nfunction _createPerfManager(core, notificationMgr) {\r\n    return new PerfManager(notificationMgr);\r\n}\r\nfunction _validateExtensions(logger, channelPriority, allExtensions) {\r\n    var _a;\r\n    // Concat all available extensions\r\n    var coreExtensions = [];\r\n    // Check if any two extensions have the same priority, then warn to console\r\n    // And extract the local extensions from the\r\n    var extPriorities = {};\r\n    // Extension validation\r\n    arrForEach(allExtensions, function (ext) {\r\n        // Check for ext.initialize\r\n        if (isNullOrUndefined(ext) || isNullOrUndefined(ext[_DYN_INITIALIZE /* @min:%2einitialize */])) {\r\n            throwError(strValidationError);\r\n        }\r\n        var extPriority = ext[STR_PRIORITY /* @min:%2epriority */];\r\n        var identifier = ext[_DYN_IDENTIFIER /* @min:%2eidentifier */];\r\n        if (ext && extPriority) {\r\n            if (!isNullOrUndefined(extPriorities[extPriority])) {\r\n                _warnToConsole(logger, \"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n            }\r\n            else {\r\n                // set a value\r\n                extPriorities[extPriority] = identifier;\r\n            }\r\n        }\r\n        // Split extensions to core and channelController\r\n        if (!extPriority || extPriority < channelPriority) {\r\n            // Add to core extension that will be managed by BaseCore\r\n            coreExtensions[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n    });\r\n    return _a = {\r\n            all: allExtensions\r\n        },\r\n        _a[STR_CORE /* @min:core */] = coreExtensions,\r\n        _a;\r\n}\r\nfunction _isPluginPresent(thePlugin, plugins) {\r\n    var exists = false;\r\n    arrForEach(plugins, function (plugin) {\r\n        if (plugin === thePlugin) {\r\n            exists = true;\r\n            return -1;\r\n        }\r\n    });\r\n    return exists;\r\n}\r\nfunction _createDummyNotificationManager() {\r\n    var _a;\r\n    return objCreateFn((_a = {},\r\n        _a[_DYN_ADD_NOTIFICATION_LIS1 /* @min:addNotificationListener */] = function (listener) { },\r\n        _a[_DYN_REMOVE_NOTIFICATION_2 /* @min:removeNotificationListener */] = function (listener) { },\r\n        _a[STR_EVENTS_SENT /* @min:eventsSent */] = function (events) { },\r\n        _a[STR_EVENTS_DISCARDED /* @min:eventsDiscarded */] = function (events, reason) { },\r\n        _a[STR_EVENTS_SEND_REQUEST /* @min:eventsSendRequest */] = function (sendReason, isAsync) { },\r\n        _a));\r\n}\r\nvar BaseCore = /** @class */ (function () {\r\n    function BaseCore() {\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _config;\r\n        var _isInitialized;\r\n        var _eventQueue;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        var _cfgPerfManager;\r\n        var _cookieManager;\r\n        var _pluginChain;\r\n        var _configExtensions;\r\n        var _coreExtensions;\r\n        var _channelControl;\r\n        var _channelConfig;\r\n        var _channelQueue;\r\n        var _isUnloading;\r\n        var _telemetryInitializerPlugin;\r\n        var _internalLogsEventName;\r\n        var _evtNamespace;\r\n        var _unloadHandlers;\r\n        var _debugListener;\r\n        var _traceCtx;\r\n        /**\r\n         * Internal log poller\r\n         */\r\n        var _internalLogPoller = 0;\r\n        dynamicProto(BaseCore, this, function (_self) {\r\n            // Set the default values (also called during teardown)\r\n            _initDefaults();\r\n            _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () { return _isInitialized; };\r\n            // Creating the self.initialize = ()\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                if (_isUnloading) {\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                // Make sure core is only initialized once\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    throwError(\"Core should not be initialized more than once\");\r\n                }\r\n                _config = config || {};\r\n                _self[_DYN_CONFIG /* @min:%2econfig */] = _config;\r\n                if (isNullOrUndefined(config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */])) {\r\n                    throwError(\"Please provide instrumentation key\");\r\n                }\r\n                _notificationManager = notificationManager;\r\n                // For backward compatibility only\r\n                _self[strNotificationManager] = notificationManager;\r\n                _initDebugListener();\r\n                _initPerfManager();\r\n                // add notification to the extensions in the config so other plugins can access it\r\n                _initExtConfig();\r\n                if (logger) {\r\n                    _self[_DYN_LOGGER /* @min:%2elogger */] = logger;\r\n                }\r\n                var cfgExtensions = getSetValue(_config, STR_EXTENSIONS, []);\r\n                // Extension validation\r\n                _configExtensions = [];\r\n                _configExtensions[_DYN_PUSH /* @min:%2epush */].apply(_configExtensions, __spreadArray(__spreadArray([], extensions, false), cfgExtensions, false));\r\n                _channelConfig = getSetValue(_config, STR_CHANNELS, []);\r\n                _initPluginChain(null);\r\n                if (!_channelQueue || _channelQueue[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    throwError(\"No \" + STR_CHANNELS + \" available\");\r\n                }\r\n                _isInitialized = true;\r\n                _self.releaseQueue();\r\n            };\r\n            _self.getTransmissionControls = function () {\r\n                var controls = [];\r\n                if (_channelQueue) {\r\n                    arrForEach(_channelQueue, function (channels) {\r\n                        controls[_DYN_PUSH /* @min:%2epush */](channels.queue);\r\n                    });\r\n                }\r\n                return objFreeze(controls);\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                // setup default iKey if not passed in\r\n                telemetryItem.iKey = telemetryItem.iKey || _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                // add default timestamp if not passed in\r\n                telemetryItem[_DYN_TIME /* @min:%2etime */] = telemetryItem[_DYN_TIME /* @min:%2etime */] || toISOString(new Date());\r\n                // Common Schema 4.0\r\n                telemetryItem.ver = telemetryItem.ver || \"4.0\";\r\n                if (!_isUnloading && _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    // Process the telemetry plugin chain\r\n                    _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](telemetryItem);\r\n                }\r\n                else {\r\n                    // Queue events until all extensions are initialized\r\n                    _eventQueue[_DYN_PUSH /* @min:%2epush */](telemetryItem);\r\n                }\r\n            };\r\n            _self[_DYN_GET_PROCESS_TEL_CONT0 /* @min:%2egetProcessTelContext */] = _createTelCtx;\r\n            _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */] = function () {\r\n                if (!_notificationManager) {\r\n                    // Create Dummy notification manager\r\n                    _notificationManager = _createDummyNotificationManager();\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param {INotificationListener} listener - An INotificationListener object.\r\n             */\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](listener);\r\n                }\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param {INotificationListener} listener - INotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_2 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_2 /* @min:%2eremoveNotificationListener */](listener);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                if (!_cookieManager) {\r\n                    _cookieManager = createCookieMgr(_config, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _cookieManager;\r\n            };\r\n            _self.setCookieMgr = function (cookieMgr) {\r\n                _cookieManager = cookieMgr;\r\n            };\r\n            _self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */] = function () {\r\n                if (!_perfManager && !_cfgPerfManager) {\r\n                    if (getCfgValue(_config.enablePerfMgr)) {\r\n                        var createPerfMgr = getCfgValue(_config[STR_CREATE_PERF_MGR /* @min:%2ecreatePerfMgr */]);\r\n                        if (isFunction(createPerfMgr)) {\r\n                            _cfgPerfManager = createPerfMgr(_self, _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]());\r\n                        }\r\n                    }\r\n                }\r\n                return _perfManager || _cfgPerfManager || getGblPerfMgr();\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_isInitialized && _eventQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var eventQueue = _eventQueue;\r\n                    _eventQueue = [];\r\n                    arrForEach(eventQueue, function (event) {\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](event);\r\n                    });\r\n                }\r\n            };\r\n            /**\r\n             * Periodically check logger.queue for log messages to be flushed\r\n             */\r\n            _self.pollInternalLogs = function (eventName) {\r\n                _internalLogsEventName = eventName || null;\r\n                var interval = getCfgValue(_config.diagnosticLogInterval);\r\n                if (!interval || !(interval > 0)) {\r\n                    interval = 10000;\r\n                }\r\n                if (_internalLogPoller) {\r\n                    clearInterval(_internalLogPoller);\r\n                }\r\n                _internalLogPoller = setInterval(function () {\r\n                    _flushInternalLogs();\r\n                }, interval);\r\n                return _internalLogPoller;\r\n            };\r\n            /**\r\n             * Stop polling log messages from logger.queue\r\n             */\r\n            _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */] = function () {\r\n                if (_internalLogPoller) {\r\n                    clearInterval(_internalLogPoller);\r\n                    _internalLogPoller = 0;\r\n                    _flushInternalLogs();\r\n                }\r\n            };\r\n            // Add addTelemetryInitializer\r\n            proxyFunctions(_self, function () { return _telemetryInitializerPlugin; }, [\"addTelemetryInitializer\"]);\r\n            _self.unload = function (isAsync, unloadComplete, cbTimeout) {\r\n                var _a;\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_isInitialized) {\r\n                    // The SDK is not initialized\r\n                    throwError(strSdkNotInitialized);\r\n                }\r\n                // Check if the SDK still unloading so throw\r\n                if (_isUnloading) {\r\n                    // The SDK is already unloading\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                var unloadState = (_a = {\r\n                        reason: 50 /* TelemetryUnloadReason.SdkUnload */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                    _a.flushComplete = false,\r\n                    _a);\r\n                var processUnloadCtx = createProcessTelemetryUnloadContext(_getPluginChain(), _self);\r\n                processUnloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                    _initDefaults();\r\n                    unloadComplete && unloadComplete(unloadState);\r\n                }, _self);\r\n                function _doUnload(flushComplete) {\r\n                    unloadState.flushComplete = flushComplete;\r\n                    _isUnloading = true;\r\n                    // Run all of the unload handlers first (before unloading the plugins)\r\n                    _unloadHandlers.run(processUnloadCtx, unloadState);\r\n                    // Stop polling the internal logs\r\n                    _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */]();\r\n                    // Start unloading the components, from this point onwards the SDK should be considered to be in an unstable state\r\n                    processUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                if (!_flushChannels(isAsync, _doUnload, 6 /* SendRequestReason.SdkUnload */, cbTimeout)) {\r\n                    _doUnload(false);\r\n                }\r\n            };\r\n            _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */] = _getPlugin;\r\n            _self.addPlugin = function (plugin, replaceExisting, isAsync, addCb) {\r\n                if (!plugin) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(strValidationError);\r\n                    return;\r\n                }\r\n                var existingPlugin = _getPlugin(plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                if (existingPlugin && !replaceExisting) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(\"Plugin [\" + plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"] is already loaded!\");\r\n                    return;\r\n                }\r\n                var updateState = {\r\n                    reason: 16 /* TelemetryUpdateReason.PluginAdded */\r\n                };\r\n                function _addPlugin(removed) {\r\n                    _configExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                    updateState.added = [plugin];\r\n                    // Re-Initialize the plugin chain\r\n                    _initPluginChain(updateState);\r\n                    addCb && addCb(true);\r\n                }\r\n                if (existingPlugin) {\r\n                    var removedPlugins_1 = [existingPlugin.plugin];\r\n                    var unloadState = {\r\n                        reason: 2 /* TelemetryUnloadReason.PluginReplace */,\r\n                        isAsync: !!isAsync\r\n                    };\r\n                    _removePlugins(removedPlugins_1, unloadState, function (removed) {\r\n                        if (!removed) {\r\n                            // Previous plugin was successfully removed or was not installed\r\n                            addCb && addCb(false);\r\n                        }\r\n                        else {\r\n                            updateState.removed = removedPlugins_1;\r\n                            updateState.reason |= 32 /* TelemetryUpdateReason.PluginRemoved */;\r\n                            _addPlugin(true);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    _addPlugin(false);\r\n                }\r\n            };\r\n            _self.evtNamespace = function () {\r\n                return _evtNamespace;\r\n            };\r\n            _self[_DYN_FLUSH /* @min:%2eflush */] = _flushChannels;\r\n            _self.getTraceCtx = function (createNew) {\r\n                if (!_traceCtx) {\r\n                    _traceCtx = createDistributedTraceContext();\r\n                }\r\n                return _traceCtx;\r\n            };\r\n            _self.setTraceCtx = function (traceCtx) {\r\n                _traceCtx = traceCtx || null;\r\n            };\r\n            // Create the addUnloadCb\r\n            proxyFunctionAs(_self, \"addUnloadCb\", function () { return _unloadHandlers; }, \"add\");\r\n            function _initDefaults() {\r\n                _isInitialized = false;\r\n                // Use a default logger so initialization errors are not dropped on the floor with full logging\r\n                _config = objExtend(true, {}, defaultInitConfig);\r\n                _self[_DYN_CONFIG /* @min:%2econfig */] = _config;\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = new DiagnosticLogger(_config);\r\n                _self[_DYN__EXTENSIONS /* @min:%2e_extensions */] = [];\r\n                _telemetryInitializerPlugin = new TelemetryInitializerPlugin();\r\n                _eventQueue = [];\r\n                _notificationManager = null;\r\n                _perfManager = null;\r\n                _cfgPerfManager = null;\r\n                _cookieManager = null;\r\n                _pluginChain = null;\r\n                _coreExtensions = null;\r\n                _configExtensions = [];\r\n                _channelControl = null;\r\n                _channelConfig = null;\r\n                _channelQueue = null;\r\n                _isUnloading = false;\r\n                _internalLogsEventName = null;\r\n                _evtNamespace = createUniqueNamespace(\"AIBaseCore\", true);\r\n                _unloadHandlers = createUnloadHandlerContainer();\r\n                _traceCtx = null;\r\n            }\r\n            function _createTelCtx() {\r\n                return createProcessTelemetryContext(_getPluginChain(), _config, _self);\r\n            }\r\n            // Initialize or Re-initialize the plugins\r\n            function _initPluginChain(updateState) {\r\n                // Extension validation\r\n                var theExtensions = _validateExtensions(_self[_DYN_LOGGER /* @min:%2elogger */], ChannelControllerPriority, _configExtensions);\r\n                _coreExtensions = theExtensions[STR_CORE /* @min:%2ecore */];\r\n                _pluginChain = null;\r\n                // Sort the complete set of extensions by priority\r\n                var allExtensions = theExtensions.all;\r\n                // Initialize the Channel Queues and the channel plugins first\r\n                _channelQueue = objFreeze(createChannelQueues(_channelConfig, allExtensions, _self));\r\n                if (_channelControl) {\r\n                    // During add / remove of a plugin this may get called again, so don't re-add if already present\r\n                    // But we also want the controller as the last, so remove if already present\r\n                    // And reusing the existing instance, just in case an installed plugin has a reference and\r\n                    // is using it.\r\n                    var idx = arrIndexOf(allExtensions, _channelControl);\r\n                    if (idx !== -1) {\r\n                        allExtensions[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    }\r\n                    idx = arrIndexOf(_coreExtensions, _channelControl);\r\n                    if (idx !== -1) {\r\n                        _coreExtensions[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    }\r\n                    _channelControl._setQueue(_channelQueue);\r\n                }\r\n                else {\r\n                    _channelControl = createChannelControllerPlugin(_channelQueue, _self);\r\n                }\r\n                // Add on \"channelController\" as the last \"plugin\"\r\n                allExtensions[_DYN_PUSH /* @min:%2epush */](_channelControl);\r\n                _coreExtensions[_DYN_PUSH /* @min:%2epush */](_channelControl);\r\n                // Required to allow plugins to call core.getPlugin() during their own initialization\r\n                _self[_DYN__EXTENSIONS /* @min:%2e_extensions */] = sortPlugins(allExtensions);\r\n                // Initialize the controls\r\n                _channelControl[_DYN_INITIALIZE /* @min:%2einitialize */](_config, _self, allExtensions);\r\n                initializePlugins(_createTelCtx(), allExtensions);\r\n                // Now reset the extensions to just those being managed by Basecore\r\n                _self[_DYN__EXTENSIONS /* @min:%2e_extensions */] = objFreeze(sortPlugins(_coreExtensions || [])).slice();\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            }\r\n            function _getPlugin(pluginIdentifier) {\r\n                var _a;\r\n                var theExt = null;\r\n                var thePlugin = null;\r\n                arrForEach(_self[_DYN__EXTENSIONS /* @min:%2e_extensions */], function (ext) {\r\n                    if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier && ext !== _channelControl && ext !== _telemetryInitializerPlugin) {\r\n                        thePlugin = ext;\r\n                        return -1;\r\n                    }\r\n                });\r\n                if (!thePlugin && _channelControl) {\r\n                    // Check the channel Controller\r\n                    thePlugin = _channelControl.getChannel(pluginIdentifier);\r\n                }\r\n                if (thePlugin) {\r\n                    theExt = (_a = {\r\n                            plugin: thePlugin\r\n                        },\r\n                        _a[_DYN_SET_ENABLED /* @min:setEnabled */] = function (enabled) {\r\n                            _getPluginState(thePlugin)[STR_DISABLED] = !enabled;\r\n                        },\r\n                        _a.isEnabled = function () {\r\n                            var pluginState = _getPluginState(thePlugin);\r\n                            return !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] && !pluginState[STR_DISABLED];\r\n                        },\r\n                        _a.remove = function (isAsync, removeCb) {\r\n                            var _a;\r\n                            if (isAsync === void 0) { isAsync = true; }\r\n                            var pluginsToRemove = [thePlugin];\r\n                            var unloadState = (_a = {\r\n                                    reason: 1 /* TelemetryUnloadReason.PluginUnload */\r\n                                },\r\n                                _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                                _a);\r\n                            _removePlugins(pluginsToRemove, unloadState, function (removed) {\r\n                                if (removed) {\r\n                                    // Re-Initialize the plugin chain\r\n                                    _initPluginChain({\r\n                                        reason: 32 /* TelemetryUpdateReason.PluginRemoved */,\r\n                                        removed: pluginsToRemove\r\n                                    });\r\n                                }\r\n                                removeCb && removeCb(removed);\r\n                            });\r\n                        },\r\n                        _a);\r\n                }\r\n                return theExt;\r\n            }\r\n            function _getPluginChain() {\r\n                if (!_pluginChain) {\r\n                    // copy the collection of extensions\r\n                    var extensions = (_coreExtensions || []).slice();\r\n                    // During add / remove this may get called again, so don't readd if already present\r\n                    if (arrIndexOf(extensions, _telemetryInitializerPlugin) === -1) {\r\n                        extensions[_DYN_PUSH /* @min:%2epush */](_telemetryInitializerPlugin);\r\n                    }\r\n                    _pluginChain = createTelemetryProxyChain(sortPlugins(extensions), _config, _self);\r\n                }\r\n                return _pluginChain;\r\n            }\r\n            function _removePlugins(thePlugins, unloadState, removeComplete) {\r\n                if (thePlugins && thePlugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var unloadChain = createTelemetryProxyChain(thePlugins, _config, _self);\r\n                    var unloadCtx = createProcessTelemetryUnloadContext(unloadChain, _self);\r\n                    unloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                        var removed = false;\r\n                        // Remove the listed config extensions\r\n                        var newConfigExtensions = [];\r\n                        arrForEach(_configExtensions, function (plugin, idx) {\r\n                            if (!_isPluginPresent(plugin, thePlugins)) {\r\n                                newConfigExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                            }\r\n                            else {\r\n                                removed = true;\r\n                            }\r\n                        });\r\n                        _configExtensions = newConfigExtensions;\r\n                        // Re-Create the channel config\r\n                        var newChannelConfig = [];\r\n                        if (_channelConfig) {\r\n                            arrForEach(_channelConfig, function (queue, idx) {\r\n                                var newQueue = [];\r\n                                arrForEach(queue, function (channel) {\r\n                                    if (!_isPluginPresent(channel, thePlugins)) {\r\n                                        newQueue[_DYN_PUSH /* @min:%2epush */](channel);\r\n                                    }\r\n                                    else {\r\n                                        removed = true;\r\n                                    }\r\n                                });\r\n                                newChannelConfig[_DYN_PUSH /* @min:%2epush */](newQueue);\r\n                            });\r\n                            _channelConfig = newChannelConfig;\r\n                        }\r\n                        removeComplete && removeComplete(removed);\r\n                    });\r\n                    unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                else {\r\n                    removeComplete(false);\r\n                }\r\n            }\r\n            function _flushInternalLogs() {\r\n                var queue = _self[_DYN_LOGGER /* @min:%2elogger */] ? _self[_DYN_LOGGER /* @min:%2elogger */].queue : [];\r\n                if (queue) {\r\n                    arrForEach(queue, function (logMessage) {\r\n                        var _a;\r\n                        var item = (_a = {},\r\n                            _a[_DYN_NAME /* @min:name */] = _internalLogsEventName ? _internalLogsEventName : \"InternalMessageId: \" + logMessage[_DYN_MESSAGE_ID /* @min:%2emessageId */],\r\n                            _a.iKey = getCfgValue(_config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */]),\r\n                            _a.time = toISOString(new Date()),\r\n                            _a.baseType = _InternalLogMessage.dataType,\r\n                            _a.baseData = { message: logMessage[_DYN_MESSAGE /* @min:%2emessage */] },\r\n                            _a);\r\n                        _self.track(item);\r\n                    });\r\n                    queue[_DYN_LENGTH /* @min:%2elength */] = 0;\r\n                }\r\n            }\r\n            function _flushChannels(isAsync, callBack, sendReason, cbTimeout) {\r\n                if (_channelControl) {\r\n                    return _channelControl[_DYN_FLUSH /* @min:%2eflush */](isAsync, callBack, sendReason || 6 /* SendRequestReason.SdkUnload */, cbTimeout);\r\n                }\r\n                callBack && callBack(false);\r\n                return true;\r\n            }\r\n            function _initDebugListener() {\r\n                var disableDbgExt = getCfgValue(_config.disableDbgExt);\r\n                if (disableDbgExt === true && _debugListener) {\r\n                    // Remove any previously loaded debug listener\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_2 /* @min:%2eremoveNotificationListener */](_debugListener);\r\n                    _debugListener = null;\r\n                }\r\n                if (_notificationManager && !_debugListener && disableDbgExt !== true) {\r\n                    _debugListener = getDebugListener(_config);\r\n                    _notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](_debugListener);\r\n                }\r\n            }\r\n            function _initPerfManager() {\r\n                var enablePerfMgr = getCfgValue(_config.enablePerfMgr);\r\n                if (!enablePerfMgr && _cfgPerfManager) {\r\n                    // Remove any existing config based performance manager\r\n                    _cfgPerfManager = null;\r\n                }\r\n                if (enablePerfMgr) {\r\n                    // Set the performance manager creation function if not defined\r\n                    getSetValue(_config, STR_CREATE_PERF_MGR, _createPerfManager);\r\n                }\r\n            }\r\n            function _initExtConfig() {\r\n                var extConfig = getSetValue(_config, STR_EXTENSION_CONFIG, {});\r\n                extConfig.NotificationManager = _notificationManager;\r\n            }\r\n            function _doUpdate(updateState) {\r\n                var updateCtx = createProcessTelemetryUpdateContext(_getPluginChain(), _self);\r\n                if (!_self._updateHook || _self._updateHook(updateCtx, updateState) !== true) {\r\n                    updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n                }\r\n            }\r\n            function _logOrThrowError(message) {\r\n                var logger = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                if (logger) {\r\n                    // there should always be a logger\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, message);\r\n                }\r\n                else {\r\n                    throwError(message);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for BaseCore.prototype.initialize.\r\n// Removed Stub for BaseCore.prototype.getTransmissionControls.\r\n// Removed Stub for BaseCore.prototype.track.\r\n// Removed Stub for BaseCore.prototype.getProcessTelContext.\r\n// Removed Stub for BaseCore.prototype.getNotifyMgr.\r\n// Removed Stub for BaseCore.prototype.addNotificationListener.\r\n// Removed Stub for BaseCore.prototype.removeNotificationListener.\r\n// Removed Stub for BaseCore.prototype.getCookieMgr.\r\n// Removed Stub for BaseCore.prototype.setCookieMgr.\r\n// Removed Stub for BaseCore.prototype.getPerfMgr.\r\n// Removed Stub for BaseCore.prototype.setPerfMgr.\r\n// Removed Stub for BaseCore.prototype.eventCnt.\r\n// Removed Stub for BaseCore.prototype.pollInternalLogs.\r\n// Removed Stub for BaseCore.prototype.stopPollingInternalLogs.\r\n// Removed Stub for BaseCore.prototype.addTelemetryInitializer.\r\n// Removed Stub for BaseCore.prototype.unload.\r\n// Removed Stub for BaseCore.prototype.getPlugin.\r\n// Removed Stub for BaseCore.prototype.addPlugin.\r\n// Removed Stub for BaseCore.prototype.evtNamespace.\r\n// Removed Stub for BaseCore.prototype.addUnloadCb.\r\n// Removed Stub for BaseCore.prototype.flush.\r\n// Removed Stub for BaseCore.prototype.getTraceCtx.\r\n// Removed Stub for BaseCore.prototype.setTraceCtx.\r\n// Removed Stub for BaseCore.prototype.releaseQueue.\r\n// Removed Stub for BaseCore.prototype._updateHook.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    BaseCore.__ieDyn=1;\n\n    return BaseCore;\r\n}());\r\nexport { BaseCore };\r\n//# sourceMappingURL=BaseCore.js.map","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Constants.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez(hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nexport var COMMON_SCHEMA_VER = \"2.1\";\r\nexport var MSCONTENT_PARTB_VERSION = \"1.0\";\r\nexport var CONTENT_VERSION = \"2.0\";\r\nexport var MAX_CONTENTNAME_LENGTH = 200;\r\nexport var IS_SENSITIVE_FLAG = 0x080000;\r\nexport var APPID_PREFIX = \"JS:\";\r\n//# sourceMappingURL=Constants.js.map","import{__awaiter as i}from\"../../../../node_modules/.pnpm/@rollup_plugin-typescript@11.1.6_rollup@4.24.0_tslib@2.6.3_typescript@4.9.5/node_modules/tslib/tslib.es6.js\";import{validOriginsCdnEndpoint as t,validOriginsFallback as r}from\"./constants.js\";import{GlobalVars as n}from\"./globalVars.js\";import{getLogger as s}from\"./telemetry.js\";import{inServerSideRenderingEnvironment as o,isValidHttpsURL as e}from\"./utils.js\";let l=[];const a=s(\"validateOrigin\");function u(){return i(this,void 0,void 0,(function*(){yield d()}))}function d(){return i(this,void 0,void 0,(function*(){return 0!==l.length?l:o()?(l=r,r):fetch(t).then((i=>{if(!i.ok)throw new Error(\"Invalid Response from Fetch Call\");return i.json().then((i=>{if(function(i){let t=JSON.parse(i);try{t=JSON.parse(i)}catch(i){return!1}if(!t.validOrigins)return!1;for(const i of t.validOrigins)try{new URL(\"https://\"+i)}catch(t){return a(\"isValidOriginsFromCDN call failed to validate origin: %s\",i),!1}return!0}(JSON.stringify(i)))return l=i.validOrigins,l;throw new Error(\"Valid Origins List Is Invalid\")}))})).catch((i=>(a(\"validOrigins fetch call to CDN failed with error: %s. Defaulting to fallback list\",i),l=r,l)))}))}function c(i,t){if(\"*.\"===i.substring(0,2)){const r=i.substring(1);if(t.length>r.length&&t.split(\".\").length===r.split(\".\").length&&t.substring(t.length-r.length)===r)return!0}else if(i===t)return!0;return!1}function f(i){return d().then((t=>{if(!e(i))return a(\"Origin %s is invalid because it is not using https protocol. Protocol being used: %s\",i,i.protocol),!1;const r=i.host;if(t.some((i=>c(i,r))))return!0;for(const i of n.additionalValidOrigins){if(c(\"https://\"===i.substring(0,8)?i.substring(8):i,r))return!0}return a(\"Origin %s is invalid because it is not an origin approved by this library or included in the call to app.initialize.\\nOrigins approved by this library: %o\\nOrigins included in app.initialize: %o\",i,t,n.additionalValidOrigins),!1}))}export{u as prefetchOriginsFromCDN,f as validateOrigin};\n","/*\n * 1DS JS SDK Properties plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* User.ts\r\n* @author Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2019\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { getCookieValue, getISOString, isUndefined, newId, objDefineAccessors, safeGetCookieMgr } from \"@microsoft/1ds-core-js\";\r\nvar strSetLocalId = \"setLocalId\";\r\nfunction _getLocalId() {\r\n    return this.getLocalId();\r\n}\r\nfunction _setLocalId(value) {\r\n    this[strSetLocalId](value);\r\n}\r\nvar User = /** @class */ (function () {\r\n    function User(coreConfig, propertiesConfig, core) {\r\n        var _propertiesConfig = propertiesConfig;\r\n        var _customLocalId;\r\n        var _cookieMgr = safeGetCookieMgr(core, coreConfig);\r\n        dynamicProto(User, this, function (_self) {\r\n            // Add MUID in user localId\r\n            if (_cookieMgr && _cookieMgr.isEnabled()) {\r\n                _populateMuidFromCookie();\r\n                if (_propertiesConfig.enableApplicationInsightsUser) {\r\n                    // get userId or create new one if none exists\r\n                    var aiUser = getCookieValue(_cookieMgr, User.userCookieName);\r\n                    if (aiUser) {\r\n                        var params = aiUser.split(User.cookieSeparator);\r\n                        if (params.length > 0) {\r\n                            _self.id = params[0];\r\n                        }\r\n                    }\r\n                    if (!_self.id) {\r\n                        _self.id = newId((coreConfig && !isUndefined(coreConfig.idLength)) ? coreConfig.idLength : 22);\r\n                        var acqStr = getISOString(new Date());\r\n                        _self.accountAcquisitionDate = acqStr;\r\n                        // without expiration, cookies expire at the end of the session\r\n                        // set it to 365 days from now\r\n                        // 365 * 24 * 60 * 60 * 1000 = 31536000\r\n                        var newCookie = [_self.id, acqStr];\r\n                        var cookieDomain = _propertiesConfig.cookieDomain ? _propertiesConfig.cookieDomain : undefined;\r\n                        _cookieMgr.set(User.userCookieName, newCookie.join(User.cookieSeparator), 31536000, cookieDomain);\r\n                    }\r\n                }\r\n            }\r\n            // Add user language\r\n            if (typeof navigator !== \"undefined\") {\r\n                var nav = navigator;\r\n                _self.locale = nav.userLanguage || nav.language;\r\n            }\r\n            _self.getLocalId = function () {\r\n                if (_customLocalId) {\r\n                    return _customLocalId;\r\n                }\r\n                return _populateMuidFromCookie();\r\n            };\r\n            _self[strSetLocalId] = function (value) {\r\n                _customLocalId = value;\r\n            };\r\n            function _populateMuidFromCookie() {\r\n                // Only add default local ID is hash or drop config are not enabled\r\n                if (!_propertiesConfig.hashIdentifiers && !_propertiesConfig.dropIdentifiers) {\r\n                    var muidValue = getCookieValue(_cookieMgr, \"MUID\");\r\n                    if (muidValue) {\r\n                        _customLocalId = \"t:\" + muidValue;\r\n                    }\r\n                }\r\n                return _customLocalId;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for User.prototype.getLocalId.\r\n// Removed Stub for User.prototype.setLocalId.\r\n    User.cookieSeparator = \"|\";\r\n    User.userCookieName = \"ai_user\";\r\n    /**\r\n     * Static constructor, attempt to create accessors\r\n     */\r\n    User._staticInit = (function () {\r\n        // Dynamically create get/set property accessors\r\n        objDefineAccessors(User.prototype, \"localId\", _getLocalId, _setLocalId);\r\n    })();\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getGlobalInst } from \"./EnvUtils\";\r\nvar listenerFuncs = [\"eventsSent\", \"eventsDiscarded\", \"eventsSendRequest\", \"perfEvent\"];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getGlobalInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/*\n * 1DS JS SDK POST plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* EventBatch.ts\r\n* @author Nev Wylie (newylie)\r\n* @copyright Microsoft 2020\r\n*/\r\nimport { isNullOrUndefined, isValueAssigned } from \"@microsoft/1ds-core-js\";\r\nimport { STR_EMPTY, STR_MSFPC } from \"./InternalConstants\";\r\nfunction _getEventMsfpc(theEvent) {\r\n    var intWeb = ((theEvent.ext || {})[\"intweb\"]);\r\n    if (intWeb && isValueAssigned(intWeb[STR_MSFPC])) {\r\n        return intWeb[STR_MSFPC];\r\n    }\r\n    return null;\r\n}\r\nfunction _getMsfpc(theEvents) {\r\n    var msfpc = null;\r\n    for (var lp = 0; msfpc === null && lp < theEvents.length; lp++) {\r\n        msfpc = _getEventMsfpc(theEvents[lp]);\r\n    }\r\n    return msfpc;\r\n}\r\n/**\r\n* This class defines a \"batch\" events related to a specific iKey, it is used by the PostChannel and HttpManager\r\n* to collect and transfer ownership of events without duplicating them in-memory. This reduces the previous\r\n* array duplication and shared ownership issues that occurred due to race conditions caused by the async nature\r\n* of sending requests.\r\n*/\r\nvar EventBatch = /** @class */ (function () {\r\n    /**\r\n     * Private constructor so that caller is forced to use the static create method.\r\n     * @param iKey - The iKey to associate with the events (not validated)\r\n     * @param addEvents - The optional collection of events to assign to this batch - defaults to an empty array.\r\n     */\r\n    function EventBatch(iKey, addEvents) {\r\n        var events = addEvents ? [].concat(addEvents) : [];\r\n        var _self = this;\r\n        var _msfpc = _getMsfpc(events);\r\n        _self.iKey = function () {\r\n            return iKey;\r\n        };\r\n        _self.Msfpc = function () {\r\n            // return the cached value unless it's undefined -- used to avoid cpu\r\n            return _msfpc || STR_EMPTY;\r\n        };\r\n        _self.count = function () {\r\n            return events.length;\r\n        };\r\n        _self.events = function () {\r\n            return events;\r\n        };\r\n        _self.addEvent = function (theEvent) {\r\n            if (theEvent) {\r\n                events.push(theEvent);\r\n                if (!_msfpc) {\r\n                    // Not found so try and find one\r\n                    _msfpc = _getEventMsfpc(theEvent);\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        _self.split = function (fromEvent, numEvents) {\r\n            // Create a new batch with the same iKey\r\n            var theEvents;\r\n            if (fromEvent < events.length) {\r\n                var cnt = events.length - fromEvent;\r\n                if (!isNullOrUndefined(numEvents)) {\r\n                    cnt = numEvents < cnt ? numEvents : cnt;\r\n                }\r\n                theEvents = events.splice(fromEvent, cnt);\r\n                // reset the fetched msfpc value\r\n                _msfpc = _getMsfpc(events);\r\n            }\r\n            return new EventBatch(iKey, theEvents);\r\n        };\r\n    }\r\n    /**\r\n     * Creates a new Event Batch object\r\n     * @param iKey The iKey associated with this batch of events\r\n     */\r\n    EventBatch.create = function (iKey, theEvents) {\r\n        return new EventBatch(iKey, theEvents);\r\n    };\r\n    return EventBatch;\r\n}());\r\nexport { EventBatch };\r\n//# sourceMappingURL=EventBatch.js.map","var e=\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{};export{e as default};\n","/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { objCreateFn, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SET_ENABLED, _DYN_SUBSTR, _DYN_SUBSTRING } from \"../__DynamicConstants\";\r\nimport { _gblCookieMgr } from \"./CookieMgr\";\r\nimport { getPerformance, isIE } from \"./EnvUtils\";\r\nimport { addEventHandler, attachEvent, detachEvent } from \"./EventHelpers\";\r\nimport { arrForEach, arrIndexOf, arrMap, arrReduce, dateNow, hasOwnProperty, isArray, isBoolean, isDate, isError, isFunction, isNullOrUndefined, isNumber, isObject, isString, isTypeof, isUndefined, objDefineAccessors, objKeys, strTrim, toISOString } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { mwcRandom32, mwcRandomSeed, newId, random32, randomValue } from \"./RandomHelper\";\r\nvar _cookieMgrs = null;\r\nvar _canUseCookies; // legacy supported config\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return uuid[_DYN_SUBSTRING /* @min:%2esubstring */](0, 8) + \"-\" + uuid[_DYN_SUBSTRING /* @min:%2esubstring */](8, 12) + \"-\" + uuid[_DYN_SUBSTRING /* @min:%2esubstring */](12, 16) + \"-\" + uuid[_DYN_SUBSTRING /* @min:%2esubstring */](16, 20) + \"-\" + uuid[_DYN_SUBSTRING /* @min:%2esubstring */](20);\r\n}\r\n/**\r\n * Return the current value of the Performance Api now() function (if available) and fallback to dateNow() if it is unavailable (IE9 or less)\r\n * https://caniuse.com/#search=performance.now\r\n */\r\nexport function perfNow() {\r\n    var perf = getPerformance();\r\n    if (perf && perf.now) {\r\n        return perf.now();\r\n    }\r\n    return dateNow();\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return value[_DYN_SUBSTRING /* @min:%2esubstring */](start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return oct[_DYN_SUBSTR /* @min:%2esubstr */](0, 8) + oct[_DYN_SUBSTR /* @min:%2esubstr */](9, 4) + \"4\" + oct[_DYN_SUBSTR /* @min:%2esubstr */](13, 3) + clockSequenceHi + oct[_DYN_SUBSTR /* @min:%2esubstr */](16, 3) + oct[_DYN_SUBSTR /* @min:%2esubstr */](19, 12);\r\n}\r\n/**\r\n * Provides a collection of utility functions, included for backward compatibility with previous releases.\r\n * @deprecated Marking this instance as deprecated in favor of direct usage of the helper functions\r\n * as direct usage provides better tree-shaking and minification by avoiding the inclusion of the unused items\r\n * in your resulting code.\r\n */\r\nexport var CoreUtils = {\r\n    _canUseCookies: undefined,\r\n    isTypeof: isTypeof,\r\n    isUndefined: isUndefined,\r\n    isNullOrUndefined: isNullOrUndefined,\r\n    hasOwnProperty: hasOwnProperty,\r\n    isFunction: isFunction,\r\n    isObject: isObject,\r\n    isDate: isDate,\r\n    isArray: isArray,\r\n    isError: isError,\r\n    isString: isString,\r\n    isNumber: isNumber,\r\n    isBoolean: isBoolean,\r\n    toISOString: toISOString,\r\n    arrForEach: arrForEach,\r\n    arrIndexOf: arrIndexOf,\r\n    arrMap: arrMap,\r\n    arrReduce: arrReduce,\r\n    strTrim: strTrim,\r\n    objCreate: objCreateFn,\r\n    objKeys: objKeys,\r\n    objDefineAccessors: objDefineAccessors,\r\n    addEventHandler: addEventHandler,\r\n    dateNow: dateNow,\r\n    isIE: isIE,\r\n    disableCookies: disableCookies,\r\n    newGuid: newGuid,\r\n    perfNow: perfNow,\r\n    newId: newId,\r\n    randomValue: randomValue,\r\n    random32: random32,\r\n    mwcRandomSeed: mwcRandomSeed,\r\n    mwcRandom32: mwcRandom32,\r\n    generateW3CId: generateW3CId\r\n};\r\nvar GuidRegex = /[xy]/g;\r\nexport var EventHelper = {\r\n    Attach: attachEvent,\r\n    AttachEvent: attachEvent,\r\n    Detach: detachEvent,\r\n    DetachEvent: detachEvent\r\n};\r\n/**\r\n * Helper to support backward compatibility for users that use the legacy cookie handling functions and the use the internal\r\n * CoreUtils._canUseCookies global flag to enable/disable cookies usage.\r\n * Note: This has the following deliberate side-effects\r\n * - Creates the global (legacy) cookie manager if it does not already exist\r\n * - Attempts to add \"listeners\" to the CoreUtils._canUseCookies property to support the legacy usage\r\n * @param config\r\n * @param logger\r\n * @returns\r\n */\r\nexport function _legacyCookieMgr(config, logger) {\r\n    var cookieMgr = _gblCookieMgr(config, logger);\r\n    var legacyCanUseCookies = CoreUtils._canUseCookies;\r\n    if (_cookieMgrs === null) {\r\n        _cookieMgrs = [];\r\n        _canUseCookies = legacyCanUseCookies;\r\n        // Dynamically create get/set property accessors for backward compatibility for enabling / disabling cookies\r\n        // this WILL NOT work for ES3 browsers (< IE8)\r\n        objDefineAccessors(CoreUtils, \"_canUseCookies\", function () {\r\n            return _canUseCookies;\r\n        }, function (value) {\r\n            _canUseCookies = value;\r\n            arrForEach(_cookieMgrs, function (mgr) {\r\n                mgr[_DYN_SET_ENABLED /* @min:%2esetEnabled */](value);\r\n            });\r\n        });\r\n    }\r\n    if (arrIndexOf(_cookieMgrs, cookieMgr) === -1) {\r\n        _cookieMgrs[_DYN_PUSH /* @min:%2epush */](cookieMgr);\r\n    }\r\n    if (isBoolean(legacyCanUseCookies)) {\r\n        cookieMgr[_DYN_SET_ENABLED /* @min:%2esetEnabled */](legacyCanUseCookies);\r\n    }\r\n    if (isBoolean(_canUseCookies)) {\r\n        cookieMgr[_DYN_SET_ENABLED /* @min:%2esetEnabled */](_canUseCookies);\r\n    }\r\n    return cookieMgr;\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().disable()\r\n * Force the SDK not to store and read any data from cookies.\r\n */\r\nexport function disableCookies() {\r\n    _legacyCookieMgr()[_DYN_SET_ENABLED /* @min:%2esetEnabled */](false);\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().isEnabled()\r\n * Helper method to tell if document.cookie object is available and whether it can be used.\r\n */\r\nexport function canUseCookies(logger) {\r\n    return _legacyCookieMgr(null, logger).isEnabled();\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().get()\r\n * helper method to access userId and sessionId cookie\r\n */\r\nexport function getCookie(logger, name) {\r\n    return _legacyCookieMgr(null, logger).get(name);\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().set()\r\n * helper method to set userId and sessionId cookie\r\n */\r\nexport function setCookie(logger, name, value, domain) {\r\n    _legacyCookieMgr(null, logger).set(name, value, null, domain);\r\n}\r\n/**\r\n * @deprecated - Use the core.getCookieMgr().del()\r\n * Deletes a cookie by setting it's expiration time in the past.\r\n * @param name - The name of the cookie to delete.\r\n */\r\nexport function deleteCookie(logger, name) {\r\n    return _legacyCookieMgr(null, logger).del(name);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","import{__require as e}from\"../../../../ms@2.1.2/node_modules/ms/index.js\";var n,t;function r(){if(t)return n;return t=1,n=function(n){function t(e){let n,s,o,a=null;function i(...e){if(!i.enabled)return;const r=i,s=Number(new Date),o=s-(n||s);r.diff=o,r.prev=n,r.curr=s,n=s,e[0]=t.coerce(e[0]),\"string\"!=typeof e[0]&&e.unshift(\"%O\");let a=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((n,s)=>{if(\"%%\"===n)return\"%\";a++;const o=t.formatters[s];if(\"function\"==typeof o){const t=e[a];n=o.call(r,t),e.splice(a,1),a--}return n})),t.formatArgs.call(r,e);(r.log||t.log).apply(r,e)}return i.namespace=e,i.useColors=t.useColors(),i.color=t.selectColor(e),i.extend=r,i.destroy=t.destroy,Object.defineProperty(i,\"enabled\",{enumerable:!0,configurable:!1,get:()=>null!==a?a:(s!==t.namespaces&&(s=t.namespaces,o=t.enabled(e)),o),set:e=>{a=e}}),\"function\"==typeof t.init&&t.init(i),i}function r(e,n){const r=t(this.namespace+(void 0===n?\":\":n)+e);return r.log=this.log,r}function s(e){return e.toString().substring(2,e.toString().length-2).replace(/\\.\\*\\?$/,\"*\")}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names.map(s),...t.skips.map(s).map((e=>\"-\"+e))].join(\",\");return t.enable(\"\"),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const r=(\"string\"==typeof e?e:\"\").split(/[\\s,]+/),s=r.length;for(n=0;n<s;n++)r[n]&&(\"-\"===(e=r[n].replace(/\\*/g,\".*?\"))[0]?t.skips.push(new RegExp(\"^\"+e.slice(1)+\"$\")):t.names.push(new RegExp(\"^\"+e+\"$\")))},t.enabled=function(e){if(\"*\"===e[e.length-1])return!0;let n,r;for(n=0,r=t.skips.length;n<r;n++)if(t.skips[n].test(e))return!1;for(n=0,r=t.names.length;n<r;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=e(),t.destroy=function(){console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\")},Object.keys(n).forEach((e=>{t[e]=n[e]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}}export{r as __require};\n","/*\n * 1DS JS SDK Web Analytics plugin, 3.2.10\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* webEvents.ts\r\n* @author Ram Thiru (ramthi) and Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport * as DataCollector from \"../DataCollector\";\r\nimport { cookieAvailable, extend, getLocation, isArray, isValueAssigned, isWindowObjectAvailable, objForEachKey } from \"@microsoft/1ds-core-js\";\r\nimport { Behavior } from \"../Behaviors\";\r\nimport { MSCONTENT_PARTB_VERSION } from \"../common/Constants\";\r\nimport { _bracketIt } from \"../common/Utils\";\r\n/**\r\n* Get the specified metadata value from the collection\r\n* If overrideValue is specified in the config that takes precedence.\r\n* @param metaTags - Meta data.\r\n* @param awaTags - Coredata values from configuration.\r\n* @param metaTagName - Name of the metaTag to get.\r\n* @returns Meta data value\r\n*/\r\nfunction _getMetaData(metaTags, coreData, metaTagName) {\r\n    var value = \"\";\r\n    if (coreData && coreData[metaTagName]) {\r\n        value = coreData[metaTagName];\r\n    }\r\n    else if (metaTags) {\r\n        value = metaTags[metaTagName];\r\n    }\r\n    return value;\r\n}\r\nvar WebEvent = /** @class */ (function () {\r\n    /**\r\n   * @param webAnalyticsPlugin - Web Analytics plugin instance\r\n   * @param config - WebAnalytics configuration object\r\n   * @param contentHandler - Content handler\r\n   * @param id - Id object\r\n   * @param pageTagsCallback - callback methods to get pageTags value\r\n   * @param metaTags - Meta tags\r\n   * @param traceLogger - Trace logger to log to console.\r\n   */\r\n    function WebEvent(_webAnalyticsPlugin, _config, _contentHandler, _id, _pageTagsCallback, metaTags, _traceLogger) {\r\n        this._webAnalyticsPlugin = _webAnalyticsPlugin;\r\n        this._config = _config;\r\n        this._contentHandler = _contentHandler;\r\n        this._id = _id;\r\n        this._pageTagsCallback = _pageTagsCallback;\r\n        this.metaTags = metaTags;\r\n        this._traceLogger = _traceLogger;\r\n        this._pageTags = {};\r\n    }\r\n    WebEvent.prototype._setBasicProperties = function (event, overrideValues) {\r\n        // Fill common PartB fields\r\n        event.ver = MSCONTENT_PARTB_VERSION;\r\n        event.id = this._id.getLastPageViewId();\r\n        if (!isValueAssigned(event.name)) {\r\n            event.name = DataCollector._getPageName(this._config, overrideValues);\r\n        }\r\n        if (!isValueAssigned(event.uri) && isWindowObjectAvailable) {\r\n            event.uri = DataCollector._getUri(this._config, getLocation());\r\n        }\r\n    };\r\n    /**\r\n    * Sets common properties for events that are based on the WebEvent schema.\r\n    * @param event - The event\r\n    */\r\n    WebEvent.prototype._setCommonProperties = function (event, eventProperties, overrideValues) {\r\n        var _self = this;\r\n        _self._setBasicProperties(event, overrideValues);\r\n        _self._setPageTags(event, overrideValues);\r\n        // extract specific meta tags out of the pageTags.metaTags collection.  These will go into assigned first class fields in the event.\r\n        // the rest will go into pageTags.metaTags collection as is.\r\n        _self._pageTypeMetaTag = _getMetaData(_self.metaTags, _self._config.coreData, \"pageType\");\r\n        _self._marketMetaTag = _getMetaData(_self.metaTags, _self._config.coreData, \"market\");\r\n        _self._behaviorMetaTag = _getMetaData(_self.metaTags, _self._config.coreData, \"behavior\");\r\n        if (isValueAssigned(overrideValues.pageType)) {\r\n            event.pageType = overrideValues.pageType;\r\n        }\r\n        // Only assign if not overriden and meta data is available\r\n        if (isValueAssigned(_self._pageTypeMetaTag) && !isValueAssigned(event.pageType)) {\r\n            event.pageType = _self._pageTypeMetaTag;\r\n        }\r\n        if (isValueAssigned(_self._marketMetaTag)) {\r\n            event.market = _self._marketMetaTag;\r\n        }\r\n        event.isLoggedIn = DataCollector._getSignedInStatus(_self._config);\r\n        // Fill common PartC fields\r\n        eventProperties.cookieEnabled = cookieAvailable();\r\n    };\r\n    /**\r\n    * Sets pageTags.\r\n    * @param event - The event\r\n    */\r\n    WebEvent.prototype._setPageTags = function (event, overrideValues) {\r\n        var _self = this;\r\n        _self._pageTags = {};\r\n        // Use DOM meta data first and then apply overrides\r\n        if (_self.metaTags) {\r\n            _self._pageTags.metaTags = _self._pageTags.metaTags || {};\r\n            // Remove not supported meta data in pageTags.metaTags\r\n            objForEachKey(_self.metaTags, function (metaTag, value) {\r\n                if (metaTag !== \"behavior\" && metaTag !== \"market\" && metaTag !== \"pageType\") {\r\n                    _self._pageTags.metaTags[metaTag] = value;\r\n                }\r\n            });\r\n        }\r\n        // Prepare the pageTags object that is mostly the same for all events.  Event specific pageTags will be added inside event constructors.\r\n        if (_self._config.coreData && _self._config.coreData.pageTags) {\r\n            _self._pageTags = extend(true, _self._pageTags, _self._config.coreData.pageTags);\r\n        }\r\n        if (_self._pageTagsCallback) {\r\n            _self._pageTags = extend(true, _self._pageTags, _self._pageTagsCallback());\r\n        }\r\n        if (isValueAssigned(overrideValues.pageTags)) {\r\n            _self._pageTags = extend(true, _self._pageTags, overrideValues.pageTags);\r\n        }\r\n        // All metadata tags that must be saved as properties have been extracted at this point.  Assign pageTags as is.\r\n        event.properties = event.properties || {};\r\n        event.properties[\"pageTags\"] = _self._pageTags;\r\n    };\r\n    WebEvent.prototype._getBehavior = function (overrideValues) {\r\n        var behavior;\r\n        // If override specified\r\n        if (overrideValues && isValueAssigned(overrideValues.behavior)) {\r\n            behavior = overrideValues.behavior;\r\n        }\r\n        else if (isValueAssigned(this._behaviorMetaTag)) {\r\n            behavior = this._behaviorMetaTag;\r\n        }\r\n        return this._getValidBehavior(behavior);\r\n    };\r\n    WebEvent.prototype._getValidBehavior = function (behavior) {\r\n        if (isValueAssigned(behavior)) {\r\n            var result = void 0;\r\n            var value = parseInt(behavior);\r\n            if (!isNaN(value)) {\r\n                result = value;\r\n            }\r\n            else {\r\n                result = Behavior[behavior];\r\n            }\r\n            if (result in Behavior) {\r\n                return result;\r\n            }\r\n        }\r\n        return 0; /*UNDEFINED*/\r\n    };\r\n    WebEvent.prototype._getContentFormatted = function (content) {\r\n        if (isValueAssigned(content)) {\r\n            if (isArray(content)) {\r\n                return JSON.stringify(content);\r\n            }\r\n            else {\r\n                return _bracketIt(JSON.stringify(content));\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    return WebEvent;\r\n}());\r\nexport { WebEvent };\r\n//# sourceMappingURL=WebEvent.js.map"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnvjplpZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxpptpxhiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3HA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrzdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxtCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACthzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClrEA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrPA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3FA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChhpzMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnvGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7KA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChlLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClnvzGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtlQA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClDA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxrBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpjjhDA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACh5BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClleA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChnbzgBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrvRA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChzhGA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/CA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3FA;AAAA;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClsourceRoot":""}