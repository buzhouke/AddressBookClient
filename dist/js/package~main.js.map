{"version":3,"file":"dist/js/package~main.js","sources":["webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/dialog.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/checkbox.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/label.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/modal.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/choice-group-option.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/icon-button.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/breadcrumb.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/search-box.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/command-bar.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/date-picker.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/teams-shadow-levels.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams-palette.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/toggle.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/default-button.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/details-list.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/people-picker.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/message-bar.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/search-well.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/suggestion.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/teams-styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/tooltip-host.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/callout.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/icon.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/scrollable-pane.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/tooltip.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/action-button.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/persona.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/document-card.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/combo-box.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/pivot.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/shimmer.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/constants.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/contextual-menu.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/text-field.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/panel.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/primary-button.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/teaching-bubble.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/dropdown.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/compound-button.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/styles/command-bar-button.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams-customizations.ts"],"sourcesContent":["/* istanbul ignore file */\r\n\r\nimport { IDialogContentStyles, IDialogFooterStyles, FontWeights, IRawStyle, ITheme } from '@fluentui/react';\r\n\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme } from '../teams-theme';\r\n\r\nexport const getDialogContentStyles = (themeName: string, theme: ITheme): Partial<IDialogContentStyles> => {\r\n    const styles = {\r\n        title: {\r\n            fontSize: FontSizes.size18,\r\n            fontWeight: FontWeights.bold,\r\n            padding: '27px 54px 8px 32px',\r\n            lineHeight: FontSizes.size24,\r\n            color: theme.palette.black,\r\n        },\r\n        topButton: {\r\n            padding: '23px 22px 4px 0',\r\n            fontSize: FontSizes.size14,\r\n            selectors: {\r\n                '.ms-Dialog-button': {\r\n                    color: theme.palette.neutralDark,\r\n                },\r\n                '.ms-Dialog-button:hover': {\r\n                    color: theme.palette.themePrimary,\r\n                    backgroundColor: 'transparent',\r\n                    selectors: {\r\n                        i: {\r\n                            fontWeight: FontWeights.bold,\r\n                        },\r\n                    },\r\n                },\r\n                '.ms-Dialog-button:active': {\r\n                    color: theme.palette.themePrimary,\r\n                },\r\n            },\r\n        },\r\n        inner: {\r\n            padding: '1px 32px 32px 32px',\r\n            color: theme.palette.neutralDark,\r\n            selectors: {\r\n                '.ms-Label': {\r\n                    color: theme.palette.neutralDark,\r\n                },\r\n            },\r\n        },\r\n        innerContent: {\r\n            paddingTop: '4px',\r\n            marginBottom: '20px',\r\n            selectors: {\r\n                ':last-child': {\r\n                    marginBottom: 0,\r\n                },\r\n            },\r\n        },\r\n        subText: {\r\n            color: theme.palette.neutralDark,\r\n            fontWeight: FontWeights.regular,\r\n            fontSize: FontSizes.size14,\r\n            lineHeight: FontSizes.size20,\r\n            paddingTop: 0,\r\n        },\r\n    } as Partial<IDialogContentStyles>;\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        ((styles.topButton as Required<IRawStyle>).selectors['.ms-Dialog-button:hover'] as IRawStyle).color =\r\n            theme.palette.themeDark;\r\n        ((styles.topButton as Required<IRawStyle>).selectors['.ms-Dialog-button:active'] as IRawStyle).color =\r\n            theme.palette.themeDark;\r\n\r\n        (styles.inner as IRawStyle).color = theme.palette.black;\r\n        ((styles.inner as Required<IRawStyle>).selectors['.ms-Label'] as IRawStyle).color = theme.palette.black;\r\n    }\r\n    return styles;\r\n};\r\n\r\nexport const getDialogFooterStyles = (_themeName: string, _theme: ITheme): Partial<IDialogFooterStyles> => {\r\n    const styles = {\r\n        actions: {\r\n            margin: '16px 0 0',\r\n        },\r\n    } as Partial<IDialogFooterStyles>;\r\n\r\n    return styles;\r\n};\r\n","/* istanbul ignore file */\r\n\r\nimport { ICheckboxStyleProps, ICheckboxStyles, ITheme, IStyleFunctionOrObject } from '@fluentui/react';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getCheckboxStyles(\r\n    themeName: string,\r\n    _theme: ITheme\r\n): IStyleFunctionOrObject<ICheckboxStyleProps, ICheckboxStyles> {\r\n    return (props: ICheckboxStyleProps): Partial<ICheckboxStyles> => {\r\n        const { disabled, checked, theme } = props;\r\n        const { palette } = theme;\r\n\r\n        let CHECKBOX_BORDER_COLOR = palette.neutralTertiary;\r\n        let CHECKBOX_BORDER_HOVER_COLOR = palette.black;\r\n        let CHECKBOX_MARK_HOVER_COLOR = palette.black;\r\n        const CHECKBOX_LABEL_COLOR = palette.black;\r\n        let CHECKBOX_DISABLED_LABEL_COLOR = palette.neutralTertiary;\r\n\r\n        const CHECKBOX_COLOR = palette.themePrimary;\r\n        const CHECKBOX_CHECKED_HOVER_COLOR = palette.black;\r\n        const CHECKMARK_COLOR = palette.white;\r\n\r\n        if (isContrastTheme(themeName)) {\r\n            CHECKBOX_BORDER_COLOR = 'green';\r\n            CHECKBOX_DISABLED_LABEL_COLOR = 'green';\r\n            CHECKBOX_BORDER_HOVER_COLOR = palette.accent;\r\n            CHECKBOX_MARK_HOVER_COLOR = palette.accent;\r\n        }\r\n\r\n        const styles = {\r\n            input: {\r\n                // Work around for fluentui button focus outline not showing in iOS Safari.\r\n                ':focus-visible + label, .ms-Fabric--isFocusVisible &:focus + label': {\r\n                    '::before': {\r\n                        content: '\"\"',\r\n                        position: 'absolute',\r\n                        inset: 0,\r\n                        outline: `1px solid ${theme.palette.black}`,\r\n                        borderRadius: teamsBorderRadius,\r\n                    },\r\n                },\r\n            },\r\n            checkbox: [\r\n                {\r\n                    borderRadius: 4,\r\n                    height: 17,\r\n                    width: 17,\r\n                },\r\n                !disabled &&\r\n                    !checked && {\r\n                        borderColor: palette.black,\r\n                    },\r\n                disabled && {\r\n                    borderColor: CHECKBOX_BORDER_COLOR,\r\n                },\r\n                checked &&\r\n                    disabled && {\r\n                        background: CHECKBOX_BORDER_COLOR,\r\n                        borderColor: CHECKBOX_BORDER_COLOR,\r\n                    },\r\n                !disabled &&\r\n                    checked && {\r\n                        background: palette.themePrimary,\r\n                    },\r\n            ],\r\n            checkmark: [\r\n                {\r\n                    fontWeight: 'bold',\r\n                    fontSize: FontSizes.size12,\r\n                    border: 'none',\r\n                    background: 'none',\r\n                    color: CHECKMARK_COLOR,\r\n                },\r\n            ],\r\n            root: [\r\n                {\r\n                    color: palette.neutralDark,\r\n                    selectors: {\r\n                        a: {\r\n                            color: 'inherit',\r\n                            selectors: {\r\n                                ':link': {\r\n                                    color: 'inherit',\r\n                                },\r\n                                ':visited': {\r\n                                    color: 'inherit',\r\n                                },\r\n                                ':hover': {\r\n                                    color: 'inherit',\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n                !disabled &&\r\n                    checked && {\r\n                        color: palette.black,\r\n                        selectors: {\r\n                            '.ms-Checkbox-checkbox': {\r\n                                background: CHECKBOX_COLOR,\r\n                                borderColor: CHECKBOX_COLOR,\r\n                            },\r\n                            '.ms-Checkbox-text': {\r\n                                color: CHECKBOX_CHECKED_HOVER_COLOR,\r\n                            },\r\n                            ':hover': {\r\n                                color: palette.black,\r\n                                selectors: {\r\n                                    '.ms-Checkbox-checkbox': {\r\n                                        background: CHECKBOX_COLOR,\r\n                                        borderColor: CHECKBOX_COLOR,\r\n                                    },\r\n                                    '.ms-Checkbox-text': {\r\n                                        color: CHECKBOX_CHECKED_HOVER_COLOR,\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                !disabled &&\r\n                    !checked && {\r\n                        color: palette.neutralDark,\r\n                        selectors: {\r\n                            ':hover': {\r\n                                selectors: {\r\n                                    '.ms-Checkbox-text': {\r\n                                        color: palette.neutralDark,\r\n                                    },\r\n                                    '.ms-Checkbox-checkbox': {\r\n                                        border: `1px solid ${CHECKBOX_BORDER_HOVER_COLOR}`,\r\n                                    },\r\n                                    '.ms-Checkbox-checkmark': {\r\n                                        color: CHECKBOX_MARK_HOVER_COLOR,\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n            ],\r\n            label: [\r\n                {\r\n                    alignItems: 'center',\r\n                },\r\n            ],\r\n            text: [\r\n                disabled && {\r\n                    color: CHECKBOX_DISABLED_LABEL_COLOR,\r\n                },\r\n                !disabled &&\r\n                    checked && {\r\n                        color: CHECKBOX_LABEL_COLOR,\r\n                    },\r\n\r\n                !disabled &&\r\n                    !checked && {\r\n                        color: palette.neutralDark,\r\n                    },\r\n            ],\r\n        } as Partial<ICheckboxStyles>;\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { ILabelStyleProps, ILabelStyles, FontWeights } from '@fluentui/react';\r\n\r\nexport const LabelStyles = (props: ILabelStyleProps): Partial<ILabelStyles> => {\r\n    const { theme, disabled } = props;\r\n    const { palette } = theme;\r\n\r\n    return {\r\n        root: [\r\n            {\r\n                fontWeight: FontWeights.semibold,\r\n                color: palette.black,\r\n                ':after': { color: theme.palette.redDark },\r\n            },\r\n            disabled && {\r\n                opacity: '.65',\r\n            },\r\n        ],\r\n    };\r\n};\r\n","/* istanbul ignore file */\r\n\r\nimport { IModalStyles, ITheme, IRawStyle } from '@fluentui/react';\r\nimport { ShadowLevels } from '../teams-shadow-levels';\r\nimport { CoreColors, ContrastColors, DarkColors } from '../teams-colors';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getModalStyles(themeName: string, theme: ITheme, isMobile?: boolean): Partial<IModalStyles> {\r\n    const MODAL_MIN_WIDTH = isMobile ? undefined : '400px';\r\n    const MODAL_MIN_HEIGHT = '116px';\r\n    const BORDER_WIDTH = '1px';\r\n\r\n    const styles = {\r\n        root: {\r\n            backgroundColor: 'none',\r\n            selectors: {\r\n                '.ms-Overlay--dark': {\r\n                    backgroundColor: CoreColors.overlayBackground,\r\n                },\r\n            },\r\n        },\r\n\r\n        main: {\r\n            backgroundColor: theme.palette.white,\r\n            borderRadius: teamsBorderRadius,\r\n            color: theme.palette.black,\r\n            borderWidth: BORDER_WIDTH,\r\n            borderStyle: 'solid',\r\n            borderColor: CoreColors.appBlackAlpha10,\r\n            boxShadow: ShadowLevels.shadowLevel4,\r\n            minWidth: `${MODAL_MIN_WIDTH} !important`,\r\n            minHeight: `${MODAL_MIN_HEIGHT} !important`,\r\n        },\r\n    } as Partial<IModalStyles>;\r\n\r\n    const iRawStyle = (styles.root as Required<IRawStyle>).selectors['.ms-Overlay--dark'] as IRawStyle;\r\n\r\n    // Dark theme overrides\r\n    if (isDarkTheme(themeName)) {\r\n        if (iRawStyle) {\r\n            iRawStyle.backgroundColor = DarkColors.overlayBackground;\r\n        }\r\n\r\n        (styles.main as IRawStyle).backgroundColor = theme.palette.neutralLight;\r\n        (styles.main as IRawStyle).borderColor = theme.palette.white;\r\n    }\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        if (iRawStyle) {\r\n            iRawStyle.backgroundColor = ContrastColors.overlayBackground;\r\n        }\r\n\r\n        (styles.main as IRawStyle).borderColor = theme.palette.black;\r\n    }\r\n    return styles;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport {\r\n    IChoiceGroupOptionStyleProps,\r\n    IChoiceGroupOptionStyles,\r\n    IStyleFunctionOrObject,\r\n    ITheme,\r\n} from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { isContrastTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getChoiceGroupOptionStyles(\r\n    themeName: string,\r\n    _theme: ITheme\r\n): IStyleFunctionOrObject<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles> {\r\n    return (props: IChoiceGroupOptionStyleProps) => {\r\n        const { disabled, checked, theme } = props;\r\n        const { palette } = theme;\r\n\r\n        let CHOICEGROUPOPTION_BORDER_COLOR = palette.neutralTertiary;\r\n        let CHECKBOX_LABEL_COLOR = palette.neutralTertiary;\r\n\r\n        if (isContrastTheme(themeName)) {\r\n            CHOICEGROUPOPTION_BORDER_COLOR = ContrastColors.appGreenContrast;\r\n            CHECKBOX_LABEL_COLOR = ContrastColors.appGreenContrast;\r\n        }\r\n\r\n        const styles = {\r\n            choiceFieldWrapper: [\r\n                {\r\n                    background: 'transparent',\r\n                    // Work around for fluentui button focus outline not showing in iOS Safari.\r\n                    position: 'relative',\r\n                    ':has(.ms-ChoiceField-input:focus-visible), .ms-Fabric--isFocusVisible &:has(.ms-ChoiceField-input:focus)':\r\n                        {\r\n                            '::after': {\r\n                                border: 'none',\r\n                                content: '\"\"',\r\n                                position: 'absolute',\r\n                                inset: 0,\r\n                                outline: `1px solid ${theme.palette.black}`,\r\n                                borderRadius: teamsBorderRadius,\r\n                            },\r\n                        },\r\n                },\r\n                disabled && {\r\n                    color: CHECKBOX_LABEL_COLOR,\r\n                },\r\n                !disabled &&\r\n                    checked && {\r\n                        color: palette.black,\r\n                    },\r\n\r\n                !disabled &&\r\n                    !checked && {\r\n                        color: palette.neutralDark,\r\n                    },\r\n            ],\r\n            field: [\r\n                {\r\n                    selectors: {\r\n                        '.ms-ChoiceField-field': {\r\n                            color: 'inherit',\r\n                        },\r\n                        '.ms-ChoiceFieldLabel': {\r\n                            color: 'inherit',\r\n                        },\r\n                        ':hover': [\r\n                            !disabled && {\r\n                                selectors: {\r\n                                    ':before': {\r\n                                        borderColor: palette.black,\r\n                                    },\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                },\r\n                !disabled &&\r\n                    !checked && {\r\n                        selectors: {\r\n                            ':before': {\r\n                                borderColor: palette.neutralDark,\r\n                            },\r\n                        },\r\n                    },\r\n                !disabled &&\r\n                    checked && {\r\n                        color: palette.black,\r\n                        selectors: {\r\n                            ':before': {\r\n                                borderColor: palette.themePrimary,\r\n                            },\r\n                            ':after': {\r\n                                borderColor: palette.themePrimary,\r\n                            },\r\n                        },\r\n                    },\r\n                disabled &&\r\n                    !checked && {\r\n                        selectors: {\r\n                            ':before': {\r\n                                borderColor: CHOICEGROUPOPTION_BORDER_COLOR,\r\n                                background: 'transparent',\r\n                            },\r\n                            ':after': {\r\n                                borderColor: CHOICEGROUPOPTION_BORDER_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                disabled &&\r\n                    checked && {\r\n                        selectors: {\r\n                            ':before': {\r\n                                borderColor: CHOICEGROUPOPTION_BORDER_COLOR,\r\n                                background: 'transparent',\r\n                            },\r\n                            ':after': {\r\n                                borderColor: CHOICEGROUPOPTION_BORDER_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n            ],\r\n        } as Partial<IChoiceGroupOptionStyles>;\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IButtonStyles, IRawStyle, ITheme } from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { ShadowLevels } from '../teams-shadow-levels';\r\nimport { isContrastTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getIconButtonStyles(themeName: string, theme: ITheme): Partial<IButtonStyles> {\r\n    const styles = {\r\n        root: {\r\n            background: 'none',\r\n            color: theme.palette.black,\r\n            // Inherits the icon color from root\r\n            '.ms-Icon': {\r\n                color: 'unset',\r\n            },\r\n            // Work around for fluentui button focus outline not showing in iOS Safari.\r\n            ':focus-visible, .ms-Fabric--isFocusVisible &:focus': {\r\n                '::after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    inset: '2px',\r\n                    outline: `1px solid ${theme.palette.black}`,\r\n                    borderRadius: teamsBorderRadius,\r\n                },\r\n            },\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: 'none',\r\n            color: theme.palette.accent,\r\n            boxShadow: 'none',\r\n        },\r\n        rootExpanded: {\r\n            boxShadow: 'none',\r\n        },\r\n        rootPressed: {\r\n            background: 'none',\r\n        },\r\n        rootDisabled: {\r\n            color: isContrastTheme(themeName) ? ContrastColors.appGreenContrast : undefined,\r\n        },\r\n    } as Partial<IButtonStyles>;\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        // Root Hovered\r\n        const rootHovered = styles.rootHovered as IRawStyle;\r\n        rootHovered.backgroundColor = theme.palette.themeDark;\r\n        rootHovered.color = theme.palette.white;\r\n        rootHovered.boxShadow = ShadowLevels.shadowLevel6;\r\n\r\n        // Menu is expanded\r\n        const rootExpanded = styles.rootExpanded as IRawStyle;\r\n        rootExpanded.boxShadow = ShadowLevels.shadowLevel6;\r\n    }\r\n    return styles;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IBreadcrumbStyleProps, ITheme, FontWeights, IBreadcrumbStyles, IStyleFunctionOrObject } from '@fluentui/react';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme } from '../teams-theme';\r\n\r\nexport function getBreadcrumbStyles(\r\n    themeName: string,\r\n    _theme: ITheme\r\n): IStyleFunctionOrObject<IBreadcrumbStyleProps, IBreadcrumbStyles> {\r\n    return (props: IBreadcrumbStyleProps) => {\r\n        const { theme } = props;\r\n        const { palette } = theme;\r\n\r\n        const stateSelectors = {\r\n            ':hover': {\r\n                color: palette.themePrimary,\r\n                textDecoration: 'none',\r\n                backgroundColor: 'none',\r\n            },\r\n            ':active': {\r\n                color: palette.themePrimary,\r\n                backgroundColor: 'none',\r\n                textDecoration: 'none',\r\n            },\r\n            '&:active:hover': {\r\n                color: palette.themePrimary,\r\n                backgroundColor: 'none',\r\n                textDecoration: 'none',\r\n            },\r\n        };\r\n        const styles = {\r\n            root: {\r\n                margin: 0,\r\n                fontSize: FontSizes.size14,\r\n                lineHeight: FontSizes.size20,\r\n                selectors: {\r\n                    '.ms-Breadcrumb-listItem:last-child .ms-Breadcrumb-itemLink': {\r\n                        fontWeight: FontWeights.bold,\r\n                        color: palette.black,\r\n                    },\r\n                    '.ms-Breadcrumb-listItem:last-child .ms-Breadcrumb-item': {\r\n                        fontWeight: FontWeights.bold,\r\n                    },\r\n                },\r\n            },\r\n            item: {\r\n                color: palette.black,\r\n                fontSize: FontSizes.size14,\r\n                lineHeight: '40px',\r\n                height: '40px',\r\n                selectors: {\r\n                    ':last-child': {\r\n                        color: palette.black,\r\n                    },\r\n                },\r\n            },\r\n            listItem: {\r\n                selectors: {\r\n                    ':last-child': {\r\n                        selectors: {\r\n                            '.ms-Breadcrumb-item': {\r\n                                color: palette.black,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            itemLink: {\r\n                fontSize: FontSizes.size14,\r\n                lineHeight: '40px',\r\n                outline: 'none',\r\n                fontWeight: FontWeights.regular,\r\n                color: palette.black,\r\n                height: '40px',\r\n                selectors: {\r\n                    '.ms-Fabric--isFocusVisible &:focus': {\r\n                        // Necessary due to changes of Link component not using getFocusStyle.\r\n                        outline: 'none',\r\n                    },\r\n                    ...stateSelectors,\r\n                },\r\n            },\r\n            chevron: {\r\n                color: palette.neutralDark,\r\n                fontSize: FontSizes.size12,\r\n            },\r\n            overflowButton: {\r\n                color: palette.neutralDark,\r\n                selectors: {\r\n                    ...stateSelectors,\r\n                },\r\n            },\r\n        };\r\n\r\n        // Contrast theme overrides\r\n        if (isContrastTheme(themeName)) {\r\n            stateSelectors['&:active:hover'].color = palette.themeDark;\r\n            stateSelectors[':hover'].color = palette.themeDark;\r\n            stateSelectors[':active'].color = palette.themeDark;\r\n        }\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { ISearchBoxStyleProps, ISearchBoxStyles, ITheme, IPalette, IStyle } from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\ninterface IName {\r\n    FIELD_GROUP_BACKGROUND_COLOR: string;\r\n    FIELD_GROUP_OPACITY: number;\r\n    FIELD_COLOR_PLACEHOLDER_NOT_DISABLED: string;\r\n    FIELD_COLOR_PLACEHOLDER_DISABLED: string;\r\n    FIELD_GROUP_BORDER_WIDTH: string;\r\n    FIELD_GROUP_BORDER_COLOR: string;\r\n    FIELD_GROUP_BORDER_COLOR_DISABLED: string;\r\n    FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE: string;\r\n    FIELD_GROUP_BORDER_WIDTH_ACTIVE: string;\r\n}\r\n\r\nconst getFieldStyle = (palette: IPalette, themeName: string, background?: string): IName => {\r\n    const fieldStyle: IName = {\r\n        FIELD_GROUP_BACKGROUND_COLOR: palette.neutralLight,\r\n        FIELD_GROUP_OPACITY: 0.36,\r\n        FIELD_COLOR_PLACEHOLDER_NOT_DISABLED: palette.neutralDark,\r\n        FIELD_COLOR_PLACEHOLDER_DISABLED: palette.neutralDark,\r\n        FIELD_GROUP_BORDER_WIDTH: '0 0 2px 0',\r\n        FIELD_GROUP_BORDER_COLOR: 'transparent',\r\n        FIELD_GROUP_BORDER_COLOR_DISABLED: 'transparent',\r\n        FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE: palette.themePrimary,\r\n        FIELD_GROUP_BORDER_WIDTH_ACTIVE: '0 0 2px 0',\r\n    };\r\n\r\n    // Dark theme overrides\r\n    if (isDarkTheme(themeName)) {\r\n        fieldStyle.FIELD_GROUP_BACKGROUND_COLOR = palette.white;\r\n        fieldStyle.FIELD_COLOR_PLACEHOLDER_DISABLED = palette.neutralPrimary;\r\n    }\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        fieldStyle.FIELD_GROUP_BACKGROUND_COLOR = palette.white;\r\n        fieldStyle.FIELD_GROUP_OPACITY = 1;\r\n        fieldStyle.FIELD_COLOR_PLACEHOLDER_NOT_DISABLED = palette.black;\r\n        fieldStyle.FIELD_COLOR_PLACEHOLDER_DISABLED = ContrastColors.appGreenContrast;\r\n        fieldStyle.FIELD_GROUP_BORDER_WIDTH = '1px 1px 1px 1px';\r\n        fieldStyle.FIELD_GROUP_BORDER_COLOR = palette.black;\r\n        fieldStyle.FIELD_GROUP_BORDER_COLOR_DISABLED = ContrastColors.appGreenContrast;\r\n        fieldStyle.FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = palette.themeDark;\r\n        fieldStyle.FIELD_GROUP_BORDER_WIDTH_ACTIVE = '1px 1px 2px 1px';\r\n    }\r\n    // If this textfiled is on gray background\r\n    if (background === 'gray') {\r\n        fieldStyle.FIELD_GROUP_BACKGROUND_COLOR = palette.white;\r\n        fieldStyle.FIELD_COLOR_PLACEHOLDER_NOT_DISABLED = palette.neutralPrimaryAlt;\r\n    }\r\n\r\n    return fieldStyle;\r\n};\r\n\r\nconst getClearButton = (fieldStyle: IName): IStyle => ({\r\n    selectors: {\r\n        '.ms-Button': {\r\n            color: fieldStyle.FIELD_COLOR_PLACEHOLDER_NOT_DISABLED,\r\n            selectors: {\r\n                ':hover': {\r\n                    color: fieldStyle.FIELD_COLOR_PLACEHOLDER_NOT_DISABLED,\r\n                },\r\n                ':active': {\r\n                    color: fieldStyle.FIELD_COLOR_PLACEHOLDER_NOT_DISABLED,\r\n                },\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nconst getRoot = (fieldStyle: IName, disabled?: boolean, hasFocus?: boolean): IStyle => [\r\n    {\r\n        background: fieldStyle.FIELD_GROUP_BACKGROUND_COLOR,\r\n        borderRadius: teamsBorderRadius,\r\n        borderWidth: fieldStyle.FIELD_GROUP_BORDER_WIDTH,\r\n        borderStyle: 'Solid',\r\n        borderColor: fieldStyle.FIELD_GROUP_BORDER_COLOR,\r\n        height: 32,\r\n        paddingLeft: 12,\r\n\r\n        selectors: {\r\n            ':hover': {\r\n                borderColor: fieldStyle.FIELD_GROUP_BORDER_COLOR,\r\n            },\r\n            '.ms-SearchBox-field': {\r\n                selectors: {\r\n                    '::placeholder': [\r\n                        !disabled && {\r\n                            color: fieldStyle.FIELD_COLOR_PLACEHOLDER_NOT_DISABLED,\r\n                        },\r\n                        disabled && { color: fieldStyle.FIELD_COLOR_PLACEHOLDER_DISABLED },\r\n                    ],\r\n                    ':-ms-input-placeholder': [\r\n                        !disabled && {\r\n                            color: fieldStyle.FIELD_COLOR_PLACEHOLDER_NOT_DISABLED,\r\n                        },\r\n                        disabled && { color: fieldStyle.FIELD_COLOR_PLACEHOLDER_DISABLED },\r\n                    ],\r\n                },\r\n            },\r\n        },\r\n    },\r\n    disabled && {\r\n        opacity: fieldStyle.FIELD_GROUP_OPACITY,\r\n        borderColor: fieldStyle.FIELD_GROUP_BORDER_COLOR_DISABLED,\r\n    },\r\n    !hasFocus &&\r\n        !disabled && {\r\n            selectors: {\r\n                ':hover': {\r\n                    borderColor: fieldStyle.FIELD_GROUP_BORDER_COLOR,\r\n                },\r\n            },\r\n        },\r\n    hasFocus && getHasFocus(fieldStyle),\r\n];\r\n\r\nconst getHasFocus = (fieldStyle: IName): IStyle => ({\r\n    borderBottomColor: fieldStyle.FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE,\r\n    borderWidth: fieldStyle.FIELD_GROUP_BORDER_WIDTH_ACTIVE,\r\n    // Need 2px border raidus as the border width is 2px.\r\n    borderBottomRightRadius: teamsBorderRadius,\r\n    borderBottomLeftRadius: teamsBorderRadius,\r\n    selectors: {\r\n        ':hover': {\r\n            borderBottomColor: fieldStyle.FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE,\r\n            borderWidth: fieldStyle.FIELD_GROUP_BORDER_WIDTH_ACTIVE,\r\n            // Need 2px border raidus as the border width is 2px.\r\n            borderBottomRightRadius: teamsBorderRadius,\r\n            borderBottomLeftRadius: teamsBorderRadius,\r\n        },\r\n    },\r\n});\r\n\r\nexport function getSearchBoxStyles(themeName: string, _theme: ITheme, background?: string) {\r\n    return (props: ISearchBoxStyleProps): Partial<ISearchBoxStyles> => {\r\n        const { theme, disabled, hasInput, hasFocus } = props;\r\n        const { palette } = theme;\r\n        const fieldStyle = getFieldStyle(palette, themeName, background);\r\n\r\n        const styles = {\r\n            root: getRoot(fieldStyle, disabled, hasFocus),\r\n            field: {\r\n                color: palette.neutralDark,\r\n                height: 30,\r\n                selectors: {},\r\n            },\r\n            iconContainer: [\r\n                {\r\n                    transition: 'none',\r\n                    width: '32px',\r\n                    height: 30,\r\n                    paddingLeft: 1,\r\n                    paddingRight: 1,\r\n                    order: 2,\r\n                },\r\n                hasInput && {\r\n                    display: 'none',\r\n                },\r\n            ],\r\n            clearButton: getClearButton(fieldStyle),\r\n            icon: [\r\n                {\r\n                    opacity: 1,\r\n                    paddingLeft: 4,\r\n                    paddingRight: 4,\r\n                    transform: 'scaleX(-1)',\r\n                },\r\n                !disabled && { color: fieldStyle.FIELD_COLOR_PLACEHOLDER_NOT_DISABLED },\r\n                disabled && { color: fieldStyle.FIELD_COLOR_PLACEHOLDER_DISABLED },\r\n\r\n                hasInput && {\r\n                    display: 'none',\r\n                },\r\n            ],\r\n        } as Partial<ISearchBoxStyles>;\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { ICommandBarStyles, IRawStyle, ITheme } from '@fluentui/react';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme } from '../teams-theme';\r\n\r\nexport function getCommandBarStyles(themeName: string, theme: ITheme): Partial<ICommandBarStyles> {\r\n    const MS_BUTTON_ICON_SIZE = FontSizes.size14;\r\n    const MS_BUTTON_MENU_ICON_SIZE = FontSizes.size12;\r\n    const MS_COMMAND_BAR_OVERFLOW_BUTTON_SIZE = FontSizes.size16;\r\n\r\n    const ROOT_TOP_BORDER = theme.palette.neutralTertiaryAlt;\r\n    const ROOT_BOTTOM_BORDER = theme.palette.neutralTertiaryAlt;\r\n    const BUTTON_COLOR = theme.palette.neutralDark;\r\n\r\n    const COMMANDBAR_HEIGHT = '48px';\r\n    const styles = {\r\n        root: {\r\n            height: COMMANDBAR_HEIGHT,\r\n            paddingLeft: '20px',\r\n            paddingRight: '20px',\r\n            background: 'transparent',\r\n            borderTop: `1px solid ${ROOT_TOP_BORDER}`,\r\n            borderBottom: `1px solid ${ROOT_BOTTOM_BORDER}`,\r\n            selectors: {\r\n                '.icons-filled': {\r\n                    display: 'none',\r\n                },\r\n                '.icons-unfilled': {\r\n                    display: 'block',\r\n                },\r\n                svg: {\r\n                    height: COMMANDBAR_HEIGHT,\r\n                },\r\n                'svg, .icons-default-fill': {\r\n                    fill: BUTTON_COLOR,\r\n                },\r\n                '.ms-Button-menuIcon, .ms-Button-icon': {\r\n                    color: BUTTON_COLOR,\r\n                    fontSize: MS_BUTTON_ICON_SIZE,\r\n                    minWidth: MS_BUTTON_ICON_SIZE,\r\n                    lineHeight: COMMANDBAR_HEIGHT,\r\n                    height: COMMANDBAR_HEIGHT,\r\n                },\r\n                '.ms-Button-menuIcon': {\r\n                    fontSize: MS_BUTTON_MENU_ICON_SIZE,\r\n                    minWidth: MS_BUTTON_MENU_ICON_SIZE,\r\n                    lineHeight: COMMANDBAR_HEIGHT,\r\n                    height: COMMANDBAR_HEIGHT,\r\n                    marginLeft: '6px',\r\n                    marginTop: '1px',\r\n                    selectors: {\r\n                        svg: {\r\n                            width: '20px',\r\n                            height: '38px',\r\n                            margin: '0 -4px',\r\n                        },\r\n                    },\r\n                },\r\n                '.ms-Button--commandBar': {\r\n                    border: '1px solid transparent',\r\n                },\r\n                '.ms-CommandBarItem-link': {\r\n                    textDecoration: 'none',\r\n                    border: '1px solid transparent',\r\n                    color: BUTTON_COLOR,\r\n                },\r\n                'button, a': {\r\n                    marginRight: '16px',\r\n                    minWidth: 'auto',\r\n                },\r\n                button: {\r\n                    height: '100%',\r\n                },\r\n                '.ms-OverflowSet-item:last-child button,  .ms-OverflowSet-item:last-child a': {\r\n                    marginRight: '0',\r\n                },\r\n                'a, a:link, a:visited, a:hover, button, button:active, button:hover': {\r\n                    backgroundColor: 'transparent',\r\n                    color: BUTTON_COLOR,\r\n                },\r\n                'button:hover': {\r\n                    color: theme.palette.themePrimary,\r\n                    selectors: {\r\n                        'svg, .icons-default-fill': {\r\n                            fill: theme.palette.themePrimary,\r\n                        },\r\n                        '.ms-Button-menuIcon, .ms-Button-icon': {\r\n                            fontWeight: 'bold',\r\n                            color: theme.palette.themePrimary,\r\n                            backgroundColor: 'transparent',\r\n                        },\r\n                        '.icons-filled': {\r\n                            display: 'block',\r\n                        },\r\n                        '.icons-unfilled': {\r\n                            display: 'none',\r\n                        },\r\n                    },\r\n                },\r\n                '.ms-Fabric--isFocusVisible &': {\r\n                    selectors: {\r\n                        '.ms-Button:focus': {\r\n                            selectors: {\r\n                                ':after': {\r\n                                    borderColor: theme.palette.white,\r\n                                    outline: `1px solid ${theme.palette.black}`,\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n                '.is-expanded': {\r\n                    color: theme.palette.themePrimary,\r\n                    selectors: {\r\n                        'svg, .icons-default-fill': {\r\n                            fill: theme.palette.themePrimary,\r\n                        },\r\n                        '.ms-Button-menuIcon, .ms-Button-icon': {\r\n                            fontWeight: 'bold',\r\n                            color: theme.palette.themePrimary,\r\n                            backgroundColor: 'transparent',\r\n                        },\r\n                        '.icons-filled': {\r\n                            display: 'block',\r\n                        },\r\n                        '.icons-unfilled': {\r\n                            display: 'none',\r\n                        },\r\n                    },\r\n                },\r\n                'a:hover': {\r\n                    color: theme.palette.themePrimary,\r\n                    selectors: {\r\n                        'svg, .icons-default-fill': {\r\n                            fill: theme.palette.themePrimary,\r\n                        },\r\n                        '.ms-Button-menuIcon, .ms-Button-icon': {\r\n                            fontWeight: 'bold',\r\n                            color: theme.palette.themePrimary,\r\n                            backgroundColor: 'transparent',\r\n                        },\r\n                        '.icons-filled': {\r\n                            display: 'block',\r\n                        },\r\n                        '.icons-unfilled': {\r\n                            display: 'none',\r\n                        },\r\n                    },\r\n                },\r\n                '.ms-CommandBar-overflowButton': {\r\n                    minWidth: 'auto',\r\n                    selectors: {\r\n                        '.ms-Button-menuIcon': {\r\n                            margin: 0,\r\n                            fontSize: MS_COMMAND_BAR_OVERFLOW_BUTTON_SIZE,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        secondarySet: {\r\n            selectors: {\r\n                '.ms-Button-icon': {\r\n                    display: 'flex',\r\n                    width: 'auto',\r\n                },\r\n            },\r\n        },\r\n    } as Partial<ICommandBarStyles>;\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        // Overriding text color\r\n        (\r\n            (styles.root as Required<IRawStyle>).selectors[\r\n                'a, a:link, a:visited, a:hover, button, button:active, button:hover'\r\n            ] as IRawStyle\r\n        ).color = theme.palette.themeDark;\r\n\r\n        // Overriding icons color\r\n        ((styles.root as Required<IRawStyle>).selectors['.ms-Button-menuIcon, .ms-Button-icon'] as IRawStyle).color =\r\n            theme.palette.themeDark;\r\n\r\n        // Overriding svg fill color\r\n        ((styles.root as Required<IRawStyle>).selectors['svg, .icons-default-fill'] as IRawStyle).fill =\r\n            theme.palette.themeDark;\r\n    }\r\n    return styles;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IDatePickerStyleProps, IDatePickerStyles, ITheme } from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\n\r\nexport function getDatePickerStyles(themeName: string, _theme: ITheme) {\r\n    return (props: IDatePickerStyleProps): Partial<IDatePickerStyles> => {\r\n        const { theme } = props;\r\n        const { palette } = theme;\r\n\r\n        let HOVER_TEXT_COLOR = palette.black;\r\n        let HOVER_BACKGROUND_COLOR = palette.neutralLight;\r\n        let DISABLED_TEXT_COLOR = palette.neutralTertiary;\r\n        let DISABLED_BACKGROUND_COLOR = palette.white;\r\n\r\n        if (isDarkTheme(themeName)) {\r\n            HOVER_BACKGROUND_COLOR = palette.white;\r\n            DISABLED_TEXT_COLOR = palette.neutralTertiary;\r\n            DISABLED_BACKGROUND_COLOR = palette.neutralLight;\r\n        }\r\n\r\n        if (isContrastTheme(themeName)) {\r\n            HOVER_TEXT_COLOR = palette.white;\r\n            HOVER_BACKGROUND_COLOR = palette.themeDark;\r\n            DISABLED_TEXT_COLOR = ContrastColors.appGreenContrast;\r\n            DISABLED_BACKGROUND_COLOR = palette.white;\r\n        }\r\n\r\n        const styles: Partial<IDatePickerStyles> = {\r\n            callout: {\r\n                '[class^=\"monthAndYear-\"]': {\r\n                    color: theme.palette.black,\r\n                },\r\n                '[class^=\"headerIconButton-\"], [class^=\"navigationButton-\"]': {\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    color: isContrastTheme(themeName) ? palette.black : undefined,\r\n                    ':active, :hover': {\r\n                        color: HOVER_TEXT_COLOR,\r\n                        backgroundColor: HOVER_BACKGROUND_COLOR,\r\n                    },\r\n                },\r\n                '.ms-DatePicker': {\r\n                    table: {\r\n                        th: {\r\n                            color: palette.black,\r\n                        },\r\n                        td: {\r\n                            cursor: 'pointer',\r\n                            color: palette.black,\r\n                            ':active, :hover': {\r\n                                // Fluent UI already uses important here, so we must have a more specific selector with\r\n                                // important too to override it.\r\n                                // See https://github.com/microsoft/fluentui/blob/master/packages/react/src/components/CalendarDayGrid/CalendarDayGrid.styles.ts\r\n                                color: HOVER_TEXT_COLOR + ' !important',\r\n                                backgroundColor: HOVER_BACKGROUND_COLOR + ' !important',\r\n                            },\r\n                            'button[disabled]': {\r\n                                color: DISABLED_TEXT_COLOR,\r\n                                backgroundColor: DISABLED_BACKGROUND_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                    '[role=grid]': {\r\n                        '[role=gridcell]': {\r\n                            cursor: 'pointer',\r\n                            color: palette.black,\r\n                            ':active, :hover': {\r\n                                color: HOVER_TEXT_COLOR,\r\n                                backgroundColor: HOVER_BACKGROUND_COLOR,\r\n                            },\r\n                            'button[disabled]': {\r\n                                color: DISABLED_TEXT_COLOR,\r\n                                backgroundColor: DISABLED_BACKGROUND_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { BoxShadowColors } from './teams-colors';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace ShadowLevels {\r\n    export const shadowLevel1 = `0 2px 4px -0.75px ${BoxShadowColors.boxShadowColor}`;\r\n    export const shadowLevel1Dark = `0 2px 4px -0.75px ${BoxShadowColors.boxShadowColorDark}`;\r\n    export const shadowLevel1Darker = `0 2px 4px -0.75px ${BoxShadowColors.boxShadowColorDarker}`;\r\n    export const shadowLevel2 = `0 4px 7px -1px ${BoxShadowColors.boxShadowColor}`;\r\n    export const shadowLevel3 = `0 8px 10px -2px ${BoxShadowColors.boxShadowColor}`;\r\n    export const shadowLevel3Dark = `0 8px 10px -2px ${BoxShadowColors.boxShadowColorDark}`;\r\n    export const shadowLevel4 = `0 16px 18px -4px ${BoxShadowColors.boxShadowColor}`;\r\n    export const shadowLevel5 = '0 1.2px 3.6px rgba(0, 0, 0, 0.11), 0 6.4px 14.4px rgba(0, 0, 0, 0.13)';\r\n    export const shadowLevel6 = '0 0px 0px 2px rgba(0, 0, 0, 1)';\r\n}\r\n","import { ITheme } from '@fluentui/theme';\r\n\r\nimport {\r\n    TeamsThemeContrast,\r\n    TeamsThemeDark,\r\n    TeamsThemeDefault,\r\n    TeamsThemeDefaultV2,\r\n    TeamsThemeDarkV2,\r\n} from './teams/teams-theme';\r\n\r\nexport type themeNames = 'dark' | 'default' | 'contrast' | 'defaultV2' | 'darkV2' | 'tfl-dark';\r\n\r\nexport const getPalette = (themeName: themeNames): ITheme => {\r\n    switch (themeName) {\r\n        case 'defaultV2':\r\n            return TeamsThemeDefaultV2;\r\n        case 'dark':\r\n        case 'tfl-dark':\r\n            return TeamsThemeDark;\r\n        case 'darkV2':\r\n            return TeamsThemeDarkV2;\r\n        case 'contrast':\r\n            return TeamsThemeContrast;\r\n        default:\r\n            return TeamsThemeDefault;\r\n    }\r\n};\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { IToggleStyleProps } from '@fluentui/react';\r\nimport { ContrastColors, CoreColors, DarkColors } from '../teams-colors';\r\nimport { isContrastTheme } from '../teams-theme';\r\n\r\nexport const getToggleStyles = (themeName: string): any => {\r\n    const themeColors = getThemeColors(themeName);\r\n\r\n    return (props: IToggleStyleProps) => ({\r\n        root: {\r\n            selectors: {\r\n                '.ms-Label': {\r\n                    fontWeight: 'normal',\r\n                    color: themeColors.textColor,\r\n                },\r\n            },\r\n        },\r\n        pill: getPillStyles(!props.disabled, !!props.checked, themeColors),\r\n        thumb: getThumbStyles(!props.disabled, !!props.checked, themeColors),\r\n    });\r\n};\r\n\r\ninterface ToggleThemeColors {\r\n    textColor: string;\r\n    backgroundColor: string;\r\n    checkedBackgroundColor: string;\r\n    disabledBackgroundColor: string;\r\n    disabledAccentColor: string;\r\n    themeName: string;\r\n}\r\n\r\nconst getThemeColors = (themeName: string): ToggleThemeColors => {\r\n    let colors: Partial<ToggleThemeColors> = {\r\n        themeName,\r\n    };\r\n\r\n    switch (themeName) {\r\n        case 'dark':\r\n            colors = {\r\n                ...colors,\r\n                textColor: DarkColors.appBlack,\r\n                backgroundColor: DarkColors.appWhite,\r\n                checkedBackgroundColor: DarkColors.appBrand06,\r\n                disabledBackgroundColor: DarkColors.appGray09,\r\n                disabledAccentColor: DarkColors.appGray06,\r\n            };\r\n            break;\r\n\r\n        case 'contrast':\r\n            colors = {\r\n                ...colors,\r\n                textColor: ContrastColors.appBlack,\r\n                backgroundColor: ContrastColors.appWhite,\r\n                checkedBackgroundColor: ContrastColors.appBrand06,\r\n                disabledBackgroundColor: ContrastColors.appGreenContrast,\r\n                disabledAccentColor: ContrastColors.appGreenContrast,\r\n            };\r\n            break;\r\n\r\n        default:\r\n        case 'default':\r\n            colors = {\r\n                ...colors,\r\n                textColor: CoreColors.appBlack,\r\n                backgroundColor: CoreColors.appWhite,\r\n                checkedBackgroundColor: CoreColors.appBrand06,\r\n                disabledBackgroundColor: CoreColors.appGray09,\r\n                disabledAccentColor: CoreColors.appGray06,\r\n            };\r\n            break;\r\n    }\r\n\r\n    return colors as ToggleThemeColors;\r\n};\r\n\r\ninterface ThumbStyles {\r\n    backgroundColor: string;\r\n    transition?: string;\r\n    border?: string;\r\n}\r\n\r\nfunction getThumbStyles(isEnabled: boolean, isChecked: boolean, themeColors: ToggleThemeColors): any {\r\n    const { backgroundColor, borderColor } = getThumbColors(isEnabled, isChecked, themeColors);\r\n    const baseStyles: ThumbStyles = {\r\n        backgroundColor,\r\n        transition: 'background-color 0.1s, border-color 0.1s',\r\n    };\r\n\r\n    if (!isChecked) {\r\n        baseStyles.border = `thin solid ${borderColor}`;\r\n    }\r\n\r\n    return baseStyles;\r\n}\r\n\r\ninterface ThumbColors {\r\n    backgroundColor: string;\r\n    borderColor?: string;\r\n}\r\n\r\nfunction getThumbColors(isEnabled: boolean, isChecked: boolean, themeColors: ToggleThemeColors): ThumbColors {\r\n    const thumbColors: ThumbColors = {\r\n        backgroundColor: themeColors.backgroundColor,\r\n    };\r\n\r\n    if (!isEnabled && isChecked) {\r\n        thumbColors.backgroundColor = isContrastTheme(themeColors.themeName)\r\n            ? themeColors.backgroundColor\r\n            : themeColors.disabledAccentColor;\r\n    }\r\n\r\n    if (!isChecked) {\r\n        thumbColors.borderColor = isEnabled ? themeColors.textColor : themeColors.disabledAccentColor;\r\n    }\r\n\r\n    return thumbColors;\r\n}\r\n\r\ninterface PillStyles {\r\n    backgroundColor: string;\r\n    transition?: string;\r\n    border?: string;\r\n    selectors?: any;\r\n}\r\n\r\nfunction getPillStyles(isEnabled: boolean, isChecked: boolean, themeColors: ToggleThemeColors): PillStyles {\r\n    const { backgroundColor: thumbBackgroundColor } = getThumbColors(isEnabled, isChecked, themeColors);\r\n    const {\r\n        backgroundColor: pillBackgroundColor,\r\n        borderColor,\r\n        contrastHoverColor,\r\n    } = getPillColors(isEnabled, isChecked, themeColors);\r\n    const baseStyles: PillStyles = {\r\n        backgroundColor: pillBackgroundColor,\r\n        transition: 'background-color 0.1s, border-color 0.1s',\r\n    };\r\n\r\n    if (!isChecked) {\r\n        baseStyles.border = `thin solid ${borderColor} !important`;\r\n    }\r\n\r\n    if (isEnabled) {\r\n        baseStyles.selectors = {\r\n            ':hover': {\r\n                ...(contrastHoverColor && {\r\n                    backgroundColor: pillBackgroundColor,\r\n                    ...(!isChecked && { borderColor: `${contrastHoverColor} !important` }),\r\n                }),\r\n                selectors: {\r\n                    '.ms-Toggle-thumb': {\r\n                        backgroundColor: thumbBackgroundColor,\r\n                        ...(contrastHoverColor && !isChecked && { borderColor: contrastHoverColor }),\r\n                    },\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    return baseStyles;\r\n}\r\n\r\ninterface PillColors {\r\n    backgroundColor: string;\r\n    borderColor?: string;\r\n    contrastHoverColor?: string;\r\n}\r\n\r\nfunction getPillColors(isEnabled: boolean, isChecked: boolean, themeColors: ToggleThemeColors): PillColors {\r\n    const pillColors: PillColors = {\r\n        backgroundColor: themeColors.backgroundColor,\r\n    };\r\n\r\n    if (isChecked) {\r\n        pillColors.backgroundColor = isEnabled\r\n            ? themeColors.checkedBackgroundColor\r\n            : themeColors.disabledBackgroundColor;\r\n    }\r\n\r\n    if (!isChecked) {\r\n        pillColors.borderColor = isEnabled ? themeColors.textColor : themeColors.disabledAccentColor;\r\n    }\r\n\r\n    if (isContrastTheme(themeColors.themeName)) {\r\n        pillColors.contrastHoverColor = themeColors.checkedBackgroundColor;\r\n    }\r\n\r\n    return pillColors;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { FontWeights, IButtonStyles, IRawStyle, ITheme } from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { ShadowLevels } from '../teams-shadow-levels';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getDefaultButtonStyles(themeName: string, theme: ITheme): Partial<IButtonStyles> {\r\n    let primaryTextColor = theme.palette.white;\r\n    let primaryBackgroundColor = theme.palette.themePrimary;\r\n    let primaryBackgroundHoverColor = theme.palette.themeDark;\r\n    let primaryBackgroundActiveColor = theme.palette.themeDarker;\r\n    let primaryBackgroundFocusColor = theme.palette.themeDark;\r\n    let primaryDividerColor = theme.palette.neutralTertiaryAlt;\r\n    let focusBoxShadowColor = theme.palette.white;\r\n    let focusBackgroundColor = theme.palette.neutralTertiaryAlt;\r\n    let focusTextColor = theme.palette.black;\r\n    let focusPrimaryTextColor = theme.palette.white;\r\n    const buttonMinWidth = '96px';\r\n    const buttonBorderRadius = teamsBorderRadius;\r\n    const buttonPadding = '0 16px';\r\n    const buttonBoxShadow = ShadowLevels.shadowLevel1;\r\n    const buttonBoxShadowDark = ShadowLevels.shadowLevel1Dark;\r\n    const rootHoverColor = theme.palette.neutralQuaternary;\r\n    const rootPressedCheckedColor = theme.palette.neutralTertiaryAlt;\r\n\r\n    if (isDarkTheme(themeName)) {\r\n        primaryTextColor = theme.palette.black;\r\n        primaryBackgroundColor = theme.palette.themeTertiary;\r\n        primaryBackgroundHoverColor = theme.palette.themeSecondary;\r\n        primaryBackgroundActiveColor = theme.palette.themeLight;\r\n        primaryBackgroundFocusColor = theme.palette.themeLight;\r\n        primaryDividerColor = theme.palette.white;\r\n        focusTextColor = theme.palette.black;\r\n        focusPrimaryTextColor = theme.palette.black;\r\n    }\r\n\r\n    if (isContrastTheme(themeName)) {\r\n        primaryTextColor = theme.palette.white;\r\n        primaryBackgroundColor = theme.palette.black;\r\n        primaryBackgroundHoverColor = theme.palette.themeDark;\r\n        primaryBackgroundActiveColor = theme.palette.themeDark;\r\n        primaryDividerColor = theme.palette.white;\r\n        focusBoxShadowColor = 'transparent';\r\n        focusBackgroundColor = theme.palette.themeDark;\r\n        focusTextColor = theme.palette.white;\r\n    }\r\n\r\n    const commonStyles = {\r\n        borderColor: 'transparent',\r\n        background: primaryBackgroundColor,\r\n        color: primaryTextColor,\r\n        boxShadow: buttonBoxShadowDark,\r\n        selectors: {\r\n            ':hover': {\r\n                borderColor: 'transparent',\r\n                background: primaryBackgroundHoverColor,\r\n                color: primaryTextColor,\r\n            },\r\n            ':active': {\r\n                borderColor: 'transparent',\r\n                background: primaryBackgroundActiveColor,\r\n                color: primaryTextColor,\r\n            },\r\n        },\r\n    };\r\n\r\n    const focusStyles = {\r\n        // Work around for fluentui button focus outline not showing in iOS Safari.\r\n        ':focus-visible, .ms-Fabric--isFocusVisible &:focus': {\r\n            borderColor: theme.palette.black,\r\n            '::after': {\r\n                outline: 'none',\r\n                borderRadius: buttonBorderRadius,\r\n                borderColor: theme.palette.white,\r\n                borderWidth: '1px',\r\n                borderStyle: 'solid',\r\n                inset: 0,\r\n            },\r\n        },\r\n    };\r\n\r\n    const styles = {\r\n        root: {\r\n            borderRadius: buttonBorderRadius,\r\n            backgroundColor: theme.palette.white,\r\n            borderColor: theme.palette.neutralTertiaryAlt,\r\n            color: theme.palette.black,\r\n            boxShadow: buttonBoxShadow,\r\n            cursor: 'pointer',\r\n            minWidth: buttonMinWidth,\r\n            padding: buttonPadding,\r\n            selectors: {\r\n                '.icons-default-fill': {\r\n                    fill: theme.palette.black,\r\n                },\r\n                '.icons-filled': {\r\n                    display: 'none',\r\n                },\r\n            },\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: rootHoverColor,\r\n            borderColor: theme.palette.neutralTertiary,\r\n            color: theme.palette.black,\r\n            selectors: {\r\n                ...focusStyles,\r\n            },\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: rootPressedCheckedColor,\r\n            borderColor: theme.palette.neutralTertiary,\r\n            boxShadow: 'none',\r\n            color: theme.palette.black,\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: rootPressedCheckedColor,\r\n            borderColor: theme.palette.neutralTertiary,\r\n            color: theme.palette.black,\r\n            selectors: {\r\n                ...focusStyles,\r\n            },\r\n        },\r\n\r\n        rootCheckedHovered: {\r\n            selectors: {\r\n                ...focusStyles,\r\n            },\r\n        },\r\n        rootDisabled: {\r\n            backgroundColor: rootHoverColor,\r\n            color: theme.palette.neutralTertiary,\r\n            borderColor: 'transparent',\r\n            boxShadow: 'none',\r\n            selectors: {\r\n                ...focusStyles,\r\n            },\r\n        },\r\n        rootFocused: {\r\n            boxShadow: buttonBoxShadow,\r\n            selectors: {\r\n                ...focusStyles,\r\n            },\r\n        },\r\n        icon: {\r\n            fontSize: '1.5em',\r\n            height: 'unset',\r\n        },\r\n        menuIcon: {\r\n            fontSize: '1.5em',\r\n            height: 'unset',\r\n        },\r\n        splitButtonMenuButton: {\r\n            borderTopRightRadius: buttonBorderRadius,\r\n            borderBottomRightRadius: buttonBorderRadius,\r\n            borderWidth: '1px',\r\n            borderStyle: 'solid',\r\n            background: theme.palette.white,\r\n            borderLeft: 0,\r\n            color: theme.palette.black,\r\n            marginLeft: 0,\r\n            selectors: {\r\n                '.icons-filled': {\r\n                    display: 'none',\r\n                },\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLighter,\r\n                    color: theme.palette.black,\r\n                },\r\n                ':active': {\r\n                    backgroundColor: theme.palette.neutralTertiaryAlt,\r\n                    color: theme.palette.black,\r\n                },\r\n                '.ms-Button-icon': {\r\n                    color: 'inherit',\r\n                    fontWeight: FontWeights.bold,\r\n                },\r\n            },\r\n        },\r\n        splitButtonContainer: {\r\n            selectors: {\r\n                '.ms-Button': {\r\n                    borderColor: theme.palette.neutralTertiaryAlt,\r\n                    backgroundClip: 'padding-box',\r\n                },\r\n                '.ms-Button--default': {\r\n                    borderRight: 0,\r\n                    borderTopRightRadius: '0px',\r\n                    borderBottomRightRadius: '0px',\r\n                },\r\n                '.ms-Button--default + .ms-Button': {\r\n                    boxShadow: buttonBoxShadow,\r\n                },\r\n                '.ms-Button--primary': {\r\n                    borderRight: 0,\r\n                    borderTopRightRadius: '0px',\r\n                    borderBottomRightRadius: '0px',\r\n                    ...commonStyles,\r\n                },\r\n                '.ms-Button--primary + .ms-Button': { ...commonStyles },\r\n                \".ms-Button--primary ~ span[class*='css-']\": {\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    backgroundColor: primaryDividerColor,\r\n                },\r\n                \".ms-Button--primary + .ms-Button[aria-expanded='true']\": {\r\n                    background: primaryBackgroundActiveColor,\r\n                    color: primaryTextColor,\r\n                },\r\n                ':hover': {\r\n                    selectors: {\r\n                        '.ms-Button': {\r\n                            borderColor: theme.palette.neutralTertiary,\r\n                        },\r\n                        '.ms-Button--primary': {\r\n                            borderColor: 'transparent',\r\n                        },\r\n                        '.ms-Button--primary + .ms-Button': {\r\n                            borderColor: 'transparent',\r\n                        },\r\n                    },\r\n                },\r\n                ':active': {\r\n                    selectors: {\r\n                        '.ms-Button': {\r\n                            borderColor: theme.palette.neutralTertiary,\r\n                            boxShadow: 'none',\r\n                        },\r\n                        '.ms-Button--primary': {\r\n                            borderColor: 'transparent',\r\n                        },\r\n                        '.ms-Button--primary + .ms-Button': {\r\n                            borderColor: 'transparent',\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        splitButtonContainerFocused: {\r\n            selectors: {\r\n                '.ms-Fabric--isFocusVisible &': {\r\n                    selectors: {\r\n                        ':focus::after': {\r\n                            outline: 'none',\r\n                            borderRadius: teamsBorderRadius,\r\n                            borderColor: theme.palette.black,\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            boxShadow: `${focusBoxShadowColor} 0 0 0 1px inset`,\r\n                        },\r\n                        ':focus': {\r\n                            selectors: {\r\n                                '.ms-Button': {\r\n                                    backgroundColor: focusBackgroundColor,\r\n                                    color: focusTextColor,\r\n                                },\r\n                                \".ms-Button ~ span[class*='css-']\": {\r\n                                    backgroundColor: theme.palette.white,\r\n                                },\r\n                                '.ms-Button--primary': {\r\n                                    backgroundColor: primaryBackgroundFocusColor,\r\n                                    color: focusPrimaryTextColor,\r\n                                },\r\n                                '.ms-Button--primary + .ms-Button': {\r\n                                    backgroundColor: primaryBackgroundFocusColor,\r\n                                    color: focusPrimaryTextColor,\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        splitButtonMenuButtonExpanded: {\r\n            background: theme.palette.neutralTertiaryAlt,\r\n            color: theme.palette.black,\r\n            borderColor: theme.palette.neutralTertiary,\r\n        },\r\n        splitButtonDivider: {\r\n            top: 1,\r\n            bottom: 1,\r\n            width: 1,\r\n            backgroundColor: theme.palette.neutralTertiaryAlt,\r\n        },\r\n        description: {\r\n            color: 'inherit',\r\n        },\r\n    } as Partial<IButtonStyles>;\r\n\r\n    // Dark theme overrides\r\n    if (isDarkTheme(themeName)) {\r\n        // Root\r\n        (styles.root as IRawStyle).boxShadow = buttonBoxShadowDark;\r\n        (styles.root as IRawStyle).borderColor = theme.palette.neutralTertiary;\r\n        (styles.root as IRawStyle).backgroundColor = theme.palette.neutralLight;\r\n    }\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        // Root\r\n        (styles.root as IRawStyle).borderWidth = '2px';\r\n        (styles.root as IRawStyle).borderColor = theme.palette.black;\r\n        // Root Hovered\r\n        (styles.rootHovered as IRawStyle).borderColor = theme.palette.themeDark;\r\n        (styles.rootHovered as IRawStyle).color = theme.palette.white;\r\n        (styles.rootHovered as IRawStyle).backgroundColor = theme.palette.themeDark;\r\n        // Root Pressed\r\n        (styles.rootPressed as IRawStyle).borderColor = theme.palette.themeDark;\r\n        (styles.rootPressed as IRawStyle).color = theme.palette.white;\r\n        (styles.rootPressed as IRawStyle).backgroundColor = theme.palette.themeDark;\r\n        // Root Checked\r\n        (styles.rootChecked as IRawStyle).borderColor = theme.palette.black;\r\n        (styles.rootChecked as IRawStyle).color = theme.palette.white;\r\n\r\n        // Root Disabled\r\n        (styles.rootDisabled as IRawStyle).color = ContrastColors.appGreenContrast;\r\n        (styles.rootDisabled as IRawStyle).borderWidth = '2px';\r\n        (styles.rootDisabled as IRawStyle).borderColor = ContrastColors.appGreenContrast;\r\n        (styles.rootDisabled as IRawStyle).backgroundColor = theme.palette.white;\r\n        // Root Focused\r\n        (styles.rootFocused as IRawStyle).color = theme.palette.black;\r\n        (styles.rootFocused as IRawStyle).borderWidth = '2px';\r\n        (styles.rootFocused as IRawStyle).backgroundColor = theme.palette.white;\r\n        (styles.rootFocused as IRawStyle).borderColor = theme.palette.themePrimary;\r\n\r\n        // Splitmenu Button Overrides\r\n        (styles.splitButtonMenuButton as IRawStyle).color = theme.palette.black;\r\n        (styles.splitButtonMenuButton as IRawStyle).borderWidth = '2px';\r\n        ((styles.splitButtonMenuButton as Required<IRawStyle>).selectors[':hover'] as IRawStyle).color =\r\n            theme.palette.white;\r\n\r\n        ((styles.splitButtonMenuButton as Required<IRawStyle>).selectors[':active'] as IRawStyle).color =\r\n            theme.palette.white;\r\n\r\n        ((styles.splitButtonMenuButton as Required<IRawStyle>).selectors[':hover'] as IRawStyle).backgroundColor =\r\n            theme.palette.themeDark;\r\n\r\n        ((styles.splitButtonMenuButton as Required<IRawStyle>).selectors[':active'] as IRawStyle).backgroundColor =\r\n            theme.palette.themeDark;\r\n\r\n        (\r\n            ((styles.splitButtonContainer as Required<IRawStyle>).selectors[':hover'] as Required<IRawStyle>).selectors[\r\n                '.ms-Button'\r\n            ] as IRawStyle\r\n        ).borderColor = theme.palette.black;\r\n\r\n        (\r\n            ((styles.splitButtonContainer as Required<IRawStyle>).selectors[':active'] as Required<IRawStyle>)\r\n                .selectors['.ms-Button'] as IRawStyle\r\n        ).borderColor = theme.palette.black;\r\n\r\n        (styles.splitButtonDivider as IRawStyle).width = '2px';\r\n\r\n        (styles.splitButtonMenuButtonExpanded as IRawStyle).background = theme.palette.themeDark;\r\n        (styles.splitButtonMenuButtonExpanded as IRawStyle).color = theme.palette.white;\r\n        (styles.splitButtonMenuButtonExpanded as IRawStyle).borderColor = theme.palette.white;\r\n    }\r\n    return styles;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport {\r\n    FontWeights,\r\n    ICheckStyleProps,\r\n    ICheckStyles,\r\n    IDetailsListStyleProps,\r\n    IDetailsListStyles,\r\n    IDetailsRowStyleProps,\r\n    IDetailsRowStyles,\r\n    ITheme,\r\n} from '@fluentui/react';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme } from '../teams-theme';\r\n\r\nexport function getCheckStyles(_themeName: string, _theme: ITheme) {\r\n    return (props: ICheckStyleProps): Partial<ICheckStyles> => {\r\n        const { theme, checked } = props;\r\n        const { palette } = theme;\r\n\r\n        const styles = {\r\n            circle: [!checked && { color: palette.neutralSecondary }],\r\n            check: [!checked && { color: palette.neutralSecondary }],\r\n        };\r\n\r\n        return styles;\r\n    };\r\n}\r\nexport function getDetailsListStyles(themeName: string, _theme: ITheme) {\r\n    return (props: IDetailsListStyleProps): Partial<IDetailsListStyles> => {\r\n        const { theme } = props;\r\n        const { palette } = theme;\r\n\r\n        const TEXT_COLOR = palette.black;\r\n        const DETAILS_HEADER_BORDER_COLOR = palette.neutralQuaternary;\r\n\r\n        const styles = {\r\n            root: {\r\n                background: 'transparent',\r\n                selectors: {\r\n                    '.ms-GroupHeader': {\r\n                        background: palette.neutralLighterAlt,\r\n                        color: TEXT_COLOR,\r\n                        borderBottom: 'none',\r\n                        selectors: {\r\n                            ':hover': {\r\n                                background: palette.neutralLighterAlt,\r\n                                color: TEXT_COLOR,\r\n                                selectors: {\r\n                                    '.ms-GroupHeader-expand': {\r\n                                        color: palette.neutralDark,\r\n                                    },\r\n                                },\r\n                            },\r\n                            '.ms-GroupSpacer': {\r\n                                width: '40px !important', // Needed to override inline css\r\n                            },\r\n                            '.ms-GroupHeader-title': {\r\n                                fontSize: FontSizes.size14,\r\n                                fontWeight: FontWeights.bold,\r\n                                selectors: {\r\n                                    \"[class^='headerCount-']\": {\r\n                                        fontWeight: FontWeights.regular,\r\n                                    },\r\n                                },\r\n                            },\r\n                            '.ms-GroupHeader-expand': {\r\n                                color: palette.neutralDark,\r\n                                selectors: {\r\n                                    ':hover': {\r\n                                        background: 'transparent',\r\n                                        color: palette.themePrimary,\r\n                                        selectors: {\r\n                                            i: {\r\n                                                fontWeight: FontWeights.bold,\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                    i: {\r\n                                        fontSize: FontSizes.size12,\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            headerWrapper: {\r\n                selectors: {\r\n                    '.ms-DetailsHeader': {\r\n                        height: '32px',\r\n                        lineHeight: '32px',\r\n                        backgroundColor: 'transparent',\r\n                        borderBottomColor: DETAILS_HEADER_BORDER_COLOR,\r\n                        /**\r\n                         * Override min-width calculated by items-view\r\n                         */\r\n                        minWidth: '100% !important',\r\n                        padding: 0,\r\n                        selectors: {\r\n                            '.ms-DetailsHeader-cell': {\r\n                                height: '32px',\r\n                            },\r\n                            '.ms-DetailsHeader-cellName': {\r\n                                fontSize: FontSizes.size12,\r\n                                fontWeight: FontWeights.regular,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                            },\r\n                            '.ms-DetailsRow-check': {\r\n                                width: '40px',\r\n                                height: '32px',\r\n                            },\r\n                            '.is-actionable': {\r\n                                selectors: {\r\n                                    '.ms-DetailsHeader-cellTitle': {\r\n                                        selectors: {\r\n                                            i: {\r\n                                                color: TEXT_COLOR,\r\n                                                position: 'relative' as const,\r\n                                                bottom: '2px',\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                    ':hover': {\r\n                                        background: palette.neutralLighter,\r\n                                        color: TEXT_COLOR,\r\n                                        selectors: {\r\n                                            '.ms-DetailsHeader-cellTitle': {\r\n                                                color: TEXT_COLOR,\r\n                                                selectors: {\r\n                                                    i: {\r\n                                                        color: TEXT_COLOR,\r\n                                                    },\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                            \"[class*='cellIsGroupExpander-']\": {\r\n                                background: 'transparent',\r\n                                color: TEXT_COLOR,\r\n                                selectors: {\r\n                                    ':hover': {\r\n                                        background: palette.neutralLighter,\r\n                                        color: TEXT_COLOR,\r\n                                    },\r\n                                },\r\n                            },\r\n                            '.ms-DetailsHeader-cellTitle': {\r\n                                alignItems: 'center',\r\n                                color: TEXT_COLOR,\r\n                            },\r\n                            '.ms-DetailsHeader-filterChevron': {\r\n                                paddingTop: '2px',\r\n                            },\r\n                            ':hover .ms-DetailsHeader-cellTitle': {\r\n                                background: 'none',\r\n                            },\r\n                        },\r\n                    },\r\n                    '.ms-DetailsHeader-cellSizer': {\r\n                        cursor: 'ew-resize',\r\n                    },\r\n                },\r\n            },\r\n            contentWrapper: {\r\n                '.ms-DetailsRow': {\r\n                    ':hover': {\r\n                        backgroundColor: isContrastTheme(themeName)\r\n                            ? theme.palette.themeTertiary\r\n                            : theme.palette.neutralQuaternaryAlt,\r\n                    },\r\n                    ':active': {\r\n                        backgroundColor: theme.palette.neutralTertiaryAlt,\r\n                    },\r\n                    '::after': {\r\n                        // Override the default border color when selected, whose contrast is not enough\r\n                        borderColor: `${palette.black} !important`,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        // Contrast theme overrides\r\n        if (isContrastTheme(themeName)) {\r\n            styles.headerWrapper.selectors['.ms-DetailsHeader'].borderBottomColor = palette.neutralTertiaryAlt;\r\n\r\n            styles.headerWrapper.selectors['.ms-DetailsHeader'].selectors['.is-actionable'].selectors[\r\n                ':hover'\r\n            ].background = palette.themeDark;\r\n\r\n            styles.headerWrapper.selectors['.ms-DetailsHeader'].selectors['.is-actionable'].selectors[':hover'].color =\r\n                palette.white;\r\n            styles.headerWrapper.selectors['.ms-DetailsHeader'].selectors['.is-actionable'].selectors[\r\n                ':hover'\r\n            ].selectors['.ms-DetailsHeader-cellTitle'].selectors.i.color = palette.white;\r\n            styles.headerWrapper.selectors['.ms-DetailsHeader'].selectors['.is-actionable'].selectors[\r\n                ':hover'\r\n            ].selectors['.ms-DetailsHeader-cellTitle'].color = palette.white;\r\n            styles.headerWrapper.selectors['.ms-DetailsHeader'].selectors['.ms-DetailsHeader-cellTitle'].color =\r\n                palette.black;\r\n\r\n            styles.headerWrapper.selectors['.ms-DetailsHeader'].selectors[\"[class*='cellIsGroupExpander-']\"].selectors[\r\n                ':hover'\r\n            ].background = palette.themeDark;\r\n            styles.headerWrapper.selectors['.ms-DetailsHeader'].selectors[\"[class*='cellIsGroupExpander-']\"].selectors[\r\n                ':hover'\r\n            ].color = palette.white;\r\n\r\n            // Group Header Styling\r\n            styles.root.selectors['.ms-GroupHeader'].selectors[':hover'].color = theme.palette.white;\r\n            styles.root.selectors['.ms-GroupHeader'].selectors[':hover'].background = palette.themeDark;\r\n            styles.root.selectors['.ms-GroupHeader'].selectors[':hover'].selectors['.ms-GroupHeader-expand'].color =\r\n                theme.palette.white;\r\n            styles.root.selectors['.ms-GroupHeader'].selectors['.ms-GroupHeader-expand'].selectors[':hover'].color =\r\n                theme.palette.white;\r\n        }\r\n\r\n        return styles;\r\n    };\r\n}\r\nexport function getDetailsRowStyles(themeName: string, _theme: ITheme) {\r\n    return (props: IDetailsRowStyleProps): Partial<IDetailsRowStyles> => {\r\n        const { theme, isSelected } = props;\r\n        const { palette } = theme;\r\n\r\n        let ROW_HOVER_BACKGROUND_COLOR = palette.neutralLight;\r\n        let SELECTED_ROW_BACKGROUND_COLOR = palette.white;\r\n        const ROW_BORDER_COLOR = palette.neutralLighter;\r\n\r\n        const TEXT_COLOR = palette.black;\r\n        const LINK_TEXT_COLOR = palette.black;\r\n        let LINK_TEXT_HOVER_COLOR = palette.black;\r\n        let SELECTED_HOVER_COLOR = palette.black;\r\n\r\n        const HERO_BUTTON = \"[class*='heroButton']\";\r\n\r\n        // Contrast theme overrides\r\n        if (isContrastTheme(themeName)) {\r\n            ROW_HOVER_BACKGROUND_COLOR = palette.themeTertiary;\r\n            SELECTED_ROW_BACKGROUND_COLOR = palette.themePrimary;\r\n            SELECTED_HOVER_COLOR = palette.white;\r\n            LINK_TEXT_HOVER_COLOR = palette.white;\r\n        }\r\n\r\n        const styles = {\r\n            root: [\r\n                {\r\n                    background: 'transparent',\r\n                    color: TEXT_COLOR,\r\n                    borderBottomColor: ROW_BORDER_COLOR,\r\n                    fontSize: FontSizes.size14,\r\n                    /**\r\n                     * Override min-width calculated by items-view\r\n                     */\r\n                    minWidth: '100% !important',\r\n                    selectors: {\r\n                        '.ms-DetailsRow-cell': {\r\n                            color: TEXT_COLOR,\r\n                            selectors: {\r\n                                '.ms-DetailsRow-check': {\r\n                                    height: '100%',\r\n                                    width: '40px',\r\n                                },\r\n                                '.ms-Button--icon': {\r\n                                    color: 'inherit',\r\n                                },\r\n                            },\r\n                        },\r\n                        '.ms-Details': {\r\n                            selectors: {\r\n                                '.ms-Button': {\r\n                                    background: 'transparent',\r\n                                },\r\n                            },\r\n                        },\r\n                        '.ms-Link': {\r\n                            // Need it to override all state (i.e. focus, hover, active) styles for the ms-link component\r\n                            color: `${LINK_TEXT_COLOR} !important`,\r\n                        },\r\n                        ':hover': {\r\n                            background: ROW_HOVER_BACKGROUND_COLOR,\r\n                            selectors: {\r\n                                '.ms-DetailsRow-cell': {\r\n                                    color: SELECTED_HOVER_COLOR,\r\n                                },\r\n                                // Need it to override all state (i.e. focus, hover) styles for the ms-link component\r\n                                '.ms-Link': {\r\n                                    color: `${LINK_TEXT_HOVER_COLOR} !important`,\r\n                                },\r\n                                '.ms-TooltipHost': {\r\n                                    color: SELECTED_HOVER_COLOR,\r\n                                },\r\n                            },\r\n                        },\r\n                        [HERO_BUTTON]: {\r\n                            background: 'transparent',\r\n                            selectors: {\r\n                                ':hover': {\r\n                                    background: 'transparent',\r\n                                    selectors: {\r\n                                        i: {\r\n                                            fontWeight: FontWeights.bold,\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                        '.ms-Button--icon': {\r\n                            width: '2rem',\r\n                        },\r\n                    },\r\n                },\r\n                isSelected && [\r\n                    {\r\n                        background: SELECTED_ROW_BACKGROUND_COLOR,\r\n\r\n                        selectors: {\r\n                            '.ms-DetailsRow-cell': {\r\n                                color: SELECTED_HOVER_COLOR,\r\n                            },\r\n                            // Need it to override all state (i.e. focus, hover, active) styles for the ms-link component\r\n                            '.ms-Link': {\r\n                                color: `${LINK_TEXT_COLOR} !important`,\r\n                            },\r\n                            ':focus': {\r\n                                background: SELECTED_ROW_BACKGROUND_COLOR,\r\n                                color: SELECTED_HOVER_COLOR,\r\n                                selectors: {\r\n                                    '.ms-DetailsRow-cell': {\r\n                                        color: SELECTED_HOVER_COLOR,\r\n                                    },\r\n                                    // Need it to override all state (i.e. focus, hover) styles for the ms-link component\r\n                                    '.ms-Link': {\r\n                                        color: `${LINK_TEXT_HOVER_COLOR} !important`,\r\n                                    },\r\n                                    ':hover': {\r\n                                        background: ROW_HOVER_BACKGROUND_COLOR,\r\n                                    },\r\n                                },\r\n                            },\r\n                            ':hover': {\r\n                                background: ROW_HOVER_BACKGROUND_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n            ],\r\n            cell: {\r\n                margin: 'auto',\r\n            },\r\n        } as Partial<IDetailsRowStyles>;\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { ITheme, IBasePickerStyles, IBasePickerStyleProps, IRawStyle } from '@fluentui/react';\r\nimport { ContrastColors, CoreColors, DarkColors } from '../teams-colors';\r\nimport { isContrastTheme, isDarkTheme, isDefaultTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getPeopePickerStyles(themeName: string, theme: ITheme) {\r\n    return (props: IBasePickerStyleProps): Partial<IBasePickerStyles> => {\r\n        const { disabled } = props;\r\n        const { palette } = theme;\r\n        let PLACEHOLDER_NOT_DISABLED = isDefaultTheme(themeName)\r\n            ? CoreColors.placeHolderTextColor\r\n            : theme.palette.neutralTertiaryAlt;\r\n        let FIELD_GROUP_BACKGROUND_COLOR = palette.neutralLight;\r\n        let SELECTED_BG_COLOR = CoreColors.appGray09;\r\n        let FIELD_GROUP_OPACITY = 0.64;\r\n        const FIELD_COLOR = palette.black;\r\n        let FIELD_COLOR_PLACEHOLDER_NOT_DISABLED = palette.neutralDark;\r\n        let FIELD_COLOR_PLACEHOLDER_DISABLED = palette.neutralDark;\r\n        let FIELD_GROUP_BORDER_WIDTH = '0 0 2px 0';\r\n        let INPUT_GROUP_BORDER_WIDTH = '0 0 2px 0';\r\n        let FIELD_GROUP_BORDER_COLOR = 'transparent';\r\n        let FIELD_GROUP_BORDER_COLOR_DISABLED = CoreColors.appGray09;\r\n        let FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = palette.themePrimary;\r\n        let PRIMARY_TEXT_BORDER_BOTTOM_COLOR = CoreColors.appRed;\r\n        let PERSONA_HOVER_BACKGROUND_COLOR = CoreColors.pickerPersonaContainerBackground;\r\n\r\n        // Dark theme overrides\r\n        if (isDarkTheme(themeName)) {\r\n            PLACEHOLDER_NOT_DISABLED = palette.neutralSecondary;\r\n            FIELD_GROUP_BACKGROUND_COLOR = palette.white;\r\n            FIELD_COLOR_PLACEHOLDER_NOT_DISABLED = palette.neutralDark;\r\n            FIELD_COLOR_PLACEHOLDER_DISABLED = palette.neutralPrimary;\r\n            FIELD_GROUP_BORDER_COLOR = DarkColors.appGray09;\r\n            SELECTED_BG_COLOR = DarkColors.appPersonaBackground;\r\n            PRIMARY_TEXT_BORDER_BOTTOM_COLOR = DarkColors.appRed;\r\n            PERSONA_HOVER_BACKGROUND_COLOR = DarkColors.pickerPersonaContainerBackground;\r\n        }\r\n\r\n        // Contrast theme overrides\r\n        if (isContrastTheme(themeName)) {\r\n            PLACEHOLDER_NOT_DISABLED = palette.black;\r\n            FIELD_GROUP_BACKGROUND_COLOR = palette.white;\r\n            SELECTED_BG_COLOR = palette.white;\r\n            FIELD_GROUP_OPACITY = 1;\r\n            FIELD_COLOR_PLACEHOLDER_NOT_DISABLED = palette.black;\r\n            FIELD_COLOR_PLACEHOLDER_DISABLED = ContrastColors.appGreenContrast;\r\n            FIELD_GROUP_BORDER_WIDTH = '1px 1px 1px 1px';\r\n            INPUT_GROUP_BORDER_WIDTH = '0';\r\n            FIELD_GROUP_BORDER_COLOR = palette.black;\r\n            FIELD_GROUP_BORDER_COLOR_DISABLED = ContrastColors.appGreenContrast;\r\n            FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = palette.themeDark;\r\n            PRIMARY_TEXT_BORDER_BOTTOM_COLOR = ContrastColors.appRed;\r\n            PERSONA_HOVER_BACKGROUND_COLOR = ContrastColors.pickerPersonaContainerBackground;\r\n        }\r\n\r\n        const style: Partial<IBasePickerStyles> = {\r\n            root: {},\r\n            itemsWrapper: {\r\n                selectors: {\r\n                    '.ms-PickerPersona-container': {\r\n                        backgroundColor: SELECTED_BG_COLOR,\r\n                        ...(isContrastTheme(themeName) && {\r\n                            border: '1px solid white',\r\n                        }),\r\n                    },\r\n                    '.ms-PickerPersona-container, .ms-PickerPersona-container .ms-Button': {\r\n                        color: FIELD_COLOR,\r\n                        selectors: {\r\n                            ':hover': {\r\n                                backgroundColor: PERSONA_HOVER_BACKGROUND_COLOR,\r\n                                ...(isContrastTheme(themeName) && {\r\n                                    color: palette.white,\r\n                                    selectors: {\r\n                                        '.ms-Persona-details': {\r\n                                            selectors: {\r\n                                                div: {\r\n                                                    color: palette.white,\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                        '.ms-Button': {\r\n                                            color: palette.white,\r\n                                        },\r\n                                    },\r\n                                }),\r\n                            },\r\n                        },\r\n                    },\r\n                    '.ms-PickerPersona-container .ms-Button': {\r\n                        selectors: {\r\n                            ':hover': {\r\n                                selectors: {\r\n                                    i: {\r\n                                        fontWeight: 'bold',\r\n                                    },\r\n                                },\r\n                            },\r\n                            '::after': {\r\n                                // Override the default border color when selected, whose contrast is not enough\r\n                                borderColor: `${palette.black} !important`,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            text: {\r\n                borderWidth: FIELD_GROUP_BORDER_WIDTH,\r\n                borderStyle: 'Solid',\r\n                borderRadius: teamsBorderRadius,\r\n                borderColor: !disabled ? FIELD_GROUP_BORDER_COLOR : FIELD_GROUP_BORDER_COLOR_DISABLED,\r\n                backgroundColor: FIELD_GROUP_BACKGROUND_COLOR,\r\n                opacity: disabled ? FIELD_GROUP_OPACITY : undefined,\r\n                selectors: {\r\n                    '&:hover': {\r\n                        borderColor: FIELD_GROUP_BORDER_COLOR,\r\n                    },\r\n                    '&::after': {\r\n                        background: 'transparent',\r\n                        borderWidth: FIELD_GROUP_BORDER_WIDTH,\r\n                        borderColor: FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE,\r\n                        inset: '-1px 0',\r\n                    },\r\n                    '.ms-Persona-details': {\r\n                        color: FIELD_COLOR,\r\n                        selectors: {\r\n                            div: {\r\n                                color: FIELD_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                    '.ms-Persona-primaryText': {\r\n                        borderBottomColor: PRIMARY_TEXT_BORDER_BOTTOM_COLOR,\r\n                    },\r\n                },\r\n            },\r\n            input: {\r\n                height: '32px',\r\n                background: 'transparent',\r\n                color: FIELD_COLOR,\r\n                padding: '0 12px',\r\n                borderWidth: INPUT_GROUP_BORDER_WIDTH,\r\n                borderStyle: 'Solid',\r\n                borderRadius: teamsBorderRadius,\r\n                borderColor: !disabled ? FIELD_GROUP_BORDER_COLOR : FIELD_GROUP_BORDER_COLOR_DISABLED,\r\n                selectors: {\r\n                    '::placeholder': [\r\n                        !disabled && { color: FIELD_COLOR_PLACEHOLDER_NOT_DISABLED },\r\n                        disabled && { color: FIELD_COLOR_PLACEHOLDER_DISABLED },\r\n                    ],\r\n                    ':-ms-input-placeholder': [\r\n                        !disabled && { color: FIELD_COLOR_PLACEHOLDER_NOT_DISABLED },\r\n                        disabled && { color: FIELD_COLOR_PLACEHOLDER_DISABLED },\r\n                    ],\r\n                    '&:active, &:focus': {\r\n                        selectors: {\r\n                            '::placeholder': [!disabled && { color: PLACEHOLDER_NOT_DISABLED }],\r\n                            ':-ms-input-placeholder': [!disabled && { color: PLACEHOLDER_NOT_DISABLED }],\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        if (isContrastTheme(themeName)) {\r\n            ((style.text as any).selectors['&:hover'] as IRawStyle).borderStyle = 'solid';\r\n            ((style.text as any).selectors['&:hover'] as IRawStyle).borderColor = !disabled\r\n                ? `${FIELD_GROUP_BORDER_COLOR} !important`\r\n                : `${FIELD_GROUP_BORDER_COLOR_DISABLED} !important`;\r\n            ((style.text as any).selectors['&:hover'] as IRawStyle).borderWidth = FIELD_GROUP_BORDER_WIDTH;\r\n            ((style.text as any).selectors['&:hover'] as IRawStyle).borderRadius = teamsBorderRadius;\r\n        }\r\n\r\n        return style;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { FontWeights, IMessageBarStyleProps, IMessageBarStyles, ITheme, MessageBarType } from '@fluentui/react';\r\nimport { FontSizes } from '../teams-sizes';\r\n\r\nexport function getMessageBarStyles(_themeName: string, _theme: ITheme) {\r\n    return (props: IMessageBarStyleProps): Partial<IMessageBarStyles> => {\r\n        const { theme, messageBarType } = props;\r\n\r\n        const margin = {\r\n            marginTop: '12px',\r\n            marginBottom: '12px',\r\n        };\r\n\r\n        const ERROR_COLOR = theme.palette.redDark;\r\n        const ERROR_BACKGROUND_COLOR = theme.palette.redLight;\r\n        const ERROR_BOTTOM_BORDER_COLOR = theme.palette.red;\r\n\r\n        const INFO_COLOR = theme.palette.neutralDark;\r\n        const INFO_BACKGROUND_COLOR = theme.palette.neutralTertiaryAlt;\r\n        const INFO_BOTTOM_BORDER_COLOR = theme.palette.neutralTertiary;\r\n\r\n        const styles = {\r\n            actions: {},\r\n            iconContainer: margin,\r\n            icon: {\r\n                display: 'none',\r\n            },\r\n            dismissal: [\r\n                {\r\n                    width: '26px',\r\n                    height: 'auto',\r\n                    padding: '2px 4px',\r\n                    marginRight: '8px',\r\n                    ...margin,\r\n                    selectors: {\r\n                        '.ms-Button-icon': {\r\n                            fontSize: FontSizes.size10,\r\n                            fontWeight: 'bold',\r\n                        },\r\n                    },\r\n                },\r\n                messageBarType === MessageBarType.error && {\r\n                    color: ERROR_COLOR,\r\n                    selectors: {\r\n                        '.ms-Button-icon': {\r\n                            color: ERROR_COLOR,\r\n                        },\r\n                    },\r\n                },\r\n                messageBarType === MessageBarType.info && {\r\n                    color: INFO_COLOR,\r\n                    selectors: {\r\n                        '.ms-Button-icon': {\r\n                            color: INFO_COLOR,\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            text: [\r\n                {\r\n                    fontSize: FontSizes.size14,\r\n                    fontWeight: FontWeights.semibold,\r\n                    justifyContent: 'center',\r\n                    flexGrow: 1,\r\n                    ...margin,\r\n                },\r\n            ],\r\n            root: [\r\n                {\r\n                    selectors: {\r\n                        '.ms-Link': {\r\n                            fontWeight: 'inherit',\r\n                            fontSize: 'inherit',\r\n                            textDecoration: 'underline',\r\n                            color: 'inherit',\r\n                            selectors: {\r\n                                ':hover': {\r\n                                    color: 'inherit',\r\n                                },\r\n                                ':focus': {\r\n                                    color: 'inherit',\r\n                                },\r\n                                ':active': {\r\n                                    color: 'inherit',\r\n                                },\r\n                                ':active:hover': {\r\n                                    color: 'inherit',\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n                messageBarType === MessageBarType.info && {\r\n                    color: INFO_COLOR,\r\n                    background: INFO_BACKGROUND_COLOR,\r\n                    borderBottom: `1px solid ${INFO_BOTTOM_BORDER_COLOR}`,\r\n                },\r\n                messageBarType === MessageBarType.error && {\r\n                    color: ERROR_COLOR,\r\n                    background: ERROR_BACKGROUND_COLOR,\r\n                    borderBottom: `1px solid ${ERROR_BOTTOM_BORDER_COLOR}`,\r\n                },\r\n            ],\r\n        } as Partial<IMessageBarStyles>;\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { ICalloutContentStyleProps, ICalloutContentStyles } from '@fluentui/react';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport const SEARCH_WELL_FOCUSED_CLASS = 'fabric-search-well-callout-focus';\r\n\r\nexport const getSearchWellStyles =\r\n    (themeName: string) =>\r\n    (props: ICalloutContentStyleProps): Partial<ICalloutContentStyles> => {\r\n        const TEXT_COLOR = props.theme.palette.black;\r\n        let HOVER_COLOR = props.theme.palette.black;\r\n        let KEYBOARD_FOCUS_TEXT_COLOR = props.theme.palette.black;\r\n        let HOVER_BACKGROUND_COLOR = props.theme.palette.neutralLight;\r\n        let FOCUS_BACKGROUND_COLOR = props.theme.palette.neutralQuaternaryAlt;\r\n        let ACTIVE_BACKGROUND_COLOR = props.theme.palette.neutralLight;\r\n        let FOCUS_VISIBLE_BORDER = `1px solid ${KEYBOARD_FOCUS_TEXT_COLOR}`;\r\n        let FOCUS_VISIBLE_BACKGROUND_COLOR = 'transparent';\r\n\r\n        if (isDarkTheme(themeName)) {\r\n            HOVER_COLOR = props.theme.palette.black;\r\n            HOVER_BACKGROUND_COLOR = props.theme.palette.neutralQuaternary;\r\n            FOCUS_BACKGROUND_COLOR = props.theme.palette.neutralTertiaryAlt;\r\n            ACTIVE_BACKGROUND_COLOR = props.theme.palette.neutralQuaternary;\r\n        }\r\n\r\n        if (isContrastTheme(themeName)) {\r\n            HOVER_COLOR = props.theme.palette.white;\r\n            HOVER_BACKGROUND_COLOR = props.theme.palette.themeDark;\r\n            FOCUS_BACKGROUND_COLOR = props.theme.palette.themeDark;\r\n            ACTIVE_BACKGROUND_COLOR = props.theme.palette.themeDark;\r\n            KEYBOARD_FOCUS_TEXT_COLOR = props.theme.palette.white;\r\n            FOCUS_VISIBLE_BORDER = 'none';\r\n            FOCUS_VISIBLE_BACKGROUND_COLOR = props.theme.palette.themeDark;\r\n        }\r\n\r\n        const hoverStyles = {\r\n            background: HOVER_BACKGROUND_COLOR,\r\n            color: HOVER_COLOR,\r\n            boxShadow: 'none',\r\n            selectors: {\r\n                '.icons-default-fill': {\r\n                    fill: HOVER_COLOR,\r\n                },\r\n                '.ms-Persona-primaryText': {\r\n                    color: HOVER_COLOR,\r\n                },\r\n                '.ms-Persona-secondaryText': {\r\n                    color: HOVER_COLOR,\r\n                },\r\n                '.ms-Button-label': {\r\n                    color: HOVER_COLOR,\r\n                },\r\n            },\r\n        };\r\n\r\n        const focusActiveStyles = {\r\n            background: FOCUS_BACKGROUND_COLOR,\r\n            color: HOVER_COLOR,\r\n            boxShadow: 'none',\r\n            selectors: {\r\n                '.icons-default-fill': {\r\n                    fill: HOVER_COLOR,\r\n                },\r\n                '.ms-Persona-primaryText': {\r\n                    color: HOVER_COLOR,\r\n                },\r\n                '.ms-Persona-secondaryText': {\r\n                    color: HOVER_COLOR,\r\n                },\r\n                '.ms-Button-label': {\r\n                    color: HOVER_COLOR,\r\n                },\r\n            },\r\n        };\r\n        return {\r\n            root: {\r\n                selectors: {\r\n                    '.ms-Button': {\r\n                        padding: '0 13px 0 13px',\r\n                        color: TEXT_COLOR,\r\n                    },\r\n                    '.icons-default-fill': {\r\n                        fill: TEXT_COLOR,\r\n                    },\r\n                },\r\n            },\r\n            container: {\r\n                selectors: {\r\n                    '.ms-Callout': {\r\n                        minWidth: '444px',\r\n                    },\r\n                    '.ms-Persona-primaryText, .ms-Persona, .ms-Persona-secondaryText': {\r\n                        color: 'inherit',\r\n                    },\r\n                },\r\n            },\r\n            calloutMain: {\r\n                selectors: {\r\n                    \"[data-icon-name='chevronMedRightIcon']\": {\r\n                        marginRight: '-5px',\r\n                    },\r\n                    '.ms-Button': {\r\n                        selectors: {\r\n                            ':hover': {\r\n                                '.icons-unfilled': {\r\n                                    display: 'none',\r\n                                },\r\n                                '.icons-filled': {\r\n                                    display: 'block',\r\n                                },\r\n                                ...hoverStyles,\r\n                            },\r\n                            ':active': {\r\n                                ...focusActiveStyles,\r\n                                backgroundColor: ACTIVE_BACKGROUND_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                    [`button.${SEARCH_WELL_FOCUSED_CLASS}`]: {\r\n                        ...focusActiveStyles,\r\n                        selectors: {\r\n                            ':hover': {\r\n                                backgroundColor: ACTIVE_BACKGROUND_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                    ':global(.ms-Fabric--isFocusVisible) button.fabric-search-well-callout-focus': {\r\n                        backgroundColor: FOCUS_VISIBLE_BACKGROUND_COLOR,\r\n                        border: FOCUS_VISIBLE_BORDER,\r\n                        borderRadius: teamsBorderRadius,\r\n                    },\r\n                    '.ms-GroupedList-group .ms-List-page button:hover': {\r\n                        color: props.theme.palette.white,\r\n                    },\r\n                },\r\n            },\r\n        } as Partial<ICalloutContentStyles>;\r\n    };\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { ISuggestionsStyleProps, ITheme, ISuggestionsStyles } from '@fluentui/react';\r\n\r\nexport function getSuggestionsStyles(themeName: string, _theme: ITheme) {\r\n    return (props: ISuggestionsStyleProps): Partial<ISuggestionsStyles> => {\r\n        const { theme } = props;\r\n        const { palette } = theme;\r\n\r\n        const selectedColor = {\r\n            default: `${palette.black} !important`,\r\n            dark: `${palette.black} !important`,\r\n            contrast: `${palette.white} !important`,\r\n        }[themeName];\r\n\r\n        const selectedBackground = {\r\n            default: palette.neutralLighter,\r\n            dark: palette.neutralLighter,\r\n            contrast: palette.themeSecondary,\r\n        }[themeName];\r\n\r\n        const customizedStyles = {\r\n            background: selectedBackground,\r\n            selectors: {\r\n                '.ms-Persona-details': {\r\n                    selectors: {\r\n                        div: {\r\n                            color: selectedColor,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        const styles: ISuggestionsStyles = {\r\n            root: {},\r\n            noSuggestions: {\r\n                color: palette.black,\r\n            },\r\n            suggestionsContainer: {\r\n                selectors: {\r\n                    '.ms-Suggestions-item': {\r\n                        height: '4.0em',\r\n                        paddingBottom: '0',\r\n                        marginBottom: '0',\r\n                    },\r\n                    '.ms-Suggestions-item .ms-Suggestions-itemButton:hover': {\r\n                        ...customizedStyles,\r\n                    },\r\n                    '.ms-Suggestions-item .ms-Suggestions-itemButton.is-suggested': {\r\n                        ...customizedStyles,\r\n                    },\r\n                },\r\n            },\r\n            title: {},\r\n            forceResolveButton: {},\r\n            searchForMoreButton: {},\r\n            suggestionsAvailable: {},\r\n            subComponentStyles: {\r\n                spinner: {},\r\n            },\r\n        };\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { ComponentsStyles, ITheme } from '@fluentui/theme';\r\nimport { themeNames } from '../teams-palette';\r\nimport { getActionButtonStyles } from './styles/action-button.styles';\r\nimport { getBreadcrumbStyles } from './styles/breadcrumb.styles';\r\nimport { getCalloutContentStyles } from './styles/callout.styles';\r\nimport { getCheckboxStyles } from './styles/checkbox.styles';\r\nimport { getChoiceGroupOptionStyles } from './styles/choice-group-option.styles';\r\nimport { getComboBoxStyles } from './styles/combo-box.styles';\r\nimport { getCommandBarButtonStyles } from './styles/command-bar-button.styles';\r\nimport { getCommandBarStyles } from './styles/command-bar.styles';\r\nimport { getCompoundButtonStyles } from './styles/compound-button.styles';\r\nimport { getContextualMenuStyles } from './styles/contextual-menu.styles';\r\nimport { getDatePickerStyles } from './styles/date-picker.styles';\r\nimport { getDefaultButtonStyles } from './styles/default-button.styles';\r\nimport { getCheckStyles, getDetailsListStyles, getDetailsRowStyles } from './styles/details-list.styles';\r\nimport { getDialogContentStyles, getDialogFooterStyles } from './styles/dialog.styles';\r\nimport { getDocumentCardStyles } from './styles/document-card.styles';\r\nimport { getDropdownStyles } from './styles/dropdown.styles';\r\nimport { getIconButtonStyles } from './styles/icon-button.styles';\r\nimport { getIconStyles } from './styles/icon.styles';\r\nimport { LabelStyles } from './styles/label.styles';\r\nimport { getMessageBarStyles } from './styles/message-bar.styles';\r\nimport { getModalStyles } from './styles/modal.styles';\r\nimport { getPanelStyles } from './styles/panel.styles';\r\nimport { getPeopePickerStyles } from './styles/people-picker.styles';\r\nimport { getPersonaCoinStyles, getPersonaStyles } from './styles/persona.styles';\r\nimport { PivotStyles } from './styles/pivot.styles';\r\nimport { getPrimaryButtonStyles } from './styles/primary-button.styles';\r\nimport { getScrollablePaneStyles } from './styles/scrollable-pane.styles';\r\nimport { getSearchBoxStyles } from './styles/search-box.styles';\r\nimport { getSearchWellStyles } from './styles/search-well.styles';\r\nimport { getShimmerStyles } from './styles/shimmer.styles';\r\nimport { getSuggestionsStyles } from './styles/suggestion.styles';\r\nimport { getTeachingBubbleStyles } from './styles/teaching-bubble.styles';\r\nimport { getTextFieldStyles } from './styles/text-field.styles';\r\nimport { getToggleStyles } from './styles/toggle.styles';\r\nimport { getTooltipHostStyles } from './styles/tooltip-host.styles';\r\nimport { getTooltipStyles } from './styles/tooltip.styles';\r\n\r\nexport function getTeamStyles(themeName: themeNames, theme: ITheme, isMobile?: boolean): ComponentsStyles {\r\n    return {\r\n        ActionButton: {\r\n            styles: getActionButtonStyles(themeName, theme),\r\n        },\r\n        Breadcrumb: {\r\n            styles: getBreadcrumbStyles(themeName, theme),\r\n        },\r\n        CalloutContent: {\r\n            styles: getCalloutContentStyles(themeName, theme),\r\n        },\r\n        Check: {\r\n            styles: getCheckStyles(themeName, theme),\r\n        },\r\n        Checkbox: {\r\n            styles: getCheckboxStyles(themeName, theme),\r\n        },\r\n        ChoiceGroupOption: {\r\n            styles: getChoiceGroupOptionStyles(themeName, theme),\r\n        },\r\n        ComboBox: {\r\n            styles: getComboBoxStyles(themeName, theme),\r\n        },\r\n        CommandBar: {\r\n            styles: getCommandBarStyles(themeName, theme),\r\n        },\r\n        CommandBarButton: {\r\n            styles: getCommandBarButtonStyles(themeName, theme),\r\n        },\r\n        CompoundButton: {\r\n            styles: getCompoundButtonStyles(themeName, theme),\r\n        },\r\n        ContextualMenu: {\r\n            styles: getContextualMenuStyles(themeName, theme),\r\n        },\r\n        DatePicker: {\r\n            styles: getDatePickerStyles(themeName, theme),\r\n        },\r\n        DefaultButton: {\r\n            styles: getDefaultButtonStyles(themeName, theme),\r\n        },\r\n        DetailsList: {\r\n            styles: getDetailsListStyles(themeName, theme),\r\n        },\r\n        DetailsRow: {\r\n            styles: getDetailsRowStyles(themeName, theme),\r\n        },\r\n        DialogContent: {\r\n            styles: getDialogContentStyles(themeName, theme),\r\n        },\r\n        DialogFooter: {\r\n            styles: getDialogFooterStyles(themeName, theme),\r\n        },\r\n        DocumentCard: {\r\n            styles: getDocumentCardStyles(themeName, theme),\r\n        },\r\n        Dropdown: {\r\n            styles: getDropdownStyles(themeName, theme),\r\n        },\r\n        Icon: {\r\n            styles: getIconStyles,\r\n        },\r\n        IconButton: {\r\n            styles: getIconButtonStyles(themeName, theme),\r\n        },\r\n        Label: {\r\n            styles: LabelStyles,\r\n        },\r\n        MessageBar: {\r\n            styles: getMessageBarStyles(themeName, theme),\r\n        },\r\n        Modal: {\r\n            styles: getModalStyles(themeName, theme, isMobile),\r\n        },\r\n        NormalPeoplePicker: {\r\n            styles: getPeopePickerStyles(themeName, theme),\r\n        },\r\n        Panel: {\r\n            styles: getPanelStyles(themeName, theme),\r\n        },\r\n        Persona: {\r\n            styles: getPersonaStyles(themeName, theme),\r\n        },\r\n        PersonaCoin: {\r\n            styles: getPersonaCoinStyles(themeName, theme),\r\n        },\r\n        Pivot: {\r\n            styles: PivotStyles,\r\n        },\r\n        PrimaryButton: {\r\n            styles: getPrimaryButtonStyles(themeName, theme),\r\n        },\r\n        ScrollablePane: {\r\n            styles: getScrollablePaneStyles(themeName, theme),\r\n        },\r\n        SearchBox: {\r\n            styles: getSearchBoxStyles(themeName, theme),\r\n        },\r\n        SearchWellCallout: {\r\n            styles: getSearchWellStyles(themeName),\r\n        },\r\n        Shimmer: {\r\n            styles: getShimmerStyles(themeName, theme),\r\n        },\r\n        Suggestions: {\r\n            styles: getSuggestionsStyles(themeName, theme),\r\n        },\r\n        TeachingBubble: {\r\n            styles: getTeachingBubbleStyles(themeName, theme),\r\n        },\r\n        TextField: {\r\n            styles: getTextFieldStyles(themeName, theme),\r\n        },\r\n        Toggle: {\r\n            styles: getToggleStyles(themeName),\r\n        },\r\n        Tooltip: {\r\n            styles: getTooltipStyles(themeName, theme),\r\n        },\r\n        TooltipHost: {\r\n            styles: getTooltipHostStyles(),\r\n        },\r\n    };\r\n}\r\n","import { ITooltipHostStyles } from '@fluentui/react';\r\n\r\nexport function getTooltipHostStyles(): Partial<ITooltipHostStyles> {\r\n    return {\r\n        root: {\r\n            // make icons properly aligned\r\n            '& > i': {\r\n                margin: '4px 4px 0',\r\n            },\r\n        },\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { ICalloutContentStyleProps, ICalloutContentStyles, ITheme, IStyleFunctionOrObject } from '@fluentui/react';\r\nimport { ShadowLevels } from '../teams-shadow-levels';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getCalloutContentStyles(\r\n    themeName: string,\r\n    _theme: ITheme\r\n): IStyleFunctionOrObject<ICalloutContentStyleProps, ICalloutContentStyles> {\r\n    return (props: ICalloutContentStyleProps) => {\r\n        const { theme } = props;\r\n        const { palette } = theme;\r\n\r\n        const TEXT_COLOR = palette.black;\r\n\r\n        const styles = {\r\n            root: {\r\n                borderRadius: teamsBorderRadius,\r\n                boxShadow: ShadowLevels.shadowLevel3,\r\n                background: palette.white,\r\n                borderWidth: '1px',\r\n                borderStyle: 'solid',\r\n                borderColor: palette.neutralTertiaryAlt,\r\n                color: TEXT_COLOR,\r\n                selectors: {\r\n                    '.ms-Spinner': {\r\n                        padding: '32px',\r\n                    },\r\n                    '.ms-CalloutExample-title': {\r\n                        color: 'inherit',\r\n                    },\r\n                    '.ms-CalloutExample-subText': {\r\n                        color: 'inherit',\r\n                    },\r\n                    \"[class*='menuItemIconContainer']\": {\r\n                        marginLeft: '0',\r\n                        marginRight: '12px',\r\n                    },\r\n                },\r\n            },\r\n            beakCurtain: {\r\n                borderRadius: teamsBorderRadius,\r\n            },\r\n            beak: {\r\n                background: palette.white,\r\n            },\r\n            callout: {\r\n                borderRadius: teamsBorderRadius,\r\n            },\r\n            calloutMain: {\r\n                borderRadius: teamsBorderRadius,\r\n                background: palette.white,\r\n            },\r\n        };\r\n\r\n        // Dark theme overrides\r\n        if (isDarkTheme(themeName)) {\r\n            styles.root.boxShadow = ShadowLevels.shadowLevel3Dark;\r\n            styles.root.borderColor = palette.white;\r\n            styles.root.background = palette.neutralLight;\r\n            styles.beak.background = palette.neutralLight;\r\n            styles.calloutMain.background = palette.neutralLight;\r\n        }\r\n\r\n        // Contrast theme overrides\r\n        if (isContrastTheme(themeName)) {\r\n            styles.root.boxShadow = 'none';\r\n            styles.root.borderColor = palette.black;\r\n            styles.root.background = palette.white;\r\n        }\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IIconStyles } from '@fluentui/react';\r\n\r\nexport function getIconStyles(): Partial<IIconStyles> {\r\n    return {\r\n        root: {\r\n            width: '1em',\r\n            height: '1em',\r\n            img: {\r\n                display: 'block',\r\n                width: '100%',\r\n                height: '100%',\r\n                lineHeight: '100%',\r\n                objectFit: 'contain',\r\n            },\r\n        },\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IScrollablePaneStyles, ITheme } from '@fluentui/react';\r\n\r\nexport function getScrollablePaneStyles(_themeName: string, _theme: ITheme) {\r\n    return (): Partial<IScrollablePaneStyles> => {\r\n        const styles = {\r\n            root: {\r\n                fontFamily: 'inherit',\r\n            },\r\n        };\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { ITooltipStyleProps, ITheme, IStyleFunctionOrObject, ITooltipStyles } from '@fluentui/react';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getTooltipStyles(\r\n    themeName: string,\r\n    _theme: ITheme\r\n): IStyleFunctionOrObject<ITooltipStyleProps, ITooltipStyles> {\r\n    return (props: ITooltipStyleProps) => {\r\n        const { theme } = props;\r\n        const { palette } = theme;\r\n\r\n        const styles = {\r\n            root: {\r\n                selectors: {\r\n                    '.ms-Callout-beak': {\r\n                        backgroundColor: palette.white,\r\n                        borderBottomRightRadius: teamsBorderRadius,\r\n                    },\r\n                },\r\n            },\r\n            content: {\r\n                backgroundColor: palette.white,\r\n                color: palette.black,\r\n            },\r\n        };\r\n\r\n        // Dark theme overrides\r\n        if (isDarkTheme(themeName)) {\r\n            styles.content.backgroundColor = palette.white;\r\n            styles.content.color = palette.black;\r\n        }\r\n\r\n        // Contrast theme overrides\r\n        if (isContrastTheme(themeName)) {\r\n            styles.content.backgroundColor = palette.white;\r\n            styles.content.color = palette.black;\r\n        }\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IButtonStyles, ITheme } from '@fluentui/react';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getActionButtonStyles(themeName: string, theme: ITheme): Partial<IButtonStyles> {\r\n    return {\r\n        root: {\r\n            color: theme.palette.neutralDark,\r\n            // Work around for fluentui button focus outline not showing in iOS Safari.\r\n            ':focus-visible, .ms-Fabric--isFocusVisible &:focus': {\r\n                '::after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    inset: '2px',\r\n                    outline: `1px solid ${theme.palette.black}`,\r\n                    borderRadius: teamsBorderRadius,\r\n                },\r\n            },\r\n        },\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport {\r\n    IPersonaCoinStyleProps,\r\n    IPersonaCoinStyles,\r\n    IPersonaStyleProps,\r\n    IPersonaStyles,\r\n    IStyleFunctionOrObject,\r\n    ITheme,\r\n} from '@fluentui/react';\r\nimport { FontSizes } from '../teams-sizes';\r\nexport function getPersonaStyles(\r\n    _themeName: string,\r\n    theme: ITheme\r\n): IStyleFunctionOrObject<IPersonaStyleProps, IPersonaStyles> {\r\n    return (_props: IPersonaStyleProps) => {\r\n        return {\r\n            root: {\r\n                height: 'auto',\r\n            },\r\n            details: {\r\n                width: 'auto',\r\n                flex: '1 1 0',\r\n            },\r\n            primaryText: {\r\n                height: 'auto',\r\n                lineHeight: 'auto',\r\n                fontSize: FontSizes.size14,\r\n                color: theme.palette.black,\r\n            },\r\n            secondaryText: {\r\n                height: 'auto',\r\n                lineHeight: 'auto',\r\n                fontSize: FontSizes.size14,\r\n                color: theme.palette.neutralDark,\r\n            },\r\n        };\r\n    };\r\n}\r\n\r\nexport function getPersonaCoinStyles(\r\n    _themeName: string,\r\n    _theme: ITheme\r\n): IStyleFunctionOrObject<IPersonaCoinStyleProps, IPersonaCoinStyles> {\r\n    return (_props: IPersonaCoinStyleProps) => {\r\n        return {\r\n            initials: {\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            },\r\n        };\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IDocumentCardStyles, ITheme } from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { ShadowLevels } from '../teams-shadow-levels';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getDocumentCardStyles(themeName: string, theme: ITheme): Partial<IDocumentCardStyles> {\r\n    let BOX_SHADOW = ShadowLevels.shadowLevel1;\r\n    let BORDER_COLOR = theme.palette.neutralQuaternary;\r\n\r\n    if (isDarkTheme(themeName)) {\r\n        BOX_SHADOW = ShadowLevels.shadowLevel1Dark;\r\n    }\r\n    if (isContrastTheme(themeName)) {\r\n        BORDER_COLOR = ContrastColors.appBlack;\r\n    }\r\n    const styles: Partial<IDocumentCardStyles> = {\r\n        root: {\r\n            borderRadius: teamsBorderRadius,\r\n            backgroundColor: theme.palette.neutralLighterAlt,\r\n            borderColor: BORDER_COLOR,\r\n            borderStyle: 'solid',\r\n            borderWidth: '1px',\r\n            boxShadow: BOX_SHADOW,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralQuaternary,\r\n                },\r\n                ':hover::after': {\r\n                    display: 'none',\r\n                },\r\n                ':focus': {\r\n                    borderColor: theme.palette.black,\r\n                },\r\n                '.ms-DocumentCardTitle': {\r\n                    color: theme.palette.black,\r\n                    fontSize: FontSizes.size14,\r\n                    height: FontSizes.size20,\r\n                    lineHeight: FontSizes.size20,\r\n                },\r\n            },\r\n        },\r\n    };\r\n    return styles;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IComboBoxStyles, IRawStyle, ITheme } from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getComboBoxStyles(themeName: string, theme: ITheme): Partial<IComboBoxStyles> {\r\n    let ROOT_BACKGROUND_COLOR = theme.palette.neutralLight;\r\n    let FIELD_GROUP_OPACITY = 0.36;\r\n\r\n    const TEXT_COLOR = theme.palette.black;\r\n    let HOVER_COLOR = theme.palette.black;\r\n    const OPTIONS_TEXT_COLOR = theme.palette.neutralDark;\r\n    let HOVER_BACKGROUND_COLOR = theme.palette.neutralLight;\r\n    let FOCUS_BACKGROUND_COLOR = theme.palette.neutralTertiaryAlt;\r\n    let IS_CHECKED_BACKGROUND_COLOR = theme.palette.neutralQuaternaryAlt;\r\n    let KEYBOARD_FOCUS_TEXT_COLOR = theme.palette.black;\r\n    let ICON_FILL_COLOR = theme.palette.neutralPrimaryAlt;\r\n\r\n    let FIELD_GROUP_BORDER_WIDTH = '0 0 2px 0';\r\n    let FIELD_GROUP_BORDER_WIDTH_ACTIVE = FIELD_GROUP_BORDER_WIDTH;\r\n    let FIELD_GROUP_BORDER_COLOR = 'transparent';\r\n    let FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = theme.palette.themePrimary;\r\n    let FIELD_GROUP_BORDER_COLOR_DISABLED = 'transparent';\r\n    let FIELD_COLOR_PLACEHOLDER_DISABLED = theme.palette.neutralDark;\r\n\r\n    let PLACEHOLDER_COLOR = theme.palette.neutralDark;\r\n    let PLACEHOLDER_ACTIVE_COLOR = theme.palette.neutralTertiary;\r\n\r\n    let FOCUS_VISIBLE_BORDER = theme.palette.white;\r\n    let FOCUS_VISIBLE_OUTLINE = `1px solid ${theme.palette.black}`;\r\n    let FOCUS_VISIBLE_BACKGROUND_COLOR = 'transparent';\r\n\r\n    if (isDarkTheme(themeName)) {\r\n        ROOT_BACKGROUND_COLOR = theme.palette.white;\r\n        HOVER_COLOR = theme.palette.black;\r\n        HOVER_BACKGROUND_COLOR = theme.palette.neutralQuaternary;\r\n        FOCUS_BACKGROUND_COLOR = theme.palette.neutralTertiary;\r\n        IS_CHECKED_BACKGROUND_COLOR = theme.palette.neutralTertiaryAlt;\r\n\r\n        PLACEHOLDER_COLOR = theme.palette.neutralDark;\r\n        PLACEHOLDER_ACTIVE_COLOR = theme.palette.neutralSecondary;\r\n\r\n        FIELD_COLOR_PLACEHOLDER_DISABLED = theme.palette.neutralPrimary;\r\n    }\r\n\r\n    if (isContrastTheme(themeName)) {\r\n        ROOT_BACKGROUND_COLOR = theme.palette.white;\r\n\r\n        FOCUS_BACKGROUND_COLOR = theme.palette.themeDark;\r\n        IS_CHECKED_BACKGROUND_COLOR = theme.palette.themePrimary;\r\n        KEYBOARD_FOCUS_TEXT_COLOR = theme.palette.white;\r\n        ICON_FILL_COLOR = theme.palette.neutralSecondary;\r\n\r\n        FIELD_GROUP_OPACITY = 1;\r\n        FIELD_GROUP_BORDER_WIDTH_ACTIVE = '1px 1px 2px 1px';\r\n        FIELD_GROUP_BORDER_WIDTH = '1px 1px 1px 1px';\r\n        FIELD_GROUP_BORDER_COLOR = theme.palette.black;\r\n        FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = theme.palette.themeDark;\r\n        FIELD_GROUP_BORDER_WIDTH_ACTIVE = '1px 1px 2px 1px';\r\n        FIELD_GROUP_BORDER_COLOR_DISABLED = ContrastColors.appGreenContrast;\r\n        FIELD_COLOR_PLACEHOLDER_DISABLED = ContrastColors.appGreenContrast;\r\n\r\n        PLACEHOLDER_COLOR = theme.palette.black;\r\n        PLACEHOLDER_ACTIVE_COLOR = theme.palette.black;\r\n\r\n        FOCUS_VISIBLE_BORDER = 'transparent';\r\n        FOCUS_VISIBLE_OUTLINE = 'none';\r\n        FOCUS_VISIBLE_BACKGROUND_COLOR = theme.palette.themeDark;\r\n    }\r\n\r\n    const isActive = {\r\n        borderWidth: FIELD_GROUP_BORDER_WIDTH_ACTIVE,\r\n        borderColor: FIELD_GROUP_BORDER_COLOR,\r\n        borderBottomColor: FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE,\r\n        borderBottomRightRadius: teamsBorderRadius,\r\n        borderBottomLeftRadius: teamsBorderRadius,\r\n    };\r\n\r\n    const styles = {\r\n        divider: {\r\n            margin: '4px 0',\r\n            height: '2px',\r\n            backgroundColor: theme.palette.neutralLight,\r\n            border: 'none',\r\n        },\r\n        root: {\r\n            borderRadius: teamsBorderRadius,\r\n            paddingLeft: '12px',\r\n            borderWidth: FIELD_GROUP_BORDER_WIDTH,\r\n            borderStyle: 'solid',\r\n            borderColor: FIELD_GROUP_BORDER_COLOR,\r\n            backgroundColor: ROOT_BACKGROUND_COLOR,\r\n            color: TEXT_COLOR,\r\n            minWidth: 'auto',\r\n            paddingTop: '1px',\r\n            overflow: 'hidden',\r\n            selectors: {\r\n                '::after': {\r\n                    display: 'none',\r\n                },\r\n                '&.is-open': {\r\n                    ...isActive,\r\n                },\r\n                '.ms-Button--icon': {\r\n                    width: '34px',\r\n                    backgroundColor: 'transparent',\r\n                    position: 'absolute',\r\n                    right: '-1px',\r\n                    selectors: {\r\n                        ':hover': {\r\n                            color: 'inherit',\r\n                            backgroundColor: 'transparent',\r\n                        },\r\n                    },\r\n                },\r\n                '.ms-Button-icon': {\r\n                    color: theme.palette.neutralPrimary,\r\n                    fontSize: FontSizes.size12,\r\n                    fontWeight: 'bold',\r\n                    position: 'relative',\r\n                    top: '2px',\r\n                    selectors: {\r\n                        '.icons-default-fill': {\r\n                            fill: ICON_FILL_COLOR,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        rootError: {\r\n            borderBottomRightRadius: teamsBorderRadius,\r\n            borderBottomLeftRadius: teamsBorderRadius,\r\n            borderWidth: FIELD_GROUP_BORDER_WIDTH_ACTIVE,\r\n        },\r\n        input: {\r\n            backgroundColor: 'transparent',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n            color: TEXT_COLOR,\r\n            selectors: {\r\n                '::placeholder': { color: PLACEHOLDER_COLOR },\r\n                ':-ms-input-placeholder': { color: PLACEHOLDER_COLOR },\r\n            },\r\n        },\r\n        inputDisabled: {\r\n            color: TEXT_COLOR,\r\n        },\r\n        rootPressed: {\r\n            ...isActive,\r\n        },\r\n        rootFocused: {\r\n            ...isActive,\r\n            selectors: {\r\n                input: {\r\n                    selectors: {\r\n                        '::placeholder': { color: PLACEHOLDER_ACTIVE_COLOR },\r\n                        ':-ms-input-placeholder': { color: PLACEHOLDER_ACTIVE_COLOR },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        rootHovered: {\r\n            borderColor: FIELD_GROUP_BORDER_COLOR,\r\n\r\n            selectors: {\r\n                '.ms-Button': {\r\n                    backgroundColor: 'transparent',\r\n                },\r\n                '.ms-ComboBox-Input': {\r\n                    color: 'inherit',\r\n                },\r\n            },\r\n        },\r\n        rootDisabled: {\r\n            opacity: FIELD_GROUP_OPACITY,\r\n            borderColor: FIELD_GROUP_BORDER_COLOR_DISABLED,\r\n            selectors: {\r\n                input: {\r\n                    color: FIELD_COLOR_PLACEHOLDER_DISABLED,\r\n                },\r\n                '.ms-Button-icon': {\r\n                    color: FIELD_COLOR_PLACEHOLDER_DISABLED,\r\n                },\r\n            },\r\n        },\r\n        callout: {\r\n            selectors: {\r\n                '.ms-Callout-main': {\r\n                    paddingTop: '8px',\r\n                    paddingBottom: '8px',\r\n                },\r\n                '.is-checked': {\r\n                    backgroundColor: IS_CHECKED_BACKGROUND_COLOR,\r\n                    color: KEYBOARD_FOCUS_TEXT_COLOR,\r\n                },\r\n                '.ms-Fabric--isFocusVisible &': {\r\n                    selectors: {\r\n                        '.is-checked': {\r\n                            backgroundColor: FOCUS_VISIBLE_BACKGROUND_COLOR,\r\n                            selectors: {\r\n                                ':after': {\r\n                                    borderColor: FOCUS_VISIBLE_BORDER,\r\n                                    outline: FOCUS_VISIBLE_OUTLINE,\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        header: {\r\n            padding: '0 8px',\r\n            color: theme.palette.neutralDark,\r\n        },\r\n        optionsContainer: {\r\n            selectors: {\r\n                '.ms-Button': {\r\n                    padding: '4px 16px',\r\n                    minHeight: '32px',\r\n                    height: '32px',\r\n                    whiteSpace: 'noWrap',\r\n                    backgroundColor: 'transparent',\r\n                    color: OPTIONS_TEXT_COLOR,\r\n                    selectors: {\r\n                        ':hover': {\r\n                            backgroundColor: HOVER_BACKGROUND_COLOR,\r\n                            color: HOVER_COLOR,\r\n                        },\r\n                        ':focus': {\r\n                            backgroundColor: FOCUS_BACKGROUND_COLOR,\r\n                            color: HOVER_COLOR,\r\n                        },\r\n                        ':active': {\r\n                            backgroundColor: FOCUS_BACKGROUND_COLOR,\r\n                            color: HOVER_COLOR,\r\n                        },\r\n                        ':hover:active': {\r\n                            backgroundColor: `${FOCUS_BACKGROUND_COLOR} !important`,\r\n                        },\r\n                    },\r\n                },\r\n                '.ms-ComboBox-optionText': {\r\n                    overflow: 'visible',\r\n                },\r\n                '.ms-Checkbox-text': {\r\n                    color: 'inherit',\r\n                },\r\n                '.ms-Checkbox:hover': {\r\n                    selectors: {\r\n                        '.ms-Checkbox-text': {\r\n                            color: 'inherit',\r\n                            selectors: {\r\n                                ':hover': {\r\n                                    color: 'inherit',\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n                '.is-disabled': {\r\n                    color: theme.palette.neutralTertiary,\r\n                },\r\n            },\r\n        },\r\n    } as Partial<IComboBoxStyles>;\r\n\r\n    // Dark theme overrides\r\n    if (isDarkTheme(themeName)) {\r\n        (styles.divider as IRawStyle).backgroundColor = theme.palette.white;\r\n\r\n        ((styles.root as Required<IRawStyle>).selectors['.ms-Button-icon'] as IRawStyle).color = theme.palette.black;\r\n\r\n        ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Checkbox-text'] as IRawStyle).color =\r\n            theme.palette.neutralDark;\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Checkbox:hover'] as Required<IRawStyle>)\r\n                .selectors['.ms-Checkbox-text'] as IRawStyle\r\n        ).color = theme.palette.neutralDark;\r\n        (\r\n            (\r\n                (\r\n                    (styles.optionsContainer as Required<IRawStyle>).selectors[\r\n                        '.ms-Checkbox:hover'\r\n                    ] as Required<IRawStyle>\r\n                ).selectors['.ms-Checkbox-text'] as Required<IRawStyle>\r\n            ).selectors[':hover'] as IRawStyle\r\n        ).color = theme.palette.neutralDark;\r\n    }\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        (styles.divider as IRawStyle).backgroundColor = theme.palette.black;\r\n\r\n        ((styles.root as Required<IRawStyle>).selectors['.ms-Button-icon'] as IRawStyle).color = theme.palette.black;\r\n\r\n        ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Checkbox-text'] as IRawStyle).color =\r\n            theme.palette.black;\r\n\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Checkbox:hover'] as Required<IRawStyle>)\r\n                .selectors['.ms-Checkbox-text'] as IRawStyle\r\n        ).color = theme.palette.black;\r\n        (\r\n            (\r\n                (\r\n                    (styles.optionsContainer as Required<IRawStyle>).selectors[\r\n                        '.ms-Checkbox:hover'\r\n                    ] as Required<IRawStyle>\r\n                ).selectors['.ms-Checkbox-text'] as Required<IRawStyle>\r\n            ).selectors[':hover'] as IRawStyle\r\n        ).color = theme.palette.black;\r\n\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Button'] as Required<IRawStyle>).selectors[\r\n                ':hover'\r\n            ] as IRawStyle\r\n        ).color = theme.palette.white;\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Button'] as Required<IRawStyle>).selectors[\r\n                ':focus'\r\n            ] as IRawStyle\r\n        ).color = theme.palette.white;\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Button'] as Required<IRawStyle>).selectors[\r\n                ':active'\r\n            ] as IRawStyle\r\n        ).color = theme.palette.white;\r\n\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Button'] as Required<IRawStyle>).selectors[\r\n                ':hover'\r\n            ] as IRawStyle\r\n        ).backgroundColor = theme.palette.themeDark;\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Button'] as Required<IRawStyle>).selectors[\r\n                ':focus'\r\n            ] as IRawStyle\r\n        ).backgroundColor = theme.palette.themeDark;\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Button'] as Required<IRawStyle>).selectors[\r\n                ':active'\r\n            ] as IRawStyle\r\n        ).backgroundColor = theme.palette.themeDark;\r\n        (\r\n            ((styles.optionsContainer as Required<IRawStyle>).selectors['.ms-Button'] as Required<IRawStyle>).selectors[\r\n                ':hover:active'\r\n            ] as IRawStyle\r\n        ).backgroundColor = `${theme.palette.themeDark} !important`;\r\n\r\n        ((styles.optionsContainer as Required<IRawStyle>).selectors['.is-disabled'] as IRawStyle).color =\r\n            ContrastColors.appGreenContrast;\r\n    }\r\n\r\n    return styles;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IStyleFunctionOrObject, IPivotStyleProps, IPivotStyles, FontWeights } from '@fluentui/react';\r\nimport { isContrastTheme } from '../teams-theme';\r\n\r\nexport const PivotStyles: IStyleFunctionOrObject<IPivotStyleProps, IPivotStyles> = ({ theme, linkFormat }) => {\r\n    const rootIsTabs = linkFormat === 'tabs';\r\n\r\n    const LINK_SELECTED_COLOR = theme.palette.black;\r\n    const LINK_COLOR = isContrastTheme(theme.name) ? theme.palette.themeDark : theme.palette.neutralPrimary;\r\n\r\n    const commonStyles = {\r\n        height: 60,\r\n        lineHeight: 60,\r\n        paddingTop: 4,\r\n        marginRight: 0,\r\n        // Work around for fluentui button focus outline not showing in iOS Safari.\r\n        ':focus-visible, .ms-Fabric--isFocusVisible &:focus': {\r\n            outline: `1px auto ${theme.palette.black}`,\r\n        },\r\n        '::after': { display: 'none' },\r\n    };\r\n    const styles = {\r\n        link: [\r\n            commonStyles,\r\n            !rootIsTabs && {\r\n                fontWeight: FontWeights.regular,\r\n                color: LINK_COLOR,\r\n                '-webkit-tap-highlight-color': 'transparent',\r\n                selectors: {\r\n                    ':hover': {\r\n                        color: LINK_COLOR,\r\n                        backgroundColor: 'transparent',\r\n                        selectors: {\r\n                            ':before': {\r\n                                backgroundColor: theme.palette.themeTertiary,\r\n                                height: '3px',\r\n                            },\r\n                        },\r\n                    },\r\n                    ':active': {\r\n                        backgroundColor: 'transparent',\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n        linkIsSelected: [\r\n            commonStyles,\r\n            !rootIsTabs && {\r\n                color: LINK_SELECTED_COLOR,\r\n                fontWeight: FontWeights.semibold,\r\n                selectors: {\r\n                    ':hover': {\r\n                        color: LINK_SELECTED_COLOR,\r\n                        backgroundColor: 'transparent',\r\n                        selectors: {\r\n                            ':before': {\r\n                                left: '8px',\r\n                                right: '8px',\r\n                            },\r\n                        },\r\n                    },\r\n                    ':active': {\r\n                        color: LINK_SELECTED_COLOR,\r\n                        backgroundColor: 'transparent',\r\n                    },\r\n                    ':before': {\r\n                        border: 'none',\r\n                        height: '3px',\r\n                        backgroundColor: theme.palette.themePrimary,\r\n                        transition: 'none',\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    return styles;\r\n};\r\n","/* istanbul ignore file */\r\n\r\nimport { IShimmerStyles, IShimmerStyleProps, ITheme } from '@fluentui/react';\r\nimport { isContrastTheme, isDefaultTheme } from '../teams-theme';\r\n\r\nexport function getShimmerStyles(themeName: string, _theme: ITheme) {\r\n    return (props: IShimmerStyleProps): Partial<IShimmerStyles> => {\r\n        const { theme } = props;\r\n        const { palette } = theme;\r\n\r\n        let SHIMMER_WRAPPER_PRIMARY_BACKGROUND = palette.neutralTertiaryAlt;\r\n        let SHIMMER_WRAPPER_SECONDARY_BACKGROUND = palette.neutralTertiary;\r\n        let SHIMMER_ROOT_BACKGROUND = palette.neutralLight;\r\n\r\n        if (isDefaultTheme(themeName)) {\r\n            SHIMMER_ROOT_BACKGROUND = palette.white;\r\n        }\r\n\r\n        if (isContrastTheme(themeName)) {\r\n            SHIMMER_WRAPPER_PRIMARY_BACKGROUND = palette.black;\r\n            SHIMMER_WRAPPER_SECONDARY_BACKGROUND = palette.white;\r\n        }\r\n\r\n        const styles = {\r\n            root: {\r\n                selectors: {\r\n                    '.ms-ShimmerGap-root': {\r\n                        borderColor: SHIMMER_ROOT_BACKGROUND,\r\n                        background: SHIMMER_ROOT_BACKGROUND,\r\n                    },\r\n                    '.ms-ShimmerLine-root': {\r\n                        borderColor: SHIMMER_ROOT_BACKGROUND,\r\n                        selectors: {\r\n                            svg: {\r\n                                fill: SHIMMER_ROOT_BACKGROUND,\r\n                            },\r\n                        },\r\n                    },\r\n                    '.ms-ShimmerCircle-root': {\r\n                        borderColor: SHIMMER_ROOT_BACKGROUND,\r\n                        selectors: {\r\n                            svg: {\r\n                                fill: SHIMMER_ROOT_BACKGROUND,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            shimmerGradient: {\r\n                background: `linear-gradient(to right, ${SHIMMER_WRAPPER_PRIMARY_BACKGROUND} 0%, ${SHIMMER_WRAPPER_SECONDARY_BACKGROUND} 50%, ${SHIMMER_WRAPPER_PRIMARY_BACKGROUND} 100%) 0px 0px / 90% 100% no-repeat ${SHIMMER_WRAPPER_PRIMARY_BACKGROUND}`,\r\n            },\r\n            shimmerWrapper: {\r\n                background: SHIMMER_WRAPPER_PRIMARY_BACKGROUND,\r\n            },\r\n        } as Partial<IShimmerStyles>;\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nexport const teamsBorderRadius = '4px';\r\n","/* istanbul ignore file */\r\n\r\nimport {\r\n    IContextualMenuItemStyleProps,\r\n    IContextualMenuItemStyles,\r\n    IContextualMenuStyleProps,\r\n    IContextualMenuStyles,\r\n    IStyleFunctionOrObject,\r\n    ITheme,\r\n} from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { ShadowLevels } from '../teams-shadow-levels';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\n\r\nexport function getContextualMenuStyles(\r\n    themeName: string,\r\n    _theme: ITheme\r\n): IStyleFunctionOrObject<IContextualMenuStyleProps, IContextualMenuStyles> {\r\n    return (props: IContextualMenuStyleProps): Partial<IContextualMenuStyles> => {\r\n        const { theme } = props;\r\n        const { palette } = theme;\r\n        const CONTEXTUAL_MENU_ITEM_HEIGHT = 32;\r\n\r\n        const iconStyles = {\r\n            maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n            fontSize: FontSizes.size20,\r\n            width: FontSizes.size20,\r\n            margin: '0 8px 0 0',\r\n            color: palette.neutralDark,\r\n        };\r\n\r\n        const TEXT_COLOR = palette.neutralDark;\r\n        let TEXT_COLOR_HOVER_ACTIVE = palette.black;\r\n        let BACKGROUND_COLOR_HOVER = palette.neutralLight;\r\n        let BACKGROUND_COLOR_ACTIVE = palette.neutralTertiaryAlt;\r\n        let BACKGROUND_FOCUS_COLOR = 'transparent';\r\n        let FOCUS_AFTER = {};\r\n        let CONTRAST_FOCUS_HOVER = {};\r\n\r\n        const hoverActiveStyles = (textColor: string, background_color: string) =>\r\n            ({\r\n                color: textColor,\r\n                backgroundColor: background_color,\r\n            } as const);\r\n\r\n        if (isDarkTheme(themeName)) {\r\n            BACKGROUND_COLOR_HOVER = palette.neutralQuaternary;\r\n            BACKGROUND_COLOR_ACTIVE = palette.neutralTertiary;\r\n        }\r\n        if (isContrastTheme(themeName)) {\r\n            TEXT_COLOR_HOVER_ACTIVE = palette.themeDarker;\r\n            BACKGROUND_COLOR_HOVER = palette.themeDark;\r\n            BACKGROUND_COLOR_ACTIVE = palette.themeDark;\r\n            BACKGROUND_FOCUS_COLOR = palette.themeDark;\r\n            FOCUS_AFTER = {\r\n                ':after': {\r\n                    display: 'none',\r\n                },\r\n            };\r\n            CONTRAST_FOCUS_HOVER = {\r\n                '&:focus': {\r\n                    ...hoverActiveStyles(TEXT_COLOR_HOVER_ACTIVE, BACKGROUND_COLOR_HOVER),\r\n                },\r\n                '&:focus:hover': {\r\n                    ...hoverActiveStyles(TEXT_COLOR_HOVER_ACTIVE, BACKGROUND_COLOR_HOVER),\r\n                },\r\n            };\r\n        }\r\n\r\n        const isFocusVisible = {\r\n            '.ms-Fabric--isFocusVisible &': {\r\n                selectors: {\r\n                    ':hover': {\r\n                        backgroundColor: BACKGROUND_FOCUS_COLOR,\r\n                    },\r\n                    ':focus': {\r\n                        backgroundColor: BACKGROUND_FOCUS_COLOR,\r\n                        selectors: {\r\n                            ':after': {\r\n                                borderColor: palette.white,\r\n                                outline: `1px solid ${palette.black}`,\r\n                            },\r\n                        },\r\n                    },\r\n                    ':focus:hover': {\r\n                        backgroundColor: BACKGROUND_FOCUS_COLOR,\r\n                    },\r\n                    ...FOCUS_AFTER,\r\n                },\r\n            },\r\n        };\r\n\r\n        const commonStyles = {\r\n            color: TEXT_COLOR,\r\n            backgroundColor: 'transparent',\r\n            selectors: {\r\n                '.ms-ContextualMenu-icon, .ms-ContextualMenu-submenuIcon, .ms-ContextualMenu-secondaryText, .ms-ContextualMenu-checkmarkIcon, .ms-ContextualMenu-checkmarkIcon':\r\n                    {\r\n                        color: 'inherit',\r\n                        backgroundColor: 'transparent',\r\n                    },\r\n                svg: {\r\n                    fill: 'currentColor',\r\n                },\r\n                '.icons-default-fill': {\r\n                    fill: 'currentColor',\r\n                },\r\n                '.ms-ContextualMenu-link': {\r\n                    selectors: {\r\n                        '&:hover': {\r\n                            ...hoverActiveStyles(TEXT_COLOR_HOVER_ACTIVE, BACKGROUND_COLOR_HOVER),\r\n                        },\r\n                        '&:active': {\r\n                            ...hoverActiveStyles(TEXT_COLOR_HOVER_ACTIVE, BACKGROUND_COLOR_ACTIVE),\r\n                        },\r\n                        ...isFocusVisible,\r\n                        ...CONTRAST_FOCUS_HOVER,\r\n                    },\r\n                },\r\n            },\r\n            ':hover .ms-ContextualMenu-icon': {\r\n                color: 'inherit',\r\n            },\r\n        };\r\n\r\n        const styles = {\r\n            subComponentStyles: {\r\n                callout: {\r\n                    root: {\r\n                        boxShadow: ShadowLevels.shadowLevel3,\r\n                        zIndex: 999,\r\n                        selectors: {\r\n                            '.ms-ContextualMenu': {\r\n                                backgroundColor: 'transparent',\r\n                            },\r\n                            '.ms-ContextualMenu-link, .ms-ContextualMenu-header': {\r\n                                padding: '0 16px',\r\n                            },\r\n                            '.ms-ContextualMenu-itemText': {\r\n                                margin: '0 16px 0 0',\r\n                            },\r\n                            '.ms-ContextualMenu-checkmarkIcon': {\r\n                                width: '14px',\r\n                            },\r\n                            '.ms-ContextualMenu-submenuIcon': {\r\n                                width: '14px',\r\n                            },\r\n                            '.ms-ContextualMenu-header': {\r\n                                fontSize: FontSizes.size14,\r\n                            },\r\n                        },\r\n                    },\r\n                    calloutMain: {\r\n                        paddingTop: '8px',\r\n                        paddingBottom: '8px',\r\n                    },\r\n                },\r\n\r\n                menuItem: (itemStyleProps: IContextualMenuItemStyleProps): Partial<IContextualMenuItemStyles> => {\r\n                    const { disabled, expanded, primaryDisabled, checked } = itemStyleProps;\r\n                    let THEME_LIGHT = palette.neutralQuaternary;\r\n                    let NEUTRAL_TERTIARY = palette.neutralTertiary;\r\n                    let NEUTRAL_PRIMARY = palette.neutralPrimary;\r\n                    let NEUTRAL_DARK = palette.neutralDark;\r\n                    let NEUTRAL_DARK_WHITE = palette.neutralDark;\r\n                    let NEUTRAL_QUATERNARY_ALT = palette.neutralTertiaryAlt;\r\n\r\n                    // Dark theme overrides\r\n                    if (isDarkTheme(themeName)) {\r\n                        NEUTRAL_QUATERNARY_ALT = palette.white;\r\n                        THEME_LIGHT = palette.neutralTertiaryAlt;\r\n                    }\r\n\r\n                    // Contrast theme overrides\r\n                    if (isContrastTheme(themeName)) {\r\n                        THEME_LIGHT = palette.themePrimary;\r\n                        NEUTRAL_TERTIARY = ContrastColors.appGreenContrast;\r\n                        NEUTRAL_PRIMARY = palette.black;\r\n                        NEUTRAL_DARK = palette.neutralDark;\r\n                        NEUTRAL_DARK_WHITE = palette.white;\r\n                        NEUTRAL_QUATERNARY_ALT = palette.black;\r\n                    }\r\n\r\n                    const menuStyles = {\r\n                        divider: {\r\n                            margin: '8px 0',\r\n                            height: '1px',\r\n                            backgroundColor: NEUTRAL_QUATERNARY_ALT,\r\n                        },\r\n                        root: [\r\n                            {\r\n                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                color: palette.neutralDark,\r\n                                // High contrast styles https://github.com/microsoft/fluentui/issues/30069\r\n                                '@media (forced-colors: active)': {\r\n                                    ':hover, :focus, :focus:hover': {\r\n                                        forcedColorAdjust: 'none',\r\n                                    },\r\n                                },\r\n                            },\r\n                            !disabled && {\r\n                                ...commonStyles,\r\n                            },\r\n                            expanded && {\r\n                                ...hoverActiveStyles(TEXT_COLOR_HOVER_ACTIVE, THEME_LIGHT),\r\n                                selectors: {\r\n                                    ':hover': {\r\n                                        backgroundColor: BACKGROUND_COLOR_ACTIVE,\r\n                                    },\r\n                                },\r\n                            },\r\n                            disabled && {\r\n                                color: NEUTRAL_TERTIARY,\r\n                            },\r\n                        ],\r\n                        splitPrimary: [\r\n                            {\r\n                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                padding: '0 16px',\r\n                                color: NEUTRAL_DARK,\r\n                                selectors: {\r\n                                    '&:hover ~ button': {\r\n                                        backgroundColor: `${THEME_LIGHT} !important`,\r\n                                        color: NEUTRAL_DARK_WHITE,\r\n                                        selectors: {\r\n                                            '.ms-ContextualMenu-submenuIcon': {\r\n                                                color: NEUTRAL_DARK_WHITE,\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                            !(disabled || primaryDisabled) &&\r\n                                !checked && {\r\n                                    ...commonStyles,\r\n                                },\r\n                            (disabled || primaryDisabled) && {\r\n                                color: NEUTRAL_TERTIARY,\r\n                                selectors: {\r\n                                    '.ms-ContextualMenu-icon': {\r\n                                        color: NEUTRAL_TERTIARY,\r\n                                    },\r\n                                },\r\n                            },\r\n                            checked && {\r\n                                selectors: {\r\n                                    '.ms-ContextualMenu-checkmarkIcon': {\r\n                                        color: NEUTRAL_PRIMARY,\r\n                                    },\r\n                                },\r\n                            },\r\n                        ],\r\n                        splitMenu: [\r\n                            {\r\n                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                width: CONTEXTUAL_MENU_ITEM_HEIGHT, // to match the numbers from the default styles\r\n                                ...commonStyles,\r\n                            },\r\n                            expanded && {\r\n                                ...hoverActiveStyles(TEXT_COLOR_HOVER_ACTIVE, THEME_LIGHT),\r\n                                selectors: {\r\n                                    ':hover': {\r\n                                        backgroundColor: BACKGROUND_COLOR_ACTIVE,\r\n                                    },\r\n                                },\r\n                            },\r\n                        ],\r\n                        icon: [{ ...iconStyles }, disabled && { color: NEUTRAL_TERTIARY }],\r\n                        checkmarkIcon: [{ ...iconStyles }],\r\n\r\n                        splitContainer: [\r\n                            {\r\n                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                backgroundColor: 'transparent !important',\r\n                                selectors: {\r\n                                    button: {\r\n                                        selectors: {\r\n                                            '.ms-ContextualMenu-submenuIcon': {\r\n                                                margin: 0,\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                            !(disabled || primaryDisabled) &&\r\n                                !checked && {\r\n                                    selectors: { ...isFocusVisible },\r\n                                },\r\n                            disabled && { color: NEUTRAL_TERTIARY },\r\n                        ],\r\n                        subMenuIcon: [\r\n                            {\r\n                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\r\n                                fontSize: FontSizes.size12,\r\n                                color: NEUTRAL_DARK,\r\n                            },\r\n                            expanded && {\r\n                                ...hoverActiveStyles(TEXT_COLOR_HOVER_ACTIVE, THEME_LIGHT),\r\n                                selectors: {\r\n                                    ':hover': {\r\n                                        backgroundColor: BACKGROUND_COLOR_ACTIVE,\r\n                                    },\r\n                                },\r\n                            },\r\n                            disabled && { color: NEUTRAL_TERTIARY },\r\n                        ],\r\n                    } as Partial<IContextualMenuItemStyles>;\r\n                    return menuStyles;\r\n                },\r\n            },\r\n        };\r\n\r\n        // Dark theme overrides\r\n        if (isDarkTheme(themeName)) {\r\n            styles.subComponentStyles.callout.root.boxShadow = ShadowLevels.shadowLevel3Dark;\r\n        }\r\n\r\n        // Contrast theme overrides\r\n        if (isContrastTheme(themeName)) {\r\n            styles.subComponentStyles.callout.root.boxShadow = 'none';\r\n        }\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { ILabelStyleProps, ILabelStyles, ITextFieldStyleProps, ITextFieldStyles, ITheme } from '@fluentui/react';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getTextFieldStyles(themeName: string, _theme: ITheme) {\r\n    return (props: ITextFieldStyleProps): Partial<ITextFieldStyles> => {\r\n        const { focused, disabled, hasErrorMessage, multiline, theme } = props;\r\n        const { palette } = theme;\r\n        const FIELD_HEIGHT = '32px';\r\n        const MULTILINE_FIELD_HEIGHT = '94px';\r\n\r\n        let FIELD_GROUP_BACKGROUND_COLOR = palette.neutralLight;\r\n        let FIELD_GROUP_OPACITY = 0.36;\r\n        let FIELD_COLOR = palette.black;\r\n        let FIELD_COLOR_PLACEHOLDER_NOT_DISABLED = palette.neutralDark;\r\n        let FIELD_COLOR_PLACEHOLDER_DISABLED = palette.neutralDark;\r\n        let FIELD_GROUP_BORDER_WIDTH = '0 0 2px 0';\r\n        let FIELD_GROUP_BORDER_COLOR = 'transparent';\r\n        let FIELD_GROUP_BORDER_COLOR_DISABLED = 'transparent';\r\n        let FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = palette.themePrimary;\r\n        let FIELD_GROUP_BORDER_WIDTH_ACTIVE = FIELD_GROUP_BORDER_WIDTH;\r\n        const ERROR_MESSAGE_COLOR = theme.palette.redDark;\r\n\r\n        // Dark theme overrides\r\n        if (isDarkTheme(themeName)) {\r\n            FIELD_GROUP_BACKGROUND_COLOR = palette.neutralLighter;\r\n            FIELD_COLOR = palette.black;\r\n            FIELD_COLOR_PLACEHOLDER_NOT_DISABLED = palette.neutralDark;\r\n            FIELD_COLOR_PLACEHOLDER_DISABLED = palette.neutralPrimary;\r\n        }\r\n\r\n        // Contrast theme overrides\r\n        if (isContrastTheme(themeName)) {\r\n            FIELD_GROUP_BACKGROUND_COLOR = palette.white;\r\n            FIELD_GROUP_OPACITY = 1;\r\n            FIELD_COLOR = palette.black;\r\n            FIELD_COLOR_PLACEHOLDER_NOT_DISABLED = palette.black;\r\n            FIELD_COLOR_PLACEHOLDER_DISABLED = ContrastColors.appGreenContrast;\r\n            FIELD_GROUP_BORDER_WIDTH = '1px 1px 1px 1px';\r\n            FIELD_GROUP_BORDER_COLOR = palette.black;\r\n            FIELD_GROUP_BORDER_COLOR_DISABLED = ContrastColors.appGreenContrast;\r\n            FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = palette.themeDark;\r\n            FIELD_GROUP_BORDER_WIDTH_ACTIVE = '1px 1px 2px 1px';\r\n        }\r\n\r\n        const isActiveOpenStyles = {\r\n            selectors: {\r\n                '.ms-TextField-fieldGroup': {\r\n                    borderBottomColor: FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE,\r\n                    borderWidth: FIELD_GROUP_BORDER_WIDTH_ACTIVE,\r\n                    // Need 2px border raidus as the border width is 2px.\r\n                    borderBottomRightRadius: teamsBorderRadius,\r\n                    borderBottomLeftRadius: teamsBorderRadius,\r\n                },\r\n                textarea: {\r\n                    selectors: {\r\n                        '& .ms-TextField-fieldGroup': {\r\n                            height: 'auto',\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        const styles = {\r\n            root: {\r\n                selectors: {\r\n                    '.ms-TextField-fieldGroup': {\r\n                        backgroundColor: FIELD_GROUP_BACKGROUND_COLOR,\r\n                    },\r\n                    '&.is-active': { ...isActiveOpenStyles },\r\n                    '.ms-DatePicker.is-open &': { ...isActiveOpenStyles },\r\n                    '&.is-disabled': {\r\n                        selectors: {\r\n                            '.ms-TextField-fieldGroup': {\r\n                                borderColor: FIELD_GROUP_BORDER_COLOR_DISABLED,\r\n                                selectors: {\r\n                                    'input, textarea': {\r\n                                        color: FIELD_COLOR_PLACEHOLDER_DISABLED,\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            subComponentStyles: {\r\n                label: getLabelStyles,\r\n            },\r\n            fieldGroup: [\r\n                {\r\n                    borderRadius: teamsBorderRadius,\r\n                    borderWidth: FIELD_GROUP_BORDER_WIDTH,\r\n                    borderStyle: 'Solid',\r\n                    borderColor: FIELD_GROUP_BORDER_COLOR,\r\n                    height: !multiline ? FIELD_HEIGHT : 'auto',\r\n                    selectors: {\r\n                        '::after': {\r\n                            display: 'none',\r\n                        },\r\n                    },\r\n                },\r\n                disabled && {\r\n                    opacity: FIELD_GROUP_OPACITY,\r\n                },\r\n                !focused &&\r\n                    !disabled &&\r\n                    !hasErrorMessage && {\r\n                        selectors: {\r\n                            ':hover': {\r\n                                borderColor: FIELD_GROUP_BORDER_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                hasErrorMessage && [\r\n                    {\r\n                        borderColor: FIELD_GROUP_BORDER_COLOR,\r\n                        color: 'red',\r\n                        selectors: {\r\n                            '&:focus, &:hover': {\r\n                                borderColor: FIELD_GROUP_BORDER_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n            ],\r\n            field: {\r\n                color: FIELD_COLOR,\r\n                height: !multiline ? FIELD_HEIGHT : MULTILINE_FIELD_HEIGHT,\r\n                padding: !multiline ? '0 12px 2px' : '7px 12px 9px',\r\n                backgroundColor: 'transparent',\r\n                selectors: {\r\n                    '::placeholder': [\r\n                        !disabled && { color: FIELD_COLOR_PLACEHOLDER_NOT_DISABLED },\r\n                        disabled && { color: FIELD_COLOR_PLACEHOLDER_DISABLED },\r\n                    ],\r\n                    ':-ms-input-placeholder': [\r\n                        !disabled && { color: FIELD_COLOR_PLACEHOLDER_NOT_DISABLED },\r\n                        disabled && { color: FIELD_COLOR_PLACEHOLDER_DISABLED },\r\n                    ],\r\n                },\r\n            },\r\n            errorMessage: {\r\n                color: ERROR_MESSAGE_COLOR,\r\n            },\r\n        } as Partial<ITextFieldStyles>;\r\n        return styles;\r\n    };\r\n}\r\n\r\nfunction getLabelStyles(props: ILabelStyleProps): ILabelStyles {\r\n    return {\r\n        root: {\r\n            color: props.theme.palette.neutralDark,\r\n            paddingTop: 0,\r\n            paddingBottom: '6px',\r\n            fontSize: FontSizes.size12,\r\n        },\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IPanelStyles, ITheme, FontWeights, IRawStyle } from '@fluentui/react';\r\nimport { CoreColors, ContrastColors, DarkColors } from '../teams-colors';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\n\r\nexport function getPanelStyles(themeName: string, theme: ITheme): Partial<IPanelStyles> {\r\n    let BUTTON_ICON_HOVER_COLOR = theme.palette.themePrimary;\r\n\r\n    if (isContrastTheme(themeName)) {\r\n        BUTTON_ICON_HOVER_COLOR = theme.palette.themeDark;\r\n    }\r\n    const styles = {\r\n        main: {\r\n            selectors: {\r\n                '&.ms-Panel-main': {\r\n                    borderWidth: 0,\r\n                    borderStyle: 'solid',\r\n                    borderColor: theme.palette.black,\r\n                },\r\n            },\r\n        },\r\n        overlay: {\r\n            backgroundColor: CoreColors.overlayBackground,\r\n        },\r\n        closeButton: {\r\n            color: theme.palette.black,\r\n            selectors: {\r\n                '&:hover': {\r\n                    color: theme.palette.themePrimary,\r\n                    backgroundColor: 'transparent',\r\n                    selectors: {\r\n                        i: {\r\n                            fontWeight: FontWeights.bold,\r\n                        },\r\n                    },\r\n                },\r\n                '&:active': {\r\n                    color: theme.palette.themePrimary,\r\n                    backgroundColor: 'transparent',\r\n                    selectors: {\r\n                        i: {\r\n                            fontWeight: FontWeights.bold,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        commands: {\r\n            paddingTop: '10px',\r\n            paddingBottom: '20px',\r\n        },\r\n        content: {\r\n            color: theme.palette.black,\r\n            selectors: {\r\n                '.ms-Button--icon': {\r\n                    selectors: {\r\n                        i: {\r\n                            color: theme.palette.black,\r\n                        },\r\n                        ':hover': {\r\n                            backgroundColor: 'transparent',\r\n                            selectors: {\r\n                                i: {\r\n                                    fontWeight: 'bold',\r\n                                    color: BUTTON_ICON_HOVER_COLOR,\r\n                                },\r\n                            },\r\n                        },\r\n                        ':active': {\r\n                            backgroundColor: 'transparent',\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        headerText: {\r\n            color: theme.palette.black,\r\n        },\r\n    } as Partial<IPanelStyles>;\r\n\r\n    // Dark theme overrides\r\n    if (isDarkTheme(themeName)) {\r\n        (styles.overlay as IRawStyle).backgroundColor = DarkColors.overlayBackground;\r\n    }\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        (styles.overlay as IRawStyle).backgroundColor = ContrastColors.overlayBackground;\r\n\r\n        ((styles.main as Required<IRawStyle>).selectors['&.ms-Panel-main'] as IRawStyle).borderWidth = '2px';\r\n\r\n        ((styles.closeButton as Required<IRawStyle>).selectors['&:hover'] as IRawStyle).color = theme.palette.themeDark;\r\n        ((styles.closeButton as Required<IRawStyle>).selectors['&:active'] as IRawStyle).color =\r\n            theme.palette.themeDark;\r\n    }\r\n\r\n    return styles;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IButtonStyles, ITheme, IRawStyle } from '@fluentui/react';\r\nimport { ShadowLevels } from '../teams-shadow-levels';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getPrimaryButtonStyles(themeName: string, theme: ITheme): Partial<IButtonStyles> {\r\n    let iconFillColor = theme.palette.white;\r\n    const buttonBoxShadow = ShadowLevels.shadowLevel1Dark;\r\n    const buttonBorderRadius = teamsBorderRadius;\r\n    const rootColor = theme.palette.themePrimary;\r\n    const textColor = theme.palette.white;\r\n    const rootHoverColor = theme.palette.themeDark;\r\n    const rootPressedCheckedColor = theme.palette.themeDarker;\r\n\r\n    if (isContrastTheme(themeName)) {\r\n        iconFillColor = theme.palette.white;\r\n    }\r\n\r\n    if (isDarkTheme(themeName)) {\r\n        iconFillColor = theme.palette.black;\r\n    }\r\n\r\n    const styles = {\r\n        root: {\r\n            backgroundColor: rootColor,\r\n            color: textColor,\r\n            boxShadow: buttonBoxShadow,\r\n            borderColor: rootColor,\r\n            selectors: {\r\n                'svg, .icons-default-fill': {\r\n                    fill: iconFillColor,\r\n                },\r\n            },\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: rootHoverColor,\r\n            borderColor: rootHoverColor,\r\n            color: textColor,\r\n            selectors: {\r\n                'svg, .icons-default-fill': {\r\n                    fill: iconFillColor,\r\n                },\r\n            },\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: rootPressedCheckedColor,\r\n            borderColor: rootPressedCheckedColor,\r\n            color: textColor,\r\n            selectors: {\r\n                'svg, .icons-default-fill': {\r\n                    fill: iconFillColor,\r\n                },\r\n            },\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: rootPressedCheckedColor,\r\n            borderColor: rootPressedCheckedColor,\r\n            color: textColor,\r\n            selectors: {\r\n                'svg, .icons-default-fill': {\r\n                    fill: iconFillColor,\r\n                },\r\n            },\r\n        },\r\n        rootCheckedHovered: {\r\n            backgroundColor: rootHoverColor,\r\n            borderColor: rootHoverColor,\r\n            color: textColor,\r\n            selectors: {\r\n                'svg, .icons-default-fill': {\r\n                    fill: iconFillColor,\r\n                },\r\n            },\r\n        },\r\n        rootDisabled: {\r\n            backgroundColor: theme.palette.neutralQuaternary,\r\n            borderColor: theme.palette.neutralQuaternary,\r\n            color: theme.palette.neutralTertiary,\r\n            selectors: {\r\n                'svg, .icons-default-fill': {\r\n                    fill: theme.palette.neutralTertiary,\r\n                },\r\n            },\r\n        },\r\n        rootFocused: {\r\n            backgroundColor: rootColor,\r\n            borderColor: rootColor,\r\n            borderRadius: buttonBorderRadius,\r\n            color: textColor,\r\n            selectors: {\r\n                'svg, .icons-default-fill': {\r\n                    fill: iconFillColor,\r\n                },\r\n            },\r\n        },\r\n    } as Partial<IButtonStyles>;\r\n\r\n    // Dark theme overrides\r\n    if (isDarkTheme(themeName)) {\r\n        // Root\r\n        (styles.root as IRawStyle).color = theme.palette.black;\r\n        (styles.root as IRawStyle).backgroundColor = theme.palette.themeTertiary;\r\n        (styles.root as IRawStyle).borderColor = theme.palette.themeTertiary;\r\n\r\n        // Root Hovered\r\n        (styles.rootHovered as IRawStyle).color = theme.palette.black;\r\n        (styles.rootHovered as IRawStyle).backgroundColor = theme.palette.themeSecondary;\r\n        (styles.rootHovered as IRawStyle).borderColor = theme.palette.themeSecondary;\r\n        ((styles.rootHovered as Required<IRawStyle>).selectors['svg, .icons-default-fill'] as IRawStyle).fill =\r\n            theme.palette.black;\r\n\r\n        // Root Checked\r\n        (styles.rootChecked as IRawStyle).color = theme.palette.black;\r\n        (styles.rootChecked as IRawStyle).backgroundColor = theme.palette.themeLight;\r\n        (styles.rootChecked as IRawStyle).borderColor = theme.palette.themeLight;\r\n        ((styles.rootChecked as Required<IRawStyle>).selectors['svg, .icons-default-fill'] as IRawStyle).fill =\r\n            theme.palette.black;\r\n\r\n        // Root Checked Hovered\r\n        (styles.rootCheckedHovered as IRawStyle).color = theme.palette.black;\r\n        (styles.rootCheckedHovered as IRawStyle).backgroundColor = theme.palette.themeSecondary;\r\n        (styles.rootCheckedHovered as IRawStyle).borderColor = theme.palette.themeSecondary;\r\n        ((styles.rootCheckedHovered as Required<IRawStyle>).selectors['svg, .icons-default-fill'] as IRawStyle).fill =\r\n            theme.palette.black;\r\n\r\n        // Root Pressed\r\n        (styles.rootPressed as IRawStyle).color = theme.palette.black;\r\n        (styles.rootPressed as IRawStyle).backgroundColor = theme.palette.themeLight;\r\n        (styles.rootPressed as IRawStyle).borderColor = theme.palette.themeLight;\r\n        ((styles.rootPressed as Required<IRawStyle>).selectors['svg, .icons-default-fill'] as IRawStyle).fill =\r\n            theme.palette.black;\r\n\r\n        // Root Focused\r\n        (styles.rootFocused as IRawStyle).backgroundColor = theme.palette.themeTertiary;\r\n        (styles.rootFocused as IRawStyle).borderColor = theme.palette.themeTertiary;\r\n        (styles.rootFocused as IRawStyle).color = theme.palette.black;\r\n        ((styles.rootFocused as Required<IRawStyle>).selectors['svg, .icons-default-fill'] as IRawStyle).fill =\r\n            theme.palette.black;\r\n\r\n        // Root Disabled\r\n        ((styles.rootDisabled as Required<IRawStyle>).selectors['svg, .icons-default-fill'] as IRawStyle).fill =\r\n            theme.palette.neutralTertiary;\r\n    }\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        // Root\r\n        (styles.root as IRawStyle).color = theme.palette.white;\r\n        (styles.root as IRawStyle).backgroundColor = theme.palette.black;\r\n        (styles.root as IRawStyle).borderColor = theme.palette.black;\r\n\r\n        // Root Hovered\r\n        (styles.rootHovered as IRawStyle).backgroundColor = theme.palette.themeDark;\r\n        (styles.rootHovered as IRawStyle).borderColor = theme.palette.themeDark;\r\n        (styles.rootHovered as IRawStyle).borderWidth = '2px';\r\n\r\n        // Root Pressed\r\n        (styles.rootPressed as IRawStyle).backgroundColor = theme.palette.themeDark;\r\n        (styles.rootPressed as IRawStyle).borderColor = theme.palette.themeDark;\r\n\r\n        // Root Checked\r\n        (styles.rootChecked as IRawStyle).backgroundColor = theme.palette.themePrimary;\r\n        (styles.rootChecked as IRawStyle).borderColor = theme.palette.themePrimary;\r\n\r\n        // Root Checked Hovered\r\n        (styles.rootChecked as IRawStyle).backgroundColor = theme.palette.themeDark;\r\n        (styles.rootChecked as IRawStyle).borderColor = theme.palette.themeDark;\r\n\r\n        // Root Disabled\r\n        (styles.rootDisabled as IRawStyle).color = theme.palette.white;\r\n        (styles.rootDisabled as IRawStyle).backgroundColor = ContrastColors.appGreenContrast;\r\n        (styles.rootDisabled as IRawStyle).borderColor = ContrastColors.appGreenContrast;\r\n        ((styles.rootDisabled as Required<IRawStyle>).selectors['svg, .icons-default-fill'] as IRawStyle).fill =\r\n            theme.palette.white;\r\n\r\n        // Root Focused\r\n        (styles.rootFocused as IRawStyle).backgroundColor = theme.palette.themeDark;\r\n        (styles.rootFocused as IRawStyle).borderColor = theme.palette.themeDark;\r\n    }\r\n    return styles;\r\n}\r\n","import { ITheme, ITeachingBubbleStyles } from '@fluentui/react';\r\nimport { FontSizes } from '../teams-sizes';\r\n\r\nexport function getTeachingBubbleStyles(themeName: string, theme: ITheme): Partial<ITeachingBubbleStyles> {\r\n    return {\r\n        subComponentStyles: {\r\n            callout: {\r\n                root: {\r\n                    maxWidth: '280px',\r\n                    boxShadow: '0px 0px 2px rgba(0, 0, 0, 0.12), 0px 4px 8px rgba(0, 0, 0, 0.14)',\r\n                },\r\n                beak: {\r\n                    background: theme.palette.themePrimary,\r\n                    borderRadius: '3px',\r\n                    width: '12px',\r\n                    height: '12px',\r\n                },\r\n                calloutMain: {\r\n                    background: theme.palette.themePrimary,\r\n                },\r\n            },\r\n        },\r\n        content: {\r\n            backgroundColor: theme.palette.themePrimary,\r\n        },\r\n        headline: {\r\n            fontSize: FontSizes.size18,\r\n            fontWeight: '700',\r\n            lineHeight: FontSizes.size24,\r\n        },\r\n        subText: {\r\n            fontSize: FontSizes.size12,\r\n        },\r\n        closeButton: {\r\n            margin: '14px 18px 0px 0px',\r\n            padding: '0px 0px',\r\n            fontSize: '20px',\r\n            height: '20px',\r\n            width: '20px',\r\n            ' i': {\r\n                fontSize: '19px',\r\n                margin: '0px 0px',\r\n                height: '20px',\r\n                lineHeight: '20px',\r\n            },\r\n        },\r\n        body: {\r\n            ':not(:last-child)': { marginBottom: '0px' },\r\n            lineHeight: FontSizes.size16,\r\n        },\r\n        header: {\r\n            ':not(:last-child)': { marginBottom: '12px' },\r\n        },\r\n        bodyContent: {\r\n            padding: '12px 16px',\r\n            lineHeight: FontSizes.size16,\r\n            fontSize: FontSizes.size12,\r\n            fontWeight: '400',\r\n            whiteSpace: 'pre-wrap',\r\n            background: theme.palette.themePrimary,\r\n        },\r\n        secondaryButton: {\r\n            borderColor: theme.palette.themeTertiary,\r\n            '.ms-Button-label': {\r\n                fontWeight: '500',\r\n            },\r\n        },\r\n        footer: {\r\n            marginTop: '12px',\r\n            flexDirection: 'column',\r\n            alignItems: 'stretch',\r\n            '.ms-StackItem': {\r\n                width: '100%',\r\n            },\r\n            '.ms-Button:not(:first-child)': {\r\n                margin: '0px',\r\n            },\r\n        },\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IDropdownStyleProps, IDropdownStyles, ITheme } from '@fluentui/react';\r\nimport { ContrastColors, CoreColors, DarkColors } from '../teams-colors';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getDropdownStyles(themeName: string, _theme: ITheme, background?: string) {\r\n    return (props: IDropdownStyleProps): Partial<IDropdownStyles> => {\r\n        const { theme, disabled, isOpen, hasError, isRenderingPlaceholder } = props;\r\n        if (!theme) {\r\n            throw new Error('theme is undefined or null in base Dropdown getStyles function.');\r\n        }\r\n        const { palette } = theme;\r\n\r\n        let ROOT_BACKGROUND_COLOR = theme.palette.neutralLight;\r\n        let FIELD_GROUP_OPACITY = 0.36;\r\n\r\n        const TEXT_COLOR = theme.palette.black;\r\n        let HOVER_COLOR = theme.palette.black;\r\n        let HOVER_BACKGROUND_COLOR = theme.palette.neutralLight;\r\n        let FOCUS_BACKGROUND_COLOR = theme.palette.neutralTertiaryAlt;\r\n\r\n        const DROPDOWN_ITEM_COLOR = theme.palette.neutralDark;\r\n        let DROPDOWN_ITEM_SELECTED_BACKGROUND_COLOR = theme.palette.neutralQuaternary;\r\n        let DROPDOWN_ITEM_SELECTED_HOVER_BACKGROUND_COLOR = theme.palette.neutralTertiaryAlt;\r\n\r\n        let DROPDOWN_ITEM_SELECTED_HOVER_TEXT_COLOR = theme.palette.black;\r\n\r\n        let FIELD_GROUP_BORDER_WIDTH = '0 0 2px 0';\r\n        let FIELD_GROUP_BORDER_COLOR = 'transparent';\r\n        let CALLOUT_BORDER_COLOR = CoreColors.appBlackAlpha10;\r\n\r\n        let FIELD_GROUP_BORDER_WIDTH_ACTIVE = FIELD_GROUP_BORDER_WIDTH;\r\n        let FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = theme.palette.themePrimary;\r\n\r\n        let FIELD_GROUP_BORDER_COLOR_DISABLED = 'transparent';\r\n        let FIELD_COLOR_PLACEHOLDER_DISABLED = theme.palette.neutralDark;\r\n\r\n        let FOCUS_VISIBLE_BORDER = theme.palette.white;\r\n        let FOCUS_VISIBLE_OUTLINE = `1px solid ${theme.palette.black}`;\r\n        let FOCUS_VISIBLE_BACKGROUND_COLOR = 'transparent';\r\n\r\n        let ERROR_BORDER_COLOR = CoreColors.appRed;\r\n\r\n        if (isDarkTheme(themeName)) {\r\n            ROOT_BACKGROUND_COLOR = theme.palette.white;\r\n            CALLOUT_BORDER_COLOR = palette.white;\r\n\r\n            HOVER_COLOR = theme.palette.black;\r\n            HOVER_BACKGROUND_COLOR = theme.palette.neutralQuaternary;\r\n            FOCUS_BACKGROUND_COLOR = theme.palette.neutralTertiary;\r\n\r\n            DROPDOWN_ITEM_SELECTED_BACKGROUND_COLOR = theme.palette.neutralTertiaryAlt;\r\n            DROPDOWN_ITEM_SELECTED_HOVER_BACKGROUND_COLOR = theme.palette.neutralTertiary;\r\n\r\n            FIELD_COLOR_PLACEHOLDER_DISABLED = theme.palette.neutralPrimary;\r\n\r\n            ERROR_BORDER_COLOR = DarkColors.appRed;\r\n        }\r\n\r\n        if (isContrastTheme(themeName)) {\r\n            ROOT_BACKGROUND_COLOR = theme.palette.white;\r\n            FIELD_GROUP_OPACITY = 1;\r\n\r\n            HOVER_COLOR = theme.palette.white;\r\n            HOVER_BACKGROUND_COLOR = theme.palette.themeDark;\r\n            FOCUS_BACKGROUND_COLOR = theme.palette.themeDark;\r\n\r\n            DROPDOWN_ITEM_SELECTED_BACKGROUND_COLOR = theme.palette.themePrimary;\r\n            DROPDOWN_ITEM_SELECTED_HOVER_BACKGROUND_COLOR = theme.palette.themeDark;\r\n\r\n            DROPDOWN_ITEM_SELECTED_HOVER_TEXT_COLOR = theme.palette.themeDarker;\r\n\r\n            FIELD_GROUP_BORDER_COLOR = theme.palette.black;\r\n            FIELD_GROUP_BORDER_WIDTH = '1px 1px 1px 1px';\r\n            CALLOUT_BORDER_COLOR = palette.black;\r\n\r\n            FIELD_GROUP_BORDER_WIDTH_ACTIVE = '1px 1px 2px 1px';\r\n            FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE = theme.palette.themeDark;\r\n\r\n            FIELD_GROUP_BORDER_COLOR_DISABLED = ContrastColors.appGreenContrast;\r\n            FIELD_COLOR_PLACEHOLDER_DISABLED = ContrastColors.appGreenContrast;\r\n\r\n            ERROR_BORDER_COLOR = theme.palette.black;\r\n\r\n            FOCUS_VISIBLE_BORDER = 'transparent';\r\n            FOCUS_VISIBLE_OUTLINE = 'none';\r\n            FOCUS_VISIBLE_BACKGROUND_COLOR = theme.palette.themeDark;\r\n        }\r\n\r\n        // If this combobox is on gray background\r\n        if (background === 'gray') {\r\n            ROOT_BACKGROUND_COLOR = theme.palette.white;\r\n        }\r\n\r\n        const isActive = {\r\n            borderWidth: FIELD_GROUP_BORDER_WIDTH_ACTIVE,\r\n            borderColor: FIELD_GROUP_BORDER_COLOR,\r\n            borderBottomColor: FIELD_GROUP_BORDER_BOTTOM_COLOR_ACTIVE,\r\n            borderBottomRightRadius: teamsBorderRadius,\r\n            borderBottomLeftRadius: teamsBorderRadius,\r\n        };\r\n\r\n        const isFocusVisible = {\r\n            '.ms-Fabric--isFocusVisible &': {\r\n                selectors: {\r\n                    ':focus': {\r\n                        backgroundColor: FOCUS_VISIBLE_BACKGROUND_COLOR,\r\n                        selectors: {\r\n                            ':after': {\r\n                                backgroundColor: 'transparent',\r\n                                borderColor: FOCUS_VISIBLE_BORDER,\r\n                                outline: FOCUS_VISIBLE_OUTLINE,\r\n                            },\r\n                        },\r\n                    },\r\n                    ':focus:hover': {\r\n                        backgroundColor: FOCUS_VISIBLE_BACKGROUND_COLOR,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        const commonStyles = {\r\n            selectors: {\r\n                '.ms-Dropdown-titleIsPlaceHolder': {\r\n                    color: TEXT_COLOR,\r\n                },\r\n                '.ms-Dropdown-title': {\r\n                    color: TEXT_COLOR,\r\n                },\r\n                '.ms-Dropdown-caretDown': {\r\n                    color: TEXT_COLOR,\r\n                },\r\n            },\r\n        };\r\n\r\n        const styles = {\r\n            callout: {\r\n                border: `1px solid ${CALLOUT_BORDER_COLOR}`,\r\n                selectors: {\r\n                    '.ms-Callout-main': {\r\n                        paddingTop: '8px',\r\n                        paddingBottom: '8px',\r\n                    },\r\n                },\r\n            },\r\n            title: [\r\n                {\r\n                    paddingLeft: '12px',\r\n                    paddingRight: '32px',\r\n                    color: TEXT_COLOR,\r\n                    minWidth: 'auto',\r\n                    border: 'none',\r\n                    height: 30,\r\n                    backgroundColor: 'transparent',\r\n                },\r\n                isRenderingPlaceholder && {\r\n                    color: TEXT_COLOR,\r\n                },\r\n                disabled && {\r\n                    color: FIELD_COLOR_PLACEHOLDER_DISABLED,\r\n                },\r\n            ],\r\n            dropdownItemHeader: {\r\n                padding: '0 8px',\r\n                color: theme.palette.neutralDark,\r\n            },\r\n            dropdownDivider: {\r\n                margin: '4px 0',\r\n                height: '2px',\r\n                backgroundColor: theme.palette.neutralLight,\r\n                border: 'none',\r\n            },\r\n            dropdown: [\r\n                {\r\n                    borderRadius: teamsBorderRadius,\r\n                    borderWidth: FIELD_GROUP_BORDER_WIDTH,\r\n                    borderStyle: 'solid',\r\n                    borderColor: FIELD_GROUP_BORDER_COLOR,\r\n                    backgroundColor: ROOT_BACKGROUND_COLOR,\r\n                    height: 32,\r\n                    boxSizing: 'border-box',\r\n                    color: TEXT_COLOR,\r\n                    selectors: {\r\n                        '::after': {\r\n                            display: 'none',\r\n                        },\r\n                    },\r\n                },\r\n                !disabled && {\r\n                    selectors: {\r\n                        ':hover': {\r\n                            ...commonStyles,\r\n                        },\r\n                        ':active': {\r\n                            ...commonStyles,\r\n                        },\r\n                        ':focus': {\r\n                            ...commonStyles,\r\n                        },\r\n                    },\r\n                },\r\n                isOpen &&\r\n                    !disabled &&\r\n                    !hasError && {\r\n                        ...isActive,\r\n                    },\r\n                !disabled &&\r\n                    !hasError && {\r\n                        selectors: {\r\n                            '.ms-Fabric--isFocusVisible &': {\r\n                                selectors: {\r\n                                    ':focus': {\r\n                                        ...isActive,\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                disabled && {\r\n                    opacity: FIELD_GROUP_OPACITY,\r\n                    borderColor: FIELD_GROUP_BORDER_COLOR_DISABLED,\r\n                },\r\n                hasError && {\r\n                    borderColor: ERROR_BORDER_COLOR,\r\n                    borderBottomRightRadius: teamsBorderRadius,\r\n                    borderBottomLeftRadius: teamsBorderRadius,\r\n                    borderWidth: FIELD_GROUP_BORDER_WIDTH,\r\n                },\r\n            ],\r\n            caretDownWrapper: {\r\n                height: 30,\r\n                right: '12px',\r\n                display: 'flex',\r\n                // alignItems: 'center',\r\n            },\r\n            caretDown: [\r\n                {\r\n                    color: TEXT_COLOR,\r\n                },\r\n                disabled && {\r\n                    color: FIELD_COLOR_PLACEHOLDER_DISABLED,\r\n                },\r\n            ],\r\n            dropdownItemDisabled: {\r\n                color: FIELD_COLOR_PLACEHOLDER_DISABLED,\r\n                opacity: FIELD_GROUP_OPACITY,\r\n            },\r\n            dropdownItems: {\r\n                selectors: {\r\n                    '.ms-Checkbox': {\r\n                        selectors: {\r\n                            '& .is-checked': {\r\n                                backgroundColor: 'transparent',\r\n                            },\r\n                            ':hover': {\r\n                                backgroundColor: HOVER_BACKGROUND_COLOR,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            dropdownItem: [\r\n                {\r\n                    color: DROPDOWN_ITEM_COLOR,\r\n                    padding: '4px 16px',\r\n                    minHeight: '32px',\r\n                    height: '32px',\r\n                    selectors: {\r\n                        ':hover': {\r\n                            color: HOVER_COLOR,\r\n                            backgroundColor: HOVER_BACKGROUND_COLOR,\r\n                        },\r\n                        ':focus': {\r\n                            color: HOVER_COLOR,\r\n                            backgroundColor: DROPDOWN_ITEM_SELECTED_BACKGROUND_COLOR,\r\n                        },\r\n                        ':active': {\r\n                            color: HOVER_COLOR,\r\n                            backgroundColor: FOCUS_BACKGROUND_COLOR,\r\n                        },\r\n                        ':hover:focus': {\r\n                            color: HOVER_COLOR,\r\n                            backgroundColor: HOVER_BACKGROUND_COLOR,\r\n                        },\r\n                        ':active:hover': {\r\n                            color: HOVER_COLOR,\r\n                            backgroundColor: FOCUS_BACKGROUND_COLOR,\r\n                        },\r\n                        ...isFocusVisible,\r\n                    },\r\n                },\r\n            ],\r\n            dropdownItemSelected: {\r\n                backgroundColor: DROPDOWN_ITEM_SELECTED_BACKGROUND_COLOR,\r\n                color: HOVER_COLOR,\r\n                padding: '4px 16px',\r\n                minHeight: '3.2px',\r\n                height: '32px',\r\n                selectors: {\r\n                    ...isFocusVisible,\r\n                    ':focus': {\r\n                        backgroundColor: DROPDOWN_ITEM_SELECTED_BACKGROUND_COLOR,\r\n                    },\r\n                    ':hover': {\r\n                        color: HOVER_COLOR,\r\n                        backgroundColor: DROPDOWN_ITEM_SELECTED_HOVER_BACKGROUND_COLOR,\r\n                    },\r\n                    ':focus:hover': {\r\n                        color: HOVER_COLOR,\r\n                        backgroundColor: DROPDOWN_ITEM_SELECTED_HOVER_BACKGROUND_COLOR,\r\n                    },\r\n                    ':hover .ms-Dropdown-optionText': {\r\n                        color: DROPDOWN_ITEM_SELECTED_HOVER_TEXT_COLOR,\r\n                    },\r\n                },\r\n            },\r\n        } as Partial<IDropdownStyles>;\r\n\r\n        return styles;\r\n    };\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IButtonStyles, ITheme, IRawStyle } from '@fluentui/react';\r\nimport { ShadowLevels } from '../teams-shadow-levels';\r\nimport { ContrastColors } from '../teams-colors';\r\nimport { FontSizes } from '../teams-sizes';\r\nimport { isContrastTheme, isDarkTheme } from '../teams-theme';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getCompoundButtonStyles(themeName: string, theme: ITheme): Partial<IButtonStyles> {\r\n    const buttonBorderRadius = teamsBorderRadius;\r\n    const rootPrimaryShadow = ShadowLevels.shadowLevel1Dark;\r\n\r\n    // SVG\r\n    let svgFillColor = theme.palette.white;\r\n    let svgBackgroundColor = theme.palette.themePrimary;\r\n    let svgFillColorPrimary = theme.palette.themePrimary;\r\n    const rootSvgBackgroundColor = theme.palette.white;\r\n    let rootHoveredSvgFillColor = theme.palette.white;\r\n    let rootHoveredSvgBackgroundColor = theme.palette.themePrimary;\r\n    let rootHoveredSvgFillColorPrimary = theme.palette.themePrimary;\r\n    let rootDisabledSvgBackgroundColor = theme.palette.neutralTertiary;\r\n    let rootDisabledSvgFillColorPrimary = theme.palette.neutralQuaternary;\r\n\r\n    // Root\r\n    let rootBackgroundColor = theme.palette.white;\r\n    let rootShadow = ShadowLevels.shadowLevel1;\r\n    let rootBorderColor = theme.palette.neutralTertiaryAlt;\r\n    let rootBorderWidth = '1px';\r\n\r\n    // Root Hovered\r\n    let rootHoveredBackgroundColor = theme.palette.neutralQuaternary;\r\n    let rootHoveredBorderColor = theme.palette.neutralTertiary;\r\n    let rootHoveredColor = theme.palette.black;\r\n\r\n    // Root Pressed\r\n    let rootPressedBackgroundColor = theme.palette.neutralTertiaryAlt;\r\n    let rootPressedBorderColor = theme.palette.neutralTertiary;\r\n    let rootPressedColor = theme.palette.black;\r\n\r\n    // Root Disabled\r\n    let rootDisabledBackgroundColor = theme.palette.neutralQuaternary;\r\n    let rootDisabledColor = theme.palette.neutralTertiary;\r\n    let rootDisabledBorderColor = 'transparent';\r\n\r\n    // Root Checked\r\n    let rootCheckedBorderColor = theme.palette.neutralTertiary;\r\n    let rootCheckedColor = theme.palette.black;\r\n\r\n    // Root Primary\r\n    let rootBackgroundColorPrimary = theme.palette.themePrimary;\r\n    let rootBorderColorPrimary = theme.palette.themePrimary;\r\n    let rootColorPrimary = theme.palette.white;\r\n\r\n    // Root Hovered Primary\r\n    let rootHoveredBackgroundColorPrimary = theme.palette.themeDark;\r\n    let rootHoveredBorderColorPrimary = theme.palette.themeDark;\r\n    let rootHoveredColorPrimary = theme.palette.white;\r\n\r\n    // Root Pressed Primary\r\n    let rootPressedBackgroundColorPrimary = theme.palette.themeDarker;\r\n    let rootPressedBorderColorPrimary = theme.palette.themeDarker;\r\n    let rootPressedColorPrimary = theme.palette.white;\r\n\r\n    // Root Disabled Primary\r\n    let rootDisabledBackgroundColorPrimary = theme.palette.neutralQuaternary;\r\n    let rootDisabledBorderColorPrimary = theme.palette.neutralQuaternary;\r\n    let rootDisabledColorPrimary = theme.palette.neutralTertiary;\r\n\r\n    // Root Checked Primary\r\n    let rootCheckedBackgroundColorPrimary = theme.palette.themeDarker;\r\n    let rootCheckedBorderColorPrimary = theme.palette.themeDarker;\r\n    let rootCheckedColorPrimary = theme.palette.white;\r\n\r\n    // Root Checked Hovered Primary\r\n    let rootCheckedHoveredBackgroundColorPrimary = theme.palette.themeDark;\r\n    let rootCheckedHoveredBorderColorPrimary = theme.palette.themeDark;\r\n    let rootCheckedHoveredColorPrimary = theme.palette.white;\r\n\r\n    // Conditional only for contrast theme\r\n    let isFocusVisibleSVG = {};\r\n\r\n    if (isDarkTheme(themeName)) {\r\n        // Root\r\n        rootBackgroundColor = theme.palette.neutralLight;\r\n        rootShadow = ShadowLevels.shadowLevel1Dark;\r\n        rootBorderColor = theme.palette.neutralTertiary;\r\n\r\n        // Root Primary\r\n        rootBackgroundColorPrimary = theme.palette.themeTertiary;\r\n        rootBorderColorPrimary = theme.palette.themeTertiary;\r\n        rootColorPrimary = theme.palette.black;\r\n\r\n        // Root Hovered Primary\r\n        rootHoveredBackgroundColorPrimary = theme.palette.themeSecondary;\r\n        rootHoveredBorderColorPrimary = theme.palette.themeSecondary;\r\n        rootHoveredColorPrimary = theme.palette.black;\r\n\r\n        // Root Pressed Primary\r\n        rootPressedBackgroundColorPrimary = theme.palette.themeLight;\r\n        rootPressedBorderColorPrimary = theme.palette.themeLight;\r\n        rootPressedColorPrimary = theme.palette.black;\r\n\r\n        // Root Checked Primary\r\n        rootCheckedBackgroundColorPrimary = theme.palette.themeLight;\r\n        rootCheckedBorderColorPrimary = theme.palette.themeLight;\r\n        rootCheckedColorPrimary = theme.palette.black;\r\n\r\n        // Root Checked Hovered Primary\r\n        rootCheckedHoveredBackgroundColorPrimary = theme.palette.themeSecondary;\r\n        rootCheckedHoveredBorderColorPrimary = theme.palette.themeSecondary;\r\n        rootCheckedHoveredColorPrimary = theme.palette.black;\r\n    }\r\n\r\n    if (isContrastTheme(themeName)) {\r\n        // SVG\r\n        svgFillColor = theme.palette.white;\r\n        svgFillColorPrimary = theme.palette.black;\r\n        svgBackgroundColor = theme.palette.black;\r\n        rootHoveredSvgFillColor = theme.palette.black;\r\n        rootHoveredSvgBackgroundColor = theme.palette.white;\r\n        rootHoveredSvgFillColorPrimary = theme.palette.black;\r\n        rootDisabledSvgBackgroundColor = ContrastColors.appGreenContrast;\r\n        rootDisabledSvgFillColorPrimary = ContrastColors.appGreenContrast;\r\n\r\n        // Root\r\n        rootBorderWidth = '2px';\r\n\r\n        // Root Hovered\r\n        rootHoveredBackgroundColor = theme.palette.themeDark;\r\n        rootHoveredBorderColor = theme.palette.themeDark;\r\n        rootHoveredColor = theme.palette.white;\r\n\r\n        // Root Pressed\r\n        rootPressedBackgroundColor = theme.palette.themeDark;\r\n        rootPressedBorderColor = theme.palette.themeDark;\r\n        rootPressedColor = theme.palette.white;\r\n\r\n        // Root Disabled\r\n        rootDisabledBackgroundColor = theme.palette.white;\r\n        rootDisabledBorderColor = ContrastColors.appGreenContrast;\r\n        rootDisabledColor = ContrastColors.appGreenContrast;\r\n\r\n        // Root Checked\r\n        rootCheckedBorderColor = theme.palette.black;\r\n        rootCheckedColor = theme.palette.white;\r\n\r\n        // Root Primary\r\n        rootColorPrimary = theme.palette.white;\r\n        rootBackgroundColorPrimary = theme.palette.black;\r\n        rootBorderColorPrimary = theme.palette.black;\r\n\r\n        // Root Hovered Primary\r\n        rootHoveredBackgroundColorPrimary = theme.palette.themeDark;\r\n        rootHoveredBorderColorPrimary = theme.palette.themeDark;\r\n\r\n        // Root Pressed Primary\r\n        rootPressedBackgroundColorPrimary = theme.palette.themeDark;\r\n        rootPressedBorderColorPrimary = theme.palette.themeDark;\r\n\r\n        // Root Disabled Primary\r\n        rootDisabledBackgroundColorPrimary = ContrastColors.appGreenContrast;\r\n        rootDisabledBorderColorPrimary = ContrastColors.appGreenContrast;\r\n        rootDisabledColorPrimary = theme.palette.white;\r\n\r\n        // Root Checked Primary\r\n        rootCheckedBackgroundColorPrimary = theme.palette.themePrimary;\r\n        rootCheckedBorderColorPrimary = theme.palette.themePrimary;\r\n\r\n        // Root Checked Hovered Primary\r\n        rootCheckedBackgroundColorPrimary = theme.palette.themeDark;\r\n        rootCheckedBorderColorPrimary = theme.palette.themeDark;\r\n\r\n        isFocusVisibleSVG = {\r\n            selectors: {\r\n                svg: {\r\n                    background: theme.palette.white,\r\n                    fill: theme.palette.black,\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    const styles = {\r\n        root: {\r\n            borderRadius: buttonBorderRadius,\r\n            boxShadow: rootShadow,\r\n            backgroundColor: rootBackgroundColor,\r\n            borderColor: rootBorderColor,\r\n            borderWidth: rootBorderWidth,\r\n            color: theme.palette.black,\r\n            minHeight: 'auto',\r\n            padding: '12px',\r\n            selectors: {\r\n                '.ms-Button-icon': {\r\n                    color: 'inherit',\r\n                },\r\n                '.icons-default-fill': {\r\n                    fill: 'inherit',\r\n                },\r\n                svg: {\r\n                    width: '32px',\r\n                    height: '32px',\r\n                    padding: '6px',\r\n                    display: 'block',\r\n                    boxSizing: 'content-box',\r\n                    borderRadius: teamsBorderRadius,\r\n                    fill: svgFillColor,\r\n                    background: svgBackgroundColor,\r\n                },\r\n                '.icons-unfilled': {\r\n                    display: 'none',\r\n                },\r\n                '.icons-filled': {\r\n                    display: 'block',\r\n                },\r\n                '.ms-Fabric--isFocusVisible &': {\r\n                    selectors: {\r\n                        ':focus::after': {\r\n                            outline: 'none',\r\n                            borderRadius: buttonBorderRadius,\r\n                            borderColor: theme.palette.white,\r\n                            borderWidth: '1px',\r\n                            borderStyle: 'solid',\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                        },\r\n                        ':focus': {\r\n                            borderColor: theme.palette.black,\r\n                            ...isFocusVisibleSVG,\r\n                        },\r\n                    },\r\n                },\r\n                '&.ms-Button--compoundPrimary': {\r\n                    backgroundColor: rootBackgroundColorPrimary,\r\n                    borderColor: rootBorderColorPrimary,\r\n                    boxShadow: rootPrimaryShadow,\r\n                    color: rootColorPrimary,\r\n                    selectors: {\r\n                        svg: {\r\n                            fill: svgFillColorPrimary,\r\n                            background: rootSvgBackgroundColor,\r\n                        },\r\n                    },\r\n                },\r\n                '.ms-Button-description': {\r\n                    color: 'inherit !important', // important needed to override fabric color style\r\n                },\r\n            },\r\n        },\r\n        rootHovered: {\r\n            selectors: {\r\n                '&.ms-Button--compound:hover': {\r\n                    backgroundColor: rootHoveredBackgroundColor,\r\n                    borderColor: rootHoveredBorderColor,\r\n                    color: rootHoveredColor,\r\n                    selectors: {\r\n                        svg: {\r\n                            fill: rootHoveredSvgFillColor,\r\n                            background: rootHoveredSvgBackgroundColor,\r\n                        },\r\n                    },\r\n                },\r\n                '&.ms-Button--compoundPrimary:hover': {\r\n                    backgroundColor: rootHoveredBackgroundColorPrimary,\r\n                    borderColor: rootHoveredBorderColorPrimary,\r\n                    color: rootHoveredColorPrimary,\r\n                    selectors: {\r\n                        svg: {\r\n                            fill: rootHoveredSvgFillColorPrimary,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        rootPressed: {\r\n            boxShadow: 'none',\r\n            selectors: {\r\n                '&.ms-Button--compound:active': {\r\n                    backgroundColor: rootPressedBackgroundColor,\r\n                    borderColor: rootPressedBorderColor,\r\n                    color: rootPressedColor,\r\n                    selectors: {\r\n                        svg: {\r\n                            fill: rootHoveredSvgFillColor,\r\n                            background: rootHoveredSvgBackgroundColor,\r\n                        },\r\n                    },\r\n                },\r\n                '&.ms-Button--compoundPrimary:active': {\r\n                    backgroundColor: rootPressedBackgroundColorPrimary,\r\n                    borderColor: rootPressedBorderColorPrimary,\r\n                    color: rootPressedColorPrimary,\r\n                    selectors: {\r\n                        svg: {\r\n                            fill: rootHoveredSvgFillColorPrimary,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        rootDisabled: {\r\n            backgroundColor: rootDisabledBackgroundColor,\r\n            color: rootDisabledColor,\r\n            borderColor: rootDisabledBorderColor,\r\n            boxShadow: 'none',\r\n            selectors: {\r\n                svg: {\r\n                    fill: theme.palette.neutralQuaternary,\r\n                    background: rootDisabledSvgBackgroundColor,\r\n                },\r\n                '&.ms-Button--compoundPrimary.is-disabled': {\r\n                    backgroundColor: rootDisabledBackgroundColorPrimary,\r\n                    borderColor: rootDisabledBorderColorPrimary,\r\n                    color: rootDisabledColorPrimary,\r\n                    boxShadow: 'none',\r\n                    selectors: {\r\n                        svg: {\r\n                            fill: rootDisabledSvgFillColorPrimary,\r\n                            background: theme.palette.neutralTertiary,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: theme.palette.neutralTertiaryAlt,\r\n            borderColor: rootCheckedBorderColor,\r\n            color: rootCheckedColor,\r\n            selectors: {\r\n                '&.ms-Button--compoundPrimary.is-checked': {\r\n                    backgroundColor: rootCheckedBackgroundColorPrimary,\r\n                    borderColor: rootCheckedBorderColorPrimary,\r\n                    color: rootCheckedColorPrimary,\r\n                },\r\n            },\r\n        },\r\n        rootCheckedHovered: {\r\n            selectors: {\r\n                '&.ms-Button--compoundPrimary.is-checked:hover': {\r\n                    backgroundColor: rootCheckedHoveredBackgroundColorPrimary,\r\n                    borderColor: rootCheckedHoveredBorderColorPrimary,\r\n                    color: rootCheckedHoveredColorPrimary,\r\n                },\r\n            },\r\n        },\r\n        rootCheckedDisabled: {\r\n            backgroundColor: rootDisabledBackgroundColor,\r\n            color: rootDisabledColor,\r\n            borderColor: rootDisabledBorderColor,\r\n            boxShadow: 'none',\r\n\r\n            selectors: {\r\n                '&.ms-Button--compoundPrimary.is-checked.is-disabled': {\r\n                    backgroundColor: rootDisabledBackgroundColorPrimary,\r\n                    borderColor: rootDisabledBorderColorPrimary,\r\n                    color: rootDisabledColorPrimary,\r\n                    boxShadow: 'none',\r\n                },\r\n            },\r\n        },\r\n        flexContainer: {\r\n            alignItems: 'center',\r\n        },\r\n        textContainer: {\r\n            flexShrink: '1',\r\n        },\r\n        icon: {\r\n            width: 'auto',\r\n            height: 'auto',\r\n            marginRight: '12px',\r\n        },\r\n        description: {\r\n            color: 'inherit',\r\n            fontSize: FontSizes.size14,\r\n            opacity: 0.84,\r\n        },\r\n    } as Partial<IButtonStyles>;\r\n\r\n    // Contrast theme overrides\r\n    if (isContrastTheme(themeName)) {\r\n        // Root\r\n        (\r\n            ((styles.root as Required<IRawStyle>).selectors['.ms-Fabric--isFocusVisible &'] as Required<IRawStyle>)\r\n                .selectors[':focus'] as IRawStyle\r\n        ).backgroundColor = theme.palette.themeDark;\r\n\r\n        (\r\n            ((styles.root as Required<IRawStyle>).selectors['.ms-Fabric--isFocusVisible &'] as Required<IRawStyle>)\r\n                .selectors[':focus'] as IRawStyle\r\n        ).borderColor = theme.palette.themeDark;\r\n\r\n        (\r\n            ((styles.root as Required<IRawStyle>).selectors['.ms-Fabric--isFocusVisible &'] as Required<IRawStyle>)\r\n                .selectors[':focus'] as IRawStyle\r\n        ).color = theme.palette.white;\r\n\r\n        (\r\n            ((styles.root as Required<IRawStyle>).selectors['.ms-Fabric--isFocusVisible &'] as Required<IRawStyle>)\r\n                .selectors[':focus::after'] as IRawStyle\r\n        ).display = 'none';\r\n    }\r\n\r\n    return styles;\r\n}\r\n","/* istanbul ignore file */\r\n\r\nimport { IButtonStyles, ITheme } from '@fluentui/react';\r\nimport { teamsBorderRadius } from './constants';\r\n\r\nexport function getCommandBarButtonStyles(themeName: string, theme: ITheme): Partial<IButtonStyles> {\r\n    return {\r\n        root: {\r\n            // Work around for fluentui button focus outline not showing in iOS Safari.\r\n            ':focus-visible, .ms-Fabric--isFocusVisible &:focus': {\r\n                '::after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    inset: '2px',\r\n                    outline: `1px solid ${theme.palette.black}`,\r\n                    borderRadius: teamsBorderRadius,\r\n                },\r\n            },\r\n        },\r\n    };\r\n}\r\n","import { ITheme } from '@fluentui/theme';\r\nimport { getTeamStyles } from './teams/teams-styles';\r\nimport { themeNames, getPalette } from './teams-palette';\r\n\r\nexport const getTeamsTheme = (themeName: themeNames, isMobile?: boolean): ITheme => {\r\n    const palette = getPalette(themeName);\r\n    palette.components = getTeamStyles(themeName, palette, isMobile);\r\n    return palette;\r\n};\r\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AChIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvGA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAavLA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7LA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;;AAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAEA;AACA;AAQA;AAEA;AACA;AACA;AAQA;AACA;AAEA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AASA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAIA;AAEA;AACA;AAEA;AACA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;AC9LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAMA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAUA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACrWA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3IA;AAAA;;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACllKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1EA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClBA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAUA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAKA;AAMA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAKA;AAQA;AAKA;AAKA;AAMA;AAKA;AAKA;AAKA;AAKA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;ACrWA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC1DA;AAAA;AAEA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxnKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;ACltLA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACntZA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}