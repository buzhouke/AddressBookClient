{"version":3,"file":"dist/js/package~main~mobile.js","sources":["webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/signals.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonLoadingIndicator/CommonLoadingIndicator.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/debounce.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/miscs.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/TaskModule/TaskModule.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonSlideDots/CommonSlideDots.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/react/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonPanel/CommonPanel.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/react/useTeamsContext.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/dates.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ConfirmationDialog/ConfirmationDialog.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/AppHeader/AppHeader.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleList/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonCard/CommonCard.shimmer.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/EmptyState/turtle.svg","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/react/useTeamsTaskModuleSize.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/EmptyState/EmptyState.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-icons/src/Icons.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/drive.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/online.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/fallback.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/jsons.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/themes.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/profile-photo.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonModal/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonPanel/CommonPanel.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/authorization.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/drop.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/thumbnail.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CollapsingArea/CollapsingArea.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ContentCopyRequestModal/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ContentCopyRequestModal/ContentCopyRequestModal.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/error.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/types.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonCard/CommonCard.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/blob.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleCoin/PeopleCoin.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleView/PeopleView.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/AppHeader/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonModal/CommonModal.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonCard/CommonCard.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-logger/src/common/interfaces.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ContentCopyResponseModal/ContentCopyResponseModal.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleSelect/PeopleSelect.utils.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonLoadingIndicator/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/wrappers.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/EmptyState/EmptyState.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/TaskModuleV2/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleList/PeopleList.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/pooling.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleCoin/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonIcon/CommonIcon.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ConfirmationDialog/ConfirmationDialog.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonIcon/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/teams-colors.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-interceptors/src/utils.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/drive-item.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleCoin/PeopleCoin.utils.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-logger/src/common/types.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleSelect/PeopleSelect.strings.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonCard/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/TaskModule/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/Spinner/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ConfirmationDialog/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/TaskModuleV2/TaskModuleV2.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/keyboard.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeoplePile/PeoplePile.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/clipboards.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/PillPivot/PillPivot.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/update.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/error.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/PillPivot/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/TaskModule/TaskModule.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/PillPivot/PillPivot.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleCoin/PeopleCoin.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/locator.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleView/PeopleView.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ContentCopyResponseModal/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/throttling.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/utilities.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/group.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/data-transfers.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/urls.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-icons/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/deep.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CollapsingArea/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/teams-sizes.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/renderings.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/promises.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/semaphores.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleList/PeopleList.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/root.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/styles/ellipsisStyles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/EmptyState/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/MobileSheet/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/long-press.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonIcon/CommonIcon.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/headers.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeoplePile/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonPanel/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/Spinner/Spinner.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/files.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/data-urls.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/caching.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/share.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ContentCopyResponseModal/ContentCopyResponseModal.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-hooks/src/visibility.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonSlideDots/CommonSlideDots.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/logging.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-logger/src/OneDSLogger.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeoplePile/PeoplePile.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ContentCopyRequestModal/ContentCopyRequestModal.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleView/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/operation.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-core/src/interceptors/retry.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CollapsingArea/CollapsingArea.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/TaskModuleV2/TaskModuleV2.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/styles/makeStyles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/utils.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/AppHeader/AppHeader.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-metaos-host/src/react/useTeamsNavBarMenu.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonLoadingIndicator/CommonLoadingIndicator.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ContentCopyRequestModal/ContentCopyRequestModalContent.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/client.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/services-graph/src/resources/user.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/images.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/MobileSheet/MobileSheet.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/mimes.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonModal/CommonModal.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-fluentui-teams-theme/src/teams/teams-theme.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/Spinner/Spinner.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonModal/ModalContent.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/MobileSheet/MobileSheet.component.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-interceptors/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/CommonSlideDots/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleSelect/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-shared/src/ContentCopyResponseModal/ContentCopyResponseModalContent.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleSelect/PeopleSelect.tsx","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/numbers.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-logger/src/index.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-logger/src/ScenarioLogger.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/components-people/src/PeopleSelect/PeopleSelect.styles.ts","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/packages/utilities-core/src/ids.ts"],"sourcesContent":["export * from './AppHeader';\r\nexport * from './CollapsingArea';\r\nexport * from './CommonCard';\r\nexport * from './CommonIcon';\r\nexport * from './CommonModal';\r\nexport * from './CommonPanel';\r\nexport * from './CommonSlideDots';\r\nexport * from './ConfirmationDialog';\r\nexport * from './ContentCopyRequestModal';\r\nexport * from './ContentCopyResponseModal';\r\nexport * from './EmptyState';\r\nexport * from './MobileSheet';\r\nexport * from './PillPivot';\r\nexport * from './Spinner';\r\nexport * from './styles/ellipsisStyles';\r\nexport * from './TaskModule';\r\nexport * from './TaskModuleV2';\r\n","/**\r\n * A function that returns a promise that will resolve when the given signal aborts.\r\n *\r\n * @param signal The given signal.\r\n * @returns The promise that will resolve when the given signal aborts.\r\n */\r\nexport function signalAsPromise(signal: AbortSignal): Promise<void> {\r\n    return new Promise(resolve => signal.addEventListener('abort', () => resolve()));\r\n}\r\n\r\n/**\r\n * A function that returns a signal that will abort when all of the given signals abort.\r\n *\r\n * @param signals The given signals.\r\n * @returns The abort signal that will abort when all of the given signals abort.\r\n */\r\nexport function allSignalsAsSignal(signals: AbortSignal[]): AbortSignal {\r\n    const controller = new AbortController();\r\n    Promise.all(signals.map(signalAsPromise)).then(() => controller.abort());\r\n    return controller.signal;\r\n}\r\n\r\n/**\r\n * A function that returns a signal that will abort when any of the given signals abort.\r\n *\r\n * @param signals The given signals.\r\n * @returns The abort signal that will abort when any of the given signals abort.\r\n */\r\nexport function raceSignalsAsSignal(signals: AbortSignal[]): AbortSignal {\r\n    const controller = new AbortController();\r\n    Promise.race(signals.map(signalAsPromise)).then(() => controller.abort());\r\n    return controller.signal;\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { ProgressIndicator } from '@fluentui/react';\r\nimport React from 'react';\r\nimport { useLoadingIndicatorStyles } from './CommonLoadingIndicator.styles';\r\n\r\nexport interface CommonLoadingIndicatorProps {\r\n    isFetching?: boolean;\r\n}\r\n\r\nexport const CommonLoadingIndicator: React.FC<CommonLoadingIndicatorProps> = ({ isFetching }): JSX.Element => {\r\n    const styles = useLoadingIndicatorStyles();\r\n\r\n    return <ProgressIndicator progressHidden={!isFetching} styles={styles} />;\r\n};\r\n","import { DebounceSettings, DebouncedFunc, debounce } from 'lodash-es';\r\nimport { DependencyList, useCallback, useEffect } from 'react';\r\n\r\n/**\r\n * A hook to debounce a function, which will be flushed on unmount.\r\n *\r\n * @param func The function to debounce\r\n * @param deps The deps which will make the return func change\r\n * @param wait The number of milliseconds to delay.\r\n * @param options The options object.\r\n * @returns The debounced function.\r\n */\r\nexport function useDebounced<T extends (...args: never[]) => unknown>(\r\n    func: T,\r\n    deps: DependencyList,\r\n    wait?: number,\r\n    options?: DebounceSettings\r\n): DebouncedFunc<T> {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const callback = useCallback(debounce(func, wait, options), deps);\r\n    useEffect(() => callback.flush, [callback]);\r\n    return callback;\r\n}\r\n","/**\r\n * Check if the value is defined or not with type narrowing.\r\n *\r\n * @param value The value to check.\r\n * @returns `true` if the value is defined, `false` otherwise.\r\n */\r\nexport function isDefined<T>(value: T | undefined): value is T {\r\n    return value !== undefined;\r\n}\r\n\r\n/**\r\n * Extracts the continuous range from the numbers, represented as a tuple of the start and end of the range.\r\n *\r\n * @param numbers The numbers to extract the continuous range.\r\n * @returns The continuous range, if the numbers are continuous, otherwise undefined.\r\n * @example extractContinuousRange([1]) // [1, 1]\r\n * @example extractContinuousRange([1, 2, 3, 4, 5]) // [1, 5]\r\n * @example extractContinuousRange([1, 2, 3, 5]) // undefined\r\n */\r\nexport function extractContinuousRange(numbers: number[]): [number, number] | undefined {\r\n    if (numbers.length === 0) return;\r\n\r\n    const uniqueSorted = [...new Set(numbers)].sort();\r\n    const isContinuous = uniqueSorted[uniqueSorted.length - 1] - uniqueSorted[0] === uniqueSorted.length - 1;\r\n    if (!isContinuous) return;\r\n\r\n    return [uniqueSorted[0], uniqueSorted[uniqueSorted.length - 1]];\r\n}\r\n","import { DarkV2Colors, isDarkTheme } from '@addressbook/components-fluentui-teams-theme';\r\nimport { makeStyles } from '../styles/makeStyles';\r\n\r\nexport const useTaskModuleStyles = /* #__PURE__*/ makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        maxHeight: '100vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '0.5rem',\r\n        boxSizing: 'border-box',\r\n\r\n        // Since the styles for task module container on Teams Desktop does not include a bottom padding, we need to\r\n        // add some spacing, though the styles without this padding are approperiate for Teams Web.\r\n        paddingBottom: '0.75rem',\r\n        backgroundColor: isDarkTheme(theme.name) ? DarkV2Colors.appWhite : theme.palette.white,\r\n    },\r\n}));\r\n","import { IStyle, mergeStyles } from '@fluentui/react';\r\nimport React from 'react';\r\nimport { userSlideDotsStyles } from './CommonSlideDots.styles';\r\n\r\nexport interface CommonSlideDotsProps {\r\n    amount: number;\r\n    activeIndex: number;\r\n    isClickable?: boolean;\r\n    slideDotsStyles?: SlideDotsStyles;\r\n    onClick?: (x: number) => void;\r\n}\r\n\r\nexport interface SlideDotsStyles {\r\n    selectOption?: IStyle | string;\r\n}\r\n\r\nexport const CommonSlideDots = ({\r\n    amount,\r\n    activeIndex,\r\n    isClickable = false,\r\n    slideDotsStyles,\r\n    onClick,\r\n}: CommonSlideDotsProps): JSX.Element => {\r\n    const styles = userSlideDotsStyles();\r\n\r\n    return (\r\n        <div className={styles.stepper}>\r\n            {Array(amount)\r\n                .fill(0)\r\n                .map((_item, index) => (\r\n                    <i\r\n                        className={mergeStyles(\r\n                            styles.selectOption,\r\n                            slideDotsStyles?.selectOption,\r\n                            isClickable && 'is-clickable',\r\n                            index === activeIndex ? 'is-active' : ''\r\n                        )}\r\n                        key={index}\r\n                        onClick={isClickable ? () => onClick?.(index) : undefined}\r\n                        data-testid='option'\r\n                    />\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n","export { app, HostClientType } from '@microsoft/teams-js';\r\nexport * from './error';\r\nexport { patchTeamsFallbackData } from './fallback';\r\nexport * from './react';\r\nexport * from './themes';\r\nexport * from './wrappers';\r\n","export * from './useTeamsContext';\r\nexport * from './useTeamsNavBarMenu';\r\nexport * from './useTeamsTaskModuleSize';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport React, { MutableRefObject } from 'react';\r\nimport { IPanelProps, IPanelStyles, IRenderFunction, Panel, PanelType } from '@fluentui/react';\r\nimport { usePanelStyles } from './CommonPanel.styles';\r\n\r\nexport type PanelContentProps = React.PropsWithChildren<{\r\n    /**\r\n     * props for render navigation content\r\n     */\r\n    onRenderNavigationContent?: IRenderFunction<IPanelProps>;\r\n    /**\r\n     * Ref for content element\r\n     */\r\n    contentRef?: MutableRefObject<HTMLDivElement | null>;\r\n    onDismiss?: () => void;\r\n    linkCopiedInfoItem?: JSX.Element;\r\n}>;\r\n\r\nexport type CommonPanelProps = PanelContentProps & {\r\n    isOpen: boolean;\r\n};\r\n\r\nexport const CommonPanel: React.FC<CommonPanelProps> = ({\r\n    isOpen,\r\n    onRenderNavigationContent,\r\n    onDismiss,\r\n    contentRef,\r\n    children,\r\n    linkCopiedInfoItem,\r\n}: CommonPanelProps): JSX.Element => {\r\n    const panelStyles = usePanelStyles();\r\n\r\n    return (\r\n        <Panel\r\n            styles={panelStyles as any as IPanelStyles}\r\n            onRenderNavigationContent={onRenderNavigationContent}\r\n            isOpen={isOpen}\r\n            onDismiss={onDismiss}\r\n            onOuterClick={(ev?: React.MouseEvent<HTMLDivElement>): void => {\r\n                ev?.preventDefault();\r\n            }}\r\n            type={PanelType.custom}\r\n            allowTouchBodyScroll\r\n            hasCloseButton={!onRenderNavigationContent}>\r\n            <div ref={contentRef} className={panelStyles.contentInner}>\r\n                {children}\r\n            </div>\r\n            {linkCopiedInfoItem}\r\n        </Panel>\r\n    );\r\n};\r\n","export * from './clipboards';\r\nexport * from './data-transfers';\r\nexport * from './data-urls';\r\nexport * from './dates';\r\nexport * from './files';\r\nexport * from './ids';\r\nexport * from './images';\r\nexport * from './jsons';\r\nexport * from './mimes';\r\nexport * from './miscs';\r\nexport * from './numbers';\r\nexport * from './promises';\r\nexport * from './semaphores';\r\nexport * from './signals';\r\nexport * from './urls';\r\n","import type { app } from '@microsoft/teams-js';\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { coerceTeamsTheme, TeamsContextTheme } from '../themes';\r\nimport { getTeamsContext, registerOnThemeChangeHandler } from '../wrappers';\r\n\r\ninterface LoadingTeamsHostValue {\r\n    loading: true;\r\n}\r\n\r\ninterface LoadedTeamsHostValue {\r\n    loading: false;\r\n    context: app.Context;\r\n}\r\n\r\nexport type TeamsHostValue = LoadingTeamsHostValue | LoadedTeamsHostValue;\r\n\r\nconst defaultTeamsHostValue: TeamsHostValue = { loading: true };\r\nconst TeamsReactContext = React.createContext<TeamsHostValue>(defaultTeamsHostValue);\r\n\r\nexport interface TeamsHostProviderProps {\r\n    value?: TeamsHostValue;\r\n    defaultValue?: TeamsHostValue;\r\n}\r\n\r\n/**\r\n * The component that provides the Teams host access to its children.\r\n *\r\n * @property value The controlled value to provide to its children.\r\n * @property defaultValue The default value to provide to its children.\r\n */\r\nexport const TeamsHostProvider: React.FC<TeamsHostProviderProps> = ({\r\n    value,\r\n    defaultValue = defaultTeamsHostValue,\r\n    children,\r\n}) => {\r\n    const [providingValue, setProvidingValue] = useState<TeamsHostValue>(value ?? defaultValue);\r\n\r\n    const update = useCallback(async () => setProvidingValue({ loading: false, context: await getTeamsContext() }), []);\r\n    const watch = useCallback(async () => {\r\n        try {\r\n            await update();\r\n            await registerOnThemeChangeHandler(() => {\r\n                update();\r\n            });\r\n        } catch {\r\n            // No-op\r\n        }\r\n    }, [update]);\r\n\r\n    // Only update the context if the controlled value is not provided.\r\n    const controlled = Boolean(value);\r\n    useEffect(() => {\r\n        if (controlled) return;\r\n        watch();\r\n    }, [controlled, watch]);\r\n\r\n    return <TeamsReactContext.Provider value={providingValue}>{children}</TeamsReactContext.Provider>;\r\n};\r\n\r\n/**\r\n * A hook to get the Teams context.\r\n *\r\n * @returns The Teams context, or `undefined` if the host is not ready yet.\r\n */\r\nexport function useTeamsContext(): app.Context | undefined {\r\n    const value = useContext(TeamsReactContext);\r\n    if (value.loading) return;\r\n\r\n    return value.context;\r\n}\r\n\r\n/**\r\n * A hook to get the Teams theme.\r\n *\r\n * @returns The Teams theme, or `undefined` if the host is not ready yet.\r\n */\r\nexport function useTeamsTheme(): TeamsContextTheme | undefined {\r\n    const value = useContext(TeamsReactContext);\r\n    if (value.loading) return;\r\n\r\n    return coerceTeamsTheme(value.context.app.theme);\r\n}\r\n","/**\r\n * The value of DateTimeOffset.MaxValue in DotNet, which is 12/31/9999 11:59:59 PM +00:00.\r\n *\r\n * @remarks node -e \"console.log(new Date('12/31/9999 11:59:59 PM +00:00').getTime())\"\r\n * @see https://docs.microsoft.com/dotnet/api/system.datetimeoffset.maxvalue\r\n */\r\nconst DATE_TIME_OFFSET_MAX_VALUE = new Date(253402300799000);\r\n\r\n/**\r\n * Normalizes a date. A date is considered normalized if it is less than DateTimeOffset.MaxValue.\r\n *\r\n * @param date The date to normalize.\r\n * @returns The normalized date.\r\n */\r\nexport function normalizeDate(date: Date): Date | undefined {\r\n    return date < DATE_TIME_OFFSET_MAX_VALUE ? date : undefined;\r\n}\r\n\r\n/**\r\n * Converts a date to a zoned ISO string, e.g. 2021-01-01T00:00:00.000+08:00.\r\n *\r\n * @param date The date to convert.\r\n * @returns The zoned ISO date string.\r\n */\r\nexport function toZonedISOString(date: Date): string {\r\n    const offset = date.getTimezoneOffset();\r\n    const offsetHours = Math.floor(Math.abs(offset) / 60);\r\n    const offsetMinutes = Math.abs(offset) % 60;\r\n    const offsetSign = offset <= 0 ? '+' : '-';\r\n    const offsetHoursString = offsetHours.toString().padStart(2, '0');\r\n    const offsetMinutesString = offsetMinutes.toString().padStart(2, '0');\r\n    const offsetString = `${offsetSign}${offsetHoursString}:${offsetMinutesString}`;\r\n\r\n    const year = date.getFullYear().toString().padStart(4, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const hours = date.getHours().toString().padStart(2, '0');\r\n    const minutes = date.getMinutes().toString().padStart(2, '0');\r\n    const seconds = date.getSeconds().toString().padStart(2, '0');\r\n    const milliseconds = date.getMilliseconds().toString().padStart(3, '0');\r\n\r\n    return `${year}-${month}-${day}T${hours}:${minutes}:${seconds}.${milliseconds}${offsetString}`;\r\n}\r\n\r\n/**\r\n * Parses a date string by the Date constructor.\r\n *\r\n * @param dateString The date string to parse.\r\n * @returns The parsed date, or undefined if the date string is invalid.\r\n */\r\nexport function parseDate(dateString: string): Date | undefined {\r\n    const date = new Date(dateString);\r\n    return isFinite(date.getTime()) ? date : undefined;\r\n}\r\n\r\n/**\r\n * Parses a local date string strictly, which is in the format of \"yyyy-MM-dd\".\r\n *\r\n * @param dateString The date string to parse.\r\n * @returns The parsed date, or undefined if the date string is invalid.\r\n */\r\nexport function parseLocalDateStrictly(dateString: string): Date | undefined {\r\n    const matches = dateString.match(/^(\\d{1,4})-(\\d{1,2})-(\\d{1,2})$/);\r\n    if (!matches) return;\r\n\r\n    const [year, month, day] = matches.slice(1).map(n => parseInt(n, 10));\r\n    return new Date(year, month - 1, day);\r\n}\r\n\r\n/**\r\n * Parses a local date string.\r\n *\r\n * @param dateString The date string to parse.\r\n * @returns The parsed date, or undefined if the date string is invalid.\r\n */\r\nexport function parseLocalDate(dateString: string): Date | undefined {\r\n    return parseLocalDateStrictly(dateString) ?? parseDate(dateString);\r\n}\r\n\r\n/**\r\n * Formats date as local date string. (yyyy-MM-dd)\r\n *\r\n * @param date The date to format.\r\n * @returns The formatted date string.\r\n */\r\nexport function formatLocalDate(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return [year, month, day].join('-');\r\n}\r\n\r\n/**\r\n * A date range with a start and end date.\r\n *\r\n * @property start The start date.\r\n * @property end The end date.\r\n */\r\nexport interface DateRange {\r\n    start: Date;\r\n    end: Date;\r\n}\r\n\r\n/**\r\n * Parses a local date range string into a tuple of start and end dates. Either date is fully inclusive. The date range\r\n * string must be in the format of \"yyyy-MM-dd/yyyy-MM-dd\".\r\n *\r\n * @param rangeString The date range string to parse.\r\n * @returns A tuple of start and end dates, or undefined if the date range string is invalid.\r\n */\r\nexport function parseLocalDateRange(rangeString: string): DateRange | undefined {\r\n    const matches = rangeString.match(/^(\\d{1,4})-(\\d{1,2})-(\\d{1,2})\\/(\\d{1,4})-(\\d{1,2})-(\\d{1,2})$/);\r\n    if (!matches) return;\r\n\r\n    const [startYear, startMonth, startDay, endYear, endMonth, endDay] = matches.slice(1).map(n => parseInt(n, 10));\r\n    const start = new Date(startYear, startMonth - 1, startDay, 0, 0, 0, 0);\r\n    const end = new Date(endYear, endMonth - 1, endDay, 23, 59, 59, 999);\r\n    return { start, end };\r\n}\r\n\r\n/**\r\n * Erases the time part of a date.\r\n *\r\n * @param date The date to erase the time part.\r\n * @returns The date with the time part erased.\r\n */\r\nexport function eraseTime(date: Date): Date {\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n}\r\n\r\n/**\r\n * The number of milliseconds in one day.\r\n */\r\nconst MILLISECONDS_IN_ONE_DAY = 24 * 60 * 60 * 1000;\r\n\r\n/**\r\n * Compares two dates without considering time parts.\r\n *\r\n * @param a The first date.\r\n * @param b The second date.\r\n * @returns The comparison result, which is the difference between the two dates in days. A positive value means a is\r\n * later than b, a negative value means a is earlier than b, and zero means a is the same as b.\r\n */\r\nexport function compareDatesWithoutTime(a: Date, b: Date): number {\r\n    return (eraseTime(a).getTime() - eraseTime(b).getTime()) / MILLISECONDS_IN_ONE_DAY;\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport {\r\n    DefaultButton,\r\n    IButtonProps,\r\n    PrimaryButton,\r\n    Dialog,\r\n    DialogFooter,\r\n    DialogType,\r\n    IDialogProps,\r\n    mergeStyles,\r\n} from '@fluentui/react';\r\nimport * as React from 'react';\r\nimport { useDialogStyles, useContentStyles } from './ConfirmationDialog.styles';\r\n\r\nexport interface ConfirmationDialogProps {\r\n    isOpen: boolean;\r\n    title: string | JSX.Element;\r\n    subText?: string;\r\n    // Custom content\r\n    content?: JSX.Element;\r\n    // Method used to dismiss the dialog\r\n    dismiss?: () => void;\r\n    // Possible actions for selection\r\n    actions: IButtonProps[];\r\n    showDarkOverlay?: boolean;\r\n    showCloseButton?: boolean;\r\n}\r\n\r\nexport const ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\r\n    title,\r\n    subText,\r\n    isOpen,\r\n    content,\r\n    dismiss,\r\n    actions,\r\n    showDarkOverlay,\r\n    showCloseButton = true,\r\n}: ConfirmationDialogProps): JSX.Element => {\r\n    const contentStyles = useContentStyles();\r\n    const buttons =\r\n        actions &&\r\n        actions.map((buttonProps: IButtonProps, index: number): JSX.Element => {\r\n            return buttonProps.primary ? (\r\n                <PrimaryButton\r\n                    className={mergeStyles(contentStyles.button, contentStyles.primaryButton)}\r\n                    {...buttonProps}\r\n                    key={index}\r\n                />\r\n            ) : (\r\n                <DefaultButton className={contentStyles.button} {...buttonProps} key={index} />\r\n            );\r\n        });\r\n\r\n    const dialogProps: IDialogProps = {\r\n        hidden: !isOpen,\r\n        onDismiss: dismiss,\r\n        styles: useDialogStyles(),\r\n        dialogContentProps: {\r\n            type: DialogType.normal,\r\n            title,\r\n            subText,\r\n            showCloseButton,\r\n        },\r\n        modalProps: {\r\n            isDarkOverlay: !!showDarkOverlay,\r\n            overlay:\r\n                !showDarkOverlay &&\r\n                ({\r\n                    isDarkThemed: false,\r\n                    styles: {\r\n                        root: {\r\n                            background: 'none',\r\n                        },\r\n                    },\r\n                } as any),\r\n            isBlocking: true,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Dialog {...dialogProps}>\r\n            {content}\r\n            <DialogFooter className={contentStyles.footerButtons}>{buttons}</DialogFooter>\r\n        </Dialog>\r\n    );\r\n};\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { FontWeights } from '@fluentui/react';\r\nimport { makeStyles } from '../styles/makeStyles';\r\n\r\nexport const useAppHeaderStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.white,\r\n        padding: '0 1.25rem',\r\n        height: '3.75rem',\r\n    },\r\n    text: [\r\n        theme.fonts.large,\r\n        {\r\n            fontWeight: FontWeights.bold,\r\n            margin: '15px 10px 15px 10px',\r\n            color: theme.palette.black,\r\n        },\r\n    ],\r\n}));\r\n","export * from './PeopleList';\r\n","import React from 'react';\r\nimport { mergeStyles, Shimmer, ShimmerElementType, Stack } from '@fluentui/react';\r\nimport { useCommonCardStyles } from './CommonCard.styles';\r\n\r\nconst LARGE_ICON_SIZE = 64;\r\nconst SMALL_ICON_SIZE = 32;\r\n\r\nconst LARGE_GAP_WIDTH = 18;\r\nconst SMALL_GAP_WIDTH = 12;\r\n\r\nconst LARGE_TEXT_HEIGHT = 64;\r\nconst SMALL_TEXT_HEIGHT = 20;\r\n\r\nexport const CommonCardShimmer = ({\r\n    isMobile,\r\n    isLowHeight,\r\n    expanded,\r\n}: {\r\n    isMobile?: boolean;\r\n    isLowHeight?: boolean;\r\n    expanded?: boolean;\r\n}): JSX.Element => {\r\n    const cardStyles = useCommonCardStyles();\r\n    const singleLine = (isMobile && isLowHeight) || expanded;\r\n\r\n    const iconSize = expanded ? LARGE_ICON_SIZE : SMALL_ICON_SIZE;\r\n    const gapWidth = expanded ? LARGE_GAP_WIDTH : SMALL_GAP_WIDTH;\r\n    const textHeight = expanded ? LARGE_TEXT_HEIGHT : SMALL_TEXT_HEIGHT;\r\n\r\n    return (\r\n        <Stack\r\n            className={mergeStyles(\r\n                cardStyles.root,\r\n                expanded && cardStyles.expandedRoot,\r\n                isMobile && cardStyles.mobileRoot,\r\n                isMobile && isLowHeight && cardStyles.mobileRootWithoutReminder\r\n            )}\r\n            verticalAlign='space-between'>\r\n            <Shimmer\r\n                width={singleLine ? undefined : iconSize}\r\n                shimmerElements={[\r\n                    { type: ShimmerElementType.line, height: iconSize, width: iconSize },\r\n                    { type: ShimmerElementType.gap, width: gapWidth },\r\n                    { type: ShimmerElementType.line, height: textHeight },\r\n                ]}\r\n            />\r\n            {!singleLine && <Shimmer shimmerElements={[{ type: ShimmerElementType.line, height: textHeight }]} />}\r\n        </Stack>\r\n    );\r\n};\r\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _g, _path11, _path12, _path13, _path14, _path15, _path16, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTurtle(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 195,\n    height: 104,\n    viewBox: \"0 0 195 104\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.232 103.855c48.729 0 88.232-4.052 88.232-9.05 0-4.998-39.503-9.05-88.232-9.05C39.502 85.755 0 89.807 0 94.805c0 4.998 39.503 9.05 88.232 9.05z\",\n    fill: \"#E1DFDD\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.026 13.113l-15.05-5.668c-4.664-1.757-9.821.728-11.52 5.55l-7.051 20.015 9.738 3.667c7.598 2.862 16-1.187 18.768-9.043l5.115-14.52z\",\n    fill: \"url(#turtle_svg__paint0_linear_41_85734)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.244 14.324l-18.268-6.88c-4.664-1.757-9.821.728-11.52 5.55l-1.07 3.036 17.846 6.721c5.591 2.106 11.774-.873 13.811-6.654.253-.718-.105-1.512-.799-1.773z\",\n    fill: \"url(#turtle_svg__paint1_linear_41_85734)\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M91.442 2.544l-19.5-.252c-4.962-.064-9.036 4.044-9.098 9.175l-.257 21.3 28.485.368.37-30.591z\",\n    fill: \"#AEB0D6\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M110.635 15.77H52.506c-9.208 0-16.672 7.718-16.672 17.239h107.295c0-9.521-16.572-17.24-32.494-17.24z\",\n    fill: \"#FFD590\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.313.873c-.382-.71-1.167-1.042-1.865-.788L14.796 8.313c-4.75 1.725-2.448 14.162 3.58 11.973l15.94-5.79c5.695-2.069 7.932-8.168 4.997-13.623z\",\n    fill: \"#C3C3E1\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M96.115 3.8c-.133-.802-.767-1.384-1.507-1.384H70.6c-5.035 0-6.85 12.523-.461 12.523h16.895c6.036 0 10.102-4.987 9.082-11.14z\",\n    fill: \"#AEB0D6\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.091 1.668L14.693 8.351c-6.68 2.427-5.649 9.081-1.355 12.833 10.77 9.412 8.903 17.021 8.903 17.021l13.334-4.843c7.48-2.718 11.018-10.551.92-19.745L33.092 1.668z\",\n    fill: \"#C3C3E1\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.865 33.009H74.128c-1.706 0-3.089 1.43-3.089 3.193v24.529c0 1.764 1.383 3.193 3.089 3.193h50.752c10.534 0 19.073-8.83 19.073-19.721v-8c0-1.764-1.383-3.194-3.088-3.194z\",\n    fill: \"url(#turtle_svg__paint2_linear_41_85734)\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"turtle_svg__a\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 19,\n    y: 33,\n    width: 123,\n    height: 59\n  }, _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.17 33.009H19.493v7.756c0 28.129 22.053 50.931 49.257 50.931h25.122c22.557 0 38.363-15.708 47.414-30.57-22.528-4.908-24.405-28.117-53.116-28.117z\",\n    fill: \"#C3C3E1\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#turtle_svg__a)\",\n    fill: \"#6E6FAC\",\n    stroke: \"#8B8CC4\",\n    strokeWidth: 7.067,\n    strokeMiterlimit: 10\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M87.786 120.106H62.067l-12.86-23.03 12.86-23.03h25.719l12.859 23.03-12.86 23.03zM49.136 97.075H23.417l-12.86-23.03 12.86-23.03h25.719l12.86 23.03-12.86 23.03zM126.388 97.075h-25.719l-12.86-23.03 12.86-23.03h25.719l12.859 23.03-12.859 23.03z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M164.866 74.014h-25.719l-12.859-23.03 12.859-23.03h25.719l12.86 23.03-12.86 23.03zM87.797 74.046h-25.72l-12.859-23.03 12.86-23.03h25.719l12.859 23.03-12.86 23.03zM10.351 74.046h-25.719l-12.86-23.03 12.86-23.03h25.719l12.86 23.03-12.86 23.03z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M126.388 51.017h-25.719l-12.86-23.03 12.86-23.03h25.719l12.859 23.03-12.859 23.03zM49.147 51.017h-25.72l-12.859-23.03 12.86-23.03h25.719l12.86 23.03-12.86 23.03z\"\n  }))), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.286 61.127c-22.528-4.909-24.405-28.118-53.116-28.118M88.17 33.009H19.493\",\n    stroke: \"#8B8CC4\",\n    strokeWidth: 11.221,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.301 60.901c0-7.625-2.424-8.745-4.504-8.188-2.113.566-4.111 3.922-4.111 3.922l-15.521-23.217s18.836-7.918 29.417-2.743c11.318 5.535 14.229 15.992 14.229 28.313l-19.51 1.913z\",\n    fill: \"#C3C3E1\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.651 19.896c2.714-5.518-19.548-6.039-20.555-4.355-2.561 4.28-1.142 8.848-7.886 8.754-6.326-.088-7.82 4.911-7.82 4.911s4.264 2.06 7.32 9.32c5.184 12.31 23.631 10.66 24.455-5.11.236-4.508 2.308-9.091 4.486-13.52z\",\n    fill: \"#C3C3E1\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M129.489 11.718l-13.561-.436c-4.961-.16-9.108 3.87-9.262 8.999l-.098 3.229 17.108.55c4.844.156 8.893-3.778 9.044-8.787.057-1.904-1.389-3.495-3.231-3.555zM168.596 38.62h-.92c-10.701 0-19.375 8.968-19.375 20.032s8.674 20.033 19.375 20.033h14.055c7.014 0 12.7-5.879 12.7-13.13v-.223c0-14.753-11.567-26.713-25.835-26.713z\",\n    fill: \"#C3C3E1\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M177.543 49.48c1.832 1.107 10.811-1.428 10.811-1.428l-2.411-2.545s-5.319 2.039-8.168 2.908a.567.567 0 00-.504.62.58.58 0 00.272.446z\",\n    fill: \"#8B8CC4\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M180.326 65.642c.781-2.215.408-4.39-.833-4.857-1.24-.467-2.878.95-3.659 3.166-.78 2.215-.408 4.39.833 4.857 1.24.467 2.878-.95 3.659-3.166z\",\n    fill: \"#605D5A\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"turtle_svg__paint0_linear_41_85734\",\n    x1: 162.909,\n    y1: 12.121,\n    x2: 123.674,\n    y2: 44.411,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C3C3E1\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8B8CC4\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"turtle_svg__paint1_linear_41_85734\",\n    x1: 161.899,\n    y1: 10.916,\n    x2: 124.026,\n    y2: 42.086,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C3C3E1\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8B8CC4\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"turtle_svg__paint2_linear_41_85734\",\n    x1: 131.819,\n    y1: 35.848,\n    x2: 101.956,\n    y2: 47.298,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C3C3E1\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8B8CC4\"\n  })))));\n}\nexport default __webpack_public_path__ + \"dist/turtle.63d050.svg\";\nexport { SvgTurtle as ReactComponent };","import { resizeTaskModule } from '@addressbook/components-metaos-host';\r\nimport { useEffect } from 'react';\r\nimport { noop } from '../utils';\r\n\r\nexport interface TeamsTaskModuleSize {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\n/**\r\n * Default size of teams dialog.\r\n *\r\n * @see /Source/Clients/web-apps/WorkReport/manifests/teams.template.json\r\n */\r\nexport const defaultSize: TeamsTaskModuleSize = { width: 1000, height: 700 };\r\n\r\nexport function useTeamsTaskModuleSize(size: TeamsTaskModuleSize = defaultSize): void {\r\n    useEffect(() => update({ width: size.width, height: size.height }), [size.width, size.height]);\r\n    useEffect(() => () => update(defaultSize), []);\r\n}\r\n\r\nfunction update(size: TeamsTaskModuleSize): void {\r\n    resizeTaskModule(size).catch(noop);\r\n}\r\n","export const styles = {\r\n    root: {\r\n        maxHeight: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        gap: '2rem',\r\n    },\r\n    info: {\r\n        textAlign: 'center',\r\n    },\r\n    btn: {\r\n        border: '1px solid',\r\n        display: 'block',\r\n        borderRadius: '4px',\r\n        height: '2rem',\r\n        padding: '.25rem 1.5rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    message: {\r\n        fontFamily: 'unset',\r\n        whiteSpace: 'pre-wrap',\r\n    },\r\n} as const;\r\n","import { mergeStyles, registerIcons } from '@fluentui/react';\r\nimport React from 'react';\r\n\r\nimport {\r\n    ArrowDownRegular,\r\n    ArrowSyncRegular,\r\n    CalendarLtrRegular,\r\n    CallRegular,\r\n    ChatRegular,\r\n    ChevronDownFilled,\r\n    ContactCardRegular,\r\n    DeskRegular,\r\n    DismissRegular,\r\n    HomeRegular,\r\n    LocationRegular,\r\n    MailRegular,\r\n    OrganizationRegular,\r\n    PresenceAvailableFilled,\r\n    PresenceAwayFilled,\r\n    PresenceBlockedRegular,\r\n    PresenceBusyFilled,\r\n    PresenceDndFilled,\r\n    PresenceOfflineRegular,\r\n    PresenceOofRegular,\r\n    PresenceUnknownRegular,\r\n    SearchRegular,\r\n    TagRegular,\r\n    VideoRegular,\r\n} from '@fluentui/react-icons';\r\nexport const iconStyle = /* #__PURE__ */ mergeStyles({\r\n    display: 'block',\r\n    width: '100%',\r\n    height: '100%',\r\n    lineHeight: '100%',\r\n    fill: 'currentColor',\r\n});\r\n\r\nexport const customIconStyle = /* #__PURE__ */ mergeStyles({\r\n    display: 'block',\r\n    width: '100%',\r\n    height: '100%',\r\n    lineHeight: '100%',\r\n});\r\n\r\nconst dropdownIconStyle = /* #__PURE__ */ mergeStyles({\r\n    // fontSize: '24px',\r\n    // width: '24px',\r\n    // height: '24px',\r\n});\r\n\r\nexport const icons = /* #__PURE__ */ {\r\n    ContactCard: <ContactCardRegular className={iconStyle} />,\r\n    Mail: <MailRegular className={iconStyle} />,\r\n    Chat: <ChatRegular className={iconStyle} />,\r\n    Call: <CallRegular className={iconStyle} />,\r\n    Location: <LocationRegular className={iconStyle} />,\r\n    Desk: <DeskRegular className={iconStyle} />,\r\n    Search: <SearchRegular className={iconStyle} />,\r\n    Cancel: <DismissRegular className={iconStyle} />,\r\n    // ChevronRight: <ChevronRightRegular className={iconStyle} />,\r\n    // ChevronLeft: <ChevronLeftRegular className={iconStyle} />,\r\n    Home: <HomeRegular className={iconStyle} />,\r\n    Calendar: <CalendarLtrRegular className={iconStyle} />,\r\n    ChevronDown: <ChevronDownFilled className={dropdownIconStyle} />,\r\n    Tag: <TagRegular className={iconStyle} />,\r\n    // Up: <ArrowUpRegular className={iconStyle} />,\r\n    Down: <ArrowDownRegular className={iconStyle} />,\r\n    Organization: <OrganizationRegular className={iconStyle} />,\r\n    Video: <VideoRegular className={iconStyle} />,\r\n    Refresh: <ArrowSyncRegular className={iconStyle} />,\r\n\r\n    // Presence:\r\n    PresenceAvailable: <PresenceAvailableFilled className={iconStyle} />,\r\n    PresenceAway: <PresenceAwayFilled className={iconStyle} />,\r\n    PresenceBlocked: <PresenceBlockedRegular className={iconStyle} />,\r\n    PresenceBusy: <PresenceBusyFilled className={iconStyle} />,\r\n    PresenceDnd: <PresenceDndFilled className={iconStyle} />,\r\n    PresenceOof: <PresenceOofRegular className={iconStyle} />,\r\n    PresenceOffline: <PresenceOfflineRegular className={iconStyle} />,\r\n    PresenceUnknown: <PresenceUnknownRegular className={iconStyle} />,\r\n\r\n    // CheckMark: <CheckmarkRegular className={iconStyle} />,\r\n    // SortDown: <ArrowSortDownRegular className={iconStyle} />,\r\n    // SortUp: <ArrowSortUpRegular className={iconStyle} />,\r\n    // RingerSolid: <AlertFilled className={iconStyle} />,\r\n    // Contact: <PersonFilled className={iconStyle} />,\r\n    // Info: <InfoRegular className={iconStyle} />,\r\n    // Add: <AddRegular className={iconStyle} />,\r\n    // AddFilled: <AddFilled className={iconStyle} />,\r\n    // GlobalNavButton: <NavigationRegular className={iconStyle} />,\r\n    // Filter: <FilterRegular className={iconStyle} />,\r\n    // Settings: <SettingsRegular className={iconStyle} />,\r\n    // More: <MoreHorizontalRegular className={iconStyle} />,\r\n    // Edit: <EditRegular className={iconStyle} />,\r\n    // Cancel: <DismissRegular className={iconStyle} />,\r\n    // ChevronRight: <ChevronRightRegular className={iconStyle} />,\r\n    // ChevronLeft: <ChevronLeftRegular className={iconStyle} />,\r\n    // Home: <HomeRegular className={iconStyle} />,\r\n    // Calendar: <CalendarLtrRegular className={iconStyle} />,\r\n    // Airplane: <AirplaneRegular className={iconStyle} />,\r\n    // ChevronDown: <ChevronDownRegular className={iconStyle} />,\r\n    // Up: <ArrowUpRegular className={iconStyle} />,\r\n    // Down: <ArrowDownRegular className={iconStyle} />,\r\n    // CheckMark: <CheckmarkRegular className={iconStyle} />,\r\n    // SortDown: <ArrowSortDownRegular className={iconStyle} />,\r\n    // SortUp: <ArrowSortUpRegular className={iconStyle} />,\r\n    // Ringer: <AlertRegular className={iconStyle} />,\r\n    // RingerSolid: <AlertFilled className={iconStyle} />,\r\n    // Contact: <PersonFilled className={iconStyle} />,\r\n    // Info: <InfoRegular className={iconStyle} />,\r\n    // CaretRight: <CaretRightFilled className={iconStyle} />,\r\n    // CaretDown: <CaretDownFilled className={iconStyle} />,\r\n    // ProjectCollection: <CollectionsRegular className={iconStyle} />,\r\n    // AlertUrgentFilled: <AlertUrgentFilled className={iconStyle} />,\r\n    // NotepadPerson: <NotepadPersonFilled className={iconStyle} />,\r\n    // ClipboardTaskList: <ClipboardTaskListLtrFilled className={iconStyle} />,\r\n    // TextBulletList: <TextBulletListSquareEditFilled className={iconStyle} />,\r\n    // DocumentRibbon: <DocumentRibbonFilled className={iconStyle} />,\r\n    // ClipboardError: <ClipboardErrorFilled className={iconStyle} />,\r\n    // DataArea: <DataAreaFilled className={iconStyle} />,\r\n    // WrenchScrewdriver: <WrenchScrewdriverFilled className={iconStyle} />,\r\n    // CalendarDay: <CalendarDayFilled className={iconStyle} />,\r\n    // CalendarWorkWeek: <CalendarWorkWeekFilled className={iconStyle} />,\r\n    // CalendarMonth: <CalendarMonthFilled className={iconStyle} />,\r\n    // ClipboardTextEdit: <ClipboardTextEditRegular className={iconStyle} />,\r\n    // ClipboardTextEditFilled: <ClipboardTextEditFilled className={iconStyle} />,\r\n    // BranchCompare: <BranchCompareFilled className={iconStyle} />,\r\n    // LeafThree: <LeafThreeFilled className={iconStyle} />,\r\n    // ClipboardText: <ClipboardTextLtrFilled className={iconStyle} />,\r\n    // BuildingRetail: <BuildingRetailFilled className={iconStyle} />,\r\n    // ClipboardDay: <ClipboardDayFilled className={iconStyle} />,\r\n    // Clipboard3Day: <Clipboard3DayFilled className={iconStyle} />,\r\n    // ClipboardMonth: <ClipboardMonthFilled className={iconStyle} />,\r\n    // BuildingShop: <BuildingShopFilled className={iconStyle} />,\r\n    // BuildingRetailToolbox: <BuildingRetailToolboxFilled className={iconStyle} />,\r\n    // VehicleTruck: <VehicleTruckFilled className={iconStyle} />,\r\n    // VehicleTruckProfile: <VehicleTruckProfileFilled className={iconStyle} />,\r\n    // Broom: <BroomFilled className={iconStyle} />,\r\n    // Backpack: <BackpackFilled className={iconStyle} />,\r\n    // Megaphone: <MegaphoneFilled className={iconStyle} />,\r\n    // Cart: <CartFilled className={iconStyle} />,\r\n    // ClockAlarm: <ClockAlarmFilled className={iconStyle} />,\r\n    // Pulse: <PulseFilled className={iconStyle} />,\r\n    // Production: <ProductionFilled className={iconStyle} />,\r\n    // Steps: <StepsFilled className={iconStyle} />,\r\n    // BookTemplate: <BookTemplateRegular className={iconStyle} />,\r\n    // Tag: <TagRegular className={iconStyle} />,\r\n    // LinkSquare: <LinkSquareRegular className={iconStyle} />,\r\n    // LinkRegular: <LinkRegular className={iconStyle} />,\r\n    // ThumbLikeRegular: <ThumbLikeRegular className={iconStyle} />,\r\n    // ThumbLikeFilled: <ThumbLikeFilled className={iconStyle} />,\r\n    // PersonFeedbackRegular: <PersonFeedbackRegular className={iconStyle} />,\r\n    // Attach: <AttachRegular className={iconStyle} />,\r\n    // Image: <ImageRegular className={iconStyle} />,\r\n    // ImageOff: <ImageOffRegular className={iconStyle} />,\r\n    // Open: <OpenRegular className={iconStyle} />,\r\n    // ArrowClockwise: <ArrowClockwiseRegular className={iconStyle} />,\r\n    // ArrowUpload: <ArrowUploadFilled className={iconStyle} />,\r\n    // ArrowDownload: <ArrowDownload className={iconStyle} />,\r\n    // ArrowRepeatAllRegular: <ArrowRepeatAllRegular className={iconStyle} />,\r\n    // ArrowExport: <ArrowExportRegular className={iconStyle} />,\r\n    // CheckMarkCircle: <CheckmarkCircleRegular className={iconStyle} />,\r\n    // PeopleTeam: <PeopleTeamRegular className={iconStyle} />,\r\n    // PersonRegular: <PersonRegular className={iconStyle} />,\r\n    // BoardSplitRegular: <BoardSplitRegular className={iconStyle} />,\r\n    // ListRegular: <ListRegular className={iconStyle} />,\r\n    // ArrowRight: <ArrowRight className={iconStyle} />,\r\n    // People: <PeopleFilled className={iconStyle} />,\r\n    // PeopleRegular: <PeopleRegular className={iconStyle} />,\r\n    // QuestionCircle: <QuestionCircle className={iconStyle} />,\r\n\r\n    // to consume @addressbook/components-rich-text\r\n\r\n    // // Emoji for default template icon\r\n    // SunWithFaceEmoji: <SunWithFace {...emojiProps} />,\r\n    // RocketEmoji: <Rocket {...emojiProps} />,\r\n    // SixOclockEmoji: <SixOclock {...emojiProps} />,\r\n    // DizzyEmoji: <Dizzy {...emojiProps} />,\r\n    // PoliceCarLightEmoji: <PoliceCarLight {...emojiProps} />,\r\n    // MemoEmoji: <Memo {...emojiProps} />,\r\n    // StarEmoji: <Star {...emojiProps} />,\r\n    // ScrollEmoji: <Scroll {...emojiProps} />,\r\n\r\n    // // Emoji for user pick\r\n    // SoftIceCreamEmoji: <SoftIceCream {...emojiProps} />,\r\n    // ShortCakeEmoji: <ShortCake {...emojiProps} />,\r\n    // GreenAppleEmoji: <GreenApple {...emojiProps} />,\r\n    // AppleEmoji: <Apple {...emojiProps} />,\r\n    // CherriesEmoji: <Cherries {...emojiProps} />,\r\n    // BurgerEmoji: <Burger {...emojiProps} />,\r\n    // CakeEmoji: <Cake {...emojiProps} />,\r\n    // SwanEmoji: <Swan {...emojiProps} />,\r\n    // CatFaceEmoji: <CatFace {...emojiProps} />,\r\n    // PottedPlantEmoji: <PottedPlant {...emojiProps} />,\r\n    // BellEmoji: <Bell {...emojiProps} />,\r\n    // MilitaryMedalEmoji: <MilitaryMedal {...emojiProps} />,\r\n    // TelephoneEmoji: <Telephone {...emojiProps} />,\r\n    // TelephoneReceiverEmoji: <TelephoneReceiver {...emojiProps} />,\r\n    // PartyPopperEmoji: <PartyPopper {...emojiProps} />,\r\n    // BalloonEmoji: <Balloon {...emojiProps} />,\r\n    // PushpinEmoji: <Pushpin {...emojiProps} />,\r\n    // ArtistPaletteEmoji: <ArtistPalette {...emojiProps} />,\r\n    // RingedPlanetEmoji: <RingedPlanet {...emojiProps} />,\r\n    // SnowflakeEmoji: <Snowflake {...emojiProps} />,\r\n    // GlobeWithMeridiansEmoji: <GlobeWithMeridians {...emojiProps} />,\r\n    // HighSpeedTrainEmoji: <HighSpeedTrain {...emojiProps} />,\r\n    // GrinningFaceEmoji: <GrinningFace {...emojiProps} />,\r\n\r\n    // PencilEmoji: <Pencile {...emojiProps} />,\r\n    // FaceWithDiagonalMouth: <FaceWithDiagonalMouth {...emojiProps} />,\r\n    // FaceWithRaisedEyebrow: <FaceWithRaisedEyebrow {...emojiProps} />,\r\n    // SlightlyFrowningFace: <SlightlyFrowningFace {...emojiProps} />,\r\n\r\n    // // Emoji for default template icon, do not delete it even no reference\r\n    // BullseyeEmoji: <Bullseye {...emojiProps} />,\r\n    // ShieldEmoji: <Shield {...emojiProps} />,\r\n    // SmilingFaceWithSmilingEyesEmoji: <SmilingFaceWithSmilingEyes {...emojiProps} />,\r\n    // SpiralNotepadEmoji: <SpiralNotepad {...emojiProps} />,\r\n    // TeddyBearEmoji: <TeddyBear {...emojiProps} />,\r\n    // NineOclockEmoji: <NineOclock {...emojiProps} />,\r\n    // BooksEmoji: <BooksEmoji {...emojiProps} />,\r\n    // ChartIncreasingEmoji: <ChartIncreasingEmoji {...emojiProps} />,\r\n    // ReceiptEmoji: <ReceiptEmoji {...emojiProps} />,\r\n    // CalendarEmoji: <CalendarEmoji {...emojiProps} />,\r\n    // PartyingFaceEmoji: <PartyingFaceEmoji {...emojiProps} />,\r\n    // PageFacingUpEmoji: <PageFacingUpEmoji {...emojiProps} />,\r\n    // NecktieEmoji: <NecktieEmoji {...emojiProps} />,\r\n    // ManSuperheroEmoji: <ManSuperheroEmoji {...emojiProps} />,\r\n    // PersonRowingBoatEmoji: <PersonRowingBoatEmoji {...emojiProps} />,\r\n    // FourLeafCloverEmoji: <FourLeafCloverEmoji {...emojiProps} />,\r\n    // ThinkingFaceEmoji: <ThinkingFaceEmoji {...emojiProps} />,\r\n    // BriefcaseEmoji: <BriefcaseEmoji {...emojiProps} />,\r\n    // SlightlySmilingFaceEmoji: <SlightlySmilingFaceEmoji {...emojiProps} />,\r\n    // CardIndexEmoji: <CardIndexEmoji {...emojiProps} />,\r\n    // HuggingFaceEmoji: <HuggingFaceEmoji {...emojiProps} />,\r\n    // TelescopeEmoji: <TelescopeEmoji {...emojiProps} />,\r\n    // SunriseEmoji: <SunriseEmoji {...emojiProps} />,\r\n    // SparklerEmoji: <SparklerEmoji {...emojiProps} />,\r\n    // LadyBeetleEmoji: <LadyBeetleEmoji {...emojiProps} />,\r\n    // NotebookEmoji: <NotebookEmoji {...emojiProps} />,\r\n    // FireExtinguisherEmoji: <FireExtinguisherEmoji {...emojiProps} />,\r\n    // BookmarkTabsEmoji: <BookmarkTabsEmoji {...emojiProps} />,\r\n    // FireEmoji: <FireEmoji {...emojiProps} />,\r\n} as const;\r\n\r\nexport function initFluentuiIcons(): void {\r\n    registerIcons({ icons });\r\n}\r\n\r\nexport type IconNameKey = keyof typeof icons;\r\n\r\nexport const IconName: {\r\n    [key in IconNameKey]: key;\r\n} = /* #__PURE__ */ Object.fromEntries(Object.keys(icons).map((k: string): [string, string] => [k, k])) as any;\r\n","import { ServiceOperation, ServiceResourceLocator } from '@addressbook/services-core';\r\nimport { GraphDriveItemResource } from './drive-item';\r\n\r\n/**\r\n * The drive resource.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/resources/drive\r\n */\r\nexport class GraphDriveResource {\r\n    constructor(private operation: ServiceOperation, private locator: ServiceResourceLocator) {}\r\n\r\n    /**\r\n     * Navigates to the root drive item resource, with optional path.\r\n     *\r\n     * @param path The item path.\r\n     * @returns The item resource.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-get\r\n     */\r\n    root(path?: string): GraphDriveItemResource {\r\n        return new GraphDriveItemResource(this.operation, this.locator.extend(describeItem('root', path)));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the drive item resource by id, with optional path.\r\n     *\r\n     * @param id The item id.\r\n     * @param path The item path.\r\n     * @returns The item resource.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-get\r\n     */\r\n    items(id: string, path?: string): GraphDriveItemResource {\r\n        return new GraphDriveItemResource(this.operation, this.locator.extend('items', describeItem(id, path)));\r\n    }\r\n}\r\n\r\n/**\r\n * Describes an item by id and optional path.\r\n *\r\n * @param id The item id.\r\n * @param path The item path.\r\n * @returns The item descriptor.\r\n * @see https://learn.microsoft.com/graph/api/driveitem-get\r\n */\r\nfunction describeItem(id: string, path?: string): string {\r\n    return `${id}${path ? `:/${encodePath(path)}:` : ''}`;\r\n}\r\n\r\n/**\r\n * Encodes a path. Each segment of the path must be encoded separately.\r\n *\r\n * @param path The file path.\r\n * @returns The encoded file path.\r\n * @see https://learn.microsoft.com/graph/onedrive-addressing-driveitems#path-encoding\r\n *\r\n * @example encodePath('foo/bar') // 'foo/bar'\r\n * @example encodePath('foo bar') // 'foo%20bar'\r\n */\r\nfunction encodePath(path: string): string {\r\n    return path.split('/').map(encodeURIComponent).join('/');\r\n}\r\n","import { ServiceInterceptor } from '../types';\r\n\r\nexport interface OnlineInterceptorOptions {\r\n    target?: Window;\r\n}\r\n\r\n/**\r\n * Create a service interceptor that waits until the target is online.\r\n *\r\n * @property target The target to check online status.\r\n * @returns An interceptor.\r\n */\r\nexport function createOnlineInterceptor({ target = window }: OnlineInterceptorOptions = {}): ServiceInterceptor {\r\n    return async (request, proceed) => {\r\n        await untilOnline(target);\r\n        return proceed(request);\r\n    };\r\n}\r\n\r\n/**\r\n * Wait until the target is online.\r\n *\r\n * @param target The target to check online status.\r\n * @returns A promise that resolves when the target is online.\r\n */\r\nasync function untilOnline(target: Window): Promise<void> {\r\n    if (target.navigator.onLine) return;\r\n    return new Promise(resolve => target.addEventListener('online', () => resolve(), { once: true }));\r\n}\r\n","import { app } from '@microsoft/teams-js';\r\n\r\ntype DeepPartial<T> = {\r\n    [P in keyof T]?: DeepPartial<T[P]>;\r\n};\r\n\r\ninterface FallbackData {\r\n    getContext: app.Context;\r\n    getAuthToken: string;\r\n}\r\n\r\n/**\r\n * Fallback data about Teams host.\r\n *\r\n * @remarks The runtime value may not obey the type definition strictly, since it's for testing or local development only.\r\n */\r\nconst fallbackData: FallbackData = {} as FallbackData;\r\n\r\n/**\r\n * Patch the fallback data about Teams host, which will be used when the Teams initialization fails.\r\n *\r\n * @param patchData The data to patch.\r\n * @remarks This function is for testing or local development only.\r\n */\r\nexport function patchTeamsFallbackData(patchData: DeepPartial<FallbackData>): void {\r\n    Object.assign(fallbackData, patchData);\r\n}\r\n\r\n/**\r\n * Fallback the promise by the selector of the fallback data.\r\n *\r\n * @param promise The promise that may fail.\r\n * @param selector The selector to get the fallback data.\r\n * @returns A promise resolved with the result of the promise or the fallback data if possible.\r\n */\r\nexport async function fallbackBySelector<T>(\r\n    promise: Promise<T>,\r\n    selector: (data: FallbackData) => T | undefined\r\n): Promise<T> {\r\n    try {\r\n        return await promise;\r\n    } catch (error) {\r\n        const fallbackValue = selector(fallbackData);\r\n        if (fallbackValue !== undefined) return fallbackValue;\r\n\r\n        throw error;\r\n    }\r\n}\r\n","/**\r\n * Parses json as object.\r\n *\r\n * @param json The json string to parse.\r\n * @returns The parsed object if the json string is valid. Otherwise, return undefined.\r\n */\r\nexport function parseJson(json?: string): unknown {\r\n    if (json === undefined) return;\r\n\r\n    try {\r\n        return JSON.parse(json);\r\n    } catch {\r\n        // Ignore the error.\r\n    }\r\n}\r\n\r\n/**\r\n * Parses json as string set.\r\n * If the json string is undefined, it will return an empty array.\r\n * If the json string is of an array, it will return an array with only string elements.\r\n * If the json string is of a string, it will return an array with the string as the only element.\r\n * Otherwise, it will return an array with the json string as the only element.\r\n *\r\n * @param json The json string to parse.\r\n * @returns The parsed string set array.\r\n *\r\n * @example parseJsonAsStringSet('') // []\r\n * @example parseJsonAsStringSet('[\"\", 1, true, \"Another\", \"Another\", \"Yet\"]') // ['Another', 'Yet']\r\n * @example parseJsonAsStringSet('42') // ['42']\r\n */\r\nexport function parseJsonAsStringSet(json?: string): string[] {\r\n    const parsed = parseJson(json);\r\n    const array = Array.isArray(parsed) ? parsed : typeof parsed === 'string' ? [parsed] : json ? [json] : [];\r\n    return normalizeStringSet(array);\r\n}\r\n\r\n/**\r\n * Normalizes string set, retaining only non-empty unique strings.\r\n *\r\n * @param array The string set array to normalize.\r\n * @returns The normalized string set array.\r\n *\r\n * @example normalizeStringSet(['', 1, true, undefined, null, 'Another', 'Another', 'Yet']) // ['Another', 'Yet']\r\n */\r\nexport function normalizeStringSet(array: unknown[]): string[] {\r\n    return [...new Set(array.filter((o): o is string => typeof o === 'string' && Boolean(o)))];\r\n}\r\n","export type TeamsContextTheme = 'default' | 'dark' | 'contrast';\r\n\r\nconst knownThemes: TeamsContextTheme[] = ['default', 'dark', 'contrast'];\r\nconst fallbackTheme: TeamsContextTheme = 'default';\r\n\r\n/**\r\n * Coerce the theme to a known value.\r\n *\r\n * @param theme The theme to coerce.\r\n * @returns The coerced theme.\r\n */\r\nexport function coerceTeamsTheme(theme: string): TeamsContextTheme {\r\n    return knownThemes.find(knownTheme => knownTheme === theme) ?? fallbackTheme;\r\n}\r\n","import { ServiceOperation, ServiceResourceLocator } from '@addressbook/services-core';\r\n\r\n/**\r\n * The profile photo resource.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/resources/profilephoto\r\n */\r\nexport class GraphProfilePhotoResource {\r\n    constructor(private operation: ServiceOperation, private locator: ServiceResourceLocator) {}\r\n\r\n    /**\r\n     * Gets the profile photo content.\r\n     *\r\n     * @param signal The abort signal.\r\n     * @returns The profile photo content.\r\n     * @see https://learn.microsoft.com/graph/api/profilephoto-get\r\n     */\r\n    download(signal?: AbortSignal): Promise<Blob> {\r\n        const url = `/v1.0/${this.locator.path}/$value`;\r\n        return this.operation.requestBlob(url, { signal });\r\n    }\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './CommonModal.component';\r\nexport * from './CommonModal.styles';\r\nexport * from './ModalContent';\r\n","export * from './drive';\r\nexport * from './drive-item';\r\nexport * from './group';\r\nexport * from './profile-photo';\r\nexport * from './root';\r\nexport * from './share';\r\nexport * from './thumbnail';\r\nexport * from './user';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { IPanelStyles } from '@fluentui/react';\r\nimport { isDarkTheme } from '@addressbook/components-fluentui-teams-theme';\r\nimport { makeStyles } from '../styles/makeStyles';\r\n\r\nexport const usePanelStyles = /* #__PURE__*/ makeStyles<Partial<IPanelStyles>>(theme => ({\r\n    main: {\r\n        animation: 'none',\r\n        backgroundColor: isDarkTheme(theme.name) ? theme.palette.neutralLight : undefined,\r\n    },\r\n    scrollableContent: {\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n    },\r\n    commands: {\r\n        padding: 0,\r\n        borderBottom: `1px solid ${theme.palette.neutralTertiaryAlt}`,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    navigation: {\r\n        height: 'auto',\r\n    },\r\n    content: {\r\n        padding: '24px 4px',\r\n        flex: '1 1 auto',\r\n        overflowY: 'auto', // fallback for FireFox\r\n        'overflow-y': 'overlay', // make scrollbar float over content\r\n    },\r\n    contentInner: {\r\n        height: '100%',\r\n    },\r\n}));\r\n","import { ServiceInterceptor } from '../types';\r\n\r\n/**\r\n * A authenticate function to be called when a request is made, to allocate an access token.\r\n *\r\n * @param request The request to allocate the token for.\r\n * @returns An access token to be attached to the request, or an empty string if no token is available.\r\n */\r\nexport type Authenticate = (request: Request) => Promise<string>;\r\n\r\n/**\r\n * Create a service interceptor to authorize requests.\r\n *\r\n * @param authenticate The authenticate function.\r\n * @returns An interceptor.\r\n */\r\nexport function createAuthorizationInterceptor(authenticate: Authenticate): ServiceInterceptor {\r\n    return async (request, proceed) => {\r\n        const token = await authenticate(request);\r\n        const authorizedRequest = token ? authorize(request, token) : request;\r\n        return proceed(authorizedRequest);\r\n    };\r\n}\r\n\r\nfunction authorize(request: Request, token: string): Request {\r\n    const authorizedRequest = new Request(request);\r\n    authorizedRequest.headers.set('Authorization', `Bearer ${token}`);\r\n    return authorizedRequest;\r\n}\r\n","import React from 'react';\r\n\r\nexport interface UseDropOptions {\r\n    accept: (data: DataTransfer) => boolean;\r\n    consume?: (data: DataTransfer) => void;\r\n    disabled?: boolean;\r\n}\r\n\r\n/**\r\n * A Hook to handle drag and drop events as a drop target.\r\n *\r\n * @property accept A function to determine if the data is accepted.\r\n * @property consume A function to consume the data.\r\n * @property disabled A flag to disable the drop target.\r\n * @returns a tuple of dragging state and a ref to the drop target element.\r\n */\r\nexport function useDrop<Element extends HTMLElement>({\r\n    accept,\r\n    consume,\r\n    disabled,\r\n}: UseDropOptions): [boolean, React.Ref<Element>] {\r\n    const elementRef = React.useRef<Element>(null);\r\n    const [dragging, setDragging] = React.useState(false);\r\n\r\n    const guard = React.useCallback(\r\n        (handler: (data: DataTransfer) => void, prevent?: boolean) => (event: DragEvent) => {\r\n            if (event.relatedTarget) return;\r\n\r\n            const data = event.dataTransfer;\r\n            if (!data || !accept(data)) return;\r\n\r\n            if (prevent) event.preventDefault();\r\n            handler(data);\r\n        },\r\n        [accept]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        if (disabled) return;\r\n\r\n        const element = elementRef.current;\r\n        if (!element) return;\r\n\r\n        const enter = guard(() => setDragging(true));\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        const over = guard(() => {}, true);\r\n        const leave = guard(() => setDragging(false));\r\n        const drop = guard(data => consume?.(data), true);\r\n\r\n        const controller = new AbortController();\r\n        element.ownerDocument.addEventListener('dragenter', enter, { signal: controller.signal, capture: true });\r\n        element.ownerDocument.addEventListener('dragover', over, { signal: controller.signal, capture: true });\r\n        element.ownerDocument.addEventListener('dragleave', leave, { signal: controller.signal, capture: true });\r\n        element.ownerDocument.addEventListener('drop', leave, { signal: controller.signal, capture: true });\r\n        element.addEventListener('drop', drop, { signal: controller.signal });\r\n        return () => controller.abort();\r\n    }, [consume, disabled, elementRef, guard]);\r\n\r\n    return [dragging, elementRef];\r\n}\r\n","import { ServiceOperation, ServiceResourceLocator } from '@addressbook/services-core';\r\nimport { AccessSharingLinkOptions } from '../types';\r\n\r\n/**\r\n * The thumbnail resource.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/resources/thumbnail\r\n */\r\nexport class GraphThumbnailResource {\r\n    constructor(private operation: ServiceOperation, private locator: ServiceResourceLocator) {}\r\n\r\n    /**\r\n     * Downloads the thumbnail content.\r\n     *\r\n     * @param options The download options.\r\n     * @param signal The abort signal.\r\n     * @returns The thumbnail content.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-list-thumbnails#retrieve-thumbnail-binary-content\r\n     */\r\n    async download({ prefer }: AccessSharingLinkOptions = {}, signal?: AbortSignal): Promise<Blob> {\r\n        const url = `/v1.0/${this.locator.path}/content`;\r\n        return this.operation.requestBlob(url, { headers: prefer ? { Prefer: prefer } : {}, signal });\r\n    }\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\nimport React from 'react';\r\nimport { useBoolean, useId } from '@fluentui/react-hooks';\r\nimport { Icon, IStyle, mergeStyles } from '@fluentui/react';\r\nimport { CollapsedClassName, useCollapsingAreaStyles } from './CollapsingArea.styles';\r\n\r\nexport interface ICollapsingAreaProps {\r\n    title: string | JSX.Element;\r\n    farItems?: JSX.Element;\r\n    collapseIcon: string;\r\n    expandIcon: string;\r\n    collapse?: boolean;\r\n    titleClassName?: string;\r\n    styles?: CollapsingAreaStyles;\r\n}\r\n\r\nexport interface CollapsingAreaStyles {\r\n    button?: IStyle | string;\r\n    icon?: IStyle | string;\r\n    text?: IStyle | string;\r\n    collapsibleRegion?: IStyle | string;\r\n}\r\n\r\nexport const CollapsingArea: React.FC<ICollapsingAreaProps> = ({\r\n    title,\r\n    collapse,\r\n    collapseIcon,\r\n    expandIcon,\r\n    children,\r\n    titleClassName,\r\n    farItems,\r\n    styles,\r\n}: React.PropsWithChildren<ICollapsingAreaProps>): JSX.Element => {\r\n    const [collapsedState, { toggle }] = useBoolean(collapse ?? false);\r\n    const collapsingAreaStyles = useCollapsingAreaStyles();\r\n    const ariaControlsId = useId('collapsible-region-');\r\n\r\n    return (\r\n        <div className={collapsedState ? CollapsedClassName : 'is-expanded'}>\r\n            <div className={mergeStyles(collapsingAreaStyles.title, titleClassName)}>\r\n                <button\r\n                    className={mergeStyles(collapsingAreaStyles.button, styles?.button)}\r\n                    onClick={toggle}\r\n                    aria-expanded={!collapsedState}\r\n                    aria-controls={ariaControlsId}>\r\n                    <Icon\r\n                        className={mergeStyles(collapsingAreaStyles.icon, styles?.icon)}\r\n                        iconName={collapsedState ? collapseIcon : expandIcon}\r\n                    />\r\n                    <div className={mergeStyles(collapsingAreaStyles.text, styles?.text)}>{title}</div>\r\n                </button>\r\n                {farItems}\r\n            </div>\r\n\r\n            <div\r\n                id={ariaControlsId}\r\n                className={mergeStyles(collapsingAreaStyles.collapsibleRegion, styles?.collapsibleRegion)}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './ContentCopyRequestModal.component';\r\nexport type { ContentCopyRequestProps } from './ContentCopyRequestModalContent';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { IModalStyles } from '@fluentui/react';\r\nimport { makeStyles } from '../styles/makeStyles';\r\n\r\nconst horizontalPaddingGap = '1.875rem';\r\nexport const useCopyRequestModalStyles = /* #__PURE__*/ makeStyles<Partial<IModalStyles>>({\r\n    main: {\r\n        width: '29.25rem',\r\n        height: '9.5rem',\r\n        maxHeight: '100%',\r\n    },\r\n    scrollableContent: {\r\n        height: '100%',\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingTop: '1.875rem',\r\n        paddingBottom: '1.25rem',\r\n        gap: '0.625rem',\r\n        boxSizing: 'border-box',\r\n    },\r\n});\r\n\r\nexport const useContentStyles = /* #__PURE__*/ makeStyles(() => ({\r\n    header: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        padding: `0 ${horizontalPaddingGap}`,\r\n        flex: '0 0 auto',\r\n        h1: {\r\n            fontSize: '18px',\r\n        },\r\n    },\r\n    headerProperty: {\r\n        maxWidth: 'calc( 100% - 2rem )',\r\n    },\r\n    footer: {\r\n        padding: `0 ${horizontalPaddingGap}`,\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        '>.ms-Button--command': {\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    linkPermissionSetting: {\r\n        width: '21rem',\r\n        height: '3rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    linkPermissionSettingIcon: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '2rem',\r\n        height: '2rem',\r\n        margin: '0 0.5rem',\r\n    },\r\n    linkPermissionSettingTextStyles: [\r\n        {\r\n            width: '15rem',\r\n            maxWidth: '15rem',\r\n        },\r\n    ],\r\n}));\r\n","export interface ServiceOperationErrorInit {\r\n    message?: string;\r\n    request: Request;\r\n    response: Response;\r\n}\r\n\r\nexport class ServiceOperationError extends Error {\r\n    request: Request;\r\n    response: Response;\r\n\r\n    constructor({ message, request, response }: ServiceOperationErrorInit) {\r\n        super(message ?? response.statusText);\r\n        this.name = this.constructor.name;\r\n        this.request = request;\r\n        this.response = response;\r\n    }\r\n}\r\n","export enum PeopleSelectionType {\r\n    User,\r\n    Group,\r\n    Tag,\r\n    Unspecific,\r\n}\r\n\r\nexport interface BasePeopleSelection {\r\n    id: string;\r\n    name: string;\r\n    mail?: string;\r\n    icon?: string;\r\n    unremovable?: boolean;\r\n}\r\n\r\nexport interface SinglePeopleSelection extends BasePeopleSelection {\r\n    type: PeopleSelectionType.User;\r\n}\r\n\r\nexport interface ManyPeopleSelection extends BasePeopleSelection {\r\n    type: PeopleSelectionType.Group | PeopleSelectionType.Tag | PeopleSelectionType.Unspecific;\r\n    items?: OrPromise<SinglePeopleSelection[]>;\r\n    resolveItems?: () => OrPromise<SinglePeopleSelection[]>;\r\n    count?: number;\r\n    expandable?: boolean;\r\n}\r\n\r\nexport type PeopleSelection = SinglePeopleSelection | ManyPeopleSelection;\r\n\r\nexport type RetrieveIcon = (selection: PeopleSelection) => OrPromise<PeopleSelection['icon'] | Blob>;\r\n\r\nexport type WithSelection<T> = T & { selection: PeopleSelection };\r\n\r\ntype OrPromise<T> = T | Promise<T>;\r\n\r\nexport type FormatOptionalStringBySelection = (selection: PeopleSelection) => string | undefined;\r\n","import React from 'react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { CommonIcon, CommonIconSize } from '../CommonIcon';\r\nimport { useCommonCardStyles } from './CommonCard.styles';\r\n\r\nexport interface CommonCardProps {\r\n    accentColor: string;\r\n    iconName: string;\r\n    title: string;\r\n    description?: React.ReactNode;\r\n    highlightDescription?: boolean;\r\n    reminder?: JSX.Element;\r\n    isMobile?: boolean;\r\n    farItem?: React.ReactNode;\r\n\r\n    // If expandable, not mobile, and there's no reminder, the icon will be larger and centerized\r\n    // vertically, and the description is able to wrap.\r\n    expandable?: boolean;\r\n    focusable?: boolean;\r\n    id?: string;\r\n    role?: React.AriaRole;\r\n    onCardClick?: () => void;\r\n}\r\n\r\nexport const CommonCard: React.FC<CommonCardProps> = (props: CommonCardProps): JSX.Element => {\r\n    const {\r\n        accentColor,\r\n        iconName,\r\n        title,\r\n        description,\r\n        highlightDescription,\r\n        reminder,\r\n        isMobile,\r\n        expandable,\r\n        id,\r\n        role,\r\n        farItem,\r\n        onCardClick,\r\n    } = props;\r\n    const cardStyles = useCommonCardStyles();\r\n    const expanded = expandable && !isMobile && !reminder;\r\n\r\n    return (\r\n        <div role={role}>\r\n            <button\r\n                id={id}\r\n                className={mergeStyles(\r\n                    cardStyles.root,\r\n                    expanded && cardStyles.expandedRoot,\r\n                    isMobile && cardStyles.mobileRoot,\r\n                    isMobile && !reminder && cardStyles.mobileRootWithoutReminder\r\n                )}\r\n                onClick={onCardClick}>\r\n                <CommonIcon\r\n                    icon={iconName}\r\n                    size={expanded ? CommonIconSize.Size64 : CommonIconSize.Size32}\r\n                    iconBackgroundColor={accentColor}\r\n                    title={title}\r\n                    description={description}\r\n                    rightItem={farItem}\r\n                    styles={{\r\n                        root: expanded && cardStyles.expandedIconRoot,\r\n                        description: mergeStyles([\r\n                            highlightDescription && cardStyles.hightlightedDescription,\r\n                            expanded && cardStyles.expandedDescription,\r\n                        ]),\r\n                    }}\r\n                />\r\n                {reminder}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * A Hook to create an object URL for a blob.\r\n * This will revoke the previous object URL when the blob changes or the component unmounts.\r\n *\r\n * @param blob The Blob to create an object URL for.\r\n * @returns The object URL for the Blob.\r\n */\r\nexport function useBlobObjectUrl(blob: Blob): string;\r\nexport function useBlobObjectUrl(blob: undefined): undefined;\r\nexport function useBlobObjectUrl(blob: Blob | undefined): string | undefined;\r\nexport function useBlobObjectUrl(blob: Blob | undefined): string | undefined {\r\n    const blobRef = useRef<Blob>();\r\n    const objectUrlRef = useRef<string>();\r\n\r\n    const updateObjectUrlRef = useRef((objectUrl?: string) => {\r\n        const previousObjectUrl = objectUrlRef.current;\r\n        if (previousObjectUrl) URL.revokeObjectURL(previousObjectUrl);\r\n        objectUrlRef.current = objectUrl;\r\n    });\r\n\r\n    if (blob !== blobRef.current) {\r\n        blobRef.current = blob;\r\n        updateObjectUrlRef.current(blob ? URL.createObjectURL(blob) : undefined);\r\n    }\r\n\r\n    useEffect(() => updateObjectUrlRef.current, []);\r\n    return objectUrlRef.current;\r\n}\r\n","import {\r\n    Icon,\r\n    IIconProps,\r\n    ImageFit,\r\n    IPersonaCoinProps,\r\n    IPersonaSharedProps,\r\n    PersonaCoin,\r\n    useTheme,\r\n} from '@fluentui/react';\r\nimport { isAbsoluteUrl } from '@addressbook/utilities-core';\r\nimport React from 'react';\r\nimport { RetrieveIcon, WithSelection } from '../types';\r\nimport { usePeopleCoinStyles } from './PeopleCoin.styles';\r\nimport { useIcon } from './PeopleCoin.utils';\r\n\r\n/**\r\n * The props for the PeopleCoin component, which renders a person as a coin.\r\n *\r\n * @property selection The person to display.\r\n * @property onRetrieveIcon A function to retrieve the icon for the person.\r\n */\r\nexport interface PeopleCoinProps extends WithSelection<IPersonaSharedProps> {\r\n    onRetrieveIcon?: RetrieveIcon;\r\n    preventNameAsTitle?: boolean;\r\n}\r\n\r\nexport const PeopleCoin: React.FC<PeopleCoinProps> = ({ selection, onRetrieveIcon, preventNameAsTitle, ...props }) => {\r\n    const theme = useTheme();\r\n    const styles = usePeopleCoinStyles();\r\n\r\n    const icon = useIcon(selection, onRetrieveIcon);\r\n\r\n    const propsInternal = React.useMemo<IPersonaCoinProps>(() => {\r\n        const baseProps = { text: selection.name, title: preventNameAsTitle ? undefined : selection.name, ...props };\r\n        if (!icon) return baseProps;\r\n\r\n        const iconProps: IIconProps = isAbsoluteUrl(icon)\r\n            ? {\r\n                  imageProps: { src: icon, imageFit: ImageFit.cover },\r\n                  style: props.coinSize\r\n                      ? { boxSizing: 'border-box', width: props.coinSize, height: props.coinSize }\r\n                      : {},\r\n              }\r\n            : {\r\n                  iconName: icon,\r\n                  style: props.coinSize\r\n                      ? { boxSizing: 'border-box', fontSize: props.coinSize, padding: props.coinSize * 0.1875 }\r\n                      : {},\r\n              };\r\n\r\n        return {\r\n            ...baseProps,\r\n            onRenderInitials: props => <Icon className={styles.icon} title={props?.title} {...iconProps} />,\r\n            initialsColor: theme.palette.themeLight,\r\n            initialsTextColor: theme.palette.themeDark,\r\n        };\r\n    }, [\r\n        icon,\r\n        preventNameAsTitle,\r\n        props,\r\n        selection.name,\r\n        styles.icon,\r\n        theme.palette.themeDark,\r\n        theme.palette.themeLight,\r\n    ]);\r\n\r\n    return <PersonaCoin {...props} {...propsInternal} />;\r\n};\r\n","import { mergeStyles } from '@fluentui/react';\r\nimport { useId } from '@fluentui/react-hooks';\r\nimport React from 'react';\r\nimport { PeopleCoin } from '../PeopleCoin';\r\nimport { PeopleSelection, PeopleSelectionType } from '../types';\r\nimport { usePeopleViewStyles } from './PeopleView.styles';\r\nimport { FormatNames, PeopleViewProps } from './PeopleView.types';\r\n\r\nconst defaultFormatNames: FormatNames = (names: string[]) => ({ normal: names.join(', ') });\r\n\r\nexport const PeopleView: React.FC<PeopleViewProps> = ({\r\n    label,\r\n    selections,\r\n    onRetrieveIcon,\r\n    formatNames = defaultFormatNames,\r\n    className,\r\n    ...props\r\n}) => {\r\n    const { normal: names, compact: compactNames } = React.useMemo(\r\n        () => formatNames(selections.map(selection => selection.name)),\r\n        [selections, formatNames]\r\n    );\r\n\r\n    const aggregatedSelection = React.useMemo<PeopleSelection>(\r\n        () =>\r\n            selections.length === 1\r\n                ? selections[0]\r\n                : { type: PeopleSelectionType.Unspecific, id: 'aggregated', name: names, icon: 'People' },\r\n        [names, selections]\r\n    );\r\n\r\n    const labelId = useId('label');\r\n    const styles = usePeopleViewStyles();\r\n    return (\r\n        <div className={mergeStyles(styles.root, className)} {...props}>\r\n            <PeopleCoin selection={aggregatedSelection} onRetrieveIcon={onRetrieveIcon} coinSize={32} />\r\n            <div className={styles.textContainer}>\r\n                <div className={styles.names} title={names} aria-labelledby={labelId}>\r\n                    {compactNames ?? names}\r\n                </div>\r\n                <div className={styles.label} id={labelId}>\r\n                    {label}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export * from './AppHeader.component';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Modal, mergeStyleSets, IModalStyles } from '@fluentui/react';\r\nimport { useId } from '@fluentui/react-hooks';\r\nimport { useModalStyles } from './CommonModal.styles';\r\nimport { ModalContent, ModalContentProps } from './ModalContent';\r\n\r\nexport type CommonModalProps = ModalContentProps & {\r\n    isOpen: boolean;\r\n    modalStyles?: Partial<IModalStyles>;\r\n};\r\n\r\nexport const CommonModal: React.FC<CommonModalProps> = ({\r\n    isOpen,\r\n    modalStyles,\r\n    ...props\r\n}: CommonModalProps): JSX.Element => {\r\n    const styles = useModalStyles();\r\n    const titleId = useId('ModalTitle');\r\n    const subTitleId = useId('ModalSubTitle');\r\n    return (\r\n        <Modal\r\n            titleAriaId={titleId}\r\n            subtitleAriaId={subTitleId}\r\n            styles={mergeStyleSets(styles, modalStyles)}\r\n            isOpen={isOpen}\r\n            isBlocking\r\n            layerProps={{ eventBubblingEnabled: true }}\r\n            focusTrapZoneProps={{ isClickableOutsideFocusTrap: true }}\r\n            onDismiss={props.onDismiss}>\r\n            <ModalContent titleId={titleId} subTitleId={subTitleId} {...props} />\r\n        </Modal>\r\n    );\r\n};\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { isContrastTheme } from '@addressbook/components-fluentui-teams-theme';\r\nimport { ellipsisStyles } from '../styles/ellipsisStyles';\r\nimport { makeStyles } from '../styles/makeStyles';\r\n\r\nexport const useCommonCardStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'relative',\r\n        padding: '16px',\r\n        width: '300px',\r\n        height: '100px',\r\n        boxShadow: '0px 0.3px 0.9px rgba(0, 0, 0, 0.07), 0px 1.6px 3.6px rgba(0, 0, 0, 0.11)',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        textAlign: 'start',\r\n        background: theme.palette.white,\r\n        border: `${isContrastTheme(theme.name) ? '0.87px' : 0} solid ${theme.palette.neutralLighter}`,\r\n        outlineOffset: '2px',\r\n\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'normal',\r\n\r\n        color: theme.palette.neutralDark,\r\n    },\r\n    mobileRoot: {\r\n        boxShadow: 'none',\r\n        background: 'transparent',\r\n        width: '100%',\r\n        height: '106px',\r\n        ':before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            right: 0,\r\n            bottom: 0,\r\n            width: 'calc(100% - 16px)',\r\n            borderBottom: `1px solid ${theme.palette.neutralTertiaryAlt}`,\r\n        },\r\n    },\r\n    mobileRootWithoutReminder: {\r\n        height: '64px',\r\n        ':before': {\r\n            width: 'calc(100% - 72px)',\r\n        },\r\n    },\r\n    expandedRoot: {\r\n        paddingInline: '18px',\r\n        justifyContent: 'center',\r\n    },\r\n    hightlightedDescription: {\r\n        color: theme.palette.redDark,\r\n    },\r\n    expandedIconRoot: {\r\n        columnGap: '18px',\r\n    },\r\n    expandedDescription: [\r\n        ellipsisStyles(3),\r\n        { marginTop: '3px !important', whiteSpace: 'normal', wordBreak: 'normal', maxLines: 3 },\r\n    ],\r\n}));\r\n","import { AWTEventData, AWTEventProperties, AWTPropertyType } from '@aria/webjs-sdk';\r\nimport { ActionOutcome, CommonLogCategory, PanelLaunchMethod, PanelRegion, PanelType } from './types';\r\n\r\n/**\r\n * Details bag for logs\r\n *\r\n * @param message message\r\n * @param error error\r\n * @param details Details (callstack, source, stringified details)\r\n * @param method method\r\n */\r\nexport interface ITelemetryDetails {\r\n    message?: string;\r\n    error?: Error;\r\n    details?: string;\r\n    method?: string;\r\n}\r\n\r\nexport interface IAWTLogger {\r\n    logEvent: (event: AWTEventProperties | AWTEventData | string) => void;\r\n    setContext: (name: string, value: string | number | boolean, type?: AWTPropertyType) => void;\r\n}\r\n\r\nexport interface ILogger<TScenarioName extends string, TStepName extends string, TLogCategory extends string> {\r\n    /**\r\n     * session id\r\n     */\r\n    readonly sessionId: string;\r\n\r\n    /**\r\n     * Used to start log event at once even in delay time\r\n     */\r\n    activeLogger: () => void;\r\n\r\n    /**\r\n     * Set Compliant Aria Client for EUDB\r\n     */\r\n    setCompliantAriaClient: (tenantId: string) => Promise<void>;\r\n\r\n    /**\r\n     * Used to add/update common property for logger\r\n     *\r\n     * @param dataMap dictionary of common properties to update/add\r\n     */\r\n    setCommonProperty: (dataMap: Record<string, string | number | boolean | undefined>) => void;\r\n\r\n    /**\r\n     * Used to log scenario relative data\r\n     *\r\n     * @param name Scenario name\r\n     * @param eventData Data of the event\r\n     * @param completeScenario if the scenario should be stopped\r\n     */\r\n    logScenario: (name: string, eventData: IScenarioEventData, completeScenario: boolean) => void;\r\n\r\n    /**\r\n     * Used to log a performance signal\r\n     *\r\n     * @param action Action\r\n     * @param source Source\r\n     * @param duration Time measurement in MS\r\n     * @param duartionDetails Other duration details as needed\r\n     * @param dataBag databag\r\n     */\r\n    logPerformance: (\r\n        action: string,\r\n        source: string,\r\n        duration: number,\r\n        duartionDetails?: { [key: string]: number },\r\n        dataBag?: any\r\n    ) => void;\r\n\r\n    /**\r\n     * Used to log a http request and response\r\n     *\r\n     * @param httpInfo data bag containing http info\r\n     */\r\n    logHttp: (httpInfo: IHttpInfo) => void;\r\n\r\n    /**\r\n     * Used to log a UI Event\r\n     *\r\n     * @param panelLaunchMethod how the panel was launched\r\n     * @param panelRegion The region of the page the panel is lcoated in\r\n     * @param panelType indicates which panel the action was performed in\r\n     * @param dataBag Other details as needed\r\n     */\r\n    logUserBiView: (\r\n        panelLaunchMethod: PanelLaunchMethod,\r\n        panelRegion: PanelRegion,\r\n        panelType: PanelType,\r\n        dataBag?: any\r\n    ) => void;\r\n\r\n    /**\r\n     * Used to log a user action\r\n     *\r\n     * @param scenarioName The action category\r\n     * @param scenarioType The action scenario\r\n     * @param moduleName name of the module clicked (name of the class)\r\n     * @param dataBag Other details as needed\r\n     * @param pageLeave Indicate whether the current action is leaving current page, if yes, it will raise additional event to track the event with stay time\r\n     */\r\n    logUserBiAction: (\r\n        scenarioName: TScenarioName,\r\n        scenarioType: string,\r\n        moduleName: string,\r\n        dataBag?: any,\r\n        pageLeave?: boolean\r\n    ) => void;\r\n\r\n    /**\r\n     * Used to log an API Action\r\n     *\r\n     * @param nonUiComponent The non UI component\r\n     * @param event The event\r\n     * @param details Other details as needed\r\n     */\r\n    logNonUiTelemetry: (nonUiComponent: string, outcome: ActionOutcome, details?: any) => void;\r\n\r\n    /**\r\n     * Used to log debug informational messages - noisy chatter for debugging issues to the trace table\r\n     *\r\n     * @param logCategory The component/category for which this log is relevant to\r\n     * @param message The message to log\r\n     */\r\n    logTraceDebug: (logCategory: TLogCategory | CommonLogCategory, message: string) => void;\r\n\r\n    /**\r\n     * Used to log informational messages to the trace table\r\n     *\r\n     * @param logCategory The component/category for which this log is relevant to\r\n     * @param message The message to log\r\n     */\r\n    logTraceInfo: (logCategory: TLogCategory | CommonLogCategory, message: string) => void;\r\n\r\n    /**\r\n     * Used to log warning messages to the trace table\r\n     *\r\n     * @param logCategory The component/category for which this log is relevant to\r\n     * @param message The message to log\r\n     */\r\n    logTraceWarning: (logCategory: TLogCategory | CommonLogCategory, message: string) => void;\r\n\r\n    /**\r\n     * Used to log error messages to the trace table\r\n     *\r\n     * @param logCategory The component/category for which this log is relevant to\r\n     * @param message The message to log\r\n     */\r\n    logTraceError: (logCategory: TLogCategory | CommonLogCategory, message: string) => void;\r\n\r\n    /**\r\n     * Used to log an exception to the trace table when callstack is available\r\n     *\r\n     * @param logCategory logCategory\r\n     * @param details Details (callstack, source, stringified details)\r\n     * @param dataBag Any additional custom data bags to be emitted as ARIA columns. Use only for really specific cases,\r\n     * for any generic use, add a structured new param to this method definition\r\n     */\r\n    logTraceException: (\r\n        logCategory: TLogCategory | CommonLogCategory,\r\n        details: ITelemetryDetails,\r\n        dataBag?: any\r\n    ) => void;\r\n\r\n    /**\r\n     * Used to log an HTTP exception to the trace table\r\n     *\r\n     * @param httpAPI The API name to be printed in the trace log for readability on which API failed\r\n     * @param message Message\r\n     * @param httpStatusCode HTTP Status code of the response\r\n     */\r\n    logTraceHttpException: (httpAPI: string, message: string, httpStatusCode: number) => void;\r\n\r\n    /**\r\n     * Creates a scenario logger\r\n     *\r\n     * @param name The name of the scenario\r\n     * @param dataBag data info log when start scenario\r\n     */\r\n    createScenario(name: string, dataBag?: any): IScenarioLogger<TStepName>;\r\n\r\n    /**\r\n     * Finds an active scenario logger\r\n     *\r\n     * @param name The name of the scenario\r\n     */\r\n    findScenario(name: string): IScenarioLogger<TStepName> | null;\r\n\r\n    /**\r\n     * Finds an active scenario logger and mark it with step and data\r\n     *\r\n     * @param scenarioName The name of the scenario\r\n     * @param step The name of the step\r\n     * @param status The status\r\n     * @param eventData Event data\r\n     */\r\n    markScenario(\r\n        scenarioName: TScenarioName,\r\n        step: TStepName,\r\n        status?: TelemetryScenarioStatus,\r\n        eventData?: Partial<IScenarioEventData>\r\n    ): void;\r\n\r\n    /**\r\n     * End a scenario and delete it\r\n     *\r\n     * @param scenarioName The name of the scenario\r\n     * @param eventData Event data\r\n     */\r\n    stopScenario(scenarioName: string, eventData?: Partial<IScenarioEventData>): void;\r\n\r\n    /**\r\n     * End a scenario with failure and delete it\r\n     *\r\n     * @param scenarioName The name of the scenario\r\n     * @param eventData Event data\r\n     */\r\n    failScenario(scenarioName: string, eventData?: Partial<IScenarioEventData>): void;\r\n\r\n    /**\r\n     * Forcefully remove scenario, only to be used in cases with task module limitations.\r\n     *\r\n     * @param name  The name of the scenario\r\n     */\r\n    markScenarioComplete(name: string): void;\r\n\r\n    /**\r\n     * Function to call to flush logs\r\n     *\r\n     * @param callback the function that is called when flush finishes.\r\n     */\r\n    flushLogs(callback: () => void): void;\r\n\r\n    /**\r\n     * Prevents new events from being added for transmission. It also batches all\r\n     * events currently in the queue, and creates requests for them to be sent. If\r\n     * HTML5 Beacons are supported, then they will be used.\r\n     * */\r\n    flushAndTeardown(): void;\r\n}\r\n\r\n// interface for logging http info. Will change over time.\r\nexport interface IHttpInfo {\r\n    apiName?: string;\r\n    url: string;\r\n    clientRequestId: string;\r\n    correlationId: string;\r\n    latency?: number;\r\n    getTeamsContextLatency?: number;\r\n    getAuthTokenLatency?: number;\r\n    requestMethod: string;\r\n    responseCode?: number;\r\n    responseText?: string;\r\n    edgeRef?: string;\r\n}\r\n\r\nexport interface IScenarioLogger<TStepName extends string> {\r\n    elapsedTime: number;\r\n    getCurrentElapsedTime(): number;\r\n    mark(stepName: TStepName, status?: TelemetryScenarioStatus, eventData?: Partial<IScenarioEventData>): void;\r\n    stop(eventData?: Partial<IScenarioEventData>): void;\r\n    fail(eventData?: Partial<IScenarioEventData>): void;\r\n}\r\n\r\nexport enum ScenarioColumns {\r\n    Delta = 'delta',\r\n    Elapsed = 'elapsed',\r\n    Error = 'error',\r\n    ErrorCode = 'errorCode',\r\n    ScenarioName = 'Scenario.Name',\r\n    ScenarioStatus = 'Scenario.Status',\r\n    ScenarioStep = 'Scenario.Step',\r\n    StartReason = 'startReason',\r\n    StatusCode = 'statusCode',\r\n    StepDelta = 'stepDelta',\r\n    StepElapsed = 'stepElapsed',\r\n}\r\n\r\nexport enum TelemetryScenarioStatus {\r\n    Abandoned = 'abandoned',\r\n    Failure = 'failure',\r\n    Incomplete = 'incomplete',\r\n    Init = 'init',\r\n    Success = 'success',\r\n    Timeout = 'timeout',\r\n}\r\n\r\nexport enum TelemetryScenarioStep {\r\n    Finish = 'finish',\r\n    Pause = 'pause',\r\n    Start = 'start',\r\n    Test = 'test',\r\n}\r\n\r\nexport interface ScenarioProperties {\r\n    /**\r\n     * Name of the scenario marker\r\n     */\r\n    [ScenarioColumns.ScenarioName]?: string;\r\n    [ScenarioColumns.ScenarioStep]?: TelemetryScenarioStep | string;\r\n    /**\r\n     * Indicates the status of the scenario like 'success', 'failure', 'timeout', etc.\r\n     */\r\n    [ScenarioColumns.ScenarioStatus]?: TelemetryScenarioStatus;\r\n\r\n    [ScenarioColumns.StartReason]?: string;\r\n    [ScenarioColumns.StatusCode]?: string;\r\n\r\n    [ScenarioColumns.ErrorCode]?: string;\r\n    [ScenarioColumns.Error]?: Error;\r\n\r\n    /**\r\n     * Scenario Latency\r\n     */\r\n    [ScenarioColumns.Delta]?: number;\r\n    /**\r\n     * Allows to order the events during a given session. To be renamed as Scenario_Elapsed\r\n     */\r\n    [ScenarioColumns.Elapsed]?: number;\r\n\r\n    /**\r\n     * Step latency\r\n     */\r\n    [ScenarioColumns.StepDelta]?: number;\r\n    [ScenarioColumns.StepElapsed]?: number;\r\n}\r\n\r\nexport interface IScenarioEventData extends ScenarioProperties {\r\n    id?: string;\r\n    lastUpdatedTime?: Date;\r\n    startTime?: Date;\r\n    finishTime?: Date;\r\n    dataBag?: any;\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { IModalStyles, ITextFieldStyles } from '@fluentui/react';\r\nimport { makeStyles } from '../styles/makeStyles';\r\n\r\nexport const useCopyResponseModalStyles = /* #__PURE__*/ makeStyles<Partial<IModalStyles>>({\r\n    main: {\r\n        width: '25rem',\r\n        height: '18rem',\r\n        maxHeight: '100%',\r\n    },\r\n    scrollableContent: {\r\n        height: '100%',\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '1.1875rem 2rem 2.5rem 2rem',\r\n        boxSizing: 'border-box',\r\n    },\r\n});\r\n\r\nexport const useContentStyles = /* #__PURE__*/ makeStyles(theme => ({\r\n    header: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        height: '1rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '>.ms-Button--icon': {\r\n            width: '1rem',\r\n            height: '1rem',\r\n        },\r\n    },\r\n    contents: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: '1rem',\r\n    },\r\n    copySuccessIcon: {\r\n        width: '2.75rem',\r\n        height: '2.75rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    copyTitle: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        marginTop: '1rem !important',\r\n        span: {\r\n            color: theme.palette.black,\r\n        },\r\n    },\r\n    copyContent: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        flex: '0 0 auto',\r\n        marginTop: '1.25rem !important',\r\n    },\r\n    linkPermissionSetting: {\r\n        width: '21rem',\r\n        height: '3rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        border: `1px solid ${theme.palette.neutralLight}`,\r\n        borderRadius: '3px',\r\n        marginTop: '1.25rem !important',\r\n    },\r\n    linkPermissionSettingIcon: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '2rem',\r\n        height: '2rem',\r\n        margin: '0 0.5rem',\r\n    },\r\n    linkPermissionSettingTextStyles: [\r\n        {\r\n            width: '15rem',\r\n            maxWidth: '15rem',\r\n        },\r\n    ],\r\n}));\r\n\r\nexport function useLinkPlaceTextFieldStyles(): Partial<ITextFieldStyles> {\r\n    return {\r\n        fieldGroup: {\r\n            width: '14.75rem',\r\n            height: '1.875rem !important',\r\n            '.ms-TextField-fieldGroup:hover': {\r\n                borderWidth: '0 0 0 2px',\r\n            },\r\n            '.ms-TextField-fieldGroup:focus': {\r\n                borderWidth: '0 0 0 2px',\r\n            },\r\n        },\r\n    };\r\n}\r\n","import { IPersonaProps } from '@fluentui/react';\r\nimport React from 'react';\r\nimport { PeopleCoin } from '../PeopleCoin';\r\nimport { PeopleSelection, PeopleSelectionType, WithSelection } from '../types';\r\nimport { PeopleSelectProps } from './PeopleSelect.types';\r\n\r\n/**\r\n * Extracts the selection from persona props.\r\n *\r\n * @param props The persona props.\r\n * @returns The selection.\r\n */\r\nexport function extractSelectionFromPersonaProps(props: IPersonaProps): PeopleSelection {\r\n    return (props as WithSelection<IPersonaProps>).selection;\r\n}\r\n\r\n/**\r\n * Normalizes filter text.\r\n *\r\n * @param filter The filter text to normalize.\r\n * @returns The normalized filter text.\r\n * @example normalizeFilter('') // ''\r\n * @example normalizeFilter('  ') // ''\r\n * @example normalizeFilter('Ruijun Gao') // 'ruijun gao'\r\n * @example normalizeFilter('  Ruijun Gao  ') // 'ruijun gao'\r\n */\r\nexport function normalizeFilter(filter: string): string {\r\n    return filter.trim().toLowerCase();\r\n}\r\n\r\n/**\r\n * Filters suggestions based on selections.\r\n *\r\n * @param selections The selections to filter suggestions against.\r\n * @param suggestions The suggestions to filter.\r\n * @returns The filtered suggestions.\r\n * @example filterSuggestions([], []) // []\r\n * @example filterSuggestions([{ id: '1', name: 'Ruijun Gao' }], [{ id: '1', name: 'Ruijun Gao' }]) // []\r\n * @example filterSuggestions([{ id: '1', name: 'Ruijun Gao' }], [{ id: '2', name: 'Ruijun Gao' }]) // [{ id: '1', name: 'Ruijun Gao' }]\r\n */\r\nexport function filterSuggestions(suggestions: PeopleSelection[], selections: PeopleSelection[]): PeopleSelection[] {\r\n    return suggestions.filter(suggestion => !selections.some(selection => selection.id === suggestion.id));\r\n}\r\n\r\n/**\r\n * Resolves the items of a selection in-place if it is resolvable and not resolved.\r\n *\r\n * @param selection The selection to resolve.\r\n * @returns A promise that resolves when the selection is resolved.\r\n */\r\nexport async function resolvePeopleSelectionItems(selection: PeopleSelection): Promise<void> {\r\n    if (selection.type === PeopleSelectionType.User || !selection.resolveItems) return;\r\n\r\n    if (!selection.items) selection.items = selection.resolveItems();\r\n    if (!Array.isArray(selection.items)) selection.items = await selection.items;\r\n}\r\n\r\n/**\r\n * Expands a selection in selections into multiple selections if it is expandable.\r\n *\r\n * @param selections The selections.\r\n * @param selection The selection to expand.\r\n * @returns The new selections if the selection is expanded, otherwise undefined.\r\n */\r\nexport function tryExpandPeopleSelection(\r\n    selections: PeopleSelection[],\r\n    selection: PeopleSelection\r\n): PeopleSelection[] | undefined {\r\n    if (selection.type === PeopleSelectionType.User || !selection.expandable || !Array.isArray(selection.items)) return;\r\n\r\n    const index = selections.indexOf(selection);\r\n    if (index < 0) return;\r\n\r\n    const newSelections = [...selections];\r\n    const absentSelections = filterSuggestions(selection.items, selections);\r\n    const patchedSelections = absentSelections.map(absentSelection => ({\r\n        ...absentSelection,\r\n        unremovable: absentSelection.unremovable || selection.unremovable,\r\n    }));\r\n\r\n    newSelections.splice(index, 1, ...patchedSelections);\r\n    return newSelections;\r\n}\r\n\r\nexport type UseMapPeopleSelectionToPersonaOptions = Pick<PeopleSelectProps, 'onRetrieveIcon' | 'describeSuggestion'>;\r\nexport type MapPeopleSelectionToPersonaProps = (selection: PeopleSelection) => WithSelection<IPersonaProps>;\r\n\r\n/**\r\n * A hook that creates a function that maps a selection to a persona props.\r\n * The function will memoize the result based on the describeSuggestion function.\r\n *\r\n * @param describeSuggestion A function that describes a suggestion, used to generate the secondary text.\r\n * @returns A function that maps a selection to a persona props.\r\n */\r\nexport function useMapPeopleSelectionToPersonaProps({\r\n    onRetrieveIcon,\r\n    describeSuggestion,\r\n}: UseMapPeopleSelectionToPersonaOptions): MapPeopleSelectionToPersonaProps {\r\n    return React.useCallback(\r\n        selection => ({\r\n            key: selection.id,\r\n            text: selection.name,\r\n            secondaryText: describeSuggestion?.(selection),\r\n            selection,\r\n            onRenderPersonaCoin: props => (\r\n                <PeopleCoin {...props} selection={selection} onRetrieveIcon={onRetrieveIcon} coinSize={32} />\r\n            ),\r\n        }),\r\n        [describeSuggestion, onRetrieveIcon]\r\n    );\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './CommonLoadingIndicator.component';\r\n","import { app, authentication, chat, dialog, menus, teamsCore } from '@microsoft/teams-js';\r\nimport { fallbackBySelector } from './fallback';\r\nimport { coerceTeamsTheme, TeamsContextTheme } from './themes';\r\nimport { ensureByTeamsInitialization, guardByTeamsInitialization } from './utils';\r\n\r\nexport function getTeamsContext(): Promise<app.Context> {\r\n    const result = ensureByTeamsInitialization(app.getContext);\r\n    return fallbackBySelector(result, data => data.getContext);\r\n}\r\n\r\nexport function getAuthToken(resources: string | string[]): Promise<string> {\r\n    const parameters = {\r\n        resources: typeof resources === 'string' ? [resources, 'openid', 'Calls.JoinGroupCall.All'] : resources,\r\n    };\r\n    const result = ensureByTeamsInitialization(() => authentication.getAuthToken(parameters));\r\n    return fallbackBySelector(result, data => data.getAuthToken);\r\n}\r\n\r\nexport function registerOnThemeChangeHandler(handler: (theme: TeamsContextTheme) => void): Promise<void> {\r\n    const coercedHandler: app.themeHandler = theme => handler(coerceTeamsTheme(theme));\r\n    return ensureByTeamsInitialization(() => app.registerOnThemeChangeHandler(coercedHandler));\r\n}\r\n\r\nexport const registerBeforeUnloadHandler = guardByTeamsInitialization(teamsCore.registerBeforeUnloadHandler);\r\nexport const notifyAppInitializationSuccess = guardByTeamsInitialization(app.notifySuccess);\r\nexport const notifyAppInitializationFailure = guardByTeamsInitialization(app.notifyFailure);\r\nexport const executeDeepLink = guardByTeamsInitialization(app.openLink);\r\nexport const openChat = guardByTeamsInitialization(chat.openChat);\r\n// export const openChat = guardByTeamsInitialization();\r\nexport const getAuthenticationUser = guardByTeamsInitialization<authentication.UserProfile, []>(authentication.getUser);\r\nexport const setNavBarMenu = guardByTeamsInitialization(menus.setNavBarMenu);\r\nexport const resizeTaskModule = guardByTeamsInitialization(dialog.update.resize);\r\nexport const submitTask = guardByTeamsInitialization(dialog.url.submit);\r\nexport const startTask = guardByTeamsInitialization(dialog.url.open);\r\n","import React, { useMemo } from 'react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { rem } from '@addressbook/components-fluentui-teams-theme';\r\nimport { styles } from './EmptyState.styles';\r\nimport defultImg from './turtle.svg';\r\n\r\nexport interface IEmptyStateProps {\r\n    title: string;\r\n    image?: string | JSX.Element;\r\n    message?: string;\r\n    actionText?: string;\r\n    className?: string;\r\n    onAction?: () => void;\r\n    background?: string;\r\n    color?: string;\r\n    btnColor?: string;\r\n    height?: string;\r\n    btnBackground?: string;\r\n    role?: React.AriaRole;\r\n    titleFontSize?: number | string;\r\n}\r\nexport function EmptyState({\r\n    title,\r\n    message,\r\n    image = defultImg,\r\n    onAction,\r\n    actionText,\r\n    children,\r\n    className,\r\n    height,\r\n    color = '#000',\r\n    btnColor = '#242424',\r\n    background = '#F5F5F5',\r\n    btnBackground = '#FFF',\r\n    role,\r\n    titleFontSize = 18,\r\n}: React.PropsWithChildren<IEmptyStateProps>): React.ReactElement {\r\n    const titleId = useMemo(() => `dialogTitle${Math.random()}`.replace('.', '-'), []);\r\n    const descId = useMemo(() => `dialogDesc${Math.random()}`.replace('.', '-'), []);\r\n\r\n    return (\r\n        <div className={mergeStyles(styles.root, { height, background, color }, className)}>\r\n            {image && (\r\n                <div aria-hidden>{typeof image === 'string' ? <img alt='' aria-hidden src={image} /> : image}</div>\r\n            )}\r\n            <div\r\n                role={role}\r\n                aria-atomic\r\n                aria-labelledby={title && titleId}\r\n                aria-describedby={message && descId}\r\n                style={styles.info}>\r\n                {title && (\r\n                    <h2\r\n                        id={titleId}\r\n                        style={{ fontSize: typeof titleFontSize === 'number' ? rem(titleFontSize) : titleFontSize }}>\r\n                        {title}\r\n                    </h2>\r\n                )}\r\n                {message && (\r\n                    <pre id={descId} style={styles.message}>\r\n                        {message}\r\n                    </pre>\r\n                )}\r\n            </div>\r\n            {actionText && onAction && (\r\n                <button\r\n                    aria-hidden={!title}\r\n                    autoFocus\r\n                    style={{\r\n                        ...styles.btn,\r\n                        background: btnBackground,\r\n                        color: btnColor,\r\n                        cursor: 'pointer',\r\n                    }}\r\n                    onClick={onAction}>\r\n                    {actionText}\r\n                </button>\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","export * from './TaskModuleV2.component';\r\nexport * from './TaskModuleV2.styles';\r\n","import { mergeStyles } from '@fluentui/react';\r\nimport { useId } from '@fluentui/react-hooks';\r\nimport React from 'react';\r\nimport { PeopleCoin } from '../PeopleCoin';\r\nimport { FormatOptionalStringBySelection, PeopleSelection, RetrieveIcon } from '../types';\r\nimport { usePeopleListStyles } from './PeopleList.styles';\r\n\r\n/**\r\n * The props for the PeopleList component, which renders a list of people in a vertical layout.\r\n *\r\n * @property label The label for the list.\r\n * @property selections The people to display.\r\n * @property formatName A function to format the name for each person.\r\n * @property formatDescription A function to format the description for each person.\r\n * @property onRetrieveIcon A function to retrieve the icon for each person.\r\n * @property onItemClick A callback for when a person is clicked.\r\n * @property labelClassName The class name for the label.\r\n * @property listClassName The class name for the list.\r\n * @property itemClassName The class name for each person item.\r\n */\r\nexport interface PeopleListProps extends React.HTMLAttributes<HTMLDivElement> {\r\n    label?: string;\r\n    selections: PeopleSelection[];\r\n    formatName?: FormatOptionalStringBySelection;\r\n    formatDescription?: FormatOptionalStringBySelection;\r\n    onRetrieveIcon?: RetrieveIcon;\r\n    onItemClick?: (selection: PeopleSelection) => void;\r\n    labelClassName?: string;\r\n    listClassName?: string;\r\n    itemClassName?: string;\r\n}\r\n\r\nexport const PeopleList: React.FC<PeopleListProps> = ({\r\n    label,\r\n    selections,\r\n    formatName,\r\n    formatDescription,\r\n    onRetrieveIcon,\r\n    onItemClick,\r\n    labelClassName,\r\n    listClassName,\r\n    itemClassName,\r\n    ...props\r\n}) => {\r\n    const labelId = useId('label');\r\n\r\n    const styles = usePeopleListStyles();\r\n    return (\r\n        <div {...props}>\r\n            {label && (\r\n                <div id={labelId} className={mergeStyles(styles.label, labelClassName)}>\r\n                    {label}\r\n                </div>\r\n            )}\r\n            <div className={mergeStyles(styles.list, listClassName)} role='list' aria-labelledby={labelId}>\r\n                {selections.map(selection => (\r\n                    <div\r\n                        key={selection.id}\r\n                        className={mergeStyles(styles.item, itemClassName)}\r\n                        role='listitem'\r\n                        onClick={() => onItemClick?.(selection)}>\r\n                        <PeopleCoin selection={selection} onRetrieveIcon={onRetrieveIcon} coinSize={24} />\r\n                        <div className={styles.text}>\r\n                            <div>{formatName?.(selection) ?? selection.name}</div>\r\n                            <div>{formatDescription?.(selection)}</div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { ServiceInterceptor } from '../types';\r\nimport { TestRequest, RequestSelector, urlSelector, isGet } from './utilities';\r\n\r\nexport interface PoolingInterceptorOptions {\r\n    test?: TestRequest;\r\n    pool: PromisePool;\r\n}\r\n\r\n/**\r\n * Create a service interceptor that pools pending promises for requests and reuses them.\r\n *\r\n * @property test Determines whether a request should be pooled.\r\n * @property selector A function that selects a key from a request.\r\n * @property pool A map of pending promises.\r\n * @returns An interceptor.\r\n */\r\nexport function createPoolingInterceptor({ test = isGet, pool }: PoolingInterceptorOptions): ServiceInterceptor {\r\n    return async (request, proceed) => {\r\n        if (!test(request)) return proceed(request);\r\n        return pool.acquire(request, () => proceed(request));\r\n    };\r\n}\r\n\r\n/**\r\n * A promise pool.\r\n *\r\n * @property acquire Acquire a promise for a request.\r\n */\r\nexport interface PromisePool {\r\n    acquire(request: Request, fire: () => Promise<Response>): Promise<Response>;\r\n}\r\n\r\n/**\r\n * A promise pool that pools pending promises for requests and reuses them based on a key.\r\n */\r\nexport class KeyedPromisePool implements PromisePool {\r\n    private pendings = new Map<PropertyKey, Promise<Response>>();\r\n\r\n    /**\r\n     * Creates an instance of MemoryPromisePool.\r\n     *\r\n     * @param selector A function that selects a key from a request.\r\n     */\r\n    constructor(private selector: RequestSelector = urlSelector) {}\r\n\r\n    async acquire(request: Request, fire: () => Promise<Response>): Promise<Response> {\r\n        const key = this.selector(request);\r\n\r\n        const pending = this.pendings.get(key);\r\n        if (pending) return (await pending).clone();\r\n\r\n        const fired = fire();\r\n        this.pendings.set(key, fired);\r\n\r\n        try {\r\n            return await fired;\r\n        } finally {\r\n            this.pendings.delete(key);\r\n        }\r\n    }\r\n}\r\n","export * from './PeopleCoin';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\nimport React from 'react';\r\nimport { IStyle, Text, Icon, mergeStyles } from '@fluentui/react';\r\nimport { useKeyboardInvoke } from '@addressbook/utilities-hooks';\r\nimport { useCommonIconStyles } from './CommonIcon.styles';\r\n\r\nexport interface CommonIconProps {\r\n    /**\r\n     * icon name or icon element\r\n     * - IconName or string as iconName\r\n     * - Any JSX.Element as rendered icon\r\n     */\r\n    icon?: string | JSX.Element;\r\n    iconColor?: string;\r\n    iconBackgroundColor?: string;\r\n    size?: CommonIconSize;\r\n    styles?: CommonIconStyles;\r\n\r\n    title?: string;\r\n    titleId?: string;\r\n    titleAs?: React.ElementType<React.HTMLAttributes<HTMLElement>>;\r\n    description?: React.ReactNode;\r\n    descriptionId?: string;\r\n\r\n    editIconAriaLabel?: string;\r\n    onIconClick?: () => void;\r\n    className?: string;\r\n\r\n    titleTrailingItem?: React.ReactNode;\r\n    rightItem?: React.ReactNode;\r\n}\r\n\r\nexport interface CommonIconStyles {\r\n    root?: IStyle;\r\n    content?: IStyle;\r\n    editIcon?: IStyle;\r\n    title?: IStyle;\r\n    description?: IStyle;\r\n    textarea?: IStyle;\r\n    iconContainer?: IStyle;\r\n}\r\n\r\n/**\r\n * size of icon container\r\n */\r\nexport enum CommonIconSize {\r\n    Size28 = 'icon-size-28',\r\n    Size32 = 'icon-size-32',\r\n    Size40 = 'icon-size-40',\r\n    Size44 = 'icon-size-44',\r\n    Size48 = 'icon-size-48',\r\n    Size64 = 'icon-size-64',\r\n    Size80 = 'icon-size-80',\r\n}\r\n\r\nexport const CommonIcon: React.FC<CommonIconProps> = ({\r\n    icon,\r\n    iconColor = 'white',\r\n    iconBackgroundColor,\r\n    size = CommonIconSize.Size32,\r\n    styles = {},\r\n    title,\r\n    titleId,\r\n    titleAs,\r\n    description,\r\n    descriptionId,\r\n    onIconClick,\r\n    editIconAriaLabel,\r\n    className,\r\n    titleTrailingItem,\r\n    rightItem,\r\n}: CommonIconProps): JSX.Element => {\r\n    const defaultStyles = useCommonIconStyles();\r\n\r\n    const ref = useKeyboardInvoke<HTMLDivElement>();\r\n\r\n    return (\r\n        <div className={mergeStyles(defaultStyles.root, styles.root, className)}>\r\n            <div className={mergeStyles(size, defaultStyles.content, styles.content)}>\r\n                {icon && (\r\n                    <div\r\n                        role={onIconClick ? 'button' : 'presentation'}\r\n                        tabIndex={onIconClick ? 0 : undefined}\r\n                        onClick={onIconClick}\r\n                        ref={ref}\r\n                        aria-label={onIconClick && editIconAriaLabel}\r\n                        className={mergeStyles(\r\n                            defaultStyles.iconContainer,\r\n                            iconBackgroundColor && {\r\n                                backgroundColor: iconBackgroundColor,\r\n                            },\r\n                            styles.iconContainer\r\n                        )}>\r\n                        {typeof icon === 'string' ? (\r\n                            <Icon\r\n                                className={mergeStyles(defaultStyles.icon, {\r\n                                    color: iconColor,\r\n                                    fill: iconColor,\r\n                                })}\r\n                                iconName={icon}\r\n                            />\r\n                        ) : (\r\n                            icon\r\n                        )}\r\n                        {onIconClick && (\r\n                            <Icon className={mergeStyles(defaultStyles.editIcon, styles.editIcon)} iconName='Edit' />\r\n                        )}\r\n                    </div>\r\n                )}\r\n                {(title || description) && (\r\n                    <div className={mergeStyles(defaultStyles.textContainer, styles.textarea)}>\r\n                        {title && (\r\n                            <div className={defaultStyles.titleContainer}>\r\n                                <Text\r\n                                    id={titleId}\r\n                                    title={title}\r\n                                    role='presentation'\r\n                                    // prevent screen reader from reading the title twice (group) in MacOS\r\n                                    // about presentation role: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_presentation_role\r\n                                    className={mergeStyles(defaultStyles.title, styles.title)}\r\n                                    as={titleAs}>\r\n                                    {title}\r\n                                </Text>\r\n                                {titleTrailingItem}\r\n                            </div>\r\n                        )}\r\n                        {description &&\r\n                            (typeof description === 'string' ? (\r\n                                <Text\r\n                                    id={descriptionId}\r\n                                    title={description}\r\n                                    role='presentation'\r\n                                    className={mergeStyles(defaultStyles.description, styles.description)}>\r\n                                    {description}\r\n                                </Text>\r\n                            ) : (\r\n                                description\r\n                            ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {rightItem}\r\n        </div>\r\n    );\r\n};\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { IDialogStyles } from '@fluentui/react';\r\nimport { makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const useDialogStyles = makeStyles<Partial<IDialogStyles>>(() => {\r\n    return {\r\n        main: {\r\n            maxWidth: '600px !important',\r\n            width: '600px !important',\r\n            margin: '0 5px',\r\n        },\r\n    };\r\n});\r\n\r\nexport const useContentStyles = makeStyles(() => ({\r\n    footerButtons: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        flexWrap: 'nowrap',\r\n        whiteSpace: 'nowrap',\r\n        justifyContent: 'space-between',\r\n        '.ms-Dialog-actions': {\r\n            width: '100%',\r\n        },\r\n        '.ms-Dialog-actionsRight': {\r\n            width: '100%',\r\n        },\r\n        '.ms-Dialog-action:first-child:nth-last-child(1)': {\r\n            maxWidth: '100%',\r\n            display: 'inline-block',\r\n        },\r\n        '.ms-Dialog-action:first-child:nth-last-child(2), .ms-Dialog-action:first-child:nth-last-child(2) ~ .ms-Dialog-action':\r\n            {\r\n                maxWidth: '50%',\r\n                display: 'inline-block',\r\n            },\r\n        '.ms-Dialog-action:first-child:nth-last-child(3), .ms-Dialog-action:first-child:nth-last-child(3) ~ .ms-Dialog-action':\r\n            {\r\n                maxWidth: '33.3%',\r\n                display: 'inline-block',\r\n            },\r\n        '.ms-Button': {\r\n            maxWidth: '100%',\r\n        },\r\n        '.ms-Button-flexContainer': {\r\n            maxWidth: '100%',\r\n        },\r\n        '.ms-Button-textContainer': {\r\n            maxWidth: '100%',\r\n        },\r\n    },\r\n    button: {\r\n        height: '28px',\r\n        padding: 0,\r\n        '.ms-Button-label': {\r\n            maxWidth: '100%',\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            wordBreak: 'break-all',\r\n            height: '1rem',\r\n        },\r\n        flexFlow: '1',\r\n        flexShrink: '0',\r\n    },\r\n    primaryButton: {\r\n        borderRadius: '5px',\r\n    },\r\n}));\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './CommonIcon.component';\r\n","/* istanbul ignore file */\r\n\r\n// Default theme colors\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace CoreColors {\r\n    export const appBlack = '#252423';\r\n    export const appBlackAlpha10 = '#e8e7e6';\r\n    export const appWhite = '#fff';\r\n    export const appWhiteAlpha10 = 'rgba(255, 255, 255, 0.1)';\r\n\r\n    export const appBrand02 = '#33344a';\r\n    export const appBrand04 = '#464775';\r\n    export const appBrand06 = '#6264a7';\r\n    export const appBrand08 = '#8b8cc7';\r\n    export const appBrand12 = '#bdbde6';\r\n    export const appBrand14 = '#e2e2f6';\r\n    export const appBrand16 = '#f4f4fc';\r\n\r\n    export const appBrand00 = '#6264a7'; // Does not swap in dark theme\r\n\r\n    export const appGray02 = '#484644';\r\n    export const appGray03 = '#605e5c';\r\n    export const appGray04 = '#979593';\r\n    export const appGray06 = '#c8c6c4';\r\n    export const appGray08 = '#e1dfdd';\r\n    export const appGray09 = '#edebe9';\r\n    export const appGray10 = '#f3f2f1';\r\n    export const appGray12 = 'rgba(37, 36, 35, 0.05)';\r\n    export const appGray14 = '#faf9f8';\r\n\r\n    export const appRed = '#eeacb2';\r\n    export const appRedLight = '#fdf6f6';\r\n    export const appRedDark = '#b10e1c';\r\n    export const appGreen = '#9fd89f';\r\n    export const appGreenLight = '#f1faf1';\r\n    export const appGreenDark = '#0e700e';\r\n\r\n    export const overlayBackground = 'rgba(37, 36, 35, .75)';\r\n    export const placeHolderTextColor = '#616161';\r\n    export const pickerPersonaContainerBackground = '#e9eaf6';\r\n}\r\n\r\n// Dark theme colors\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace DarkColors {\r\n    export const appBlack = '#fff';\r\n    export const appBlackAlpha10 = 'rgba(255, 255, 255, 0.1)';\r\n    export const appWhite = '#201f1f';\r\n    export const appWhiteAlpha10 = 'rgba(255, 255, 255, 0.1)';\r\n\r\n    export const appBrand02 = '#e2e3f6';\r\n    export const appBrand04 = '#bdbde6';\r\n    export const appBrand06 = '#a6a7dc';\r\n    export const appBrand08 = '#8b8cc7';\r\n    export const appBrand12 = '#6264a7';\r\n    export const appBrand14 = '#464775';\r\n    export const appBrand16 = '#33344a';\r\n\r\n    export const appGray02 = '#c8c6c4';\r\n    export const appGray03 = '#b3b0ad';\r\n    export const appGray04 = '#8a8886';\r\n    export const appGray06 = '#605e5c';\r\n    export const appGray08 = '#484644';\r\n    export const appGray09 = '#3b3a3a';\r\n    export const appGray10 = '#2d2c2c';\r\n    export const appGray12 = 'rgba(255, 255, 255, 0.05)';\r\n    export const appGray14 = '#292828';\r\n\r\n    export const appRed = '#dc626d';\r\n    export const appRedLight = '#3b0509';\r\n    export const appRedDark = '#c50f1f';\r\n    export const appGreen = '#107c10';\r\n    export const appGreenLight = '#052505';\r\n    export const appGreenDark = '#54b054';\r\n\r\n    export const redTextDark = '#f9526b';\r\n    export const overlayBackground = 'rgba(37,36,35,.75)';\r\n    export const appPersonaBackground = '#3B3A3A';\r\n    export const pickerPersonaContainerBackground = '#323348';\r\n}\r\n\r\n// Contrast theme colors\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace ContrastColors {\r\n    export const appBlack = '#fff';\r\n    export const appBlackAlpha10 = 'rgba(255, 255, 255, 0.1)';\r\n    export const appWhite = '#000';\r\n    export const appWhiteAlpha10 = 'rgba(255, 255, 255, 0.1)';\r\n    export const NeutralForeground3 = '#ADADAD';\r\n\r\n    export const appBrand02 = '#000';\r\n    export const appBrand04 = '#ffff00';\r\n    export const appBrand06 = '#00ebff';\r\n    export const appBrand08 = '#ffff00';\r\n    export const appBrand12 = '#ffff00';\r\n    export const appBrand14 = '#000';\r\n    export const appBrand16 = '#000';\r\n\r\n    export const appGray02 = '#fff';\r\n    export const appGray03 = '#000';\r\n    export const appGray04 = '#fff';\r\n    export const appGray06 = '#000';\r\n    export const appGray08 = '#fff';\r\n    export const appGray09 = '#000';\r\n    export const appGray10 = '#000';\r\n    export const appGray12 = '#fff';\r\n    export const appGray14 = '#000';\r\n\r\n    export const appGreenContrast = '#30f42c';\r\n\r\n    export const overlayBackground = 'rgba(0,0,0,.75)';\r\n\r\n    export const appRed = '#fff';\r\n    export const appRedLight = '#000';\r\n    export const appRedDark = '#fff';\r\n    export const appGreen = '#fff';\r\n    export const appGreenLight = '#000';\r\n    export const appGreenDark = '#fff';\r\n\r\n    export const pickerPersonaContainerBackground = '#ffff00';\r\n}\r\n\r\n// Default V2 theme colors\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace DefaultV2Colors {\r\n    export const appBlack = '#242424';\r\n    export const appBlackAlpha10 = 'rgba(255, 255, 255, 0.1)'; // Missing\r\n    export const appWhite = '#fff';\r\n    export const appWhiteAlpha10 = 'rgba(255, 255, 255, 0.1)'; // Missing\r\n\r\n    export const appBrand02 = '#2F2F4A';\r\n    export const appBrand04 = '#383966';\r\n    export const appBrand05 = '#444791';\r\n    export const appBrand06 = '#5B5FC7';\r\n    export const appBrand08 = '#9092c1';\r\n    export const appBrand12 = '#a5a7cf';\r\n    export const appBrand14 = '#bbbcdd';\r\n    export const appBrand16 = '#E8EBFA';\r\n\r\n    export const appGray02 = '#424242';\r\n    export const appGray03 = '#616161';\r\n    export const appGray04 = '#8a8a8a';\r\n    export const appGray06 = '#bdbdbd';\r\n    export const appGray08 = '#d1d1d1';\r\n    export const appGray09 = '#ebebeb';\r\n    export const appGray10 = '#f0f0f0';\r\n    export const appGray12 = '#f5f5f5';\r\n    export const appGray14 = '#fafafa';\r\n\r\n    export const appRed = '#b10e1c';\r\n    export const appRedLight = '#fdf6f6';\r\n    export const appRedDark = '#eeacb2';\r\n    export const appGreen = '#9fd89f';\r\n    export const appGreenLight = '#f1faf1';\r\n    export const appGreenDark = '#0e700e';\r\n\r\n    export const overlayBackground = 'rgba(37,36,35,.75)'; // Missing\r\n}\r\n\r\n// Dark V2 theme colors\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace DarkV2Colors {\r\n    export const appBlack = '#fff';\r\n    export const appBlackAlpha10 = 'rgba(255, 255, 255, 0.1)'; // Missing\r\n    export const appWhite = '#292929';\r\n    export const appWhiteAlpha10 = 'rgba(255, 255, 255, 0.1)'; // Missing\r\n\r\n    export const appBrand02 = '#C5CBFA';\r\n    export const appBrand04 = '#ACB3FA';\r\n    export const appBrand05 = '#444791';\r\n    export const appBrand06 = '#9399F5';\r\n    export const appBrand08 = '#7A80EB';\r\n    export const appBrand12 = '#5B5FC7';\r\n    export const appBrand14 = '#444791';\r\n    export const appBrand16 = '#2F2F4A';\r\n\r\n    export const appGray02 = '#d6d6d6';\r\n    export const appGray03 = '#adadad';\r\n    export const appGray04 = '#8a8a8a';\r\n    export const appGray06 = '#666';\r\n    export const appGray08 = '#5c5c5c';\r\n    export const appGray09 = '#3d3d3d';\r\n    export const appGray10 = '#141414';\r\n    export const appGray12 = '#1f1f1f';\r\n    export const appGray14 = '#242424';\r\n\r\n    export const appRed = '#dc626d';\r\n    export const appRedLight = '#3b0509';\r\n    export const appRedDark = '#c50f1f';\r\n    export const appGreen = '#107c10';\r\n    export const appGreenLight = '#052505';\r\n    export const appGreenDark = '#54b054';\r\n\r\n    export const overlayBackground = 'rgba(37,36,35,.75)'; // Missing\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace SecondaryColors {\r\n    export const appOrange01 = '#833122';\r\n    export const appOrange02 = '#a33d2a';\r\n    export const appOrange03 = '#bd432c';\r\n    export const appOrange04 = '#cc4a31';\r\n    export const appOrange = '#e97548';\r\n    export const appOrange14 = '#efdbd3';\r\n    export const appOrange16 = '#f9ecea';\r\n\r\n    export const appGreen = '#92c353';\r\n    export const appGreen04 = '#237b4b';\r\n\r\n    export const grey2 = '#050505';\r\n    export const grey6 = '#0f0f0f';\r\n    export const grey10 = '#1a1a1a';\r\n    export const grey18 = '#2e2e2e';\r\n    export const grey20 = '#333333';\r\n    export const grey22 = '#383838';\r\n    export const grey88 = '#e0e0e0';\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace BoxShadowColors {\r\n    export const boxShadowColor = 'rgba(0,0,0,.1)';\r\n    export const boxShadowColorDark = 'rgba(0,0,0,.25)';\r\n    export const boxShadowColorDarkV2 = 'rgba(0,0,0,.3)';\r\n    export const boxShadowColorDarker = 'rgba(0,0,0,.5)';\r\n}\r\nexport const appWhiteAlpha10 = 'rgba(37, 36, 36, 0.1)';\r\n","import { Interceptor, InterceptorTarget } from './types';\r\n\r\n/**\r\n * Apply an interceptor to a target.\r\n *\r\n * @param interceptor The interceptor to apply.\r\n * @param target The target to apply the interceptor to.\r\n * @returns The target with the interceptor applied.\r\n */\r\nexport function applyInterceptor<Param, Result>(\r\n    interceptor: Interceptor<Param, Result>,\r\n    target: InterceptorTarget<Param, Result>\r\n): InterceptorTarget<Param, Result> {\r\n    return param => interceptor(param, target);\r\n}\r\n\r\n/**\r\n * Compose multiple interceptors into a single interceptor.\r\n * The interceptors are called in order, with the next interceptor as the proceed function.\r\n *\r\n * @param interceptors The interceptors to compose.\r\n * @returns The composed interceptor.\r\n */\r\nexport function composeInterceptors<Param, Result>(\r\n    interceptors: Interceptor<Param, Result>[]\r\n): Interceptor<Param, Result> {\r\n    return interceptors.reduce(composeInterceptorsInternal);\r\n}\r\n\r\n/**\r\n * Compose two interceptors into a single interceptor.\r\n *\r\n * @param current The interceptor to call first.\r\n * @param next The interceptor to call second.\r\n * @returns The composed interceptor.\r\n */\r\nfunction composeInterceptorsInternal<Param, Result>(\r\n    current: Interceptor<Param, Result>,\r\n    next: Interceptor<Param, Result>\r\n): Interceptor<Param, Result> {\r\n    return (param, proceed) => current(param, applyInterceptor(next, proceed));\r\n}\r\n","import { DriveItem, DriveItemUploadableProperties, Permission, UploadSession } from '@microsoft/microsoft-graph-types';\r\nimport { ServiceOperation, ServiceOperationError, ServiceResourceLocator } from '@addressbook/services-core';\r\nimport { silently } from '@addressbook/utilities-core';\r\nimport { AccessSharingLinkOptions, ThumbnailSize, UploadOptions } from '../types';\r\nimport { GraphThumbnailResource } from './thumbnail';\r\n\r\n/**\r\n * The drive item resource.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/resources/driveitem\r\n */\r\nexport class GraphDriveItemResource {\r\n    constructor(private operation: ServiceOperation, private locator: ServiceResourceLocator) {}\r\n\r\n    /**\r\n     * Navigates to the root of the drive.\r\n     *\r\n     * @param index The thumbnail index.\r\n     * @param size The thumbnail size.\r\n     * @returns The thumbnail resource.\r\n     */\r\n    thumbnails(index: number, size: ThumbnailSize): GraphThumbnailResource {\r\n        return new GraphThumbnailResource(this.operation, this.locator.extend('thumbnails', index.toString(), size));\r\n    }\r\n\r\n    /**\r\n     * Gets the id of the drive item.\r\n     *\r\n     * @param signal The abort signal.\r\n     * @returns The id of the drive item, or an empty string if the drive item does not exist.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-get\r\n     */\r\n    async getId(signal?: AbortSignal): Promise<string | undefined> {\r\n        const url = `/v1.0/${this.locator.path}?$select=id`;\r\n        try {\r\n            const response = await this.operation.requestJson<DriveItem>(url, { signal });\r\n            return response.id;\r\n        } catch (error) {\r\n            if (error instanceof ServiceOperationError && error.response.status === 404) return;\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shares the drive item.\r\n     *\r\n     * @param signal The abort signal.\r\n     * @returns The sharing link.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-createlink\r\n     */\r\n    async share(signal?: AbortSignal): Promise<string> {\r\n        const url = `/v1.0/${this.locator.path}/createLink`;\r\n        const response = await this.operation.requestJson<Permission>(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ type: 'view', scope: 'organization' }),\r\n            signal,\r\n        });\r\n        return response.link?.webUrl ?? '';\r\n    }\r\n\r\n    /**\r\n     * Creates a folder under the drive item.\r\n     *\r\n     * @param name The folder name.\r\n     * @param signal The abort signal.\r\n     * @returns The id of the created folder.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-post-children\r\n     */\r\n    async createFolder(name: string, signal?: AbortSignal): Promise<string> {\r\n        const url = `/v1.0/${this.locator.path}/children`;\r\n        const response = await this.operation.requestJson<DriveItem>(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, folder: {} }),\r\n            signal,\r\n        });\r\n        return response.id ?? '';\r\n    }\r\n\r\n    /**\r\n     * Uploads the drive item using an upload session.\r\n     *\r\n     * @param file The file to upload.\r\n     * @param options The upload options.\r\n     * @param signal The abort signal.\r\n     * @returns The id of the uploaded item.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-createuploadsession\r\n     */\r\n    async upload(file: File, { conflictBehavior, ...options }: UploadOptions, signal?: AbortSignal): Promise<string> {\r\n        const url = `/v1.0/${this.locator.path}/createUploadSession`;\r\n        const response = await this.operation.requestJson<UploadSession>(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                item: {\r\n                    '@microsoft.graph.conflictBehavior': conflictBehavior,\r\n                    ...getDriveItemUploadableProperties(file),\r\n                },\r\n                deferCommit: true,\r\n            }),\r\n            signal,\r\n        });\r\n\r\n        const { uploadUrl } = response;\r\n        if (!uploadUrl) throw new Error('Upload URL not found.');\r\n\r\n        try {\r\n            return await this.performUpload(file, uploadUrl, options, signal);\r\n        } catch (error) {\r\n            // Delete the upload session if the upload fails, so that the upload session is not left open.\r\n            // The signal is not passed intentionally to ensure the delete request is sent.\r\n            // Ignore the error if the delete request fails.\r\n            await silently(this.operation.request(uploadUrl, { method: 'DELETE' }));\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    private async performUpload(\r\n        file: File,\r\n        url: string,\r\n        { chunkSize = defaultChunkSize, onProgress }: Omit<UploadOptions, 'conflictBehavior'>,\r\n        signal?: AbortSignal\r\n    ): Promise<string> {\r\n        // Loop until the upload is complete.\r\n        let expectedRange: [number, number | undefined] = [0, undefined];\r\n        while (true) {\r\n            const start = expectedRange[0];\r\n            const end = Math.min(expectedRange[1] ?? start + chunkSize, file.size);\r\n            const chunk = file.slice(start, end);\r\n            if (!chunk.size) break;\r\n\r\n            onProgress?.(start / file.size);\r\n            const response = await this.operation.requestJson<UploadSession>(url, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Range': `bytes ${start}-${end - 1}/${file.size}` },\r\n                body: chunk,\r\n                signal,\r\n            });\r\n\r\n            if (!response.nextExpectedRanges?.length) break;\r\n            expectedRange = parseBytesRange(response.nextExpectedRanges[0]);\r\n        }\r\n\r\n        // Commit the upload.\r\n        onProgress?.(1);\r\n        const response = await this.operation.requestJson<DriveItem>(url, { method: 'POST', signal });\r\n        return response.id ?? '';\r\n    }\r\n\r\n    /**\r\n     * Downloads the drive item content.\r\n     *\r\n     * @param options The download options.\r\n     * @param signal The abort signal.\r\n     * @returns The drive item content.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-get-content\r\n     */\r\n    download({ prefer }: AccessSharingLinkOptions = {}, signal?: AbortSignal): Promise<Blob> {\r\n        const url = `/v1.0/${this.locator.path}/content`;\r\n        return this.operation.requestBlob(url, { headers: prefer ? { Prefer: prefer } : {}, signal });\r\n    }\r\n}\r\n\r\n/**\r\n * The default chunk size for uploading files.\r\n * The chunk size must be a multiple of 320 KiB (327,680 bytes).\r\n *\r\n * https://learn.microsoft.com/graph/api/driveitem-createuploadsession#upload-bytes-to-the-upload-session\r\n */\r\nconst defaultChunkSize = 32 * 320 * 1024; // 10 MiB\r\n\r\n/**\r\n * Parses an inclusive bytes range string as a tuple of start and end byte, where the parsed end byte is exclusive.\r\n *\r\n * @param range The bytes range string, e.g. '0-41'.\r\n * @returns The start and end byte.\r\n * @see https://learn.microsoft.com/graph/api/driveitem-createuploadsession#response-1\r\n *\r\n * @example parseBytesRange('0-41') // [0, 42]\r\n * @example parseBytesRange('42-') // [42, undefined]\r\n */\r\nfunction parseBytesRange(range: string): [number, number | undefined] {\r\n    const [startByteString, endByteString] = range.split('-');\r\n    const startByte = parseInt(startByteString, 10);\r\n    const endByte = endByteString ? parseInt(endByteString, 10) + 1 : undefined;\r\n    return [startByte, endByte];\r\n}\r\n\r\n/**\r\n * Gets the uploadable properties for a file.\r\n *\r\n * @param file The file.\r\n * @returns The uploadable properties.\r\n * @see https://learn.microsoft.com/graph/api/resources/driveitemuploadableproperties\r\n */\r\nfunction getDriveItemUploadableProperties(file: File): DriveItemUploadableProperties {\r\n    return {\r\n        name: file.name,\r\n        fileSystemInfo: {\r\n            lastModifiedDateTime: new Date(file.lastModified).toISOString(),\r\n        },\r\n    };\r\n}\r\n","import { useForceUpdate } from '@fluentui/react-hooks';\r\nimport React from 'react';\r\nimport { PeopleSelection, RetrieveIcon } from '../types';\r\n\r\nexport function useIcon(selection: PeopleSelection, onRetrieveIcon?: RetrieveIcon): PeopleSelection['icon'] {\r\n    const forceUpdate = useForceUpdate();\r\n\r\n    React.useEffect(() => {\r\n        if (selection.icon || !onRetrieveIcon) return;\r\n\r\n        const retrieval = ensureRetrieval(selection, onRetrieveIcon);\r\n        if (!retrieval) return;\r\n\r\n        // Force update when retrieval is done\r\n        let mounted = true;\r\n        retrieval.then(() => mounted && forceUpdate());\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, [forceUpdate, onRetrieveIcon, selection]);\r\n\r\n    return selection.icon || (onRetrieveIcon && getCachedIcon(selection));\r\n}\r\n\r\nconst cachedIconsOrRetrievals = new Map<PeopleSelection['id'], PeopleSelection['icon'] | Promise<void>>();\r\n\r\n/**\r\n * Returns the cached icon or undefined if it's not cached or being retrieved.\r\n *\r\n * @param selection The selection to get the cached icon for.\r\n * @returns The cached icon.\r\n */\r\nfunction getCachedIcon(selection: PeopleSelection): PeopleSelection['icon'] {\r\n    const iconOrRetrieval = cachedIconsOrRetrievals.get(selection.id);\r\n    if (iconOrRetrieval instanceof Promise) return;\r\n\r\n    return iconOrRetrieval;\r\n}\r\n\r\n/**\r\n * Ensures that the icon is retrieved and cached.\r\n *\r\n * @param selection The selection to retrieve the icon for.\r\n * @param retrieveIcon The function to retrieve the icon.\r\n * @returns A promise that resolves when the icon is retrieved and cached or undefined if the icon is already cached.\r\n */\r\nfunction ensureRetrieval(selection: PeopleSelection, retrieveIcon: RetrieveIcon): Promise<void> | undefined {\r\n    const iconOrRetrieval = cachedIconsOrRetrievals.get(selection.id);\r\n    if (iconOrRetrieval instanceof Promise) return iconOrRetrieval;\r\n\r\n    // Since the icon can also be undefined, we need to check by key explicitly instead of checking if icon is truthy.\r\n    if (cachedIconsOrRetrievals.has(selection.id)) return;\r\n\r\n    const newRetrieval = safeRetrieveIcon(selection, retrieveIcon).then(icon => {\r\n        cachedIconsOrRetrievals.set(selection.id, icon);\r\n    });\r\n    cachedIconsOrRetrievals.set(selection.id, newRetrieval);\r\n    return newRetrieval;\r\n}\r\n\r\nasync function safeRetrieveIcon(\r\n    selection: PeopleSelection,\r\n    retrieveIcon: RetrieveIcon\r\n): Promise<PeopleSelection['icon']> {\r\n    try {\r\n        const icon = await retrieveIcon(selection);\r\n        return icon instanceof Blob ? URL.createObjectURL(icon) : icon;\r\n    } catch {\r\n        return;\r\n    }\r\n}\r\n","export enum EntryPoint {\r\n    ComposeExtension = 'composeExtension',\r\n    Workflow = 'workflow',\r\n    PersonalApp = 'personalApp',\r\n    AdaptiveCard = 'adaptiveCard',\r\n}\r\n\r\n// For Page:\r\nexport enum PanelType {\r\n    WorkReport = 'workReport',\r\n    HomePage = 'homePage',\r\n    WriteReport = 'writeReport',\r\n    ReviewReport = 'reviewReport',\r\n\r\n    CreateRequestPage = 'CreateRequestPage',\r\n    EditRequestPage = 'EditRequestPage',\r\n    CopyRequestPage = 'CopyRequestPage',\r\n    SubmitUpdatePage = 'SubmitUpdatePage',\r\n    SubmitOOBEUpdatePage = 'SubmitOOBEUpdatePage',\r\n    SubmitUpdateV2Page = 'SubmitUpdateV2Page',\r\n    SubmitOOBEUpdateV2Page = 'SubmitOOBEUpdateV2Page',\r\n    AggregatedViewPage = 'AggregatedViewPage',\r\n\r\n    TaskModuleRBACListPage = 'TaskModuleRBACListPage',\r\n    TaskModuleCollectUpdatesPage = 'TaskModuleCollectUpdatesPage',\r\n    TaskModuleSuccessStoryPage = 'TaskModuleSuccessStoryPage',\r\n    TaskModulePreviewTemplatePage = 'TaskModulePreviewTemplatePage',\r\n    TaskModuleCreateRequestPage = 'TaskModuleCreateRequestPage',\r\n    PreviewAdaptiveCardPage = 'PreviewAdaptiveCardPage',\r\n    TaskModuleSubmitUpdatePage = 'TaskModuleSubmitUpdatePage',\r\n    TaskModuleSendReminderPage = 'TaskModuleSendReminderPage',\r\n    TaskModuleReviewReportPage = 'TaskModuleReviewReportPage',\r\n}\r\n\r\nexport enum InvokedContext {\r\n    Chat = 'Chat',\r\n    Team = 'Team',\r\n    Global = 'Global',\r\n}\r\n\r\nexport enum LoggerLevels {\r\n    info = 'info',\r\n    debug = 'debug',\r\n    log = 'log',\r\n    warn = 'warn',\r\n    error = 'error',\r\n}\r\n\r\n// Log Category Sources for scenarios\r\nexport enum CommonLogCategory {\r\n    GlobalException = 'GlobalException',\r\n    HTTPException = 'HTTPException',\r\n}\r\n\r\n/**\r\n * The region of the page the panel is located\r\n * in (Ex: Panel_Type = Channel, Panel.Region = Main or Right)\r\n * Note: Keep the enums Alphabetically Sorted\r\n */\r\nexport enum PanelRegion {\r\n    Banner = 'banner',\r\n    Dialog = 'dialog',\r\n    Footer = 'footer',\r\n    Header = 'header',\r\n    Left = 'left',\r\n    Main = 'main',\r\n    Modal = 'modal',\r\n    Popover = 'popover',\r\n    Right = 'right',\r\n    Toast = 'toast',\r\n    Virtual = 'virtual',\r\n}\r\n\r\n/**\r\n * How a panel was opened up\r\n * Sample values: nav, notification, direct, toast, userInitiated, update,\r\n * login, appNav, redererTerminated\r\n */\r\nexport enum PanelLaunchMethod {\r\n    ActivityFeed = 'activityFeed',\r\n    AppNav = 'appNav',\r\n    Direct = 'direct',\r\n    Nav = 'nav',\r\n    Notification = 'notification',\r\n    Posts = 'posts',\r\n    Toast = 'toast',\r\n    Update = 'update',\r\n    UserInitiated = 'userInitiated',\r\n}\r\n\r\nexport enum ActionGesture {\r\n    Click = 'click',\r\n    Hover = 'hover',\r\n    KeyPress = 'keypress',\r\n    None = 'none',\r\n    Scroll = 'scroll',\r\n}\r\n\r\nexport enum PanelViewOutcome {\r\n    Failure = 'failure',\r\n    Init = 'init',\r\n    None = 'none',\r\n    Success = 'success',\r\n}\r\n\r\n/**\r\n * Outcome of action taken\r\n * (Ex: Action_Outcome = \"read\" is logged when \"scroll\" action happens)\r\n * Note: Keep the enums Alphabetically Sorted\r\n */\r\nexport enum PanelActionOutcome {\r\n    CopyToClipboard = 'copyToClipboard',\r\n    Disable = 'disable',\r\n    DismissBanner = 'dismissBanner',\r\n    Enable = 'enable',\r\n    Hide = 'hide',\r\n    Inspect = 'inspect',\r\n    Launch = 'launch',\r\n    Nav = 'nav',\r\n    None = 'none',\r\n    OpenChat = 'openChat',\r\n    OpenDialog = 'openDialog',\r\n    OpenPopup = 'openPopup',\r\n    Read = 'read',\r\n    RemoveBanner = 'removeBanner',\r\n    RemoveChiclet = 'removeChiclet',\r\n    Retry = 'retry',\r\n    Select = 'select',\r\n    Show = 'show',\r\n    ShowBanner = 'showBanner',\r\n    Submit = 'submit',\r\n    Toggle = 'toggle',\r\n    Update = 'update',\r\n}\r\n\r\nexport type ActionOutcome = PanelActionOutcome | PanelViewOutcome;\r\n\r\nexport enum ThreadType {\r\n    GroupChat = 'GroupChat',\r\n    OneOnOneChat = 'OneOnOneChat',\r\n    SelfChat = 'SelfChat',\r\n    NewChat = 'NewChat',\r\n    Meeting = 'Meeting',\r\n    Channel = 'Channel',\r\n    NA = 'N/A',\r\n}\r\n","export interface PeopleSelectStrings {\r\n    inputPlaceholder: string;\r\n    requiredErrorMessage: string;\r\n    removeButtonAriaLabel: string;\r\n    suggestionsHeaderText?: string;\r\n    noResultsFoundText?: string;\r\n    suggestionsAvailableAlertText?: string;\r\n}\r\n\r\nexport const peopleSelectDefaultStrings: PeopleSelectStrings = {\r\n    inputPlaceholder: 'Enter names here',\r\n    requiredErrorMessage: 'This field is required',\r\n    removeButtonAriaLabel: 'Remove',\r\n    suggestionsHeaderText: 'Suggestions',\r\n    noResultsFoundText: 'No results found',\r\n    suggestionsAvailableAlertText: 'Suggestions available',\r\n};\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\nexport * from './CommonCard.component';\r\nexport * from './CommonCard.shimmer';\r\n","export * from './TaskModule.component';\r\nexport * from './TaskModule.styles';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './Spinner';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './ConfirmationDialog.component';\r\n","export * from './client';\r\nexport * from './types';\r\n","import { isDarkTheme, isDefaultTheme } from '@addressbook/components-fluentui-teams-theme';\r\nimport { makeStyles } from '../styles/makeStyles';\r\n\r\nexport const useTaskModuleV2Styles = /* #__PURE__*/ makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        boxSizing: 'border-box',\r\n        paddingBottom: '0.75rem',\r\n    },\r\n    content: {\r\n        padding: '24px 60px',\r\n    },\r\n    header: {\r\n        marginBottom: '22px',\r\n    },\r\n});\r\n\r\nexport const useTaskModuleContentCustomizedStyles = /* #__PURE__*/ makeStyles(theme => ({\r\n    background: isDefaultTheme(theme.name)\r\n        ? 'linear-gradient(#DCE0FA 1%,white 40%) fixed'\r\n        : isDarkTheme(theme.name)\r\n        ? 'linear-gradient(#3D3E78 1%,#333333 40%) fixed'\r\n        : 'black',\r\n}));\r\n\r\nexport const useTaskModuleCategorizedTemplateStoreStyles = /* #__PURE__*/ makeStyles(() => ({\r\n    padding: '24px 0',\r\n}));\r\n","import React from 'react';\r\n\r\n/**\r\n * A hook that allows invoking the element by pressing Enter or Space key.\r\n *\r\n * @returns The ref for the element.\r\n */\r\nexport function useKeyboardInvoke<Element extends HTMLElement>(): React.Ref<Element> {\r\n    const elementRef = React.useRef<Element>(null);\r\n\r\n    React.useEffect(() => {\r\n        const element = elementRef.current;\r\n        if (!element) return;\r\n\r\n        const handler = (event: KeyboardEvent): void => {\r\n            // Should do nothing if the default behavior is prevented\r\n            if (event.defaultPrevented) return;\r\n            if (event.key === 'Enter' || event.key === ' ') {\r\n                element.click();\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        const controller = new AbortController();\r\n        element.addEventListener('keydown', handler, { signal: controller.signal });\r\n        return () => controller.abort();\r\n    }, []);\r\n\r\n    return elementRef;\r\n}\r\n","import { mergeStyles } from '@fluentui/react';\r\nimport { rem } from '@addressbook/components-fluentui-teams-theme';\r\nimport React from 'react';\r\nimport { PeopleCoin } from '../PeopleCoin';\r\nimport { PeopleSelection, RetrieveIcon } from '../types';\r\nimport { usePeoplePileStyles } from './PeoplePile.styles';\r\n\r\n/**\r\n * The props for the PeoplePile component, which renders a pile of people in a horizontal layout.\r\n *\r\n * @property selections The people to display.\r\n * @property onRetrieveIcon A function to retrieve the icon for each person.\r\n * @property maxVisible The maximum number of people to display before showing an overflow count.\r\n * @property compact If true, the pile will be compact, that is, icons will overlap each other.\r\n * @property coinSize The size of the coins.\r\n * @property showOnlyName If true, only the name of the first person will be displayed.\r\n * @property overflowTitle The title for the overflow count.\r\n */\r\nexport interface PeoplePileProps extends React.HTMLAttributes<HTMLDivElement> {\r\n    selections: PeopleSelection[];\r\n    onRetrieveIcon?: RetrieveIcon;\r\n    maxVisible?: number;\r\n    compact?: boolean;\r\n    coinSize?: number;\r\n    showOnlyName?: boolean;\r\n    overflowTitle?: string;\r\n}\r\n\r\nexport const PeoplePile: React.FC<PeoplePileProps> = ({\r\n    selections,\r\n    onRetrieveIcon,\r\n    maxVisible = Infinity,\r\n    compact,\r\n    coinSize = 24,\r\n    showOnlyName,\r\n    overflowTitle,\r\n    className,\r\n    ...props\r\n}) => {\r\n    const [visibleSelections, overflowCount] = React.useMemo(() => {\r\n        const visibleSelections = selections.slice(0, maxVisible);\r\n        const overflowCount = Math.max(selections.length - maxVisible, 0);\r\n        return [visibleSelections, overflowCount];\r\n    }, [maxVisible, selections]);\r\n\r\n    const onlyNameText = React.useMemo(\r\n        () => showOnlyName && !overflowCount && selections.length === 1 && selections[0].name,\r\n        [overflowCount, selections, showOnlyName]\r\n    );\r\n\r\n    const styles = usePeoplePileStyles();\r\n\r\n    const overflow = React.useMemo(\r\n        () =>\r\n            overflowCount > 0 && (\r\n                <div\r\n                    className={mergeStyles(styles.overflow, compact && styles.compactOverflow, {\r\n                        fontSize: rem(Math.min(coinSize * 0.5, 10)),\r\n                    })}\r\n                    title={overflowTitle}>\r\n                    {overflowCount}\r\n                </div>\r\n            ),\r\n        [overflowCount, overflowTitle, styles, compact, coinSize]\r\n    );\r\n\r\n    const onlyName = React.useMemo(\r\n        () =>\r\n            onlyNameText && (\r\n                <div\r\n                    className={mergeStyles(styles.onlyName, {\r\n                        fontSize: rem(Math.min(coinSize * 0.75, 14)),\r\n                        margin: `0 ${rem(2 + coinSize * 0.25)}`,\r\n                    })}\r\n                    title={props.title ? undefined : onlyNameText}>\r\n                    {onlyNameText}\r\n                </div>\r\n            ),\r\n        [coinSize, onlyNameText, props.title, styles.onlyName]\r\n    );\r\n\r\n    return (\r\n        <div className={mergeStyles(styles.root, className)} {...props}>\r\n            <div className={mergeStyles(styles.coins, compact && styles.compactCoins)} role='list'>\r\n                {visibleSelections.map(selection => (\r\n                    <PeopleCoin\r\n                        key={selection.id}\r\n                        role='listitem'\r\n                        selection={selection}\r\n                        onRetrieveIcon={onRetrieveIcon}\r\n                        coinSize={coinSize}\r\n                        preventNameAsTitle={Boolean(props.title)}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {overflow}\r\n            {onlyName}\r\n        </div>\r\n    );\r\n};\r\n","import { encodeDataUrl } from './data-urls';\r\nimport { isImageMime } from './mimes';\r\n\r\n/**\r\n * Copies the given data to the clipboard.\r\n *\r\n * @param data - The data to copy.\r\n * @returns A promise that resolves when the data is copied.\r\n * @remarks This function doesn't use Clipboard API because some policies may prevent it from working.\r\n */\r\nexport async function copyToClipboard(data: Record<string, string>): Promise<void> {\r\n    const input = document.createElement('input');\r\n    input.style.display = 'none';\r\n\r\n    // We have to use a dummy value, since blank value won't work in some browsers (for example, iOS Safari).\r\n    input.value = ' ';\r\n\r\n    try {\r\n        document.body.appendChild(input);\r\n\r\n        await new Promise<void>((resolve, reject) => {\r\n            document.addEventListener(\r\n                'copy',\r\n                event => {\r\n                    const dataTransfer = event.clipboardData;\r\n                    if (!dataTransfer) return;\r\n\r\n                    dataTransfer.clearData();\r\n                    Object.entries(data).forEach(([type, content]) => dataTransfer.setData(type, content));\r\n\r\n                    event.preventDefault();\r\n                    resolve();\r\n                },\r\n                { once: true }\r\n            );\r\n\r\n            input.select();\r\n            const successful = document.execCommand('copy');\r\n            if (!successful) reject(new Error('Failed to copy data to clipboard'));\r\n        });\r\n    } finally {\r\n        document.body.removeChild(input);\r\n    }\r\n}\r\n\r\nexport interface CopyImageToClipboardOptions {\r\n    blob: Blob;\r\n    name?: string;\r\n}\r\n\r\n/**\r\n * Copies the given image to the clipboard.\r\n *\r\n * @property blob - The image blob to copy.\r\n * @property name - The name of the image.\r\n * @returns A promise that resolves when the image is copied.\r\n */\r\nexport async function copyImageToClipboard({ blob, name }: CopyImageToClipboardOptions): Promise<void> {\r\n    if (!isImageMime(blob.type)) return;\r\n\r\n    const dataUrl = await encodeDataUrl(blob);\r\n\r\n    const image = document.createElement('img');\r\n    image.src = dataUrl;\r\n    if (name) image.alt = name;\r\n\r\n    return copyToClipboard({ [blob.type]: dataUrl, 'text/html': image.outerHTML, 'text/plain': name ?? '' });\r\n}\r\n\r\nexport interface CopyLinkToClipboardOptions {\r\n    url: string;\r\n    text?: string;\r\n    image?: string;\r\n}\r\n\r\n/**\r\n * Copies the given link to the clipboard.\r\n *\r\n * @property url - The link to copy.\r\n * @property text - The text of the link.\r\n * @property image - The image to show in the link.\r\n * @returns A promise that resolves when the link is copied.\r\n */\r\nexport function copyLinkToClipboard({ url, text, image }: CopyLinkToClipboardOptions): Promise<void> {\r\n    const anchor = document.createElement('a');\r\n    anchor.href = url;\r\n\r\n    if (text || !image) {\r\n        const textContainer = document.createElement('div');\r\n        textContainer.textContent = text ?? url;\r\n        anchor.appendChild(textContainer);\r\n    }\r\n\r\n    if (image) {\r\n        const img = document.createElement('img');\r\n        img.src = image;\r\n        anchor.appendChild(img);\r\n    }\r\n\r\n    return copyToClipboard({ 'text/html': anchor.outerHTML, 'text/plain': url });\r\n}\r\n","import { mergeStyles, Pivot, PivotItem } from '@fluentui/react';\r\nimport React, { useCallback } from 'react';\r\nimport { usePillButtonStyles, usePillPivotStyles } from './PillPivot.styles';\r\n\r\nexport interface PillPivotProps {\r\n    items: { key: string; text: string }[];\r\n    defaultSelectedKey?: string;\r\n    isMobile?: boolean;\r\n    onSelected?: (key: string) => void;\r\n    className?: string;\r\n}\r\n\r\nexport const PillPivot: React.FC<PillPivotProps> = ({\r\n    items,\r\n    defaultSelectedKey,\r\n    isMobile,\r\n    onSelected,\r\n    className,\r\n}: PillPivotProps): JSX.Element => {\r\n    const styles = usePillPivotStyles();\r\n    const buttonStyles = usePillButtonStyles();\r\n\r\n    const onLinkClick = useCallback(\r\n        (item?: PivotItem) => {\r\n            if (onSelected && item?.props.itemKey) {\r\n                onSelected(item.props.itemKey);\r\n            }\r\n        },\r\n        [onSelected]\r\n    );\r\n\r\n    return (\r\n        <Pivot\r\n            onLinkClick={onLinkClick}\r\n            defaultSelectedKey={defaultSelectedKey}\r\n            headersOnly\r\n            styles={{\r\n                root: mergeStyles(styles.root, isMobile && 'is-mobile', className),\r\n                link: isMobile ? buttonStyles.mobile : buttonStyles.root,\r\n                linkIsSelected: mergeStyles(isMobile ? buttonStyles.mobile : buttonStyles.root, 'is-active'),\r\n                linkContent: buttonStyles.content,\r\n            }}>\r\n            {items.map(item => (\r\n                <PivotItem key={item.key} itemKey={item.key} ariaLabel={item.text} headerText={item.text} />\r\n            ))}\r\n        </Pivot>\r\n    );\r\n};\r\n","import { useRef, useMemo } from 'react';\r\n\r\ntype Update<T> = (updater: (value: T) => T) => void;\r\n\r\n/**\r\n * A hook to create an update function upon an onChange callback.\r\n *\r\n * This is useful if your onChange callback has a setState (returned by useState) sink, but you want\r\n * to call it in the same render cycle. The update function returned by this hook will retain the\r\n * latest value (instead of having to wait for the passed in state update) and call the onChange\r\n * callback immediately.\r\n *\r\n * @param value The value to use.\r\n * @param onChange A function to call when the value changes.\r\n * @returns A proxy function that will call the onChange callback with the updated value.\r\n *\r\n * @example\r\n * const [value, setValue] = useState(0);\r\n * const onChange: (value: number) => void = setValue;\r\n *\r\n * const addValueByTwo = () => onChange(value + 2); // works\r\n * const addValueByTwo = () => { onChange(value + 1); onChange(value + 1); }; // doesn't work, value will be 1\r\n *\r\n * const updateValue = useUpdate(value, onChange);\r\n * const addValueByTwo = () => updateValue(value => value + 2); // works\r\n * const addValueByTwo = () => { updateValue(value => value + 1); updateValue(value => value + 1); }; // works\r\n */\r\nexport function useUpdate<T>(value: T, onChange: undefined): undefined;\r\nexport function useUpdate<T>(value: T, onChange: (value: T) => void): Update<T>;\r\nexport function useUpdate<T>(value: T, onChange?: (value: T) => void): Update<T> | undefined;\r\nexport function useUpdate<T>(value: T, onChange?: (value: T) => void): Update<T> | undefined {\r\n    const valueRef = useRef(value);\r\n    valueRef.current = value;\r\n\r\n    return useMemo(() => {\r\n        if (!onChange) return;\r\n\r\n        return updater => {\r\n            const newValue = updater(valueRef.current);\r\n            valueRef.current = newValue;\r\n            onChange(newValue);\r\n        };\r\n    }, [onChange]);\r\n}\r\n","import { SdkError } from '@microsoft/teams-js';\r\n\r\nexport interface TeamsErrorInit {\r\n    message?: string;\r\n    code?: TeamsErrorCode;\r\n    cause?: Error;\r\n}\r\n\r\nexport enum TeamsErrorCode {\r\n    NoNetwork = 'NoNetwork',\r\n    ServerTemporarilyUnavailable = 'ServerTemporarilyUnavailable',\r\n    Transient = 'Transient',\r\n    Unexpected = 'Unexpected',\r\n    Unknown = 'Unknown',\r\n}\r\n\r\nconst defaultMessage = 'A Teams error occurred.';\r\n\r\n/**\r\n * The error class to wrap all the errors thrown by Teams JS SDK. This class provides a unified error handling\r\n * mechanism for all the errors thrown by the SDK, which could be an Error, an SdkError, or a string.\r\n *\r\n * @property code The code of the error.\r\n * @property cause The cause of the error.\r\n */\r\nexport class TeamsError extends Error {\r\n    code: TeamsErrorCode;\r\n    cause?: Error;\r\n\r\n    constructor({ message = defaultMessage, code = TeamsErrorCode.Unknown, cause }: TeamsErrorInit = {}) {\r\n        super(message);\r\n        this.code = code;\r\n        this.cause = cause;\r\n        this.name = 'TeamsError';\r\n    }\r\n\r\n    /**\r\n     * The singleton instance of an unknown error.\r\n     */\r\n    static readonly unknown = new TeamsError();\r\n\r\n    /**\r\n     * Wrap a TeamsError from an unknown error, populating the error properties if recognized.\r\n     *\r\n     * @param error The error to wrap a TeamsError from.\r\n     * @returns A TeamsError instance.\r\n     */\r\n    static from(error: unknown): TeamsError {\r\n        // Returns TeamsError as is\r\n        if (error instanceof TeamsError) return error;\r\n\r\n        // Wrap an Error\r\n        if (error instanceof Error) {\r\n            return new TeamsError({\r\n                message: error.message,\r\n                code: parseTeamsErrorCode(error.message),\r\n                cause: error,\r\n            });\r\n        }\r\n\r\n        // Wrap an SdkError\r\n        if (isSdkError(error)) {\r\n            return new TeamsError({\r\n                message: `${error.errorCode}, ${error.message}`,\r\n                code: parseTeamsErrorCode(error.message, error.errorCode),\r\n            });\r\n        }\r\n\r\n        // Wrap a string\r\n        if (typeof error === 'string') {\r\n            return new TeamsError({\r\n                message: error,\r\n                code: parseTeamsErrorCode(error),\r\n            });\r\n        }\r\n\r\n        // Returns an unknown error if not recognized\r\n        return TeamsError.unknown;\r\n    }\r\n}\r\n\r\n/**\r\n * Checks whether the error fits the SdkError interface.\r\n *\r\n * @param error The error to check.\r\n * @returns Whether the error fits the SdkError interface.\r\n * @remarks Implement this by our own to avoid the unstrict type check in the SDK.\r\n */\r\nfunction isSdkError(error: unknown): error is SdkError {\r\n    if (typeof error !== 'object' || error === null) return false;\r\n\r\n    const { errorCode, message } = error as { errorCode: unknown; message: unknown };\r\n    return typeof errorCode === 'number' && (typeof message === 'string' || message === undefined);\r\n}\r\n\r\n/**\r\n * Parses the Teams error code from the error message or the raw code.\r\n *\r\n * @param message The error message.\r\n * @param rawCode The raw error code.\r\n * @returns The Teams error code.\r\n */\r\nfunction parseTeamsErrorCode(message?: string, rawCode?: number): TeamsErrorCode {\r\n    if (rawCode) {\r\n        // Parse the error code from the SDK\r\n    }\r\n\r\n    if (message) {\r\n        if (message.startsWith('Error: NoNetwork')) {\r\n            return TeamsErrorCode.NoNetwork;\r\n        }\r\n\r\n        if (message.startsWith('Error: ServerTemporarilyUnavailable')) {\r\n            return TeamsErrorCode.ServerTemporarilyUnavailable;\r\n        }\r\n\r\n        if (message.startsWith('Error: TransientError')) {\r\n            return TeamsErrorCode.Transient;\r\n        }\r\n\r\n        if (message.startsWith('Error: Unexpected')) {\r\n            return TeamsErrorCode.Unexpected;\r\n        }\r\n    }\r\n\r\n    return TeamsErrorCode.Unknown;\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\nexport * from './PillPivot.component';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport React from 'react';\r\nimport { ModalContent, ModalContentProps } from '../CommonModal/ModalContent';\r\nimport { useTaskModuleStyles } from './TaskModule.styles';\r\n\r\nexport type TaskModuleProps = Omit<ModalContentProps, 'onDismiss'>;\r\nexport const TaskModule: React.FC<TaskModuleProps> = props => {\r\n    const styles = useTaskModuleStyles();\r\n    return (\r\n        <div className={styles.root}>\r\n            <ModalContent {...props} />\r\n        </div>\r\n    );\r\n};\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { FontWeights } from '@fluentui/react';\r\nimport { FontSizes, isContrastTheme, makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const usePillPivotStyles = makeStyles(_theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        gap: '4px',\r\n\r\n        '&.is-mobile': {\r\n            gap: '8px',\r\n        },\r\n    },\r\n}));\r\n\r\nexport const usePillButtonStyles = makeStyles(theme => ({\r\n    root: {\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '81px',\r\n        height: '25px',\r\n        cursor: 'pointer',\r\n        borderRadius: '30px',\r\n        fontWeight: FontWeights.regular,\r\n        fontSize: FontSizes.size12,\r\n        border: `1px solid ${isContrastTheme(theme.name) ? theme.palette.themeDark : theme.palette.neutralLight}`,\r\n        background: theme.palette.white,\r\n        color: isContrastTheme(theme.name) ? theme.palette.black : theme.palette.neutralPrimary,\r\n\r\n        padding: 0,\r\n        '&::before, &::after': {\r\n            display: 'none',\r\n        },\r\n\r\n        '&.is-active': {\r\n            background: isContrastTheme(theme.name) ? theme.palette.themePrimary : theme.palette.themeLighter,\r\n            borderColor: isContrastTheme(theme.name) ? theme.palette.themeDark : theme.palette.themeLight,\r\n            color: isContrastTheme(theme.name) ? theme.palette.black : theme.palette.themePrimary,\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    },\r\n    mobile: {\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '105px',\r\n        height: '32px',\r\n        cursor: 'pointer',\r\n        borderRadius: '20px',\r\n        fontWeight: FontWeights.regular,\r\n        fontSize: FontSizes.size16,\r\n        background: theme.palette.neutralLighter,\r\n        color: theme.palette.neutralDark,\r\n\r\n        padding: 0,\r\n        '&::before, &::after': {\r\n            display: 'none',\r\n        },\r\n\r\n        '&.is-active, &.is-selected:hover': {\r\n            background: theme.palette.themePrimary,\r\n            color: theme.palette.white,\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    },\r\n    content: {\r\n        lineHeight: 'initial',\r\n    },\r\n}));\r\n","import { isContrastTheme, makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const usePeopleCoinStyles = makeStyles(theme => ({\r\n    icon: {\r\n        color: theme.palette.themePrimary,\r\n        backgroundColor: isContrastTheme(theme.name) ? theme.palette.white : theme.palette.neutralLighter,\r\n        border: isContrastTheme(theme.name) ? `1px solid ${theme.palette.black}` : undefined,\r\n        borderRadius: '50%',\r\n    },\r\n}));\r\n","/**\r\n * A service resource locator.\r\n */\r\nexport class ServiceResourceLocator {\r\n    private constructor(private parts: string[]) {}\r\n\r\n    /**\r\n     * The root locator.\r\n     */\r\n    static readonly root = new ServiceResourceLocator([]);\r\n\r\n    /**\r\n     * Get the path of the locator, excluding empty parts.\r\n     *\r\n     * @returns The path.\r\n     */\r\n    get path(): string {\r\n        return this.parts.filter(part => part !== '').join('/');\r\n    }\r\n\r\n    /**\r\n     * Extend the locator with the given parts.\r\n     *\r\n     * @param parts The parts to extend.\r\n     * @returns The extended\r\n     */\r\n    extend(...parts: string[]): ServiceResourceLocator {\r\n        return new ServiceResourceLocator([...this.parts, ...parts]);\r\n    }\r\n}\r\n","import { FontSizes, makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const usePeopleViewStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: '8px',\r\n        cursor: 'default',\r\n    },\r\n    textContainer: {\r\n        flex: 1,\r\n        minWidth: 0,\r\n    },\r\n    names: {\r\n        fontSize: FontSizes.size14,\r\n        fontWeight: 600,\r\n        color: theme.palette.black,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        maxWidth: 'max-content',\r\n    },\r\n    label: {\r\n        fontSize: FontSizes.size12,\r\n        fontWeight: 400,\r\n        color: theme.palette.neutralDark,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        maxWidth: 'max-content',\r\n    },\r\n}));\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './ContentCopyResponseModal.component';\r\nexport type { ContentCopyResponseProps } from './ContentCopyResponseModalContent';\r\n","import { Semaphore } from '@addressbook/utilities-core';\r\nimport { ServiceInterceptor } from '../types';\r\n\r\nexport interface ThrottlingInterceptorOptions {\r\n    maxConcurrency?: number;\r\n}\r\n\r\nconst defaultMaxConcurrency = 8;\r\n\r\n/**\r\n * Create a service interceptor to throttle requests.\r\n *\r\n * @property maxConcurrency The maximum number of concurrent requests.\r\n * @returns An interceptor.\r\n */\r\nexport function createThrottlingInterceptor({\r\n    maxConcurrency = defaultMaxConcurrency,\r\n}: ThrottlingInterceptorOptions = {}): ServiceInterceptor {\r\n    const semaphore = new Semaphore(maxConcurrency);\r\n    return (request, proceed) => semaphore.run(() => proceed(request));\r\n}\r\n","export type TestRequest = (request: Request) => boolean;\r\nexport const isGet: TestRequest = request => request.method === 'GET';\r\n\r\nexport type TestResponse = (response: Response) => boolean;\r\nexport const isServerErrorOrTooManyRequests: TestResponse = response =>\r\n    response.status >= 500 || response.status === 429;\r\n\r\nexport type TestRequestAndResponse = (request: Request, response?: Response) => boolean;\r\nexport const isGetAndOk: TestRequestAndResponse = (request, response) =>\r\n    request.method === 'GET' && (response?.ok ?? true);\r\n\r\nexport type RequestSelector = (request: Request) => PropertyKey;\r\nexport const urlSelector: RequestSelector = request => request.url;\r\n","import { ServiceOperation, ServiceResourceLocator } from '@addressbook/services-core';\r\nimport { ProfilePhotoSize } from '../types';\r\nimport { GraphDriveResource } from './drive';\r\nimport { GraphProfilePhotoResource } from './profile-photo';\r\n\r\n/**\r\n * The group resource.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/resources/group\r\n */\r\nexport class GraphGroupResource {\r\n    constructor(private operation: ServiceOperation, private locator: ServiceResourceLocator) {}\r\n\r\n    /**\r\n     * Navigates to the drive resource.\r\n     *\r\n     * @returns The drive resource.\r\n     * @see https://learn.microsoft.com/graph/api/drive-get\r\n     */\r\n    get drive(): GraphDriveResource {\r\n        return new GraphDriveResource(this.operation, this.locator.extend('drive'));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the profile photo resource.\r\n     *\r\n     * @returns The profile photo resource.\r\n     * @see https://learn.microsoft.com/graph/api/profilephoto-get\r\n     */\r\n    get photo(): GraphProfilePhotoResource {\r\n        return new GraphProfilePhotoResource(this.operation, this.locator.extend('photo'));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the profile photo resource by size.\r\n     *\r\n     * @param size The profile photo size.\r\n     * @returns The profile photo resource.\r\n     * @see https://learn.microsoft.com/graph/api/profilephoto-get\r\n     */\r\n    photos(size: ProfilePhotoSize): GraphProfilePhotoResource {\r\n        return new GraphProfilePhotoResource(this.operation, this.locator.extend('photos', `${size}x${size}`));\r\n    }\r\n}\r\n","/**\r\n * Checks if a data transfer contains files.\r\n *\r\n * @param data The data transfer to check.\r\n * @returns `true` if the data transfer contains files, otherwise `false`.\r\n */\r\nexport function dataTransferIncludesFiles(data: DataTransfer): boolean {\r\n    return data.types.includes('Files');\r\n}\r\n\r\n/**\r\n * Extracts files from a data transfer.\r\n *\r\n * @param data The data transfer to extract files from.\r\n * @returns The files in the data transfer.\r\n */\r\nexport function extractFilesFromDataTransfer(data: DataTransfer): File[] {\r\n    const files = Array.from(data.items, item => item.getAsFile());\r\n    return files.filter((file): file is File => file !== null);\r\n}\r\n","/**\r\n * Check if a URL is an absolute URL.\r\n *\r\n * @param url The URL to check.\r\n * @returns true if the URL is an absolute URL, false otherwise.\r\n */\r\nexport function isAbsoluteUrl(url: string): boolean {\r\n    try {\r\n        new URL(url);\r\n        return true;\r\n    } catch {\r\n        return false;\r\n    }\r\n}\r\n\r\ninterface ProtocolOfNormalizeUrl {\r\n    name: string;\r\n    guess?: RegExp;\r\n}\r\n\r\n// See RFC 3986: https://datatracker.ietf.org/doc/html/rfc3986#section-3.3\r\nconst unreserved = '[\\\\w\\\\d._~-]';\r\nconst genericTopLevelDomain = '\\\\w+';\r\nconst host = `${unreserved}+\\\\.${genericTopLevelDomain}`;\r\n\r\nconst mailtoRegex = new RegExp(`^${unreserved}+@${host}$`);\r\nconst ftpRegex = new RegExp(`^ftp\\.${host}(/\\\\S+)?$`);\r\nconst httpRegex = new RegExp(`^${host}(/\\\\S+)?$`);\r\n\r\nconst defaultProtocols: ProtocolOfNormalizeUrl[] = [\r\n    { name: 'mailto', guess: mailtoRegex },\r\n    { name: 'ftp', guess: ftpRegex },\r\n    { name: 'ftps' },\r\n    { name: 'http' },\r\n    { name: 'https', guess: httpRegex },\r\n];\r\n\r\n/**\r\n * Normalize URL to a valid URL with protocol, or empty string if the URL is invalid.\r\n *\r\n * @param url the URL to normalize\r\n * @param protocols the protocols to allow or guess\r\n * @returns the normalized URL\r\n *\r\n * @example normalizeUrl('https://example.com') // 'https://www.example.com/'\r\n * @example normalizeUrl('alice@example.com') // 'mailto:alice@example.com'\r\n * @example normalizeUrl('ftp.example.com') // 'ftp://ftp.example.com/'\r\n * @example normalizeUrl('example.com') // 'https://www.example.com/'\r\n * @example normalizeUrl('example') // ''\r\n */\r\nexport function normalizeUrl(url: string, protocols: ProtocolOfNormalizeUrl[] = defaultProtocols): string {\r\n    try {\r\n        // Try to parse the url\r\n        const parsedUrl = new URL(url);\r\n\r\n        // If the protocol is not allowed, return empty string\r\n        if (!protocols.some(protocol => parsedUrl.protocol === `${protocol.name}:`)) return '';\r\n\r\n        // If the url is valid, return it\r\n        return parsedUrl.toString();\r\n    } catch {\r\n        // If the url is not valid, try to guess the protocol\r\n        for (const { name, guess } of protocols) {\r\n            if (!guess?.test(url)) continue;\r\n\r\n            // If the url is valid with the guessed protocol, return it\r\n            try {\r\n                return new URL(`${name}:${url}`).toString();\r\n            } catch {\r\n                // Ignore any errors\r\n            }\r\n        }\r\n\r\n        // Otherwise, return empty string\r\n        return '';\r\n    }\r\n}\r\n\r\n/**\r\n * Opens the given url in a new tab.\r\n *\r\n * @param url The url.\r\n */\r\nexport function openUrl(url: string): void {\r\n    window.open(url, '_blank', 'noopener noreferrer');\r\n}\r\n","export * from './Icons';\r\n","import { isEqual } from 'lodash-es';\r\nimport React from 'react';\r\n\r\n/**\r\n * A Hook to create a deep dependency list, ensuring that the dependencies are stable when they only change shallowly.\r\n *\r\n * @param deps The dependencies to stabilize.\r\n * @returns The stabilized dependencies.\r\n */\r\nexport function useDeepDeps<Deps extends React.DependencyList>(deps: Deps): Deps {\r\n    const ref = React.useRef<Deps>();\r\n    if (!ref.current || !isEqual(deps, ref.current)) ref.current = deps;\r\n    return ref.current;\r\n}\r\n\r\n/**\r\n * A Hook to create a memoized value, ensuring that the value is stable when the dependencies change shallowly.\r\n *\r\n * @param factory The factory to create the value.\r\n * @param deps The dependencies to stabilize.\r\n * @returns The memoized value.\r\n */\r\nexport function useDeepMemo<T>(factory: () => T, deps: React.DependencyList): T {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    return React.useMemo(factory, useDeepDeps(deps));\r\n}\r\n\r\n/**\r\n * A Hook to create a memoized callback, ensuring that the callback is stable when the dependencies change shallowly.\r\n *\r\n * @param callback The callback to memoize.\r\n * @param deps The dependencies to stabilize.\r\n * @returns The memoized callback.\r\n */\r\nexport function useDeepCallback<T extends (...args: never[]) => unknown>(callback: T, deps: React.DependencyList): T {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    return React.useCallback(callback, useDeepDeps(deps));\r\n}\r\n\r\n/**\r\n * A Hook to create an effect, ensuring that the effect won't run when the dependencies change shallowly.\r\n *\r\n * @param effect The effect to run.\r\n * @param deps The dependencies to stabilize.\r\n * @returns The effect.\r\n */\r\nexport function useDeepEffect(effect: React.EffectCallback, deps: React.DependencyList): void {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    return React.useEffect(effect, useDeepDeps(deps));\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './CollapsingArea.component';\r\n","export const rem = (px: number): string => `${px / 16}rem`;\r\n\r\nexport namespace FontSizes {\r\n    export const size10 = rem(10);\r\n    export const size12 = rem(12);\r\n    export const size14 = rem(14);\r\n    export const size16 = rem(16);\r\n    export const size18 = rem(18);\r\n    export const size20 = rem(20);\r\n    export const size24 = rem(24);\r\n    export const size28 = rem(28);\r\n    export const size32 = rem(32);\r\n    export const size42 = rem(42);\r\n    export const size68 = rem(68);\r\n}\r\n","import React from 'react';\r\n\r\n/**\r\n * A unique key for a rendering.\r\n *\r\n * @remarks `number` is intentionally not used since React keys are converted to strings eventually,\r\n * even if they are numbers, which can lead to unexpected behavior when unrendering elements with\r\n * numeric keys.\r\n */\r\nexport type RenderingKey = string;\r\nexport type RenderingElement = React.ReactElement;\r\n\r\n/**\r\n * The result of the `useRenderings` hook.\r\n *\r\n * @property renderings The current renderings.\r\n * @property render Renders a new element.\r\n * @property unrender Unrenders an element.\r\n * @property dispose Disposes all renderings.\r\n */\r\nexport interface UseRenderingsResult {\r\n    renderings: RenderingElement[];\r\n    render: (key: RenderingKey, element: RenderingElement) => void;\r\n    unrender: (key: RenderingKey) => void;\r\n    dispose: () => void;\r\n}\r\n\r\n/**\r\n * A hook that allows to dynamically render and unrender React elements.\r\n */\r\nexport function useRenderings(): UseRenderingsResult {\r\n    const [renderings, setRenderings] = React.useState<UseRenderingsResult['renderings']>([]);\r\n\r\n    const render = React.useCallback<UseRenderingsResult['render']>(\r\n        (key, element) =>\r\n            setRenderings(renderings => {\r\n                let index = renderings.findIndex(rendering => rendering.key === key);\r\n                if (index < 0) index = renderings.length;\r\n\r\n                const newRenderings = [...renderings];\r\n                newRenderings[index] = React.cloneElement(element, { key });\r\n                return newRenderings;\r\n            }),\r\n        [setRenderings]\r\n    );\r\n\r\n    const unrender = React.useCallback<UseRenderingsResult['unrender']>(\r\n        key => setRenderings(rendering => rendering.filter(element => element.key !== key)),\r\n        [setRenderings]\r\n    );\r\n\r\n    const dispose = React.useCallback<UseRenderingsResult['dispose']>(() => setRenderings([]), [setRenderings]);\r\n\r\n    return { renderings, render, unrender, dispose };\r\n}\r\n","/**\r\n * Silently resolves a promise.\r\n *\r\n * @param promise The promise.\r\n * @returns The promise that resolves if the promise resolves, and resolves undefined if the promise rejects.\r\n */\r\nexport async function silently(promise: Promise<void>): Promise<void>;\r\nexport async function silently<T>(promise: Promise<T>): Promise<T | undefined>;\r\nexport async function silently<T>(promise: Promise<T>): Promise<T | undefined> {\r\n    try {\r\n        return await promise;\r\n    } catch {\r\n        // Ignore the error.\r\n    }\r\n}\r\n\r\n/**\r\n * Delay for a number of milliseconds.\r\n *\r\n * @param ms The number of milliseconds to delay.\r\n * @returns A promise that resolves after the delay.\r\n */\r\nexport function delay(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","/**\r\n * A semaphore is a synchronization primitive that restricts the number of simultaneous accesses to a shared resource.\r\n */\r\nexport class Semaphore {\r\n    private currentInternal: number;\r\n    private notifies: VoidFunction[];\r\n\r\n    /**\r\n     * Create a semaphore.\r\n     *\r\n     * @param resources The number of resources.\r\n     */\r\n    constructor(resources: number) {\r\n        if (resources <= 0 || !Number.isInteger(resources)) throw new Error('Resources must be a positive integer.');\r\n\r\n        this.currentInternal = resources;\r\n        this.notifies = [];\r\n    }\r\n\r\n    /**\r\n     * Get the number of available resources.\r\n     */\r\n    get current(): number {\r\n        return this.currentInternal;\r\n    }\r\n\r\n    /**\r\n     * Acquire a resource.\r\n     *\r\n     * @returns A promise that resolves to an idempotent function to release the resource.\r\n     */\r\n    async acquire(): Promise<VoidFunction> {\r\n        while (this.currentInternal <= 0) await new Promise<void>(resolve => this.notifies.push(resolve));\r\n        this.currentInternal--;\r\n\r\n        let released = false;\r\n        return () => {\r\n            if (released) return;\r\n            released = true;\r\n\r\n            this.currentInternal++;\r\n            this.notifies.shift()?.();\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Run an action with a resource.\r\n     *\r\n     * @param action The action to run.\r\n     * @returns The result of the action.\r\n     */\r\n    async run<T>(action: () => T | Promise<T>): Promise<T> {\r\n        const release = await this.acquire();\r\n        try {\r\n            return await action();\r\n        } finally {\r\n            release();\r\n        }\r\n    }\r\n}\r\n","import { FontSizes, makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const usePeopleListStyles = makeStyles(theme => ({\r\n    label: {\r\n        fontSize: FontSizes.size14,\r\n        fontWeight: 600,\r\n        color: theme.palette.black,\r\n        marginBottom: '8px',\r\n    },\r\n    list: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '8px',\r\n    },\r\n    item: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: '8px',\r\n    },\r\n    text: {\r\n        flex: 1,\r\n        fontSize: FontSizes.size12,\r\n        color: theme.palette.black,\r\n    },\r\n}));\r\n","export * from './PeopleCoin';\r\nexport * from './PeopleList';\r\nexport * from './PeoplePile';\r\nexport * from './PeopleSelect';\r\nexport * from './PeopleView';\r\nexport * from './types';\r\n","import { ServiceOperation, ServiceResourceLocator } from '@addressbook/services-core';\r\nimport { GraphDriveResource } from './drive';\r\nimport { GraphGroupResource } from './group';\r\nimport { GraphShareResource } from './share';\r\nimport { GraphUserResource } from './user';\r\n\r\n/**\r\n * The root resource.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/resources/root\r\n */\r\nexport class GraphRootResource {\r\n    constructor(private operation: ServiceOperation, private locator: ServiceResourceLocator) {}\r\n\r\n    /**\r\n     * Navigates to the current user resource.\r\n     *\r\n     * @returns The current user resource.\r\n     * @see https://learn.microsoft.com/graph/api/user-get\r\n     */\r\n    get me(): GraphUserResource {\r\n        return new GraphUserResource(this.operation, this.locator.extend('me'));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the user resource by id.\r\n     *\r\n     * @param id The user id.\r\n     * @returns The user resource.\r\n     * @see https://learn.microsoft.com/graph/api/user-get\r\n     */\r\n    users(id: string): GraphUserResource {\r\n        return new GraphUserResource(this.operation, this.locator.extend('users', id));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the group resource by id.\r\n     *\r\n     * @param id The group id.\r\n     * @returns The group resource.\r\n     * @see https://learn.microsoft.com/graph/api/group-get\r\n     */\r\n    groups(id: string): GraphGroupResource {\r\n        return new GraphGroupResource(this.operation, this.locator.extend('groups', id));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the drive resource by id.\r\n     *\r\n     * @param id The drive id.\r\n     * @returns The drive resource.\r\n     * @see https://learn.microsoft.com/graph/api/drive-get\r\n     */\r\n    drives(id: string): GraphDriveResource {\r\n        return new GraphDriveResource(this.operation, this.locator.extend('drives', id));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the share resource by id or sharing link.\r\n     *\r\n     * @param idOrUrl The share id or sharing link.\r\n     * @returns The share resource.\r\n     * @see https://learn.microsoft.com/graph/api/shares-get\r\n     */\r\n    shares(idOrUrl: string): GraphShareResource {\r\n        return new GraphShareResource(\r\n            this.operation,\r\n            this.locator.extend('shares', encodeSharingUrlIfNecessary(idOrUrl))\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Encodes a sharing URL if necessary, only if the input is a URL, otherwise returns the input as is.\r\n *\r\n * @param idOrUrl The share id or sharing link.\r\n * @returns The original id or the encoded sharing URL.\r\n */\r\nfunction encodeSharingUrlIfNecessary(idOrUrl: string): string {\r\n    return idOrUrl.startsWith('https://') ? encodeSharingUrl(idOrUrl) : idOrUrl;\r\n}\r\n\r\n/**\r\n * Encodes a sharing URL for use with the Microsoft Graph API. To encode a sharing URL, use the following logic:\r\n * - First, use base64 encode the URL.\r\n * - Convert the base64 encoded result to unpadded base64url format by removing = characters from the end of the value,\r\n * replacing / with _ and + with -.)\r\n * - Append u! to be beginning of the string.\r\n *\r\n * @param url The sharing URL.\r\n * @returns The encoded sharing URL.\r\n * @see https://learn.microsoft.com/graph/api/shares-get\r\n *\r\n * @example encodeSharingUrl('https://example.com') // 'u!aHR0cHM6Ly9leGFtcGxlLmNvbQ'\r\n */\r\nfunction encodeSharingUrl(url: string): string {\r\n    return `u!${btoa(url).replace(/=+$/, '').replace('/', '_').replace('+', '-')}`;\r\n}\r\n","import { mergeStyles } from '@fluentui/react';\r\n\r\n/**\r\n * text with ellipsis styles\r\n *\r\n * @param line max row number\r\n * @returns classname\r\n */\r\nexport const ellipsisStyles = (line: number): string =>\r\n    mergeStyles(\r\n        {\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            wordBreak: 'break-word',\r\n        },\r\n        line === 1\r\n            ? {\r\n                  display: 'block',\r\n                  whiteSpace: 'nowrap',\r\n              }\r\n            : {\r\n                  display: '-webkit-box',\r\n                  '-webkit-box-orient': 'vertical',\r\n                  '-webkit-line-clamp': `${line}`,\r\n              }\r\n    );\r\n","export * from './EmptyState';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './MobileSheet.component';\r\n","import React from 'react';\r\n\r\nexport interface UseLongPressOptions {\r\n    onLongPress?: () => void;\r\n    onClick?: () => void;\r\n    duration?: number;\r\n}\r\n\r\nconst defaultDuration = 1000;\r\n\r\n/**\r\n * A hook that allows invoking a callback function when an element is long pressed.\r\n *\r\n * @property onLongPress The callback function to invoke when the element is long pressed.\r\n * @property onClick The callback function to invoke when the element is clicked.\r\n * @property duration The duration in milliseconds to consider the press as long press.\r\n * @returns A ref object that should be assigned to the element to be long pressed.\r\n */\r\nexport function useLongPress<Element extends HTMLElement>({\r\n    onLongPress,\r\n    onClick,\r\n    duration = defaultDuration,\r\n}: UseLongPressOptions): React.Ref<Element> {\r\n    const elementRef = React.useRef<Element>(null);\r\n\r\n    const onLongPressRef = React.useRef(onLongPress);\r\n    onLongPressRef.current = onLongPress;\r\n\r\n    const onClickRef = React.useRef(onClick);\r\n    onClickRef.current = onClick;\r\n\r\n    // Events happen in order: down -> (leave -> enter)* -> up -> document up\r\n    // - handleDown: set pointer with long press context, set timeout to trigger long press\r\n    // - handleUp: invoke onClick if long press is not triggered\r\n    // - handleEnter: mark pointer as inside\r\n    // - handleLeave: mark pointer as outside\r\n    // - handleDocumentUp: delete long press context of pointer, clear timeout\r\n    React.useEffect(() => {\r\n        const element = elementRef.current;\r\n        if (!element) return;\r\n\r\n        const contexts = new Map<InvokingContextKey, InvokingContext>();\r\n\r\n        const guard =\r\n            (handler: (key: InvokingContextKey) => void) =>\r\n            (event: PossibleInvokingEvent): void => {\r\n                if (!isInvokingEvent(event)) return;\r\n\r\n                const key = getInvokingContextKey(event);\r\n                handler(key);\r\n            };\r\n\r\n        const trigger = (key: InvokingContextKey): void => {\r\n            const context = contexts.get(key);\r\n            if (!context || !context.inside) return;\r\n\r\n            const onLongPress = onLongPressRef.current;\r\n            if (!onLongPress) return;\r\n\r\n            onLongPress();\r\n            context.triggered = true;\r\n        };\r\n\r\n        const handleDown = guard(key => {\r\n            if (contexts.has(key)) return;\r\n\r\n            const timeoutId = setTimeout(() => trigger(key), duration);\r\n            contexts.set(key, { timeoutId, triggered: false, inside: true });\r\n        });\r\n\r\n        const handleUp = guard(key => {\r\n            const context = contexts.get(key);\r\n            if (!context || context.triggered) return;\r\n\r\n            const onClick = onClickRef.current;\r\n            if (!onClick) return;\r\n\r\n            onClick();\r\n        });\r\n\r\n        const handleLeave = guard(key => {\r\n            const context = contexts.get(key);\r\n            if (!context) return;\r\n\r\n            context.inside = false;\r\n        });\r\n\r\n        const handleEnter = guard(key => {\r\n            const context = contexts.get(key);\r\n            if (!context) return;\r\n\r\n            context.inside = true;\r\n        });\r\n\r\n        const handleDocumentUp = guard(key => {\r\n            const context = contexts.get(key);\r\n            if (!context) return;\r\n\r\n            clearTimeout(context.timeoutId);\r\n            contexts.delete(key);\r\n        });\r\n\r\n        const controller = new AbortController();\r\n\r\n        // Handle pointer events\r\n        element.addEventListener('pointerdown', handleDown, { signal: controller.signal });\r\n        element.addEventListener('pointerup', handleUp, { signal: controller.signal, capture: true });\r\n        element.addEventListener('pointerleave', handleLeave, { signal: controller.signal, capture: true });\r\n        element.addEventListener('pointerenter', handleEnter, { signal: controller.signal, capture: true });\r\n        element.ownerDocument.addEventListener('pointerup', handleDocumentUp, { signal: controller.signal });\r\n\r\n        // Handle keyboard events\r\n        element.addEventListener('keydown', handleDown, { signal: controller.signal });\r\n        element.addEventListener('keyup', handleUp, { signal: controller.signal, capture: true });\r\n        element.ownerDocument.addEventListener('keyup', handleDocumentUp, { signal: controller.signal });\r\n\r\n        // Clean up timeouts\r\n        controller.signal.addEventListener('abort', () => contexts.forEach(({ timeoutId }) => clearTimeout(timeoutId)));\r\n\r\n        return () => controller.abort();\r\n    }, [duration]);\r\n\r\n    return elementRef;\r\n}\r\n\r\ntype PossibleInvokingEvent = PointerEvent | KeyboardEvent;\r\n\r\ntype InvokingContextKey = PointerEvent['pointerId'] | KeyboardEvent['key'];\r\n\r\ninterface InvokingContext {\r\n    timeoutId: ReturnType<typeof setTimeout>;\r\n    triggered: boolean;\r\n    inside: boolean;\r\n}\r\n\r\nfunction isInvokingEvent(event: PossibleInvokingEvent): boolean {\r\n    return event instanceof KeyboardEvent ? event.key === 'Enter' || event.key === ' ' : true;\r\n}\r\n\r\nfunction getInvokingContextKey(event: PossibleInvokingEvent): InvokingContextKey {\r\n    return event instanceof KeyboardEvent ? event.key : event.pointerId;\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\nimport { FontWeights } from '@fluentui/react';\r\nimport { isContrastTheme, rem } from '@addressbook/components-fluentui-teams-theme';\r\nimport { ellipsisStyles } from '../styles/ellipsisStyles';\r\nimport { makeStyles } from '../styles/makeStyles';\r\nimport { CommonIconSize } from './CommonIcon.component';\r\n\r\nexport const useCommonIconStyles = makeStyles(theme => ({\r\n    root: { display: 'flex', justifyContent: 'space-between' },\r\n    content: {\r\n        display: 'flex',\r\n        columnGap: '12px',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n    },\r\n    iconContainer: {\r\n        position: 'relative',\r\n        height: '2rem',\r\n        width: '2rem',\r\n        display: 'flex',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '4px',\r\n        flexShrink: '0 !important',\r\n        '&:hover .edit-icon': {\r\n            visibility: 'visible',\r\n        },\r\n        [`.${CommonIconSize.Size28} &`]: { height: '28px', width: '28px' },\r\n        [`.${CommonIconSize.Size32} &`]: { height: '32px', width: '32px' },\r\n        [`.${CommonIconSize.Size40} &`]: { height: '40px', width: '40px' },\r\n        [`.${CommonIconSize.Size44} &`]: { height: '44px', width: '44px' },\r\n        [`.${CommonIconSize.Size48} &`]: { height: '48px', width: '48px' },\r\n        [`.${CommonIconSize.Size64} &`]: { height: '64px', width: '64px' },\r\n        [`.${CommonIconSize.Size80} &`]: { height: '80px', width: '80px' },\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: '1rem',\r\n\r\n        [`.${CommonIconSize.Size28} &`]: theme.fonts.mediumPlus,\r\n        [`.${CommonIconSize.Size32} &`]: theme.fonts.xLarge,\r\n        [`.${CommonIconSize.Size40} &`]: theme.fonts.xLargePlus,\r\n        [`.${CommonIconSize.Size44} &`]: theme.fonts.xxLarge,\r\n        [`.${CommonIconSize.Size48} &`]: theme.fonts.xxLargePlus,\r\n        [`.${CommonIconSize.Size64} &`]: { fontSize: rem(48) },\r\n        [`.${CommonIconSize.Size80} &`]: { fontSize: rem(48) },\r\n    },\r\n    editIcon: [\r\n        'edit-icon',\r\n        {\r\n            cursor: 'pointer',\r\n            visibility: 'hidden',\r\n            color: theme.palette.white,\r\n            position: 'absolute',\r\n            fontSize: '8px',\r\n            background: theme.palette.neutralDark,\r\n            padding: '6px',\r\n            borderRadius: '50%',\r\n            bottom: '4px',\r\n            right: '4px',\r\n        },\r\n    ],\r\n    textContainer: { overflow: 'hidden' },\r\n    titleContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    title: [\r\n        ellipsisStyles(1),\r\n        {\r\n            fontWeight: FontWeights.semibold,\r\n            color: isContrastTheme(theme.name) ? 'inherit' : theme.palette.black,\r\n            margin: 0,\r\n        },\r\n    ],\r\n    description: [\r\n        theme.fonts.small,\r\n        ellipsisStyles(1),\r\n        {\r\n            color: isContrastTheme(theme.name) ? 'inherit' : theme.palette.neutralDark,\r\n        },\r\n    ],\r\n}));\r\n","import { ServiceInterceptor } from '../types';\r\n\r\n/**\r\n * A set of header entries, whose values can be either a string or a function that returns a string.\r\n */\r\nexport type HeaderEntries = Record<HeaderKey, HeaderValue | HeaderFactory>;\r\n\r\ntype HeaderKey = string;\r\ntype HeaderValue = string;\r\ntype HeaderFactory = (request: Request) => HeaderValue;\r\n\r\n/**\r\n * Create a service interceptor that adds headers to the request.\r\n *\r\n * @param entries The header entries.\r\n * @returns An interceptor.\r\n */\r\nexport function createHeadersInterceptor(entries: HeaderEntries): ServiceInterceptor {\r\n    return (request, proceed) => {\r\n        const newRequest = new Request(request);\r\n        for (const [key, valueOrFactory] of Object.entries(entries)) {\r\n            const value = typeof valueOrFactory === 'function' ? valueOrFactory(request) : valueOrFactory;\r\n            newRequest.headers.append(key, value);\r\n        }\r\n        return proceed(newRequest);\r\n    };\r\n}\r\n","export * from './PeoplePile';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './CommonPanel.component';\r\n","import { keyframes } from '@fluentui/react';\r\nimport { makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const useSpinnerStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    bound: {\r\n        overflow: 'hidden',\r\n    },\r\n    animated: {\r\n        display: 'block',\r\n        willChange: 'transform',\r\n        animation: `${keyframes({\r\n            from: { transform: 'translateY(0)' },\r\n            to: { transform: 'translateY(-100%)' },\r\n        })} 2s steps(60) infinite`,\r\n    },\r\n});\r\n","/**\r\n * Prompts the user to select a file.\r\n *\r\n * @property options.accept The file types to accept, as a comma-separated list of MIME types.\r\n * @returns A promise that resolves to the selected file, or rejects if the user cancels.\r\n */\r\nexport async function selectFile(options: Partial<Pick<HTMLInputElement, 'accept'>> = {}): Promise<File> {\r\n    const input = document.createElement('input');\r\n    Object.assign(input, options);\r\n    input.style.display = 'none';\r\n    input.type = 'file';\r\n\r\n    try {\r\n        document.body.appendChild(input);\r\n        return await new Promise((resolve, reject) => {\r\n            input.addEventListener('change', () => {\r\n                const file = input.files?.[0];\r\n                if (file) resolve(file);\r\n                else reject();\r\n            });\r\n            input.addEventListener('cancel', () => reject());\r\n            input.click();\r\n        });\r\n    } finally {\r\n        document.body.removeChild(input);\r\n    }\r\n}\r\n\r\n/**\r\n * Gets the SHA-1 digest of a blob, as a hex string.\r\n *\r\n * @param blob The blob to digest.\r\n * @returns A promise that resolves to the digest.\r\n */\r\nexport async function digestBlob(blob: Blob): Promise<string> {\r\n    const buffer = await blob.arrayBuffer();\r\n    const digest = await crypto.subtle.digest('SHA-1', buffer);\r\n    return encodeHexString(digest);\r\n}\r\n\r\n/**\r\n * Encodes a buffer as a hex string.\r\n *\r\n * @param buffer The buffer to encode.\r\n * @returns The encoded hex string.\r\n */\r\nexport function encodeHexString(buffer: ArrayBuffer): string {\r\n    return Array.from(new Uint8Array(buffer))\r\n        .map(b => b.toString(16).padStart(2, '0'))\r\n        .join('');\r\n}\r\n\r\n/**\r\n * Creates a file from a blob.\r\n *\r\n * @param blob The blob to create the file from.\r\n * @param name The name of the file.\r\n * @returns The created file.\r\n */\r\nexport function createFileByBlob(blob: Blob, name: string): File {\r\n    return new File([blob], name, {\r\n        type: blob.type,\r\n        ...(blob instanceof File && { lastModified: blob.lastModified }),\r\n    });\r\n}\r\n\r\nexport interface GetReadableSizeStringOptions {\r\n    units: string[];\r\n    base: number;\r\n    offset?: number;\r\n    precision?: number;\r\n}\r\n\r\nconst defaultGetReadableSizeStringOptions: GetReadableSizeStringOptions = {\r\n    units: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n    base: 1024,\r\n};\r\n\r\n/**\r\n * Gets the readable size string for the given size in bytes.\r\n *\r\n * @param sizeInBytes The size in bytes.\r\n * @property units The size units.\r\n * @property base The base of the size units.\r\n * @property offset The exponent offset for the next unit, added to the exponent of the size to determine the unit.\r\n * @property precision The precision of the size, as the number of fractional digits.\r\n * @returns The readable size string.\r\n *\r\n * @example getReadableSizeString(0) // '0 B'\r\n * @example getReadableSizeString(42) // '42 B'\r\n * @example getReadableSizeString(768) // '0.8 KB'\r\n * @example getReadableSizeString(1024) // '1.0 KB'\r\n * @example getReadableSizeString(1024 * 1.5) // '1.5 KB'\r\n */\r\nexport function getReadableSizeString(\r\n    sizeInBytes: number,\r\n    { units, base, offset = 0.1, precision = 1 }: GetReadableSizeStringOptions = defaultGetReadableSizeStringOptions\r\n): string {\r\n    if (sizeInBytes < 0 || !Number.isInteger(sizeInBytes)) throw new Error('Size must be a non-negative integer.');\r\n\r\n    const exponent = sizeInBytes && Math.log(sizeInBytes) / Math.log(base);\r\n    const unitIndex = Math.min(Math.floor(exponent + offset), units.length - 1);\r\n    const size = sizeInBytes / base ** unitIndex;\r\n\r\n    const numberPart = unitIndex === 0 ? size : size.toFixed(precision);\r\n    const unitPart = units[unitIndex];\r\n\r\n    return `${numberPart} ${unitPart}`;\r\n}\r\n\r\nexport interface NormalizeFileNameOptions {\r\n    disallowed?: RegExp;\r\n    replacement?: string;\r\n}\r\n\r\n/**\r\n * The default disallowed characters for file names.\r\n *\r\n * @see https://learn.microsoft.com/graph/onedrive-addressing-driveitems#onedrive-reserved-characters\r\n */\r\nconst defaultDisallowed = /[/\\\\*<>?:\"|#%]/g;\r\n\r\n/**\r\n * Normalizes a file name by replacing disallowed characters with replacement.\r\n *\r\n * @param name The name to normalize.\r\n * @property disallowed The disallowed characters to replace.\r\n * @property replacement The replacement character for disallowed characters.\r\n * @returns The normalized name.\r\n */\r\nexport function normalizeFileName(\r\n    name: string,\r\n    { disallowed = defaultDisallowed, replacement = '_' }: NormalizeFileNameOptions = {}\r\n): string {\r\n    return name.replace(disallowed, replacement);\r\n}\r\n\r\n/**\r\n * The parts of a file name.\r\n *\r\n * @property stem The stem of the name.\r\n * @property extension The extension of the name.\r\n * @example { stem: 'image', extension: 'png' }\r\n */\r\nexport interface FileNameParts {\r\n    stem: string;\r\n    extension: string;\r\n}\r\n\r\n/**\r\n * Splits a file name into its stem and extension.\r\n *\r\n * @param name The name to split.\r\n * @returns The stem and extension of the name.\r\n * @example splitFileName('') // { stem: '', extension: '' }\r\n * @example splitFileName('image') // { stem: 'image', extension: '' }\r\n * @example splitFileName('image.png') // { stem: 'image', extension: 'png' }\r\n * @example splitFileName('image.gif.png') // { stem: 'image.gif', extension: 'png' }\r\n * @example splitFileName('.hidden') // { stem: '.hidden', extension: '' }\r\n * @example splitFileName('.hidden.sh') // { stem: '.hidden', extension: 'sh' }\r\n */\r\nexport function splitFileName(name: string): FileNameParts {\r\n    const lastDot = name.lastIndexOf('.');\r\n    return lastDot <= 0\r\n        ? { stem: name, extension: '' }\r\n        : { stem: name.slice(0, lastDot), extension: name.slice(lastDot + 1) };\r\n}\r\n\r\n/**\r\n * Joins a file name from its stem and extension.\r\n *\r\n * @param parts The parts of the file name.\r\n * @returns The joined file name.\r\n * @example joinFileName({ stem: '', extension: '' }) // ''\r\n * @example joinFileName({ stem: 'image', extension: '' }) // 'image'\r\n * @example joinFileName({ stem: 'image', extension: 'png' }) // 'image.png'\r\n * @example joinFileName({ stem: 'image.gif', extension: 'png' }) // 'image.gif.png'\r\n * @example joinFileName({ stem: '.hidden', extension: '' }) // '.hidden'\r\n * @example joinFileName({ stem: '.hidden', extension: 'sh' }) // '.hidden.sh'\r\n */\r\nexport function joinFileName(parts: FileNameParts): string {\r\n    return parts.extension ? `${parts.stem}.${parts.extension}` : parts.stem;\r\n}\r\n","export * from './authorization';\r\nexport * from './caching';\r\nexport * from './headers';\r\nexport * from './logging';\r\nexport * from './online';\r\nexport * from './pooling';\r\nexport * from './retry';\r\nexport * from './throttling';\r\n","/**\r\n * Encodes a blob as a data URL.\r\n *\r\n * @param blob The blob to encode.\r\n * @returns A promise that resolves to the data URL.\r\n */\r\nexport function encodeDataUrl(blob: Blob): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => resolve(reader.result as string));\r\n        reader.addEventListener('error', () => reject());\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}\r\n\r\n/**\r\n * Decodes a data URL as a blob.\r\n *\r\n * @param dataUrl The data URL to decode.\r\n * @returns The decoded blob, or `undefined` if the data URL is invalid.\r\n */\r\nexport function decodeDataUrl(dataUrl: string): Blob | undefined {\r\n    const [protocol, body] = dataUrl.split(':', 2);\r\n    if (protocol !== 'data') return;\r\n\r\n    const [prefix, data] = body.split(',', 2);\r\n    const [mime, encoding] = prefix.split(';', 2);\r\n    const blobPart = encoding === 'base64' ? decodeBase64(data) : decodeURIComponent(data);\r\n    return new Blob([blobPart], { type: mime });\r\n}\r\n\r\nfunction decodeBase64(data: string): ArrayBuffer {\r\n    const binaryString = atob(data);\r\n    const byteArray = Uint8Array.from(binaryString, c => c.charCodeAt(0));\r\n    return byteArray.buffer;\r\n}\r\n","import { ServiceInterceptor } from '../types';\r\nimport { isGetAndOk, RequestSelector, TestRequestAndResponse, urlSelector } from './utilities';\r\n\r\nexport interface CachingInterceptorOptions {\r\n    test?: TestRequestAndResponse;\r\n    cache: ServiceCache;\r\n}\r\n\r\n/**\r\n * Create a service interceptor that caches responses.\r\n *\r\n * @property test Determines whether a request and response should be cached.\r\n * @property cache The cache used to store responses.\r\n * @returns An interceptor.\r\n */\r\nexport function createCachingInterceptor({ test = isGetAndOk, cache }: CachingInterceptorOptions): ServiceInterceptor {\r\n    return async (request, proceed) => {\r\n        if (!test(request)) return proceed(request);\r\n\r\n        const cachedResponse = await cache.get(request);\r\n        if (cachedResponse) return cachedResponse;\r\n\r\n        const response = await proceed(request);\r\n        if (!test(request, response)) return response;\r\n\r\n        await cache.set(request, response.clone());\r\n        return response;\r\n    };\r\n}\r\n\r\n/**\r\n * A service cache.\r\n *\r\n * @property get Gets a cached response by the request.\r\n * @property set Sets a cached response for the request.\r\n */\r\nexport interface ServiceCache {\r\n    get(request: Request): Promise<Response | undefined>;\r\n    set(request: Request, response: Response): Promise<void>;\r\n}\r\n\r\n/**\r\n * An memory service cache that stores responses in a Map.\r\n */\r\nexport class MemoryServiceCache implements ServiceCache {\r\n    private cache = new Map<PropertyKey, Response>();\r\n\r\n    /**\r\n     * Creates an instance of MemoryServiceCache.\r\n     *\r\n     * @param selector A function that selects a key from a request.\r\n     */\r\n    constructor(private selector: RequestSelector = urlSelector) {}\r\n\r\n    async get(request: Request): Promise<Response | undefined> {\r\n        return this.cache.get(this.selector(request))?.clone();\r\n    }\r\n\r\n    async set(request: Request, response: Response): Promise<void> {\r\n        this.cache.set(this.selector(request), response);\r\n    }\r\n}\r\n","export * from './blob';\r\nexport * from './debounce';\r\nexport * from './deep';\r\nexport * from './drop';\r\nexport * from './keyboard';\r\nexport * from './long-press';\r\nexport * from './renderings';\r\nexport * from './update';\r\nexport * from './visibility';\r\n","import { ServiceOperation, ServiceResourceLocator } from '@addressbook/services-core';\r\nimport { GraphDriveItemResource } from './drive-item';\r\n\r\n/**\r\n * The share resource.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/resources/shareddriveitem\r\n */\r\nexport class GraphShareResource {\r\n    constructor(private operation: ServiceOperation, private locator: ServiceResourceLocator) {}\r\n\r\n    /**\r\n     * Navigates to the drive item resource.\r\n     *\r\n     * @returns The drive item resource.\r\n     * @see https://learn.microsoft.com/graph/api/driveitem-get\r\n     */\r\n    get driveItem(): GraphDriveItemResource {\r\n        return new GraphDriveItemResource(this.operation, this.locator.extend('driveItem'));\r\n    }\r\n}\r\n","export * from './error';\r\nexport * from './interceptors';\r\nexport * from './locator';\r\nexport * from './operation';\r\nexport * from './types';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Modal, mergeStyleSets, IModalStyles } from '@fluentui/react';\r\nimport { useCopyResponseModalStyles } from './ContentCopyResponseModal.styles';\r\nimport { ContentCopyRequestModalContent, ContentCopyResponseProps } from './ContentCopyResponseModalContent';\r\n\r\nexport type ContentCopyResponseModalProps = ContentCopyResponseProps & {\r\n    isOpen: boolean;\r\n    modalStyles?: IModalStyles;\r\n};\r\n\r\nexport const ContentCopyResponseModal: React.FC<ContentCopyResponseModalProps> = ({\r\n    isOpen,\r\n    modalStyles,\r\n    ...props\r\n}: ContentCopyResponseModalProps): JSX.Element => {\r\n    const styles = useCopyResponseModalStyles();\r\n    return (\r\n        <Modal styles={mergeStyleSets(styles, modalStyles)} isOpen={isOpen} isBlocking onDismiss={props.onDismiss}>\r\n            <ContentCopyRequestModalContent {...props} />\r\n        </Modal>\r\n    );\r\n};\r\n","import { debounce } from 'lodash-es';\r\nimport { useEffect } from 'react';\r\n\r\nexport interface UseElementsVisibilityOptions {\r\n    elementsProvider: () => Element[];\r\n    onVisibilityChange: (visibilityRatios: number[]) => void;\r\n    threshold?: number[];\r\n}\r\n\r\nconst defaultThreshold = [0, 0.2, 0.4, 0.6, 0.8, 1];\r\n\r\n/**\r\n * A hook that observes the visibility of the provided elements and calls the onVisibilityChange callback when the visibility changes.\r\n *\r\n * @property elementsProvider A function that returns the elements to observe.\r\n * @property onVisibilityChange A callback that is called when the visibility of the elements changes.\r\n */\r\nexport function useElementsVisibility({\r\n    elementsProvider,\r\n    onVisibilityChange,\r\n    threshold = defaultThreshold,\r\n}: UseElementsVisibilityOptions): void {\r\n    useEffect(() => {\r\n        const elements = elementsProvider();\r\n        if (!elements.length) return;\r\n\r\n        const visibilityRatios = Array.from({ length: elements.length }, () => 0);\r\n        const observer = new IntersectionObserver(\r\n            debounce((entries: IntersectionObserverEntry[]) => {\r\n                entries.forEach(entry => {\r\n                    const index = elements.indexOf(entry.target);\r\n                    visibilityRatios[index] = entry.intersectionRatio;\r\n                });\r\n\r\n                onVisibilityChange(visibilityRatios);\r\n            }),\r\n            { threshold }\r\n        );\r\n\r\n        elements.forEach(item => observer.observe(item));\r\n        return () => observer.disconnect();\r\n    }, [elementsProvider, onVisibilityChange, threshold]);\r\n}\r\n","import { makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\nexport const userSlideDotsStyles = /* #__PURE__*/ makeStyles(theme => ({\r\n    stepper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    selectOption: {\r\n        width: '8px',\r\n        height: '8px',\r\n        margin: '0px 6px',\r\n        borderRadius: '50%',\r\n        backgroundColor: theme.palette.neutralTertiaryAlt,\r\n        '&.is-clickable': {\r\n            cursor: 'pointer',\r\n            ':hover': { backgroundColor: theme.palette.themePrimary },\r\n        },\r\n        '&.is-active': {\r\n            backgroundColor: theme.palette.themePrimary,\r\n        },\r\n    },\r\n}));\r\n","import { ServiceInterceptor } from '../types';\r\n\r\nexport interface LoggingInterceptorOptions<Context> {\r\n    logRequest: (request: Request) => Context;\r\n    logResponse: (response: Response, context: Context) => void;\r\n    logError: (error: unknown, context: Context) => void;\r\n}\r\n\r\n/**\r\n * Create a service interceptor that logs request, response and error.\r\n *\r\n * @property logRequest A function that logs request.\r\n * @property logResponse A function that logs response.\r\n * @property logError A function that logs error.\r\n * @returns An interceptor.\r\n * @remarks The context returned by `logRequest` will be passed to `logResponse` and `logError`, which helps to\r\n * correlate the logs, for example, logging the latency of a request.\r\n */\r\nexport function createLoggingInterceptor<Context>({\r\n    logRequest,\r\n    logResponse,\r\n    logError,\r\n}: LoggingInterceptorOptions<Context>): ServiceInterceptor {\r\n    return async (request, proceed) => {\r\n        const context = logRequest(request);\r\n        try {\r\n            const response = await proceed(request);\r\n            logResponse(response, context);\r\n            return response;\r\n        } catch (error) {\r\n            logError(error, context);\r\n            throw error;\r\n        }\r\n    };\r\n}\r\n","import { uuid } from '@addressbook/utilities-core';\r\nimport {\r\n    ActionOutcome,\r\n    AriaTelemetryClient,\r\n    Configuration,\r\n    EventBaseType,\r\n    flushTelemetry,\r\n    getClients,\r\n    initializeTelemetryClient,\r\n    logEvent,\r\n    logger,\r\n    LoggingContext,\r\n    logUIEvent,\r\n    PanelActionEvent,\r\n    PanelLaunchMethod,\r\n    PanelRegion,\r\n    PanelViewEvent,\r\n    ScenarioColumns,\r\n    TelemetryContext,\r\n    TelemetryScenarioStatus,\r\n    updateToCompliantAriaClient,\r\n    UserBiColumns,\r\n    UserBIEvent,\r\n} from '@microsoft/teams-telemetry';\r\nimport { camelCase, groupBy } from 'lodash-es';\r\nimport { IHttpInfo, ILogger, IScenarioEventData, IScenarioLogger, ITelemetryDetails } from './common/interfaces';\r\nimport { CommonLogCategory, LoggerLevels, PanelType } from './common/types';\r\nimport { ScenarioLogger } from './ScenarioLogger';\r\n\r\nenum AriaEventTypes {\r\n    Trace = 'hab_trace',\r\n    Performance = 'hab_performance',\r\n    UserBi = 'hab_userbi',\r\n    NonUiEvent = 'hab_nonUiEvent',\r\n    Scenario = 'hab_scenario',\r\n    Http = 'hab_http',\r\n}\r\n\r\nconst emailPattern = /([\\w-\\.]+)@([\\w-]+\\.)+[\\w-]+/g;\r\nconst emailPlaceholder = '[email]';\r\n\r\nconst guidPattern = /[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}/gi;\r\nconst guidPlaceholder = '[guid]';\r\n\r\n/**\r\n * Sets up the Telemetry and hijacks the console events\r\n * So that we can automatically instrument the native console events\r\n */\r\nexport class OneDSLogger<TScenarioName extends string, TStepName extends string, TLogCategory extends string>\r\n    implements ILogger<TScenarioName, TStepName, TLogCategory>\r\n{\r\n    private originalInfo: () => any;\r\n    private originalDebug: () => any;\r\n    private originalLog: () => any;\r\n    private originalWarn: () => any;\r\n    private originalError: () => any;\r\n    private originalAssert: (test?: boolean, ...args: any[]) => any;\r\n\r\n    public readonly sessionId: string;\r\n    private lastUserBiViewEventTime: number;\r\n    private activeScenarios: Record<string, IScenarioLogger<TStepName>>;\r\n\r\n    private ariaTelemetryClient?: AriaTelemetryClient;\r\n\r\n    private isDevelopment: boolean;\r\n    private logTraceTypes: ('Debug' | 'Info' | 'Warning' | 'Error' | 'Exception' | 'HTTPException')[];\r\n\r\n    // log event when promise is resolved\r\n    private initPromise: Promise<any>;\r\n    private initPromiseResolve: (() => void) | undefined;\r\n\r\n    private instrumentationKey: string | undefined;\r\n\r\n    /**\r\n     * Logger constructor.\r\n     *\r\n     * @param ariaToken aria token\r\n     * @param sessionId sessionId\r\n     * @param delay milliseconds to wait before log event. 0 default; -1 for infinitely.\r\n     * @param isDevelopment if true, enable console log and trace log. false default.\r\n     */\r\n    constructor(config?: {\r\n        ariaToken?: string;\r\n        sessionId?: string;\r\n        delay?: number;\r\n        isDevelopment?: boolean;\r\n        logTraceTypes?: ('Debug' | 'Info' | 'Warning' | 'Error' | 'Exception' | 'HTTPException')[];\r\n    }) {\r\n        const { ariaToken, sessionId, delay, isDevelopment, logTraceTypes } = config || {};\r\n\r\n        this.isDevelopment = isDevelopment || false;\r\n        this.logTraceTypes = logTraceTypes || [];\r\n        this.lastUserBiViewEventTime = performance.now();\r\n\r\n        this.originalInfo = console.info.bind(console);\r\n        this.originalDebug = console.debug ? console.debug.bind(console) : console.log.bind(console);\r\n        this.originalLog = console.log.bind(console);\r\n        this.originalWarn = console.warn.bind(console);\r\n        this.originalError = console.error.bind(console);\r\n        this.originalAssert = console.assert.bind(console);\r\n\r\n        if (!isDevelopment) {\r\n            // set up our functions above to use the inner function\r\n            console.info = this.hook.bind(this, this.originalInfo, LoggerLevels.info);\r\n            console.debug = this.hook.bind(this, this.originalDebug, LoggerLevels.debug);\r\n            console.log = this.hook.bind(this, this.originalLog, LoggerLevels.log);\r\n            console.warn = this.hook.bind(this, this.originalWarn, LoggerLevels.warn);\r\n            console.error = this.hook.bind(this, this.originalError, LoggerLevels.error);\r\n            console.assert = this.assert.bind(this);\r\n        }\r\n\r\n        this.initPromise = new Promise((r: any): void => (this.initPromiseResolve = r));\r\n        if (delay === undefined || delay >= 0) {\r\n            setTimeout((): void => this.activeLogger(), delay);\r\n        }\r\n\r\n        if (ariaToken) {\r\n            this.instrumentationKey = ariaToken;\r\n            this.initializeAria();\r\n        }\r\n\r\n        this.sessionId = sessionId || uuid();\r\n\r\n        this.setCommonProperty({ Session: this.sessionId });\r\n\r\n        this.activeScenarios = {};\r\n\r\n        if (!isDevelopment) {\r\n            // log all global runtime error\r\n            window.addEventListener('error', err =>\r\n                this.logTraceException(CommonLogCategory.GlobalException, { error: err as any as Error })\r\n            );\r\n            // log load performance\r\n            window.addEventListener('load', this.logLoadPerformance.bind(this));\r\n        }\r\n    }\r\n\r\n    public activeLogger(): void {\r\n        if (this.initPromiseResolve) {\r\n            this.initPromiseResolve();\r\n        }\r\n    }\r\n\r\n    public setCompliantAriaClient(tenantId: string): Promise<void> {\r\n        if (!this.ariaTelemetryClient) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.ariaTelemetryClient\r\n            .getCompliantAriaClient(tenantId, this.getClientConfig())\r\n            .then(client => {\r\n                updateToCompliantAriaClient(client);\r\n            })\r\n            .catch(err => {\r\n                console.error('Get ComplaintAriaClient error', err);\r\n            });\r\n    }\r\n\r\n    public setCommonProperty(dataMap: Record<string, string | number | boolean | undefined>): void {\r\n        const context = logger.getLoggerContext();\r\n        const newContext: LoggingContext = { customProperties: context?.customProperties ?? {} };\r\n        for (const [key, value] of Object.entries(dataMap)) {\r\n            newContext.customProperties![key] = value as string;\r\n        }\r\n        logger.updateContext(newContext);\r\n    }\r\n\r\n    public logPerformance(\r\n        action: string,\r\n        source: string,\r\n        duration: number,\r\n        duartionDetails?: { [key: string]: number },\r\n        dataBag?: any\r\n    ): void {\r\n        const logDetails = {};\r\n        Object.entries(duartionDetails ?? {}).map(v => (logDetails[`Time.${camelCase(v[0])}`] = Math.ceil(v[1])));\r\n        const eventProperties = {\r\n            Action: action,\r\n            Source: source,\r\n            Duration: Math.ceil(duration),\r\n            ...logDetails,\r\n        };\r\n        this.addDetailsToEventProperties(dataBag, eventProperties);\r\n\r\n        this.logEvent(AriaEventTypes.Performance, eventProperties);\r\n    }\r\n\r\n    public logHttp(httpInfo: IHttpInfo): void {\r\n        const eventProperties = {\r\n            HTTP_API: httpInfo.apiName!,\r\n            HTTP_URL: httpInfo.url,\r\n            HTTP_ClientRequestId: httpInfo.clientRequestId,\r\n            HTTP_CorrelationId: httpInfo.correlationId,\r\n            HTTP_Latency: httpInfo.latency!,\r\n            HTTP_GetTeamsContextLatency: httpInfo.getTeamsContextLatency!,\r\n            HTTP_GetAuthTokenLatency: httpInfo.getAuthTokenLatency!,\r\n            HTTP_ResponseCode: httpInfo.responseCode!,\r\n            HTTP_ResponseText: httpInfo.responseText!,\r\n            HTTP_RequestMethod: httpInfo.requestMethod,\r\n            HTTP_Edge_Ref: httpInfo.edgeRef!,\r\n        };\r\n\r\n        this.logEvent(AriaEventTypes.Http, eventProperties);\r\n    }\r\n\r\n    public logUserBiView(\r\n        panelLaunchMethod: PanelLaunchMethod,\r\n        panelRegion: PanelRegion,\r\n        panelType: PanelType,\r\n        dataBag?: any\r\n    ): void {\r\n        const event: UserBIEvent<PanelViewEvent & Partial<TelemetryContext>> = {\r\n            eventName: EventBaseType.PanelView,\r\n            properties: {\r\n                [UserBiColumns.PanelRegion]: panelRegion,\r\n                [UserBiColumns.PanelType]: panelType,\r\n                [UserBiColumns.PanelLaunchMethod]: panelLaunchMethod,\r\n                [UserBiColumns.PanelUri]: window.location.hash,\r\n            },\r\n        };\r\n        this.lastUserBiViewEventTime = performance.now();\r\n        this.addDetailsToEventProperties(dataBag, event.properties);\r\n\r\n        this.logUIEvent<PanelViewEvent>(event);\r\n    }\r\n\r\n    public logUserBiAction(\r\n        scenarioName: TScenarioName,\r\n        scenarioType: string,\r\n        moduleName: string,\r\n        dataBag?: any,\r\n        pageLeave?: boolean\r\n    ): void {\r\n        const event: UserBIEvent<any> = {\r\n            eventName: EventBaseType.PanelAction,\r\n            properties: {\r\n                [UserBiColumns.Scenario]: scenarioName,\r\n                [UserBiColumns.ScenarioType]: camelCase(scenarioType),\r\n                [UserBiColumns.ModuleName]: camelCase(moduleName),\r\n                [UserBiColumns.PanelUri]: window.location.hash,\r\n                ['Panel.Path']: window.location.hash.replace(guidPattern, guidPlaceholder),\r\n                ['DataBag.PageElapsed']: performance.now() - this.lastUserBiViewEventTime,\r\n                ['DataBag.PageLeave']: !!pageLeave,\r\n            },\r\n        };\r\n\r\n        this.addDetailsToEventProperties(dataBag, event.properties);\r\n        this.logUIEvent<PanelActionEvent>(event);\r\n    }\r\n\r\n    public logNonUiTelemetry(nonUiComponent: string, outcome: ActionOutcome, details?: any): void {\r\n        const eventProperties = {\r\n            SourceComponent: nonUiComponent,\r\n            Event: outcome,\r\n        };\r\n\r\n        this.addDetailsToEventProperties(details, eventProperties);\r\n\r\n        this.logEvent(AriaEventTypes.NonUiEvent, eventProperties);\r\n    }\r\n\r\n    public createScenario(name: string, dataBag?: any): IScenarioLogger<TStepName> {\r\n        if (!name) {\r\n            throw new Error('Missing scenario name.');\r\n        }\r\n\r\n        if (this.activeScenarios[name] != null) {\r\n            console.warn(`trying to create a scenario: ${name} that already exists`);\r\n            return this.activeScenarios[name];\r\n        }\r\n\r\n        const newScenario = new ScenarioLogger(this, name, dataBag);\r\n        this.activeScenarios[name] = newScenario;\r\n        return newScenario;\r\n    }\r\n\r\n    public findScenario(name: string): IScenarioLogger<TStepName> | null {\r\n        return this.activeScenarios[name] ? this.activeScenarios[name] : null;\r\n    }\r\n\r\n    public markScenario(\r\n        scenarioName: TScenarioName,\r\n        step: TStepName,\r\n        status?: TelemetryScenarioStatus,\r\n        eventData?: Partial<IScenarioEventData>\r\n    ): void {\r\n        const scenario = this.findScenario(scenarioName);\r\n\r\n        if (scenario) {\r\n            scenario.mark(step, status, eventData);\r\n        }\r\n    }\r\n\r\n    public stopScenario(scenarioName: string, eventData?: Partial<IScenarioEventData>): void {\r\n        const scenario = this.findScenario(scenarioName);\r\n\r\n        if (scenario) {\r\n            scenario.stop(eventData);\r\n        }\r\n    }\r\n\r\n    public failScenario(scenarioName: string, eventData?: Partial<IScenarioEventData>): void {\r\n        const scenario = this.findScenario(scenarioName);\r\n\r\n        if (scenario) {\r\n            scenario.fail(eventData);\r\n        }\r\n    }\r\n\r\n    public logScenario(name: string, eventData: IScenarioEventData, completeScenario: boolean): void {\r\n        const eventProperties = { [ScenarioColumns.ScenarioName]: name };\r\n        Object.keys(eventData).forEach((key: string): void => {\r\n            if (key === 'dataBag') {\r\n                this.addDetailsToEventProperties(eventData.dataBag, eventProperties);\r\n            } else {\r\n                eventProperties[key.charAt(0).toUpperCase() + key.slice(1)] = eventData[key];\r\n            }\r\n        });\r\n\r\n        this.logEvent(AriaEventTypes.Scenario, eventProperties);\r\n\r\n        if (completeScenario) {\r\n            delete this.activeScenarios[name];\r\n        }\r\n    }\r\n\r\n    public markScenarioComplete(name: string): void {\r\n        if (this.activeScenarios[name] != null) {\r\n            delete this.activeScenarios[name];\r\n        }\r\n    }\r\n\r\n    public hook(_stream: null | ((str: string, args?: any[]) => any), prefix: string, ...args: any[]): void {\r\n        let message = '';\r\n\r\n        // more data args are passed, stringify and record\r\n        for (const arg of args) {\r\n            try {\r\n                const formattedArg = JSON.stringify(arg, null, 2);\r\n                message += '\\r\\n' + formattedArg;\r\n            } catch (err) {\r\n                console.warn(`Error stringifying console logs, because: ${err}`);\r\n            }\r\n        }\r\n\r\n        switch (prefix) {\r\n            case LoggerLevels.info:\r\n            case LoggerLevels.debug:\r\n            case LoggerLevels.log:\r\n                if (this.isDevelopment) {\r\n                    this.logTraceInternal(prefix, 'console', message);\r\n                }\r\n                break;\r\n            case LoggerLevels.warn:\r\n            case LoggerLevels.error:\r\n                this.logTraceInternal(prefix, 'console', message);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public logTraceDebug(logCategory: TLogCategory | CommonLogCategory, message: string): void {\r\n        // If Debug logs are disabled for this user, don't do anything\r\n        if (!this.isLogTraceDebugEnabled()) {\r\n            return;\r\n        }\r\n\r\n        this.logTraceInternal(LoggerLevels.debug, logCategory, message);\r\n    }\r\n\r\n    public logTraceInfo(logCategory: TLogCategory | CommonLogCategory, message: string): void {\r\n        // If Info logs are disabled for this user, don't do anything\r\n        if (!this.isLogTraceInfoEnabled()) {\r\n            return;\r\n        }\r\n\r\n        this.logTraceInternal(LoggerLevels.info, logCategory, message);\r\n    }\r\n\r\n    public logTraceWarning(logCategory: TLogCategory | CommonLogCategory, message: string): void {\r\n        // If Warning logs are disabled for this user, don't do anything\r\n        if (!this.isLogTraceWarningEnabled()) {\r\n            return;\r\n        }\r\n\r\n        this.logTraceInternal(LoggerLevels.warn, logCategory, message);\r\n    }\r\n\r\n    public logTraceError(logCategory: TLogCategory | CommonLogCategory, message: string): void {\r\n        // If Error logs are disabled for this user, don't do anything\r\n        if (!this.isLogTraceErrorEnabled()) {\r\n            return;\r\n        }\r\n\r\n        this.logTraceInternal(LoggerLevels.error, logCategory, message);\r\n    }\r\n\r\n    public logTraceException(\r\n        logCategory: TLogCategory | CommonLogCategory,\r\n        options: ITelemetryDetails,\r\n        dataBag?: any\r\n    ): void {\r\n        if (this.isDevelopment) {\r\n            console.log(logCategory, JSON.stringify(options));\r\n        }\r\n\r\n        // If Exception logs are disabled for this user in production, don't do anything\r\n        if (!this.isLogTraceExceptionEnabled()) {\r\n            return;\r\n        }\r\n\r\n        this.logTraceInternal(LoggerLevels.error, logCategory, options.message, options, dataBag);\r\n    }\r\n\r\n    public logTraceHttpException(httpAPI: string, message: string, httpStatusCode: number): void {\r\n        const messageWithStatusCode = `{${httpAPI}} API call failed with message {${message}}, statusCode {${httpStatusCode}}`;\r\n        if (this.isDevelopment) {\r\n            console.log(messageWithStatusCode);\r\n        }\r\n\r\n        if (!this.isLogTraceHTTPExceptionEnabled()) {\r\n            return;\r\n        }\r\n\r\n        this.logTraceInternal(LoggerLevels.error, CommonLogCategory.HTTPException, messageWithStatusCode);\r\n    }\r\n\r\n    public flushLogs(callback?: (() => void) | undefined): void {\r\n        const telemetryClients = getClients();\r\n        telemetryClients.forEach(telemetryClient => {\r\n            if (telemetryClient.isInitialized()) {\r\n                telemetryClient.flush(callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    public flushAndTeardown(): void {\r\n        flushTelemetry();\r\n    }\r\n\r\n    // Check if debug-level logs are allowed to pass through\r\n    private isLogTraceDebugEnabled(): boolean {\r\n        return this.logTraceTypes.includes('Debug');\r\n    }\r\n\r\n    // Check if info-level logs are allowed to pass through\r\n    private isLogTraceInfoEnabled(): boolean {\r\n        return this.logTraceTypes.includes('Info');\r\n    }\r\n\r\n    // Check if warning-level logs are allowed to pass through\r\n    private isLogTraceWarningEnabled(): boolean {\r\n        return this.logTraceTypes.includes('Warning');\r\n    }\r\n\r\n    // Check if error-level logs are allowed to pass through\r\n    private isLogTraceErrorEnabled(): boolean {\r\n        return this.logTraceTypes.includes('Error');\r\n    }\r\n\r\n    // Check if exception are allowed to pass through\r\n    private isLogTraceExceptionEnabled(): boolean {\r\n        return this.logTraceTypes.includes('Exception');\r\n    }\r\n\r\n    // Check if HTTP exception are allowed to pass through\r\n    private isLogTraceHTTPExceptionEnabled(): boolean {\r\n        return this.logTraceTypes.includes('HTTPException');\r\n    }\r\n\r\n    private logTraceInternal(\r\n        level: LoggerLevels,\r\n        logCategory: TLogCategory | string,\r\n        message?: string,\r\n        options?: ITelemetryDetails,\r\n        dataBag?: any\r\n    ): void {\r\n        const eventProperties: { [key: string]: string } = {\r\n            LogLevel: level,\r\n            LogCategory: logCategory,\r\n        };\r\n\r\n        if (message) {\r\n            eventProperties.Message = message;\r\n        }\r\n\r\n        this.addDetailsToEventProperties(dataBag, eventProperties);\r\n\r\n        if (options) {\r\n            if (options.error) {\r\n                if (options.error.stack) {\r\n                    eventProperties.CallStack = options.error.stack;\r\n                }\r\n\r\n                if (options.error.name) {\r\n                    eventProperties.ExceptionType = options.error.name;\r\n                }\r\n\r\n                if (options.error.message) {\r\n                    eventProperties.ExceptionMessage = options.error.message;\r\n                }\r\n\r\n                const code = (options.error as { code?: unknown }).code;\r\n                if (typeof code === 'string') {\r\n                    eventProperties.ExceptionCode = code;\r\n                }\r\n            }\r\n\r\n            if (options.details) {\r\n                eventProperties.Details = options.details;\r\n            }\r\n\r\n            if (options.method) {\r\n                eventProperties.Method = options.method;\r\n            }\r\n        }\r\n\r\n        this.logEvent(AriaEventTypes.Trace, eventProperties);\r\n    }\r\n\r\n    private assert(test?: boolean, ...args: any[]): void {\r\n        this.originalAssert(test, args);\r\n        if (test === false) {\r\n            this.hook(null, 'err', args);\r\n        }\r\n    }\r\n\r\n    private addDetailsToEventProperties(\r\n        details: any,\r\n        eventProperties: {\r\n            [key: string]: string | number | boolean | null;\r\n        }\r\n    ): void {\r\n        if (details) {\r\n            const typeOfDetails = typeof details;\r\n            if (typeOfDetails === 'string' || typeOfDetails === 'boolean' || typeOfDetails === 'number') {\r\n                eventProperties['DataBag.info'] = details;\r\n            } else {\r\n                Object.keys(details).forEach((key: string): void => {\r\n                    const typeOfDetail = typeof details[key];\r\n                    const eventKey = `DataBag.${key}`;\r\n                    if (typeOfDetail === 'string' || typeOfDetail === 'boolean' || typeOfDetail === 'number') {\r\n                        eventProperties[eventKey] = details[key];\r\n                    } else {\r\n                        eventProperties[eventKey] = JSON.stringify(details[key]);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private logEvent(\r\n        eventName: string,\r\n        properties: {\r\n            [key: string]: string | number | boolean;\r\n        }\r\n    ): void {\r\n        properties['AppInfo.ElapsedTime'] = Math.ceil(performance.now());\r\n        this.initPromise.then((): void => {\r\n            logEvent(eventName, properties);\r\n        });\r\n    }\r\n\r\n    private logUIEvent<T>(event: UserBIEvent<T & Partial<TelemetryContext>>): void {\r\n        (event.properties as any)['AppInfo.ElapsedTime'] = Math.ceil(performance.now());\r\n        this.initPromise.then((): void => {\r\n            logUIEvent(event);\r\n        });\r\n    }\r\n\r\n    private getClientConfig(): Configuration {\r\n        const config: Configuration = {\r\n            instrumentationKey: this.instrumentationKey,\r\n            channelConfiguration: {\r\n                // Post channel configuration\r\n                eventsLimitInMem: 50,\r\n            },\r\n            webAnalyticsConfiguration: {\r\n                // Web Analytics Plugin configuration\r\n                autoCapture: {\r\n                    scroll: false,\r\n                    pageView: false,\r\n                    onLoad: false,\r\n                    onUnload: false,\r\n                    click: false,\r\n                    jsError: false,\r\n                },\r\n            },\r\n        };\r\n        return config;\r\n    }\r\n\r\n    private initializeAria(): void {\r\n        this.ariaTelemetryClient = new AriaTelemetryClient(this.getClientConfig(), this.isDevelopment);\r\n        initializeTelemetryClient(this.ariaTelemetryClient, this.isDevelopment);\r\n    }\r\n\r\n    private logLoadPerformance(): void {\r\n        setTimeout(() => {\r\n            let perfDetails: { [key: string]: number } = {};\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/PerformancePaintTiming\r\n            performance.getEntriesByType('paint').forEach(p => (perfDetails[p.name] = p.startTime));\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming\r\n            const resPerfs = performance.getEntriesByType('resource') as PerformanceResourceTiming[];\r\n            const resourceDetails = groupBy(resPerfs, res => res.initiatorType);\r\n\r\n            Object.entries(resourceDetails).map(([type, value]) => {\r\n                const duration = Math.max(...value.map(j => j.responseEnd)) - Math.min(...value.map(j => j.startTime));\r\n                this.logPerformance(`resource-${type}`, window.location.href, duration, undefined, {\r\n                    details: value.map(p => ({\r\n                        name: this.formatUrl(p.name),\r\n                        duration: Math.ceil(p.duration),\r\n                        size: p.transferSize,\r\n                    })),\r\n                });\r\n            });\r\n\r\n            const js = resPerfs.filter(ele => ele.initiatorType === 'script');\r\n            perfDetails['download-script'] =\r\n                Math.max(...js.map(j => j.responseEnd)) - Math.min(...js.map(j => j.startTime));\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming\r\n            // https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings\r\n            const timeInfo = performance.getEntriesByType('navigation')?.[0] as PerformanceNavigationTiming;\r\n            if (!timeInfo) {\r\n                return;\r\n            }\r\n            perfDetails['page-ttfb'] = timeInfo.responseStart - timeInfo.startTime;\r\n            const loadDuration = timeInfo.loadEventStart - timeInfo.startTime;\r\n            perfDetails['page-loading'] = loadDuration;\r\n\r\n            perfDetails = {\r\n                ...perfDetails,\r\n                Cache: timeInfo.domainLookupStart - timeInfo.fetchStart,\r\n                Dns: timeInfo.domainLookupEnd - timeInfo.domainLookupStart,\r\n                Connect: timeInfo.connectEnd - timeInfo.connectStart,\r\n                Request: timeInfo.responseStart - timeInfo.requestStart,\r\n                Download: timeInfo.responseEnd - timeInfo.responseStart,\r\n                Dom: timeInfo.domComplete - timeInfo.responseEnd,\r\n                Contentload: timeInfo.loadEventEnd - timeInfo.loadEventStart,\r\n                DOMContentLoaded: timeInfo.domContentLoadedEventEnd - timeInfo.domContentLoadedEventStart,\r\n                Redirect: timeInfo.redirectEnd - timeInfo.redirectStart,\r\n            };\r\n\r\n            this.logPerformance('performance-timing', window.location.href, loadDuration, perfDetails);\r\n        }, 0);\r\n    }\r\n\r\n    private formatUrl(url: string): string {\r\n        // remove same url prefix\r\n        // eg. https://reports.teams.microsoft.com/dist/js/runtime~main.1234.js to runtime~main.1234.js\r\n        if (url.startsWith(location.origin)) {\r\n            url = url.split('/').pop() ?? '';\r\n        }\r\n        // remove email\r\n        return decodeURIComponent(url).replace(emailPattern, emailPlaceholder);\r\n    }\r\n}\r\n","import { makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const usePeoplePileStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    coins: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: '4px',\r\n    },\r\n    compactCoins: {\r\n        gap: 0,\r\n        '>:not(:first-child)': {\r\n            marginInlineStart: '-2px',\r\n        },\r\n    },\r\n    overflow: {\r\n        zIndex: 0,\r\n        margin: '0 4px',\r\n        '::before': {\r\n            content: '\"+\"',\r\n        },\r\n    },\r\n    compactOverflow: {\r\n        margin: '0 2px',\r\n    },\r\n    onlyName: {\r\n        margin: '0 4px',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n});\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Modal, mergeStyleSets, IModalStyles } from '@fluentui/react';\r\nimport { useCopyRequestModalStyles } from './ContentCopyRequestModal.styles';\r\nimport { ContentCopyRequestModalContent, ContentCopyRequestProps } from './ContentCopyRequestModalContent';\r\n\r\nexport type ContentCopyRequestModalProps = ContentCopyRequestProps & {\r\n    isOpen: boolean;\r\n    modalStyles?: IModalStyles;\r\n};\r\n\r\nexport const ContentCopyRequestModal: React.FC<ContentCopyRequestModalProps> = ({\r\n    isOpen,\r\n    modalStyles,\r\n    ...props\r\n}: ContentCopyRequestModalProps): JSX.Element => {\r\n    const styles = useCopyRequestModalStyles();\r\n    return (\r\n        <Modal styles={mergeStyleSets(styles, modalStyles)} isOpen={isOpen} isBlocking onDismiss={props.onDismiss}>\r\n            <ContentCopyRequestModalContent {...props} />\r\n        </Modal>\r\n    );\r\n};\r\n","export * from './src/index';\r\n\r\nimport { makeStyles as FluentUIV8MakeStyles, IStyle, Theme, UseStylesOptions } from '@fluentui/react';\r\n/**\r\n * Registers a css object, optionally as a function of the theme.\r\n *\r\n * @param styleOrFunction - Either a css javascript object, or a function which takes in `ITheme`\r\n * and returns a css javascript object.\r\n *\r\n */\r\ntype MakeStyleFunction = <\r\n    TStyleSet extends {\r\n        [key in keyof TStyleSet]: IStyle;\r\n    } = {\r\n        [key: string]: IStyle;\r\n    }\r\n>(\r\n    /**\r\n     * a function which takes in `ITheme`\r\n     */\r\n    styleOrFunction: TStyleSet | ((theme: Theme) => TStyleSet)\r\n) => (options?: UseStylesOptions) => {\r\n    [key in keyof TStyleSet]: string;\r\n};\r\n\r\nexport const makeStyles: MakeStyleFunction = FluentUIV8MakeStyles;\r\n","export * from './PeopleView';\r\nexport * from './PeopleView.types';\r\n","import { applyInterceptor, composeInterceptors } from '@addressbook/utilities-interceptors';\r\nimport { ServiceOperationError } from './error';\r\nimport { Fetch, ServiceInterceptor } from './types';\r\n\r\nexport interface ServiceOperationOptions {\r\n    baseUrl?: string;\r\n    fetch?: Fetch;\r\n    interceptors?: ServiceInterceptor[];\r\n}\r\n\r\nexport class ServiceOperation {\r\n    private baseUrl;\r\n    private fetch;\r\n\r\n    constructor({ baseUrl, fetch = window.fetch, interceptors = [] }: ServiceOperationOptions = {}) {\r\n        this.baseUrl = baseUrl;\r\n        this.fetch = interceptors.length ? applyInterceptor(composeInterceptors(interceptors), fetch) : fetch;\r\n    }\r\n\r\n    async request(url: string | URL, init?: RequestInit): Promise<Response> {\r\n        const request = new Request(new URL(url, this.baseUrl), init);\r\n        const response = await this.fetch(request);\r\n        if (!response.ok) throw new ServiceOperationError({ request, response });\r\n        return response;\r\n    }\r\n\r\n    async requestJson<T = unknown>(url: string | URL, init?: RequestInit): Promise<T> {\r\n        const response = await this.request(url, init);\r\n        return response.json();\r\n    }\r\n\r\n    async requestBlob(url: string | URL, init?: RequestInit): Promise<Blob> {\r\n        const response = await this.request(url, init);\r\n        return response.blob();\r\n    }\r\n}\r\n","import { delay } from '@addressbook/utilities-core';\r\nimport { ServiceInterceptor } from '../types';\r\nimport { isServerErrorOrTooManyRequests, TestResponse } from './utilities';\r\n\r\nexport type Backoff = (retries: number, response?: Response) => number;\r\n\r\nexport interface RetryInterceptorOptions {\r\n    test?: TestResponse;\r\n    maxRetries?: number;\r\n    backoff?: Backoff;\r\n}\r\n\r\nconst defaultMaxRetries = 3;\r\n\r\n/**\r\n * Create a service interceptor that retries requests.\r\n *\r\n * @property test A function to test if the response should be retried.\r\n * @property maxRetries The maximum number of retries.\r\n * @property backoff A function to calculate the delay between retries, in milliseconds.\r\n * @returns An interceptor.\r\n */\r\nexport function createRetryInterceptor({\r\n    test = isServerErrorOrTooManyRequests,\r\n    maxRetries = defaultMaxRetries,\r\n    backoff,\r\n}: RetryInterceptorOptions = {}): ServiceInterceptor {\r\n    return async (request, proceed) => {\r\n        let retries = 0;\r\n        while (true) {\r\n            try {\r\n                const response = await proceed(request.clone());\r\n                if (test(response) && retries++ < maxRetries) {\r\n                    if (backoff) await delay(backoff(retries, response));\r\n                    continue;\r\n                }\r\n                return response;\r\n            } catch (error) {\r\n                if (retries++ < maxRetries) {\r\n                    if (backoff) await delay(backoff(retries));\r\n                    continue;\r\n                }\r\n                throw error;\r\n            }\r\n        }\r\n    };\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { FontWeights } from '@fluentui/react';\r\nimport { FontSizes, makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const CollapsedClassName = 'is-collapsed';\r\nexport const useCollapsingAreaStyles = makeStyles(theme => ({\r\n    title: {\r\n        height: '2rem',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        cursor: 'pointer',\r\n        boxSizing: 'border-box',\r\n    },\r\n    button: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        textAlign: 'start',\r\n        padding: 0,\r\n        border: 'none',\r\n        background: 'transparent',\r\n    },\r\n    icon: {\r\n        height: '100%',\r\n        paddingRight: '4px',\r\n        color: theme.palette.black,\r\n    },\r\n    text: {\r\n        color: theme.palette.black,\r\n        fontSize: FontSizes.size12,\r\n        fontWeight: FontWeights.bold,\r\n        flex: 1,\r\n    },\r\n    collapsibleRegion: {\r\n        [`.${CollapsedClassName} &`]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport React from 'react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { ModalContent, ModalContentProps } from '../CommonModal/ModalContent';\r\nimport { useTaskModuleV2Styles } from './TaskModuleV2.styles';\r\n\r\nexport type TaskModuleV2Props = Omit<ModalContentProps, 'onDismiss'>;\r\nexport const TaskModuleV2: React.FC<TaskModuleV2Props> = props => {\r\n    const styles = useTaskModuleV2Styles();\r\n    const contentMergedStyles = mergeStyles(styles.content, props.contentClassName);\r\n    const initialProps: TaskModuleV2Props = {\r\n        contentClassName: contentMergedStyles,\r\n        headerClassName: styles.header,\r\n    };\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <ModalContent {...props} {...initialProps} />\r\n        </div>\r\n    );\r\n};\r\n","import { makeStyles as FluentUIV8MakeStyles, IStyle, Theme } from '@fluentui/react';\r\n\r\nexport const makeStyles: <\r\n    TStyleSet extends { [key in keyof TStyleSet]: IStyle } /* #__PURE__ */ = { [key: string]: IStyle }\r\n>(\r\n    styleFunction: ((theme: Theme) => TStyleSet) | TStyleSet\r\n) => () => { [key in keyof TStyleSet]: string } = FluentUIV8MakeStyles;\r\n","import { app } from '@microsoft/teams-js';\r\nimport { TeamsError } from './error';\r\n\r\nlet teamsInitializationPromise: Promise<void>;\r\n\r\n/**\r\n * @see https://github.com/MicrosoftDocs/msteams-docs/issues/11221\r\n * @see https://github.com/OfficeDev/microsoft-teams-library-js/blob/ecbd5626e25381d3e0f704164836258d91d75c6b/packages/teams-js/src/artifactsForCDN/validDomains.json#L4\r\n */\r\nconst additionalMessageOrigins = 'https://teams.microsoftonline.cn';\r\nfunction ensureTeamsInitializationPromise(): Promise<void> {\r\n    return (teamsInitializationPromise ??= app.initialize([additionalMessageOrigins]));\r\n}\r\n\r\ntype OrPromise<T> = T | Promise<T>;\r\n\r\n/**\r\n * Ensure that the Teams SDK is initialized before calling the callback.\r\n *\r\n * @param callback The callback to call after initialization.\r\n * @returns A promise that resolves with the result of the callback.\r\n */\r\nexport async function ensureByTeamsInitialization<Result>(callback: () => OrPromise<Result>): Promise<Result> {\r\n    try {\r\n        await ensureTeamsInitializationPromise();\r\n        return await callback();\r\n    } catch (error) {\r\n        throw TeamsError.from(error);\r\n    }\r\n}\r\n\r\n/**\r\n * A higher-order function that guards a callback with Teams SDK initialization.\r\n *\r\n * @param callback The callback to guard.\r\n * @returns A guarded callback.\r\n */\r\nexport function guardByTeamsInitialization<Result, Params extends unknown[]>(\r\n    callback: (...args: Params) => OrPromise<Result>\r\n): (...args: Params) => Promise<Result> {\r\n    return (...args) => ensureByTeamsInitialization(() => callback(...args));\r\n}\r\n\r\n/**\r\n * A function that does nothing.\r\n */\r\nexport function noop(): void {\r\n    // Noop\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport { Stack } from '@fluentui/react';\r\nimport React from 'react';\r\nimport appIcon from '../assets/appIcon.svg';\r\nimport { useAppHeaderStyles } from './AppHeader.styles';\r\nexport interface AppHeaderProps {\r\n    title?: string;\r\n    items?: JSX.Element;\r\n    farItems?: JSX.Element;\r\n    moduleName?: string;\r\n}\r\n\r\nexport const AppHeader: React.FC<AppHeaderProps> = ({ items, farItems, title }) => {\r\n    const headerStyles = useAppHeaderStyles();\r\n    return (\r\n        <Stack as='header' horizontal disableShrink horizontalAlign='space-between' className={headerStyles.root}>\r\n            <img src={appIcon} style={{ width: ' 36px' }} />\r\n            <h2 className={headerStyles.text}>{title}</h2>\r\n            <Stack verticalAlign='center' grow>\r\n                {items}\r\n            </Stack>\r\n            <Stack horizontalAlign='center' verticalAlign='center'>\r\n                {farItems}\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n};\r\n","import { menus } from '@microsoft/teams-js';\r\nimport { useEffect } from 'react';\r\nimport { noop } from '../utils';\r\nimport { setNavBarMenu } from '../wrappers';\r\n\r\nexport interface TeamsNavBarMenuItem {\r\n    id: string;\r\n    title?: string;\r\n    icon?: string;\r\n    disabled?: boolean;\r\n    selected?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport function useTeamsNavBarMenu(items: TeamsNavBarMenuItem[]): void {\r\n    useEffect(() => update(items), [items]);\r\n    useEffect(() => () => update([]), []);\r\n}\r\n\r\nfunction update(items: TeamsNavBarMenuItem[]): void {\r\n    setNavBarMenu(items.map(mapTeamsNavBarMenuItem), id => dispatchTeamsNavBarMenuItemOnClick(id, items)).catch(noop);\r\n}\r\n\r\nfunction mapTeamsNavBarMenuItem(item: TeamsNavBarMenuItem): menus.MenuItem {\r\n    return {\r\n        id: item.id,\r\n        title: item.title ?? '',\r\n        icon: item.icon ?? '',\r\n        enabled: !item.disabled,\r\n        selected: item.selected ?? false,\r\n    };\r\n}\r\n\r\nfunction dispatchTeamsNavBarMenuItemOnClick(id: string, menuItems: TeamsNavBarMenuItem[]): boolean {\r\n    const item = menuItems.find(item => item.id === id);\r\n\r\n    if (!item || !item.onClick) return false;\r\n\r\n    item.onClick();\r\n    return true;\r\n}\r\n","import { makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const useLoadingIndicatorStyles = makeStyles(() => ({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    itemProgress: {\r\n        position: 'absolute',\r\n        padding: 0,\r\n        top: 1,\r\n        width: '100%',\r\n    },\r\n}));\r\n","import React from 'react';\r\nimport { IconButton, PrimaryButton, Stack, Text } from '@fluentui/react';\r\nimport { CommonIcon } from '../CommonIcon';\r\nimport { useContentStyles } from './ContentCopyRequestModal.styles';\r\n\r\nexport type ContentCopyRequestProps = React.PropsWithChildren<{\r\n    copyRequestModalHeaderTitle: string;\r\n    copyRequestModalCloseButton: string;\r\n    copyRequestModalCopyButton: string;\r\n    linkTargetTitle: string;\r\n    linkPermissionSettingText: string;\r\n    onDismiss?: () => void;\r\n    LinkPermissionSettingIcon: JSX.Element;\r\n    linkGenerateAndCopy?: () => void;\r\n}>;\r\nexport const ContentCopyRequestModalContent: React.FC<ContentCopyRequestProps> = ({\r\n    copyRequestModalHeaderTitle,\r\n    copyRequestModalCloseButton,\r\n    copyRequestModalCopyButton,\r\n    linkTargetTitle,\r\n    linkPermissionSettingText,\r\n    onDismiss,\r\n    LinkPermissionSettingIcon,\r\n    linkGenerateAndCopy,\r\n}) => {\r\n    const styles = useContentStyles();\r\n\r\n    return (\r\n        <>\r\n            <Stack horizontal horizontalAlign='space-between' role='alert' className={styles.header}>\r\n                <CommonIcon\r\n                    titleAs='h1'\r\n                    className={styles.headerProperty}\r\n                    title={copyRequestModalHeaderTitle}\r\n                    description={linkTargetTitle}\r\n                />\r\n                {onDismiss && (\r\n                    <IconButton\r\n                        iconProps={{ iconName: 'Cancel' }}\r\n                        ariaLabel={copyRequestModalCloseButton}\r\n                        title={copyRequestModalCloseButton}\r\n                        onClick={onDismiss}\r\n                    />\r\n                )}\r\n            </Stack>\r\n            <div className={styles.footer}>\r\n                <Stack horizontal className={styles.linkPermissionSetting}>\r\n                    <Stack horizontalAlign='center' className={styles.linkPermissionSettingIcon}>\r\n                        {LinkPermissionSettingIcon}\r\n                    </Stack>\r\n                    <Text block className={styles.linkPermissionSettingTextStyles}>\r\n                        {linkPermissionSettingText}\r\n                    </Text>\r\n                </Stack>\r\n                <PrimaryButton primary text={copyRequestModalCopyButton} onClick={linkGenerateAndCopy} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { ServiceOperation, ServiceOperationOptions, ServiceResourceLocator } from '@addressbook/services-core';\r\nimport { GraphRootResource } from './resources';\r\n\r\nexport type GraphServiceClientOptions = ServiceOperationOptions;\r\n\r\n/**\r\n * A service client for the Microsoft Graph API.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/overview\r\n */\r\nexport class GraphServiceClient extends GraphRootResource {\r\n    constructor(operationOptions: GraphServiceClientOptions = {}) {\r\n        super(new ServiceOperation(operationOptions), ServiceResourceLocator.root);\r\n    }\r\n}\r\n","import { ServiceOperation, ServiceResourceLocator } from '@addressbook/services-core';\r\nimport { DirectoryObject, Presence, User } from '@microsoft/microsoft-graph-types';\r\nimport { ProfilePhotoSize } from '../types';\r\nimport { GraphDriveResource } from './drive';\r\nimport { GraphProfilePhotoResource } from './profile-photo';\r\n\r\n/**\r\n * The user resource.\r\n *\r\n * @see https://learn.microsoft.com/graph/api/resources/user\r\n */\r\nexport class GraphUserResource {\r\n    constructor(private operation: ServiceOperation, private locator: ServiceResourceLocator) {}\r\n\r\n    /**\r\n     * Navigates to the drive resource.\r\n     *\r\n     * @returns The drive resource.\r\n     * @see https://learn.microsoft.com/graph/api/drive-get\r\n     */\r\n    get drive(): GraphDriveResource {\r\n        return new GraphDriveResource(this.operation, this.locator.extend('drive'));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the profile photo resource.\r\n     *\r\n     * @returns The profile photo resource.\r\n     * @see https://learn.microsoft.com/graph/api/profilephoto-get\r\n     */\r\n    get photo(): GraphProfilePhotoResource {\r\n        return new GraphProfilePhotoResource(this.operation, this.locator.extend('photo'));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the profile photo resource by size.\r\n     *\r\n     * @param size The profile photo size.\r\n     * @returns The profile photo resource.\r\n     * @see https://learn.microsoft.com/graph/api/profilephoto-get\r\n     */\r\n    photos(size: ProfilePhotoSize): GraphProfilePhotoResource {\r\n        return new GraphProfilePhotoResource(this.operation, this.locator.extend('photos', `${size}x${size}`));\r\n    }\r\n\r\n    /**\r\n     * Get Presence of the user.\r\n     *\r\n     * @returns The presence of the user.\r\n     * @see https://learn.microsoft.com/en-us/graph/api/presence-get\r\n     */\r\n    async getPresence(signal?: AbortSignal): Promise<string> {\r\n        const url = `/v1.0/${this.locator.path}/presence`;\r\n        const response = await this.operation.requestJson<Presence>(url, { signal });\r\n\r\n        return response.availability ?? 'PresenceUnknown'; // Possible values are Available, AvailableIdle, Away, BeRightBack, Busy, BusyIdle, DoNotDisturb, Offline, PresenceUnknown\r\n    }\r\n\r\n    /**\r\n     * Get Presence of the user.\r\n     *\r\n     * @returns The presence of the user.\r\n     * @see https://learn.microsoft.com/en-us/graph/api/orgcontact-get-manager\r\n     */\r\n    async getManager(signal?: AbortSignal): Promise<User> {\r\n        const url = `/v1.0/${this.locator.path}/manager`;\r\n        const response = await this.operation.requestJson<DirectoryObject>(url, { signal });\r\n        console.log('url:', url);\r\n        console.log('response:', response);\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * Gets my site URL of the user.\r\n     *\r\n     * @param signal The abort signal.\r\n     * @returns The my site URL.\r\n     * @see https://learn.microsoft.com/graph/api/user-get\r\n     */\r\n    async getMySite(signal?: AbortSignal): Promise<string> {\r\n        const url = `/v1.0/${this.locator.path}?$select=mySite`;\r\n        const response = await this.operation.requestJson<User>(url, { signal });\r\n        return response.mySite ?? '';\r\n    }\r\n}\r\n","/**\r\n * The size of an image.\r\n *\r\n * @property width The width of the image.\r\n * @property height The height of the image.\r\n */\r\nexport interface ImageSize {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\n/**\r\n * Measures the size of an image.\r\n *\r\n * @param blob The image to measure.\r\n * @returns The size of the image.\r\n */\r\nexport async function measureImage(blob: Blob): Promise<ImageSize> {\r\n    const objectUrl = URL.createObjectURL(blob);\r\n\r\n    try {\r\n        const image = new Image();\r\n        image.src = objectUrl;\r\n        await image.decode();\r\n\r\n        return { width: image.naturalWidth, height: image.naturalHeight };\r\n    } finally {\r\n        URL.revokeObjectURL(objectUrl);\r\n    }\r\n}\r\n","import { makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const useMobileSheetStyles = makeStyles(theme => ({\r\n    content: {\r\n        overflow: 'auto',\r\n        maxHeight: 'calc(100vh - 54px)',\r\n        minHeight: '90px', // for A11y - voice control overlay show number in iOS Safari.\r\n    },\r\n    header: {\r\n        height: '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    handler: {\r\n        width: '36px',\r\n        height: '4px',\r\n        background: theme.palette.neutralTertiaryAlt,\r\n        borderRadius: '2px',\r\n    },\r\n}));\r\n\r\nexport const useMobileSheetContainerStyles = makeStyles(theme => ({\r\n    background: theme.palette.white,\r\n    paddingBottom: '8px',\r\n}));\r\n\r\nexport const useMobileSheetBackdropStyles = makeStyles({ border: 'none' });\r\n","/**\r\n * Gets the mime type of a data URL.\r\n *\r\n * @param dataUrl The data URL to get the mime type of.\r\n * @returns The mime type of the data URL, or `undefined` if the data URL is invalid.\r\n * @see https://developer.mozilla.org/docs/web/http/basics_of_http/data_urls\r\n * @example getMimeByDataUrl('data:,') // ''\r\n * @example getMimeByDataUrl('data:text/plain,42%207') // 'text/plain'\r\n * @example getMimeByDataUrl('data:;base64,') // ''\r\n * @example getMimeByDataUrl('data:application/octet-stream;base64,NDIgNw==') // 'application/octet-stream'\r\n * @example getMimeByDataUrl('') // undefined\r\n * @example getMimeByDataUrl('invalid') // undefined\r\n */\r\nexport function getMimeByDataUrl(dataUrl: string): string | undefined {\r\n    return dataUrl.match(/^data:(.*?)(?:;base64)?,\\S*$/)?.[1];\r\n}\r\n\r\n/**\r\n * Gets the extension by a mime type.\r\n *\r\n * @param mime The mime type.\r\n * @returns The extension.\r\n * @example getExtensionByMime('image/png') // 'png'\r\n * @example getExtensionByMime('application/octet-stream') // undefined\r\n */\r\nexport function getExtensionByMime(mime: string): string | undefined {\r\n    return mimeExtensionMapping[mime];\r\n}\r\n\r\n/**\r\n * The mapping from mime types to extensions.\r\n *\r\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\r\n * @see https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\r\n */\r\nconst mimeExtensionMapping: Record<string, string> = {\r\n    'image/apng': 'apng',\r\n    'image/avif': 'avif',\r\n    'image/bmp': 'bmp',\r\n    'image/gif': 'gif',\r\n    'image/heic': 'heic',\r\n    'image/heif': 'heif',\r\n    'image/jpeg': 'jpg',\r\n    'image/png': 'png',\r\n    'image/svg+xml': 'svg',\r\n    'image/tiff': 'tiff',\r\n    'image/vnd.microsoft.icon': 'ico',\r\n    'image/webp': 'webp',\r\n};\r\n\r\n/**\r\n * Checks if a mime type is an image mime type.\r\n *\r\n * @param mime The mime type to check.\r\n * @returns `true` if the mime type is an image mime type, otherwise `false`.\r\n * @example isImageMime('image/png') // true\r\n * @example isImageMime('application/octet-stream') // false\r\n */\r\nexport function isImageMime(mime: string): boolean {\r\n    return mime.startsWith('image/');\r\n}\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport type { ICheckboxStyles, IModalStyles } from '@fluentui/react';\r\nimport { makeStyles } from '../styles/makeStyles';\r\nimport { ellipsisStyles } from '../styles/ellipsisStyles';\r\n\r\nconst horizontalPaddingGap = '30px';\r\nconst verticalPaddingGap = '24px';\r\nexport const useModalStyles = /* #__PURE__*/ makeStyles<Partial<IModalStyles>>({\r\n    main: {\r\n        width: '1000px',\r\n        height: '700px',\r\n        maxHeight: '100%',\r\n        maxWidth: '100%',\r\n    },\r\n    scrollableContent: {\r\n        height: '100%',\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingTop: '30px',\r\n        paddingBottom: '20px',\r\n        gap: '10px',\r\n        boxSizing: 'border-box',\r\n    },\r\n});\r\n\r\nexport const useContentStyles = /* #__PURE__*/ makeStyles({\r\n    placeHolder: {\r\n        paddingBottom: '0.5rem',\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        height: '2.25rem',\r\n        alignItems: 'center',\r\n        flexShrink: 0,\r\n        padding: `0 ${horizontalPaddingGap}`,\r\n        '>:first-child': {\r\n            flex: '1 1 auto',\r\n            minWidth: 0,\r\n        },\r\n    },\r\n    content: {\r\n        flex: '1 1 auto',\r\n        overflowY: 'auto', // fallback for FireFox\r\n        'overflow-y': 'overlay', // make scrollbar float over content\r\n        padding: `${verticalPaddingGap} ${horizontalPaddingGap}`, // using the same inner padding to make scrollbar right\r\n    },\r\n    footer: {\r\n        padding: `0 ${horizontalPaddingGap}`,\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        gap: '0.5rem',\r\n        '>.ms-Button--action': {\r\n            marginInlineEnd: 'auto',\r\n        },\r\n    },\r\n});\r\n\r\nexport const useShareSubmissionCardConsentStyles = makeStyles<Partial<ICheckboxStyles>>(theme => ({\r\n    root: {\r\n        '&.ms-Checkbox': {\r\n            padding: 0,\r\n        },\r\n    },\r\n    checkbox: {\r\n        borderColor: theme.palette.neutralDark,\r\n    },\r\n    text: [\r\n        {\r\n            width: '10rem',\r\n        },\r\n        ellipsisStyles(1),\r\n    ],\r\n}));\r\n","/* istanbul ignore file */\r\n\r\nimport { createTheme, ITheme } from '@fluentui/theme';\r\nimport { CoreColors, DarkColors, ContrastColors, DefaultV2Colors, DarkV2Colors } from './teams-colors';\r\nimport { FontSizes } from './teams-sizes';\r\n\r\nconst iosBaseFont = '-apple-system, BlinkMacSystemFont';\r\nconst andoridBaseFontFont = 'Roboto';\r\nexport const IOS_FONT_FAMILY = `${iosBaseFont}, sans-serif`;\r\nexport const ANDROID_FONT_FAMILY = `${andoridBaseFontFont}, sans-serif`;\r\n\r\nconst defaultFontStyle = {\r\n    fontFamily: `${iosBaseFont}, \"Segoe UI\", system-ui, \"Apple Color Emoji\", \"Segoe UI Emoji\", ${andoridBaseFontFont} sans-serif`,\r\n};\r\n\r\nconst fonts = {\r\n    tiny: { fontSize: FontSizes.size10 },\r\n    xSmall: { fontSize: FontSizes.size10 },\r\n    small: { fontSize: FontSizes.size12 },\r\n    smallPlus: { fontSize: FontSizes.size12 },\r\n    medium: { fontSize: FontSizes.size14 },\r\n    mediumPlus: { fontSize: FontSizes.size16 },\r\n    large: { fontSize: FontSizes.size18 },\r\n    xLarge: { fontSize: FontSizes.size20 },\r\n    xLargePlus: { fontSize: FontSizes.size24 },\r\n    xxLarge: { fontSize: FontSizes.size28 },\r\n    xxLargePlus: { fontSize: FontSizes.size32 },\r\n    superLarge: { fontSize: FontSizes.size42 },\r\n    mega: { fontSize: FontSizes.size68 },\r\n};\r\n\r\n/**\r\n * Workaround for the missing colors in the palette of fluentui v8.\r\n * TODO: Remove this workaround once migrate to fluentui v9.\r\n */\r\ndeclare module '@fluentui/theme' {\r\n    interface IPalette {\r\n        redLight?: string;\r\n    }\r\n}\r\n\r\nexport const TeamsThemeDefault: ITheme = createTheme({\r\n    defaultFontStyle,\r\n    fonts,\r\n    palette: {\r\n        black: CoreColors.appBlack,\r\n        neutralDark: CoreColors.appGray02,\r\n        neutralPrimary: CoreColors.appGray03,\r\n        neutralPrimaryAlt: CoreColors.appGray03,\r\n        neutralSecondary: CoreColors.appGray04,\r\n        neutralTertiary: CoreColors.appGray06,\r\n\r\n        neutralTertiaryAlt: CoreColors.appGray08,\r\n        neutralQuaternary: CoreColors.appGray09,\r\n        neutralQuaternaryAlt: CoreColors.appGray09,\r\n        neutralLight: CoreColors.appGray10,\r\n        neutralLighter: CoreColors.appGray12,\r\n        neutralLighterAlt: CoreColors.appGray14,\r\n        white: CoreColors.appWhite,\r\n\r\n        // themeDark & ThemeDarkAlt has same color values, themeLighter & themeLighterAlt has same color values\r\n        themeDarker: CoreColors.appBrand02,\r\n        themeDark: CoreColors.appBrand04,\r\n        themeDarkAlt: CoreColors.appBrand04,\r\n        themePrimary: CoreColors.appBrand06,\r\n        themeSecondary: CoreColors.appBrand08,\r\n        themeTertiary: CoreColors.appBrand12,\r\n        themeLight: CoreColors.appBrand14,\r\n        themeLighter: CoreColors.appBrand16,\r\n        themeLighterAlt: CoreColors.appBrand16,\r\n\r\n        red: CoreColors.appRed,\r\n        redLight: CoreColors.appRedLight,\r\n        redDark: CoreColors.appRedDark,\r\n        green: CoreColors.appGreen,\r\n        greenLight: CoreColors.appGreenLight,\r\n        greenDark: CoreColors.appGreenDark,\r\n    },\r\n    semanticColors: {\r\n        inputText: CoreColors.appBrand06,\r\n        inputBackground: CoreColors.appBrand16,\r\n    },\r\n});\r\nTeamsThemeDefault.name = 'default';\r\n\r\nexport const TeamsThemeDark: ITheme = createTheme({\r\n    defaultFontStyle,\r\n    fonts,\r\n    palette: {\r\n        black: DarkColors.appBlack,\r\n        neutralDark: DarkColors.appGray02,\r\n        neutralPrimary: DarkColors.appGray03,\r\n        neutralPrimaryAlt: DarkColors.appGray03,\r\n        neutralSecondary: DarkColors.appGray04,\r\n        neutralTertiary: DarkColors.appGray06,\r\n\r\n        neutralTertiaryAlt: DarkColors.appGray08,\r\n        neutralQuaternary: DarkColors.appGray09,\r\n        neutralQuaternaryAlt: DarkColors.appGray09,\r\n        neutralLight: DarkColors.appGray10,\r\n        neutralLighter: DarkColors.appGray12,\r\n        neutralLighterAlt: DarkColors.appGray14,\r\n        white: DarkColors.appWhite,\r\n\r\n        // themeDark & ThemeDarkAlt has same color values, themeLighter & themeLighterAlt has same color values\r\n        themeDarker: DarkColors.appBrand02,\r\n        themeDark: DarkColors.appBrand04,\r\n        themeDarkAlt: DarkColors.appBrand04,\r\n        themePrimary: DarkColors.appBrand06,\r\n        themeSecondary: DarkColors.appBrand08,\r\n        themeTertiary: DarkColors.appBrand12,\r\n        themeLight: DarkColors.appBrand14,\r\n        themeLighter: DarkColors.appBrand16,\r\n        themeLighterAlt: DarkColors.appBrand16,\r\n\r\n        red: DarkColors.appRed,\r\n        redLight: DarkColors.appRedLight,\r\n        redDark: DarkColors.appRedDark,\r\n        green: DarkColors.appGreen,\r\n        greenLight: DarkColors.appGreenLight,\r\n        greenDark: DarkColors.appGreenDark,\r\n    },\r\n    semanticColors: {\r\n        inputText: DarkColors.appBrand06,\r\n        inputBackground: DarkColors.appBrand16,\r\n    },\r\n    isInverted: true,\r\n});\r\nTeamsThemeDark.name = 'dark';\r\nexport const TeamsThemeContrast: ITheme = createTheme({\r\n    defaultFontStyle,\r\n    fonts,\r\n    palette: {\r\n        black: ContrastColors.appBlack,\r\n        neutralDark: ContrastColors.appGray02,\r\n        neutralPrimary: ContrastColors.appGray03,\r\n        neutralPrimaryAlt: ContrastColors.appGray03,\r\n        neutralSecondary: ContrastColors.appGray04,\r\n        neutralTertiary: ContrastColors.appGray06,\r\n\r\n        neutralTertiaryAlt: ContrastColors.appGray08,\r\n        neutralQuaternary: ContrastColors.appGray09,\r\n        neutralQuaternaryAlt: ContrastColors.appGray09,\r\n        neutralLight: ContrastColors.appGray10,\r\n        neutralLighter: ContrastColors.appGray12,\r\n        neutralLighterAlt: ContrastColors.appGray14,\r\n        white: ContrastColors.appWhite,\r\n\r\n        // themeDark & ThemeDarkAlt has same color values, themeLighter & themeLighterAlt has same color values\r\n        themeDarker: ContrastColors.appBrand02,\r\n        themeDark: ContrastColors.appBrand04,\r\n        themeDarkAlt: ContrastColors.appBrand04,\r\n        themePrimary: ContrastColors.appBrand06,\r\n        themeSecondary: ContrastColors.appBrand08,\r\n        themeTertiary: ContrastColors.appBrand12,\r\n        themeLight: ContrastColors.appBrand14,\r\n        themeLighter: ContrastColors.appBrand16,\r\n        themeLighterAlt: ContrastColors.appBrand16,\r\n\r\n        red: ContrastColors.appRed,\r\n        redLight: ContrastColors.appRedLight,\r\n        redDark: ContrastColors.appRedDark,\r\n        green: ContrastColors.appGreen,\r\n        greenLight: ContrastColors.appGreenLight,\r\n        greenDark: ContrastColors.appGreenDark,\r\n    },\r\n    semanticColors: {\r\n        inputText: ContrastColors.appBrand06,\r\n        inputBackground: ContrastColors.appBrand16,\r\n        bodyText: ContrastColors.appBlack,\r\n    },\r\n});\r\nTeamsThemeContrast.name = 'contrast';\r\nexport const TeamsThemeDefaultV2: ITheme = createTheme({\r\n    defaultFontStyle,\r\n    fonts,\r\n    palette: {\r\n        black: DefaultV2Colors.appBlack,\r\n        neutralDark: DefaultV2Colors.appGray02,\r\n        neutralPrimary: DefaultV2Colors.appGray03,\r\n        neutralPrimaryAlt: DefaultV2Colors.appGray03,\r\n        neutralSecondary: DefaultV2Colors.appGray04,\r\n        neutralTertiary: DefaultV2Colors.appGray06,\r\n\r\n        neutralTertiaryAlt: DefaultV2Colors.appGray08,\r\n        neutralQuaternary: DefaultV2Colors.appGray09,\r\n        neutralQuaternaryAlt: DefaultV2Colors.appGray09,\r\n        neutralLight: DefaultV2Colors.appGray10,\r\n        neutralLighter: DefaultV2Colors.appGray12,\r\n        neutralLighterAlt: DefaultV2Colors.appGray14,\r\n        white: DefaultV2Colors.appWhite,\r\n\r\n        // themeDark & ThemeDarkAlt has same color values, themeLighter & themeLighterAlt has same color values\r\n        themeDarker: DefaultV2Colors.appBrand02,\r\n        themeDark: DefaultV2Colors.appBrand04,\r\n        themeDarkAlt: DefaultV2Colors.appBrand04,\r\n        themePrimary: DefaultV2Colors.appBrand06,\r\n        themeSecondary: DefaultV2Colors.appBrand08,\r\n        themeTertiary: DefaultV2Colors.appBrand12,\r\n        themeLight: DefaultV2Colors.appBrand14,\r\n        themeLighter: DefaultV2Colors.appBrand16,\r\n        themeLighterAlt: DefaultV2Colors.appBrand16,\r\n\r\n        red: DefaultV2Colors.appRed,\r\n        redLight: DefaultV2Colors.appRedLight,\r\n        redDark: DefaultV2Colors.appRedDark,\r\n        green: DefaultV2Colors.appGreen,\r\n        greenLight: DefaultV2Colors.appGreenLight,\r\n        greenDark: DefaultV2Colors.appGreenDark,\r\n    },\r\n    semanticColors: {\r\n        inputText: DefaultV2Colors.appBrand06,\r\n        inputBackground: DefaultV2Colors.appBrand16,\r\n    },\r\n});\r\nTeamsThemeDefaultV2.name = 'defaultV2';\r\n\r\nexport const TeamsThemeDarkV2: ITheme = createTheme({\r\n    defaultFontStyle,\r\n    fonts,\r\n    palette: {\r\n        black: DarkV2Colors.appBlack,\r\n        neutralDark: DarkV2Colors.appGray02,\r\n        neutralPrimary: DarkV2Colors.appGray03,\r\n        neutralPrimaryAlt: DarkV2Colors.appGray03,\r\n        neutralSecondary: DarkV2Colors.appGray04,\r\n        neutralTertiary: DarkV2Colors.appGray06,\r\n\r\n        neutralTertiaryAlt: DarkV2Colors.appGray08,\r\n        neutralQuaternary: DarkV2Colors.appGray09,\r\n        neutralQuaternaryAlt: DarkV2Colors.appGray09,\r\n        neutralLight: DarkV2Colors.appGray10,\r\n        neutralLighter: DarkV2Colors.appGray12,\r\n        neutralLighterAlt: DarkV2Colors.appGray14,\r\n        white: DarkV2Colors.appWhite,\r\n\r\n        // themeDark & ThemeDarkAlt has same color values, themeLighter & themeLighterAlt has same color values\r\n        themeDarker: DarkV2Colors.appBrand02,\r\n        themeDark: DarkV2Colors.appBrand04,\r\n        themeDarkAlt: DarkV2Colors.appBrand04,\r\n        themePrimary: DarkV2Colors.appBrand06,\r\n        themeSecondary: DarkV2Colors.appBrand08,\r\n        themeTertiary: DarkV2Colors.appBrand12,\r\n        themeLight: DarkV2Colors.appBrand14,\r\n        themeLighter: DarkV2Colors.appBrand16,\r\n        themeLighterAlt: DarkV2Colors.appBrand16,\r\n\r\n        red: DarkV2Colors.appRed,\r\n        redLight: DarkV2Colors.appRedLight,\r\n        redDark: DarkV2Colors.appRedDark,\r\n        green: DarkV2Colors.appGreen,\r\n        greenLight: DarkV2Colors.appGreenLight,\r\n        greenDark: DarkV2Colors.appGreenDark,\r\n    },\r\n    semanticColors: {\r\n        inputText: DarkV2Colors.appBrand06,\r\n        inputBackground: DarkV2Colors.appBrand16,\r\n    },\r\n    isInverted: true,\r\n});\r\nTeamsThemeDarkV2.name = 'darkV2';\r\n\r\n/**\r\n * Checks whether theme is dark or not.\r\n *\r\n * @param themeName the theme name\r\n * @returns true if the theme is dark, false otherwise.\r\n */\r\nexport function isDarkTheme(themeName?: string): boolean {\r\n    return themeName === 'dark';\r\n}\r\n\r\n/**\r\n * Checks whether theme is contrast or not.\r\n *\r\n * @param themeName the theme name\r\n * @returns true if the theme is contrast, false otherwise.\r\n */\r\nexport function isContrastTheme(themeName?: string): boolean {\r\n    return themeName === 'contrast';\r\n}\r\n\r\n/**\r\n * Checks whether theme is default or not.\r\n *\r\n * @param themeName the theme name\r\n * @returns true if the theme is default, false otherwise.\r\n */\r\nexport function isDefaultTheme(themeName?: string): boolean {\r\n    return themeName === 'default';\r\n}\r\n","import React from 'react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { ReactComponent as SpinnerSvg } from '../assets/spinner.svg';\r\nimport { useSpinnerStyles } from './Spinner.styles';\r\n\r\nexport enum SpinnerSize {\r\n    Small = 24,\r\n    Medium = 32,\r\n    Large = 48,\r\n}\r\n\r\nexport interface SpinnerProps extends React.HTMLAttributes<HTMLDivElement> {\r\n    size?: SpinnerSize | number;\r\n}\r\n\r\nexport const Spinner: React.FC<SpinnerProps> = ({ size = SpinnerSize.Medium, className, ...props }) => {\r\n    const styles = useSpinnerStyles();\r\n\r\n    return (\r\n        <div className={mergeStyles(styles.root, className)} role='progressbar' aria-busy {...props}>\r\n            <div className={mergeStyles(styles.bound, { width: size, height: size })}>\r\n                <SpinnerSvg className={styles.animated} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import {\r\n    ActionButton,\r\n    Checkbox,\r\n    DefaultButton,\r\n    IButtonProps,\r\n    IconButton,\r\n    mergeStyles,\r\n    PrimaryButton,\r\n} from '@fluentui/react';\r\nimport React, { MutableRefObject } from 'react';\r\nimport { CommonIcon, CommonIconProps } from '../CommonIcon';\r\nimport { CommonLoadingIndicator } from '../CommonLoadingIndicator';\r\nimport { useContentStyles, useShareSubmissionCardConsentStyles } from './CommonModal.styles';\r\n\r\nexport type ModalContentProps = React.PropsWithChildren<{\r\n    /**\r\n     * set header icon, title and description\r\n     */\r\n    headerProps?: CommonIconProps;\r\n    /**\r\n     * props for the PrimaryButton\r\n     */\r\n    primaryBtnProps?: IButtonProps;\r\n    /**\r\n     * props for the ActionButton\r\n     */\r\n    secondaryBtnProps?: IButtonProps;\r\n    /**\r\n     * props for the subsidiary ActionButton, which is close to the primary button\r\n     */\r\n    subsidiaryBtnProps?: IButtonProps;\r\n    /**\r\n     * Ref for content element\r\n     */\r\n    contentRef?: MutableRefObject<HTMLDivElement | null>;\r\n    closeButtonAriaLabel?: string;\r\n    onDismiss?: () => void;\r\n    titleId?: string;\r\n    subTitleId?: string;\r\n    contentClassName?: string;\r\n    headerClassName?: string;\r\n    footerClassName?: string;\r\n    isFetching?: boolean;\r\n    titleFarItem?: React.ReactNode;\r\n    footerItem?: React.ReactNode;\r\n    contentHidden?: boolean;\r\n    shareSubmissionCardConsentShow?: boolean;\r\n    shareSubmissionCardConsentOptionChecked?: boolean;\r\n    onShareSubmissionCardConsentOptionChange?: (isChecked: boolean) => void;\r\n    shareSubmissionCardConsentOptionLabel?: string;\r\n    placeHolderItem?: React.ReactNode;\r\n}>;\r\nexport const ModalContent: React.FC<ModalContentProps> = ({\r\n    headerProps,\r\n    secondaryBtnProps,\r\n    subsidiaryBtnProps,\r\n    primaryBtnProps,\r\n    children,\r\n    contentRef,\r\n    closeButtonAriaLabel,\r\n    onDismiss,\r\n    titleId,\r\n    subTitleId,\r\n    contentClassName,\r\n    headerClassName,\r\n    footerClassName,\r\n    isFetching,\r\n    titleFarItem,\r\n    footerItem,\r\n    shareSubmissionCardConsentShow,\r\n    shareSubmissionCardConsentOptionChecked,\r\n    onShareSubmissionCardConsentOptionChange,\r\n    shareSubmissionCardConsentOptionLabel,\r\n    placeHolderItem,\r\n}) => {\r\n    const styles = useContentStyles();\r\n    const shareSubmissionCardConsentStyles = useShareSubmissionCardConsentStyles();\r\n\r\n    return (\r\n        <>\r\n            <div role='alert' aria-busy={!headerProps} className={mergeStyles(styles.header, headerClassName)}>\r\n                <CommonIcon titleAs='h1' titleId={titleId} descriptionId={subTitleId} {...headerProps} />\r\n                {titleFarItem}\r\n                {onDismiss && (\r\n                    <IconButton\r\n                        iconProps={{ iconName: 'Cancel' }}\r\n                        ariaLabel={closeButtonAriaLabel}\r\n                        title={closeButtonAriaLabel}\r\n                        onClick={onDismiss}\r\n                    />\r\n                )}\r\n            </div>\r\n            <CommonLoadingIndicator isFetching={isFetching} />\r\n            <div className={mergeStyles(styles.content, contentClassName)} ref={contentRef} data-is-scrollable>\r\n                {placeHolderItem && <div className={styles.placeHolder}>{placeHolderItem}</div>}\r\n                {children}\r\n            </div>\r\n            <div className={mergeStyles(styles.footer, footerClassName)}>\r\n                {shareSubmissionCardConsentShow && (\r\n                    <Checkbox\r\n                        label={shareSubmissionCardConsentOptionLabel}\r\n                        checked={shareSubmissionCardConsentOptionChecked}\r\n                        onChange={(_, checked) => onShareSubmissionCardConsentOptionChange?.(checked!)}\r\n                        styles={shareSubmissionCardConsentStyles}\r\n                    />\r\n                )}\r\n                {secondaryBtnProps && <ActionButton {...secondaryBtnProps} />}\r\n                {footerItem}\r\n                {subsidiaryBtnProps && <DefaultButton {...subsidiaryBtnProps} />}\r\n                {primaryBtnProps && <PrimaryButton primary {...primaryBtnProps} />}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\nimport { useBoolean } from '@fluentui/react-hooks';\r\nimport React from 'react';\r\nimport Sheet from 'react-modal-sheet';\r\nimport { FocusTrapZone } from '@fluentui/react';\r\nimport {\r\n    useMobileSheetBackdropStyles,\r\n    useMobileSheetContainerStyles,\r\n    useMobileSheetStyles,\r\n} from './MobileSheet.styles';\r\n\r\nexport interface MobileSheetProps {\r\n    onDismiss?: () => void;\r\n    content: React.ReactNode;\r\n    snapPoints?: number[];\r\n    initialSnap?: number;\r\n}\r\nexport const MobileSheet: React.FC<MobileSheetProps> = ({\r\n    onDismiss,\r\n    content,\r\n    snapPoints,\r\n    initialSnap,\r\n}: MobileSheetProps) => {\r\n    const styles = useMobileSheetStyles();\r\n    const containerStyles = useMobileSheetContainerStyles();\r\n    const backdropStyles = useMobileSheetBackdropStyles();\r\n    const [isOpen, { setFalse: onClose }] = useBoolean(true);\r\n\r\n    const keyEventName = 'keydown';\r\n    React.useEffect(() => {\r\n        const handleKeyDown = (event: KeyboardEvent): void => {\r\n            if (event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        };\r\n        document.addEventListener(keyEventName, handleKeyDown, true);\r\n\r\n        return () => {\r\n            document.removeEventListener(keyEventName, handleKeyDown, true);\r\n        };\r\n    }, [onClose]);\r\n\r\n    return (\r\n        <Sheet\r\n            snapPoints={snapPoints}\r\n            initialSnap={initialSnap}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onCloseEnd={onDismiss}\r\n            detent='content-height'>\r\n            <Sheet.Container style={containerStyles}>\r\n                <FocusTrapZone>\r\n                    <Sheet.Header>\r\n                        <div className={styles.header}>\r\n                            <div className={styles.handler} />\r\n                        </div>\r\n                    </Sheet.Header>\r\n                    <Sheet.Content>\r\n                        <div className={styles.content}>{content}</div>\r\n                    </Sheet.Content>\r\n                </FocusTrapZone>\r\n            </Sheet.Container>\r\n            <Sheet.Backdrop style={backdropStyles} onTap={onClose} />\r\n        </Sheet>\r\n    );\r\n};\r\n","export * from './types';\r\nexport * from './utils';\r\n","/*\r\n *  Copyright © Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nexport * from './CommonSlideDots';\r\n","export * from './PeopleSelect';\r\nexport * from './PeopleSelect.types';\r\n","import React from 'react';\r\nimport { IconButton, ITextField, PrimaryButton, Stack, Text, TextField } from '@fluentui/react';\r\nimport { useContentStyles, useLinkPlaceTextFieldStyles } from './ContentCopyResponseModal.styles';\r\n\r\nexport type ContentCopyResponseProps = React.PropsWithChildren<{\r\n    copyRequestModalCloseButton: string;\r\n    copyRequestModalCopyButton: string;\r\n    copyLinkSuccessInfo: string;\r\n    generatedLink: string;\r\n    linkPermissionSettingText: string;\r\n    onDismiss?: () => void;\r\n    CopySuccessIcon: JSX.Element;\r\n    LinkPermissionSettingIcon: JSX.Element;\r\n    copyContentToClip?: () => void;\r\n}>;\r\nexport const ContentCopyRequestModalContent: React.FC<ContentCopyResponseProps> = ({\r\n    copyRequestModalCloseButton,\r\n    copyRequestModalCopyButton,\r\n    copyLinkSuccessInfo,\r\n    linkPermissionSettingText,\r\n    generatedLink,\r\n    onDismiss,\r\n    CopySuccessIcon,\r\n    LinkPermissionSettingIcon,\r\n    copyContentToClip,\r\n}) => {\r\n    const styles = useContentStyles();\r\n    const linkPlaceTextFieldStyles = useLinkPlaceTextFieldStyles();\r\n    const textFieldRef = React.useRef<ITextField>(null);\r\n    const focusTextField = (): void => {\r\n        textFieldRef.current?.focus();\r\n        if (copyContentToClip) {\r\n            copyContentToClip();\r\n        }\r\n    };\r\n    React.useEffect((): void => {\r\n        textFieldRef.current?.focus();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Stack horizontal reversed role='alert' className={styles.header}>\r\n                {onDismiss && (\r\n                    <IconButton\r\n                        iconProps={{ iconName: 'Cancel' }}\r\n                        ariaLabel={copyRequestModalCloseButton}\r\n                        title={copyRequestModalCloseButton}\r\n                        onClick={onDismiss}\r\n                    />\r\n                )}\r\n            </Stack>\r\n            <Stack className={styles.contents}>\r\n                <Stack horizontalAlign='center' className={styles.copySuccessIcon}>\r\n                    {CopySuccessIcon}\r\n                </Stack>\r\n                <Stack horizontal horizontalAlign='center' className={styles.copyTitle}>\r\n                    <Text block nowrap>\r\n                        {copyLinkSuccessInfo}\r\n                    </Text>\r\n                </Stack>\r\n                <Stack\r\n                    horizontal\r\n                    horizontalAlign='space-between'\r\n                    className={styles.copyContent}\r\n                    tokens={{ childrenGap: '4px' }}>\r\n                    <TextField\r\n                        underlined\r\n                        readOnly\r\n                        defaultValue={generatedLink}\r\n                        styles={linkPlaceTextFieldStyles}\r\n                        componentRef={textFieldRef}\r\n                        onFocus={e => e.target.select()}\r\n                        validateOnFocusIn\r\n                        validateOnLoad\r\n                    />\r\n                    <PrimaryButton primary text={copyRequestModalCopyButton} onClick={focusTextField} />\r\n                </Stack>\r\n                <Stack horizontal className={styles.linkPermissionSetting}>\r\n                    <Stack horizontalAlign='center' className={styles.linkPermissionSettingIcon}>\r\n                        {LinkPermissionSettingIcon}\r\n                    </Stack>\r\n                    <Text block className={styles.linkPermissionSettingTextStyles}>\r\n                        {linkPermissionSettingText}\r\n                    </Text>\r\n                </Stack>\r\n            </Stack>\r\n        </>\r\n    );\r\n};\r\n","import {\r\n    DirectionalHint,\r\n    IPeoplePickerItemSelectedProps,\r\n    IPeoplePickerProps,\r\n    IPersonaProps,\r\n    IPickerItemProps,\r\n    Label,\r\n    mergeStyles,\r\n    NormalPeoplePicker,\r\n    PeoplePickerItem,\r\n    ValidationState,\r\n} from '@fluentui/react';\r\nimport { useId } from '@fluentui/react-hooks';\r\nimport React from 'react';\r\nimport { PeopleCoin } from '../PeopleCoin';\r\nimport { PeopleSelection, PeopleSelectionType, WithSelection } from '../types';\r\nimport { peopleSelectDefaultStrings, PeopleSelectStrings } from './PeopleSelect.strings';\r\nimport { usePeopleSelectStyles } from './PeopleSelect.styles';\r\nimport { PeopleSelectProps } from './PeopleSelect.types';\r\nimport {\r\n    extractSelectionFromPersonaProps,\r\n    filterSuggestions,\r\n    normalizeFilter,\r\n    resolvePeopleSelectionItems,\r\n    tryExpandPeopleSelection,\r\n    useMapPeopleSelectionToPersonaProps,\r\n} from './PeopleSelect.utils';\r\n\r\n/**\r\n * A component for selecting people.\r\n *\r\n * The component offers:\r\n * - Unified props based on PeopleSelection interface for both single and many selection.\r\n * - Expandable ManyPeopleSelection with factory and promise support.\r\n * - Validation support using validateSelections prop.\r\n * - Filter text normalization.\r\n * - Suggestions filtering based on selections.\r\n * - Prevent removal of unremovable items.\r\n * - Localized strings.\r\n */\r\nexport const PeopleSelect: React.FC<PeopleSelectProps> = ({\r\n    label,\r\n    hint,\r\n    required,\r\n    selections,\r\n    errorMessage,\r\n    suggestionsErrorMessage,\r\n    onSelectionsChange,\r\n    onErrorMessageChange,\r\n    onResolveSuggestions,\r\n    allowEmptySuggestions,\r\n    onRenderItem,\r\n    onExpandPeopleSelection,\r\n    onRenderMoreButtonMenu,\r\n    onRetrieveIcon,\r\n    describeSuggestion,\r\n    validateSelections,\r\n    strings,\r\n    formatName,\r\n    pickerClassName,\r\n    resolveDelay,\r\n    disabled,\r\n    itemLimit,\r\n    ...props\r\n}) => {\r\n    const stringsInternal = React.useMemo<PeopleSelectStrings>(\r\n        () => ({ ...peopleSelectDefaultStrings, ...strings }),\r\n        [strings]\r\n    );\r\n\r\n    const mapPeopleSelectionToPersonaProps = useMapPeopleSelectionToPersonaProps({\r\n        onRetrieveIcon,\r\n        describeSuggestion,\r\n    });\r\n\r\n    const selectionsRef = React.useRef(selections);\r\n    selectionsRef.current = selections;\r\n\r\n    React.useEffect(() => {\r\n        selectionsRef.current.map(resolvePeopleSelectionItems);\r\n    }, []);\r\n\r\n    const selectedItems = React.useMemo<WithSelection<IPersonaProps>[]>(\r\n        () => selections.map(mapPeopleSelectionToPersonaProps),\r\n        [mapPeopleSelectionToPersonaProps, selections]\r\n    );\r\n\r\n    const triggerChange = React.useCallback(\r\n        (selections: PeopleSelection[]) => {\r\n            const errorMessage =\r\n                required && !selections.length\r\n                    ? stringsInternal.requiredErrorMessage\r\n                    : validateSelections?.(selections);\r\n\r\n            onSelectionsChange?.(selections);\r\n            onErrorMessageChange?.(errorMessage);\r\n        },\r\n        [onErrorMessageChange, onSelectionsChange, required, stringsInternal.requiredErrorMessage, validateSelections]\r\n    );\r\n\r\n    const triggerChangeRef = React.useRef(triggerChange);\r\n    triggerChangeRef.current = triggerChange;\r\n\r\n    const onChange = React.useCallback<NonNullable<IPeoplePickerProps['onChange']>>((items = []) => {\r\n        const newSelections = items.map(item => extractSelectionFromPersonaProps(item));\r\n\r\n        // Prevent removal of unremovable items\r\n        const unremovableSelections = selectionsRef.current.filter(selection => selection.unremovable);\r\n        if (!unremovableSelections.every(selection => newSelections.includes(selection))) return;\r\n\r\n        triggerChangeRef.current(newSelections);\r\n    }, []);\r\n\r\n    const triggerResolveSuggestions = React.useCallback(\r\n        async (filter: string) => {\r\n            const normalizedFilter = normalizeFilter(filter);\r\n            const suggestions = await onResolveSuggestions(normalizedFilter);\r\n            const filteredSuggestions = filterSuggestions(suggestions, selectionsRef.current);\r\n            return filteredSuggestions.map(mapPeopleSelectionToPersonaProps);\r\n        },\r\n        [mapPeopleSelectionToPersonaProps, onResolveSuggestions]\r\n    );\r\n\r\n    const onResolveSuggestionsInternal = React.useCallback<IPeoplePickerProps['onResolveSuggestions']>(\r\n        filter => triggerResolveSuggestions(filter),\r\n        [triggerResolveSuggestions]\r\n    );\r\n\r\n    const onEmptyResolveSuggestionsInternal = React.useCallback<\r\n        NonNullable<IPeoplePickerProps['onEmptyResolveSuggestions']>\r\n    >(() => triggerResolveSuggestions(''), [triggerResolveSuggestions]);\r\n\r\n    const onItemSelected = React.useCallback<NonNullable<IPeoplePickerProps['onItemSelected']>>(selectedItem => {\r\n        if (!selectedItem) return null;\r\n\r\n        // Try to resolve the selection's items\r\n        const selection = extractSelectionFromPersonaProps(selectedItem);\r\n        resolvePeopleSelectionItems(selection);\r\n\r\n        return selectedItem;\r\n    }, []);\r\n\r\n    const onExpandPeopleSelectionRef = React.useRef(onExpandPeopleSelection);\r\n    onExpandPeopleSelectionRef.current = onExpandPeopleSelection;\r\n\r\n    const styles = usePeopleSelectStyles();\r\n    const onRenderItemInternal = React.useCallback<NonNullable<IPeoplePickerProps['onRenderItem']>>(\r\n        props => {\r\n            const selection = extractSelectionFromPersonaProps(props.item);\r\n            const moreButtonMenu = onRenderMoreButtonMenu?.(selection);\r\n            const newProps: IPeoplePickerItemSelectedProps & IPickerItemProps<IPersonaProps> = {\r\n                ...props,\r\n                item: {\r\n                    ...props.item,\r\n                    ValidationState: ValidationState.valid,\r\n                    onRenderPersonaCoin: props => (\r\n                        <>\r\n                            <PeopleCoin\r\n                                {...props}\r\n                                selection={selection}\r\n                                onRetrieveIcon={onRetrieveIcon}\r\n                                coinSize={24}\r\n                            />\r\n                            {selection.type !== PeopleSelectionType.User && selection.expandable && (\r\n                                <PeopleCoin\r\n                                    {...props}\r\n                                    selection={{ ...selection, icon: 'AddFilled' }}\r\n                                    onRetrieveIcon={onRetrieveIcon}\r\n                                    coinSize={24}\r\n                                    className={styles.expandableCoinOverlay}\r\n                                />\r\n                            )}\r\n                        </>\r\n                    ),\r\n                    onClick: () => {\r\n                        // Try to expand the selection\r\n                        const newSelections = tryExpandPeopleSelection(selectionsRef.current, selection);\r\n                        if (!newSelections) return;\r\n                        onExpandPeopleSelectionRef.current?.(selection);\r\n                        triggerChangeRef.current(newSelections);\r\n                    },\r\n                    text: formatName?.(selection) ?? selection.name,\r\n                    onRenderSecondaryText: moreButtonMenu ? () => moreButtonMenu : undefined,\r\n                },\r\n                className: mergeStyles(\r\n                    props.className,\r\n                    selection.unremovable && styles.unremovable,\r\n                    moreButtonMenu && styles.moreButtonMenu\r\n                ),\r\n            };\r\n\r\n            const item = <PeoplePickerItem {...newProps} />;\r\n            return onRenderItem?.(selection, item) ?? item;\r\n        },\r\n        [\r\n            onRenderMoreButtonMenu,\r\n            formatName,\r\n            styles.unremovable,\r\n            styles.moreButtonMenu,\r\n            styles.expandableCoinOverlay,\r\n            onRenderItem,\r\n            onRetrieveIcon,\r\n        ]\r\n    );\r\n\r\n    const labelId = useId('label');\r\n    const hintId = useId('hint');\r\n    const errorMessageId = useId('errorMessage');\r\n\r\n    return (\r\n        <div {...props}>\r\n            <Label id={labelId} className={styles.label} required={required}>\r\n                {label}\r\n            </Label>\r\n            <NormalPeoplePicker\r\n                className={mergeStyles(styles.picker, pickerClassName)}\r\n                selectedItems={selectedItems}\r\n                onChange={onChange}\r\n                onResolveSuggestions={onResolveSuggestionsInternal}\r\n                // This is intentionally disabled to avoid the suggestions taking the screen reader focus immediately\r\n                // after focus is moved to the input field. It used to cause the screen reader miss the picker label,\r\n                // placeholder, and other important information.\r\n                onEmptyResolveSuggestions={allowEmptySuggestions ? onEmptyResolveSuggestionsInternal : undefined}\r\n                onItemSelected={onItemSelected}\r\n                onRenderItem={onRenderItemInternal}\r\n                inputProps={{\r\n                    'aria-labelledby': labelId,\r\n                    ...(hint && { 'aria-describedby': hintId }),\r\n                    ...(selections.length === 0 && { placeholder: stringsInternal.inputPlaceholder }),\r\n                    ...(required && { 'aria-required': true, required: true }),\r\n                    ...(errorMessage && { 'aria-invalid': true, 'aria-errormessage': errorMessageId }),\r\n                }}\r\n                pickerCalloutProps={{\r\n                    directionalHint: DirectionalHint.bottomLeftEdge,\r\n                    directionalHintForRTL: DirectionalHint.bottomRightEdge,\r\n                    alignTargetEdge: true,\r\n                    styles: { root: { '.ms-Persona': { width: '236px' } } },\r\n                }}\r\n                pickerSuggestionsProps={{\r\n                    suggestionsHeaderText: stringsInternal.suggestionsHeaderText,\r\n                    noResultsFoundText: suggestionsErrorMessage || stringsInternal.noResultsFoundText,\r\n                    suggestionsAvailableAlertText: stringsInternal.suggestionsAvailableAlertText,\r\n                }}\r\n                removeButtonAriaLabel={stringsInternal.removeButtonAriaLabel}\r\n                resolveDelay={resolveDelay}\r\n                disabled={disabled}\r\n                itemLimit={itemLimit}\r\n            />\r\n            {hint && (\r\n                <div id={hintId} className={styles.hint}>\r\n                    {hint}\r\n                </div>\r\n            )}\r\n            {errorMessage && (\r\n                <div id={errorMessageId} className={styles.errorMessage} role='alert'>\r\n                    {errorMessage}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","const floatRegex = /^(\\+|-)?\\d+(\\.\\d+)?$/;\r\n\r\n/**\r\n * Parses a float strictly. The float string must be in the format like \"42\", \"42.7\" or \"-1.23\", or it will return NaN.\r\n *\r\n * @param floatString The float string to parse.\r\n * @returns The parsed float, or undefined if the float string is invalid.\r\n * @remarks This function is stricter than the built-in parseFloat function, which parses string \"42abc\" as 42.\r\n *\r\n * @example parseFloatStrictly(\"42\"); // 42\r\n * @example parseFloatStrictly(\"42.7\"); // 42.7\r\n * @example parseFloatStrictly(\"-1.23\"); // -1.23\r\n * @example parseFloatStrictly(\"42abc\"); // NaN\r\n */\r\nexport function parseFloatStrictly(floatString: string): number {\r\n    return floatRegex.test(floatString) ? parseFloat(floatString) : NaN;\r\n}\r\n\r\nconst intRegex = /^(\\+|-)?\\d+$/;\r\n\r\n/**\r\n * Parses an integer strictly. The integer string must be in the format like \"42\" or \"-7\", or it will return NaN.\r\n *\r\n * @param intString The integer string to parse.\r\n * @returns The parsed integer.\r\n * @remarks This function is stricter than the built-in parseInt function, which parses string \"42abc\" as 42.\r\n *\r\n * @example parseIntStrictly(\"42\"); // 42\r\n * @example parseIntStrictly(\"-7\"); // -7\r\n * @example parseIntStrictly(\"42abc\"); // NaN\r\n */\r\nexport function parseIntStrictly(intString: string): number | undefined {\r\n    return intRegex.test(intString) ? parseInt(intString, 10) : NaN;\r\n}\r\n","export * from './OneDSLogger';\r\nexport * from './common/interfaces';\r\nexport * from './common/types';\r\n","import { uuid } from '@addressbook/utilities-core';\r\nimport {\r\n    ILogger,\r\n    IScenarioEventData,\r\n    IScenarioLogger,\r\n    TelemetryScenarioStatus,\r\n    TelemetryScenarioStep,\r\n} from './common/interfaces';\r\n\r\n/**\r\n * There are some scenarios that will end in the service side, not in the client side.\r\n * Most notably, there is a platform limitation in which closing task module interrupts the logger calls.\r\n */\r\nexport class ScenarioLogger<TScenarioName extends string, TStepName extends string, TLogCategory extends string>\r\n    implements IScenarioLogger<TStepName>\r\n{\r\n    private id: string;\r\n    private name: string;\r\n    private eventData: IScenarioEventData;\r\n    private logger: ILogger<TScenarioName, TStepName, TLogCategory>;\r\n    private startTime: number;\r\n    private isScenarioComplete: boolean;\r\n    public elapsedTime: number;\r\n\r\n    constructor(logger: ILogger<TScenarioName, TStepName, TLogCategory>, name: string, dataBag?: any) {\r\n        this.id = uuid();\r\n        this.name = name;\r\n        this.logger = logger;\r\n        this.isScenarioComplete = false;\r\n        this.startTime = this.elapsedTime = performance.now();\r\n        this.eventData = {\r\n            elapsed: 0,\r\n        };\r\n\r\n        this.createMark(TelemetryScenarioStep.Start, TelemetryScenarioStatus.Init, { dataBag }, false);\r\n    }\r\n\r\n    public mark(stepName: TStepName, status?: TelemetryScenarioStatus, eventData?: Partial<IScenarioEventData>): void {\r\n        this.createMark(stepName, status ?? TelemetryScenarioStatus.Incomplete, eventData, false);\r\n    }\r\n\r\n    public stop(eventData?: Partial<IScenarioEventData>): void {\r\n        this.createMark(\r\n            TelemetryScenarioStep.Finish,\r\n            (eventData && eventData['Scenario.Status']) || TelemetryScenarioStatus.Success,\r\n            eventData,\r\n            true\r\n        );\r\n    }\r\n\r\n    public fail(eventData?: Partial<IScenarioEventData>): void {\r\n        this.createMark(TelemetryScenarioStep.Finish, TelemetryScenarioStatus.Failure, eventData, true);\r\n    }\r\n\r\n    public getCurrentElapsedTime(): number {\r\n        return performance.now() - this.elapsedTime;\r\n    }\r\n\r\n    private createMark(\r\n        stepName: string,\r\n        status: TelemetryScenarioStatus,\r\n        eventData: Partial<IScenarioEventData> | undefined | null,\r\n        completeScenario: boolean\r\n    ): void {\r\n        if (!this.isScenarioComplete) {\r\n            this.isScenarioComplete = completeScenario;\r\n\r\n            const timestamp = performance.now();\r\n\r\n            if (eventData) {\r\n                this.eventData = { ...this.eventData, ...eventData };\r\n            }\r\n\r\n            this.eventData.id = this.id;\r\n            this.eventData['Scenario.Step'] = stepName;\r\n            this.eventData['Scenario.Status'] = status;\r\n            this.eventData.elapsed = this.elapsedTime = timestamp - this.startTime;\r\n            this.eventData.stepElapsed = eventData?.stepElapsed;\r\n\r\n            this.logger.logScenario(this.name, this.eventData, completeScenario);\r\n        } else {\r\n            console.warn(\r\n                `Scenario: ${this.name}, Step: ${stepName}\r\n                is being called after scenario has completed.`\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { FontSizes, isContrastTheme, makeStyles } from '@addressbook/components-fluentui-teams-theme';\r\n\r\nexport const usePeopleSelectStyles = makeStyles(theme => ({\r\n    label: {\r\n        fontSize: FontSizes.size14,\r\n        padding: '0 0 8px',\r\n    },\r\n    errorMessage: {\r\n        color: theme.palette.redDark,\r\n        padding: '4px 12px',\r\n        fontSize: FontSizes.size12,\r\n    },\r\n    hint: {\r\n        fontSize: FontSizes.size12,\r\n        color: isContrastTheme(theme.name) ? theme.palette.black : theme.palette.neutralPrimary,\r\n    },\r\n    picker: {\r\n        '.ms-TooltipHost': {\r\n            display: 'block',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n        },\r\n        '.ms-BasePicker-text': {\r\n            backgroundColor: theme.palette.neutralLight,\r\n            '.ms-PickerPersona-container': {\r\n                margin: '4px',\r\n                backgroundColor: theme.palette.white,\r\n            },\r\n            '.ms-BasePicker-input::placeholder': {\r\n                color: isContrastTheme(theme.name) ? theme.palette.black : theme.palette.neutralPrimary,\r\n            },\r\n        },\r\n        '.ms-PickerPersona-container:hover .ms-PickerItem-removeButton .ms-Button-icon': {\r\n            color: isContrastTheme(theme.name) ? theme.palette.white : undefined,\r\n            backgroundColor: isContrastTheme(theme.name) ? theme.palette.themeSecondary : undefined,\r\n        },\r\n        '.ms-PickerItem-removeButton .ms-Button-icon': {\r\n            color: isContrastTheme(theme.name) ? theme.palette.black : theme.palette.neutralPrimary,\r\n        },\r\n    },\r\n    unremovable: {\r\n        '.ms-PickerItem-removeButton': {\r\n            display: 'none',\r\n        },\r\n    },\r\n    moreButtonMenu: {\r\n        '.ms-Persona-details': {\r\n            flexDirection: 'row',\r\n        },\r\n        '.ms-Persona-secondaryText': {\r\n            display: 'flex',\r\n            marginRight: '-10px',\r\n        },\r\n        '.ms-Button--hasMenu': {\r\n            height: '20px',\r\n        },\r\n    },\r\n    expandableCoinOverlay: {\r\n        position: 'absolute',\r\n        visibility: 'hidden',\r\n        '.ms-Persona:hover &, .ms-Persona:focus-visible &': {\r\n            visibility: 'visible',\r\n        },\r\n    },\r\n}));\r\n","import { v4 } from 'uuid';\r\n\r\nexport const uuid = (): string => v4();\r\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAQA;AACA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;;;;AAQA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AAOA;AAEA;AAGA;AACA;AAeA;;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AAmBA;AAQA;AAEA;AAOA;AACA;AAIA;AAGA;AAGA;;;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAaA;AACA;AAOA;;;;;AAKA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAKA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;;;;;AAKA;AACA;;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;;;;;;AAMA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AAUA;AACA;AAgBA;AAUA;AACA;AAEA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AASA;AACA;AAEA;AACA;AACA;AAEA;AASA;AAGA;AACA;AACA;AACA;AAEA;AAGA;;;;;;;;;;;;;;ACjvBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;AC1PA;AAAA;AAAA;AAEA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AAEA;;;;;;;;;AASA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;;AACA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;;;;AAIA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;;;;;AAKA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5CA;AAAA;AACA;AAEA;;;;;AAKA;AACA;;AACA;AACA;;;;;;;;;;;;;;ACXA;AAAA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAQA;;;;;;;AAOA;AACA;AAKA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAIA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;;AAOA;AACA;;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAmBA;AAUA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AAIA;AAEA;AAGA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9DA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAqBA;AACA;AAcA;AACA;AAEA;AAEA;AASA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AASA;AACA;AAEA;AACA;AAaA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAQA;AAKA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAMA;;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAKA;AACA;AACA;AACA;AAUA;AAGA;;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC0MA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtSA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AAGA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;;;;;AASA;AACA;AACA;AACA;AAEA;;;;;;;;;AASA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;;;;;;AAMA;AACA;AAIA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAKA;;;;;;AAMA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAiBA;AAgBA;AACA;AAEA;AAEA;AAGA;AAMA;AAOA;AAMA;AAcA;AAGA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AAEA;AA2BA;AAAA;AAYA;AAEA;AACA;AAEA;AAKA;;AACA;AAMA;AACA;AACA;AACA;AAGA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AAOA;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAWA;;AAEA;AACA;AAGA;;;;AAIA;AACA;AAAA;AAPA;AAOA;AAEA;;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAsCA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAiBA;AAEA;AAEA;AAEA;AACA;AAUA;AACA;AAGA;AAGA;AACA;AACA;AAMA;AAKA;AAEA;AAEA;AAIA;AACA;AACA;AAIA;AAGA;AACA;AAcA;AAGA;;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/NA;AAAA;AAAA;;;;;;AAMA;AACA;AAIA;AACA;AAEA;;;;;;AAMA;AACA;AAGA;AACA;AAEA;;;;;;AAMA;AACA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AAEA;AAEA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;;;;;;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;;;;;;;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;;;;;;;;AAQA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AAEA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3MA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;ACJA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAEA;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AAEA;AAuBA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AAKA;AACA;AAQA;AAKA;AACA;AACA;AAQA;AAEA;AAYA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AAEA;;;;;;AAMA;AACA;;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAOA;;;;;;AAMA;AACA;;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAQA;;;;;;;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AAOA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AAMA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AA8BA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;AAMA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAOA;;;;;AAKA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AA1CA;;AAEA;AACA;AA0CA;;;;;;AAMA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;AC9HA;AAAA;AAAA;;AAEA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAGA;;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACTA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;AAOA;;;;AAIA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;;AAtBA;;AAEA;AACA;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAOA;AAEA;;;;;AAKA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AAIA;;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AACA;AAEA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AA2BA;;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AAKA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;;AAEA;AACA;AAIA;;;;AAIA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;;AACA;AAAA;AACA;AAEA;AACA;;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;;;;;AAKA;AACA;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AAIA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAEA;;;;;AAKA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAQA;AAEA;;;;;;;AAOA;AACA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAGA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAYA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC7IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1EA;AAAA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;;;;;AAKA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;;;;;AAKA;AACA;;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AAIA;AASA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;AAeA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAOA;;;;AAIA;AACA;AAEA;;;;;;;AAOA;AACA;AAIA;AACA;AAcA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AAWA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACPA;AAAA;AAAA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAOA;;;;;;AAMA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAaA;;AAEA;AACA;AAGA;;;;AAIA;AACA;AAAA;AAPA;AAOA;AAEA;;;AACA;;AACA;AAEA;;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAEA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAOA;AAAA;AAKA;AACA;AAEA;AAGA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAEA;;;;;AAKA;AACA;AAKA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;;;;;;AASA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;AAGA;AACA;AAyBA;;;;;;;AAOA;AACA;AAOA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClpBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAOA;AAAA;AAKA;AACA;AAEA;AAGA;;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAEA;AAuBA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AASA;AAIA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;;AACA;AACA;AACA;AAAA;AAEA;;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAEA;AAUA;AAEA;;;;;;;AAOA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAEA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AAIA;;;;;AAKA;AACA;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;;;;;AAKA;AACA;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AAQA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAKA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAYA;AAUA;AAEA;AAEA;AACA;AAMA;AASA;AACA;AACA;AAGA;AAIA;AAIA;;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AACA;AAIA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;;;AACA;AACA;AAEA;;AACA;AAEA;;;;;AAKA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;;AAMA;AACA;;;AACA;AACA;AACA;;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzEA;;;;;AAKA;AACA;;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAYA;AACA;;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClSA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAEA;AAEA;AACA;AAIA;;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAwCA;AAuBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;AAQA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;ACjHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAYA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAGA;;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;;AAEA;AAEA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AAWA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AAUA;AACA;AAGA;AACA;AAIA;AAKA;AAUA;AAEA;AACA;AAGA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;;;;;;;;;;;AAWA;AACA;AAAA;AAyBA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAKA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAOA;AAMA;;AAYA;AACA;AACA;AAAA;AACA;AACA;AACA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAGA;AAKA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AAKA;AAOA;;;;;;;;;;;;;ACpQA;AAAA;AAAA;AAEA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;AAUA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AACA;AAQA;;;AAGA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChEA;AAAA;AAAA;AAEA;;;;;A","sourceRoot":""}