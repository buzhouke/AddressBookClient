{"version":3,"file":"dist/js/main~mobile.fui.js","sources":["webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/selectableOption/SelectableOption.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Panel/Panel.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Divider/VerticalDivider.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/PersonaPresence/PersonaPresence.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/Calendar.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Toggle/Toggle.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItemSuggestion.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Image/Image.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Callout/CalloutContent.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Overlay/Overlay.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/BasePicker.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ChoiceGroup/ChoiceGroup.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Layer/Layer.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarMonth/CalendarMonth.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/DialogContent.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/BaseButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ResizeGroup/ResizeGroup.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/CommandButton/CommandButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/PersonaPresence/PersonaPresence.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/Dialog.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarYear/CalendarYear.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Tooltip/Tooltip.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Spinner/Spinner.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/Shimmer.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Checkbox/Checkbox.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/BasePicker.scss.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Tooltip/Tooltip.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/IconButton/IconButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/SplitButton/SplitButton.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dropdown/Dropdown.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/Suggestions/Suggestions.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/ActionButton/ActionButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/Shimmer.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/Persona.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Fabric/Fabric.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuAnchor.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CalendarDayGrid/CalendarDayGrid.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/Suggestions/Suggestions.scss.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Image/Image.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/DraggableZone/DraggableZone.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/Dialog.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenu.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ChoiceGroup/ChoiceGroup.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Modal/Modal.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/keytips/KeytipManager.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/ThemeProvider/styleRenderers/mergeStylesRenderer.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Tooltip/Tooltip.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Spinner/Spinner.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ChoiceGroup/ChoiceGroup.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarYear/CalendarYear.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/DefaultButton/DefaultButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Image/Image.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Announced/Announced.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerElementsGroup/ShimmerElementsGroup.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Divider/VerticalDivider.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/Persona.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenu.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerCircle/ShimmerCircle.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerCircle/ShimmerCircle.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenuItem.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Pivot/PivotItem.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Spinner/Spinner.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/DialogFooter.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/DatePicker/DatePicker.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/ButtonThemes.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerGap/ShimmerGap.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/Dialog.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Icon/FontIcon.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/BasePicker.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/Suggestions/SuggestionsItem.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/DatePicker/DatePicker.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarDay/CalendarDay.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/BaseButton.classNames.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Label/Label.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Panel/Panel.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarYear/CalendarYear.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Checkbox/Checkbox.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/DialogContent.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerElementsGroup/ShimmerElementsGroup.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/Suggestions/SuggestionsController.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Text/Text.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Stack/StackUtils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/Calendar.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarMonth/CalendarMonth.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/hooks/useResponsiveMode.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/SplitButton/SplitButton.classNames.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/useOverflow.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenu.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ProgressIndicator/ProgressIndicator.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Tooltip/TooltipHost.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/ThemeProvider/makeStyles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/PersonaInitialsColor.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/PersonaConsts.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Icon/Icon.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CalendarDayGrid/CalendarMonthHeaderRow.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Tooltip/TooltipHost.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Label/Label.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerGap/ShimmerGap.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerLine/ShimmerLine.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/Suggestions/Suggestions.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarDay/CalendarDay.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Layer/Layer.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CalendarDayGrid/CalendarGridRow.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenu.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/Shimmer.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/DefaultButton/DefaultButton.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuItemWrapper.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/Shimmer.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CommandBar/CommandBar.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Modal/Modal.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/Persona.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/KeytipData/KeytipData.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CalendarDayGrid/CalendarGridDayCell.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarDay/CalendarDay.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dropdown/Dropdown.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dropdown/utilities/DropdownSizePosCache.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenu.classNames.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/TextField/TextField.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Tooltip/TooltipHost.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/OverflowSet/OverflowSet.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Pivot/Pivot.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/dom.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Icon/Icon.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CommandBar/CommandBar.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Icon/Icon.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Fabric/Fabric.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/Calendar.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ResizeGroup/ResizeGroup.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Divider/VerticalDivider.classNames.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Callout/CalloutContent.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Modal/Modal.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarPicker/CalendarPicker.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/BaseButton.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/CalendarMonth/CalendarMonth.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/OverflowSet/OverflowSet.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Callout/Callout.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Label/Label.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/DialogContent.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Overlay/Overlay.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/selection/SelectionZone.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Announced/Announced.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Stack/StackItem/StackItem.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/PeoplePicker/PeoplePicker.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerLine/ShimmerLine.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ProgressIndicator/ProgressIndicator.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Popup/Popup.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Pivot/Pivot.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/decorators/withResponsiveMode.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/TextField/TextField.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CommandBar/CommandBar.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/ThemeProvider/ThemeContext.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Callout/CalloutContent.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItemSuggestion.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/Suggestions/SuggestionsItem.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/OverflowSet/OverflowButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/selectableOption/SelectableOption.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/KeytipData/useKeytipData.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/ActionButton/ActionButton.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/PersonaPresence/PersonaPresence.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/BasePicker.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/DraggableZone/DraggableZone.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/DialogContent.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/TextField/TextField.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/ThemeProvider/useTheme.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Autofill/Autofill.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/positioning/positioning.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/DatePicker/DatePicker.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/DatePicker/defaults.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Panel/Panel.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Checkbox/Checkbox.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/OverflowSet/OverflowSet.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/common/DirectionalHint.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Text/Text.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/FocusTrapZone/FocusTrapZone.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Overlay/Overlay.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/contextualMenu/contextualMenuUtility.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Tooltip/TooltipHost.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Toggle/Toggle.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/positioning/positioning.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CalendarDayGrid/CalendarDayGrid.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Text/Text.view.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Panel/Panel.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/CommandBarButton/CommandBarButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Icon/ImageIcon.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/Suggestions/Suggestions.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerCircle/ShimmerCircle.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/keytips/KeytipConstants.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Stack/Stack.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/MenuContext/MenuContext.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ResizeGroup/ResizeGroup.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Stack/StackItem/StackItem.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerGap/ShimmerGap.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Announced/Announced.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/keytips/KeytipUtils.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Spinner/Spinner.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Tooltip/Tooltip.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/IconButton/IconButton.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dropdown/Dropdown.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/observeResize.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenu.cnstyles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/PersonaCoin/PersonaCoin.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/Persona.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Stack/Stack.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/PersonaCoin/PersonaCoin.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerElementsGroup/ShimmerElementsGroup.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/CalendarDayGrid/CalendarDayGrid.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Pivot/Pivot.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Shimmer/ShimmerLine/ShimmerLine.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/DialogFooter.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuSplitButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Divider/VerticalDivider.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/CommandBarButton/CommandBarButton.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Fabric/Fabric.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Dialog/DialogFooter.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/utilities/decorators/BaseDecorator.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/Calendar.types.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Button/PrimaryButton/PrimaryButton.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Layer/Layer.notification.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Icon/Icon.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Persona/PersonaCoin/PersonaCoin.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Calendar/defaults.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Image/Image.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenuItem.base.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Toggle/Toggle.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/Layer/Layer.styles.js","webpack:///C:/Users/wangweiwei/source/repos/address-book/Source/Clients/node_modules/@fluentui/react/lib/components/ProgressIndicator/ProgressIndicator.styles.js"],"sourcesContent":["export function getAllSelectedOptions(options, selectedIndices) {\n    var selectedOptions = [];\n    for (var _i = 0, selectedIndices_1 = selectedIndices; _i < selectedIndices_1.length; _i++) {\n        var index = selectedIndices_1[_i];\n        var option = options[index];\n        if (option) {\n            selectedOptions.push(option);\n        }\n    }\n    return selectedOptions;\n}\n//# sourceMappingURL=SelectableOption.js.map","var _a, _b, _c, _d, _e;\nimport { __assign } from \"tslib\";\nimport { PanelType } from './Panel.types';\nimport { AnimationClassNames, AnimationVariables, getGlobalClassNames, HighContrastSelector, ScreenWidthMinMedium, ScreenWidthMinLarge, ScreenWidthMinXLarge, ScreenWidthMinXXLarge, ScreenWidthMinUhfMobile, IconFontSizes, } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-Panel',\n    main: 'ms-Panel-main',\n    commands: 'ms-Panel-commands',\n    contentInner: 'ms-Panel-contentInner',\n    scrollableContent: 'ms-Panel-scrollableContent',\n    navigation: 'ms-Panel-navigation',\n    closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n    header: 'ms-Panel-header',\n    headerText: 'ms-Panel-headerText',\n    content: 'ms-Panel-content',\n    footer: 'ms-Panel-footer',\n    footerInner: 'ms-Panel-footerInner',\n    isOpen: 'is-open',\n    hasCloseButton: 'ms-Panel--hasCloseButton',\n    smallFluid: 'ms-Panel--smFluid',\n    smallFixedNear: 'ms-Panel--smLeft',\n    smallFixedFar: 'ms-Panel--sm',\n    medium: 'ms-Panel--md',\n    large: 'ms-Panel--lg',\n    largeFixed: 'ms-Panel--fixed',\n    extraLarge: 'ms-Panel--xl',\n    custom: 'ms-Panel--custom',\n    customNear: 'ms-Panel--customLeft',\n};\nvar panelWidth = {\n    full: '100%',\n    auto: 'auto',\n    xs: 272,\n    sm: 340,\n    md1: 592,\n    md2: 644,\n    lg: 940,\n};\nvar panelMargin = {\n    auto: 'auto',\n    none: 0,\n    md: 48,\n    lg: 428,\n    xl: 176,\n};\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nvar smallPanelSelectors = (_a = {},\n    _a[\"@media (min-width: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n        width: panelWidth.sm,\n    },\n    _a);\nvar mediumPanelSelectors = (_b = {},\n    _b[\"@media (min-width: \".concat(ScreenWidthMinLarge, \"px)\")] = {\n        width: panelWidth.md1,\n    },\n    _b[\"@media (min-width: \".concat(ScreenWidthMinXLarge, \"px)\")] = {\n        width: panelWidth.md2,\n    },\n    _b);\nvar largePanelSelectors = (_c = {},\n    _c[\"@media (min-width: \".concat(ScreenWidthMinUhfMobile, \"px)\")] = {\n        left: panelMargin.md,\n        width: panelWidth.auto,\n    },\n    _c[\"@media (min-width: \".concat(ScreenWidthMinXXLarge, \"px)\")] = {\n        left: panelMargin.lg,\n    },\n    _c);\nvar largeFixedPanelSelectors = (_d = {},\n    _d[\"@media (min-width: \".concat(ScreenWidthMinXXLarge, \"px)\")] = {\n        left: panelMargin.auto,\n        width: panelWidth.lg,\n    },\n    _d);\nvar extraLargePanelSelectors = (_e = {},\n    _e[\"@media (min-width: \".concat(ScreenWidthMinXXLarge, \"px)\")] = {\n        left: panelMargin.xl,\n    },\n    _e);\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nvar getPanelBreakpoints = function (type) {\n    var selectors;\n    // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n    // are not checked in here because they render the same in all the breakpoints\n    // and have the checks done separately in the `getStyles` function below.\n    switch (type) {\n        case PanelType.smallFixedFar:\n            selectors = __assign({}, smallPanelSelectors);\n            break;\n        case PanelType.medium:\n            selectors = __assign(__assign({}, smallPanelSelectors), mediumPanelSelectors);\n            break;\n        case PanelType.large:\n            selectors = __assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors);\n            break;\n        case PanelType.largeFixed:\n            selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), largeFixedPanelSelectors);\n            break;\n        case PanelType.extraLarge:\n            selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), extraLargePanelSelectors);\n            break;\n        default:\n            break;\n    }\n    return selectors;\n};\nvar commandBarHeight = '44px';\nvar sharedPaddingStyles = {\n    paddingLeft: '24px',\n    paddingRight: '24px',\n};\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d;\n    var className = props.className, focusTrapZoneClassName = props.focusTrapZoneClassName, hasCloseButton = props.hasCloseButton, headerClassName = props.headerClassName, isAnimating = props.isAnimating, isFooterSticky = props.isFooterSticky, isFooterAtBottom = props.isFooterAtBottom, isOnRightSide = props.isOnRightSide, isOpen = props.isOpen, isHiddenOnDismiss = props.isHiddenOnDismiss, hasCustomNavigation = props.hasCustomNavigation, theme = props.theme, _e = props.type, type = _e === void 0 ? PanelType.smallFixedFar : _e;\n    var effects = theme.effects, fonts = theme.fonts, semanticColors = theme.semanticColors;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            isOpen && classNames.isOpen,\n            hasCloseButton && classNames.hasCloseButton,\n            {\n                pointerEvents: 'none',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n            },\n            isCustomPanel && isOnRightSide && classNames.custom,\n            isCustomPanel && !isOnRightSide && classNames.customNear,\n            className,\n        ],\n        overlay: [\n            {\n                pointerEvents: 'auto',\n                cursor: 'pointer',\n            },\n            isOpen && isAnimating && AnimationClassNames.fadeIn100,\n            !isOpen && isAnimating && AnimationClassNames.fadeOut100,\n        ],\n        hiddenPanel: [\n            !isOpen &&\n                !isAnimating &&\n                isHiddenOnDismiss && {\n                visibility: 'hidden',\n            },\n        ],\n        main: [\n            classNames.main,\n            {\n                backgroundColor: semanticColors.bodyBackground,\n                boxShadow: effects.elevation64,\n                pointerEvents: 'auto',\n                position: 'absolute',\n                display: 'flex',\n                flexDirection: 'column',\n                overflowX: 'hidden',\n                overflowY: 'auto',\n                WebkitOverflowScrolling: 'touch',\n                bottom: 0,\n                top: 0,\n                // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n                left: panelMargin.auto,\n                right: panelMargin.none,\n                width: panelWidth.full,\n                selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n                    borderLeft: \"3px solid \".concat(semanticColors.variantBorder),\n                    borderRight: \"3px solid \".concat(semanticColors.variantBorder),\n                }, _a), getPanelBreakpoints(type)),\n            },\n            type === PanelType.smallFluid && {\n                left: panelMargin.none,\n            },\n            type === PanelType.smallFixedNear && {\n                left: panelMargin.none,\n                right: panelMargin.auto,\n                width: panelWidth.xs,\n            },\n            type === PanelType.customNear && {\n                right: 'auto',\n                left: 0,\n            },\n            isCustomPanel && {\n                maxWidth: '100vw',\n            },\n            isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n            isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n            !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n            !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n            focusTrapZoneClassName,\n        ],\n        commands: [\n            classNames.commands,\n            {\n                // Ensures that the sticky header always has a background to prevent overlaps on scroll.\n                backgroundColor: semanticColors.bodyBackground,\n                paddingTop: 18,\n                selectors: (_b = {},\n                    _b[\"@media (min-height: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n                        position: 'sticky',\n                        top: 0,\n                        zIndex: 1,\n                    },\n                    _b),\n            },\n            hasCustomNavigation && {\n                paddingTop: 'inherit',\n            },\n        ],\n        navigation: [\n            classNames.navigation,\n            {\n                display: 'flex',\n                justifyContent: 'flex-end',\n            },\n            hasCustomNavigation && {\n                height: commandBarHeight,\n            },\n        ],\n        contentInner: [\n            classNames.contentInner,\n            {\n                display: 'flex',\n                flexDirection: 'column',\n                flexGrow: 1,\n                overflowY: 'hidden',\n            },\n        ],\n        header: [\n            classNames.header,\n            sharedPaddingStyles,\n            {\n                alignSelf: 'flex-start',\n            },\n            hasCloseButton &&\n                !hasCustomNavigation && {\n                flexGrow: 1,\n            },\n            hasCustomNavigation && {\n                // Ensure that title doesn't shrink if screen is too small\n                flexShrink: 0,\n            },\n        ],\n        headerText: [\n            classNames.headerText,\n            fonts.xLarge,\n            {\n                color: semanticColors.bodyText,\n                lineHeight: '27px',\n                overflowWrap: 'break-word',\n                wordWrap: 'break-word',\n                wordBreak: 'break-word',\n                hyphens: 'auto',\n            },\n            headerClassName,\n        ],\n        scrollableContent: [\n            classNames.scrollableContent,\n            {\n                overflowY: 'auto',\n            },\n            isFooterAtBottom && {\n                flexGrow: 1,\n                display: 'inherit',\n                flexDirection: 'inherit',\n            },\n        ],\n        content: [\n            classNames.content,\n            sharedPaddingStyles,\n            {\n                paddingBottom: 20,\n            },\n            isFooterAtBottom && {\n                selectors: (_c = {},\n                    _c[\"@media (min-height: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n                        flexGrow: 1,\n                    },\n                    _c),\n            },\n        ],\n        footer: [\n            classNames.footer,\n            {\n                // Ensure that footer doesn't shrink if screen is too small\n                flexShrink: 0,\n                borderTop: '1px solid transparent',\n                transition: \"opacity \".concat(AnimationVariables.durationValue3, \" \").concat(AnimationVariables.easeFunction2),\n                selectors: (_d = {},\n                    _d[\"@media (min-height: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n                        position: 'sticky',\n                        bottom: 0,\n                    },\n                    _d),\n            },\n            isFooterSticky && {\n                backgroundColor: semanticColors.bodyBackground,\n                borderTopColor: semanticColors.variantBorder,\n            },\n        ],\n        footerInner: [\n            classNames.footerInner,\n            sharedPaddingStyles,\n            {\n                paddingBottom: 16,\n                paddingTop: 16,\n            },\n        ],\n        subComponentStyles: {\n            closeButton: {\n                root: [\n                    classNames.closeButton,\n                    {\n                        marginRight: 14,\n                        color: theme.palette.neutralSecondary,\n                        fontSize: IconFontSizes.large,\n                    },\n                    hasCustomNavigation && {\n                        marginRight: 0,\n                        height: 'auto',\n                        width: '44px',\n                    },\n                ],\n                rootHovered: {\n                    color: theme.palette.neutralPrimary,\n                },\n            },\n        },\n    };\n};\n//# sourceMappingURL=Panel.styles.js.map","export var getStyles = function (props) {\n    // eslint-disable-next-line deprecation/deprecation\n    var theme = props.theme, getClassNames = props.getClassNames, className = props.className;\n    if (!theme) {\n        throw new Error('Theme is undefined or null.');\n    }\n    if (getClassNames) {\n        var names = getClassNames(theme);\n        return {\n            wrapper: [names.wrapper],\n            divider: [names.divider],\n        };\n    }\n    return {\n        wrapper: [\n            {\n                display: 'inline-flex',\n                height: '100%',\n                alignItems: 'center',\n            },\n            className,\n        ],\n        divider: [\n            {\n                width: 1,\n                height: '100%',\n                backgroundColor: theme.palette.neutralTertiaryAlt,\n            },\n        ],\n    };\n};\n//# sourceMappingURL=VerticalDivider.styles.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { personaPresenceSize, presenceBoolean, sizeBoolean } from '../PersonaConsts';\nvar GlobalClassNames = {\n    presence: 'ms-Persona-presence',\n    presenceIcon: 'ms-Persona-presenceIcon',\n};\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e, _f;\n    var theme = props.theme, presenceColors = props.presenceColors;\n    var semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var size = sizeBoolean(props.size);\n    var presence = presenceBoolean(props.presence);\n    // Presence colors\n    var presenceColorAvailable = (presenceColors && presenceColors.available) || '#6BB700';\n    var presenceColorAway = (presenceColors && presenceColors.away) || '#FFAA44';\n    var presenceColorBusy = (presenceColors && presenceColors.busy) || '#C43148';\n    var presenceColorDnd = (presenceColors && presenceColors.dnd) || '#C50F1F';\n    var presenceColorOffline = (presenceColors && presenceColors.offline) || '#8A8886';\n    var presenceColorOof = (presenceColors && presenceColors.oof) || '#B4009E';\n    var presenceColorBackground = (presenceColors && presenceColors.background) || semanticColors.bodyBackground;\n    var isOpenCirclePresence = presence.isOffline ||\n        (props.isOutOfOffice && (presence.isAvailable || presence.isBusy || presence.isAway || presence.isDoNotDisturb));\n    var borderSizeForSmallPersonas = '1px';\n    var borderSizeForLargePersonas = '2px';\n    var borderSize = size.isSize72 || size.isSize100 ? borderSizeForLargePersonas : borderSizeForSmallPersonas;\n    return {\n        presence: [\n            classNames.presence,\n            __assign(__assign({ position: 'absolute', height: personaPresenceSize.size12, width: personaPresenceSize.size12, borderRadius: '50%', top: 'auto', right: '-2px', bottom: '-2px', border: \"2px solid \".concat(presenceColorBackground), textAlign: 'center', boxSizing: 'content-box', backgroundClip: 'border-box' }, getHighContrastNoAdjustStyle()), { selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        borderColor: 'Window',\n                        backgroundColor: 'WindowText',\n                    },\n                    _a) }),\n            (size.isSize8 || size.isSize10) && {\n                right: 'auto',\n                top: '7px',\n                left: 0,\n                border: 0,\n                selectors: (_b = {},\n                    _b[HighContrastSelector] = {\n                        top: '9px',\n                        border: '1px solid WindowText',\n                    },\n                    _b),\n            },\n            (size.isSize8 || size.isSize10 || size.isSize24 || size.isSize28 || size.isSize32) &&\n                makeSizeStyle(personaPresenceSize.size8),\n            (size.isSize40 || size.isSize48) && makeSizeStyle(personaPresenceSize.size12),\n            size.isSize16 && {\n                height: personaPresenceSize.size6,\n                width: personaPresenceSize.size6,\n                borderWidth: '1.5px',\n            },\n            size.isSize56 && makeSizeStyle(personaPresenceSize.size16),\n            size.isSize72 && makeSizeStyle(personaPresenceSize.size20),\n            size.isSize100 && makeSizeStyle(personaPresenceSize.size28),\n            size.isSize120 && makeSizeStyle(personaPresenceSize.size32),\n            presence.isAvailable && {\n                backgroundColor: presenceColorAvailable,\n                selectors: (_c = {},\n                    _c[HighContrastSelector] = backgroundColor('Highlight'),\n                    _c),\n            },\n            presence.isAway && backgroundColor(presenceColorAway),\n            presence.isBlocked && [\n                {\n                    selectors: (_d = {\n                            // Only show :after at larger sizes\n                            ':after': size.isSize40 || size.isSize48 || size.isSize72 || size.isSize100\n                                ? {\n                                    content: '\"\"',\n                                    width: '100%',\n                                    height: borderSize,\n                                    backgroundColor: presenceColorBusy,\n                                    transform: 'translateY(-50%) rotate(-45deg)',\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: 0,\n                                }\n                                : undefined\n                        },\n                        _d[HighContrastSelector] = {\n                            selectors: {\n                                ':after': {\n                                    width: \"calc(100% - 4px)\",\n                                    left: '2px',\n                                    backgroundColor: 'Window',\n                                },\n                            },\n                        },\n                        _d),\n                },\n            ],\n            presence.isBusy && backgroundColor(presenceColorBusy),\n            presence.isDoNotDisturb && backgroundColor(presenceColorDnd),\n            presence.isOffline && backgroundColor(presenceColorOffline),\n            (isOpenCirclePresence || presence.isBlocked) && [\n                {\n                    backgroundColor: presenceColorBackground,\n                    selectors: (_e = {\n                            ':before': {\n                                content: '\"\"',\n                                width: '100%',\n                                height: '100%',\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                border: \"\".concat(borderSize, \" solid \").concat(presenceColorBusy),\n                                borderRadius: '50%',\n                                boxSizing: 'border-box',\n                            }\n                        },\n                        _e[HighContrastSelector] = {\n                            backgroundColor: 'WindowText',\n                            selectors: {\n                                ':before': {\n                                    width: \"calc(100% - 2px)\",\n                                    height: \"calc(100% - 2px)\",\n                                    top: '1px',\n                                    left: '1px',\n                                    borderColor: 'Window',\n                                },\n                            },\n                        },\n                        _e),\n                },\n            ],\n            isOpenCirclePresence && presence.isAvailable && makeBeforeBorderStyle(borderSize, presenceColorAvailable),\n            isOpenCirclePresence && presence.isBusy && makeBeforeBorderStyle(borderSize, presenceColorBusy),\n            isOpenCirclePresence && presence.isAway && makeBeforeBorderStyle(borderSize, presenceColorOof),\n            isOpenCirclePresence && presence.isDoNotDisturb && makeBeforeBorderStyle(borderSize, presenceColorDnd),\n            isOpenCirclePresence && presence.isOffline && makeBeforeBorderStyle(borderSize, presenceColorOffline),\n            isOpenCirclePresence &&\n                presence.isOffline &&\n                props.isOutOfOffice &&\n                makeBeforeBorderStyle(borderSize, presenceColorOof),\n        ],\n        presenceIcon: [\n            classNames.presenceIcon,\n            {\n                color: presenceColorBackground,\n                fontSize: '6px',\n                lineHeight: personaPresenceSize.size12,\n                verticalAlign: 'top',\n                selectors: (_f = {},\n                    _f[HighContrastSelector] = {\n                        color: 'Window',\n                    },\n                    _f),\n            },\n            size.isSize56 && {\n                fontSize: '8px',\n                lineHeight: personaPresenceSize.size16,\n            },\n            size.isSize72 && {\n                fontSize: fonts.small.fontSize,\n                lineHeight: personaPresenceSize.size20,\n            },\n            size.isSize100 && {\n                fontSize: fonts.medium.fontSize,\n                lineHeight: personaPresenceSize.size28,\n            },\n            size.isSize120 && {\n                fontSize: fonts.medium.fontSize,\n                lineHeight: personaPresenceSize.size32,\n            },\n            presence.isAway && {\n                position: 'relative',\n                left: isOpenCirclePresence ? undefined : '1px',\n            },\n            isOpenCirclePresence && presence.isAvailable && makeOpenCircleIconStyle(presenceColorAvailable),\n            isOpenCirclePresence && presence.isBusy && makeOpenCircleIconStyle(presenceColorBusy),\n            isOpenCirclePresence && presence.isAway && makeOpenCircleIconStyle(presenceColorOof),\n            isOpenCirclePresence && presence.isDoNotDisturb && makeOpenCircleIconStyle(presenceColorDnd),\n            isOpenCirclePresence && presence.isOffline && makeOpenCircleIconStyle(presenceColorOffline),\n            isOpenCirclePresence && presence.isOffline && props.isOutOfOffice && makeOpenCircleIconStyle(presenceColorOof),\n        ],\n    };\n};\nfunction makeOpenCircleIconStyle(color) {\n    return {\n        color: color,\n        borderColor: color,\n    };\n}\nfunction makeBeforeBorderStyle(borderSize, color) {\n    return {\n        selectors: {\n            ':before': {\n                border: \"\".concat(borderSize, \" solid \").concat(color),\n            },\n        },\n    };\n}\nfunction makeSizeStyle(size) {\n    return {\n        height: size,\n        width: size,\n    };\n}\nfunction backgroundColor(color) {\n    return { backgroundColor: color };\n}\n//# sourceMappingURL=PersonaPresence.styles.js.map","import { styled } from '@fluentui/utilities';\nimport { CalendarBase } from './Calendar.base';\nimport { styles } from './Calendar.styles';\nexport var Calendar = styled(CalendarBase, styles, undefined, {\n    scope: 'Calendar',\n});\n//# sourceMappingURL=Calendar.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, getFocusStyle, FontWeights, getHighContrastNoAdjustStyle, } from '@fluentui/style-utilities';\nvar DEFAULT_PILL_WIDTH = 40;\nvar DEFAULT_PILL_HEIGHT = 20;\nvar DEFAULT_THUMB_SIZE = 12;\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    var theme = props.theme, className = props.className, disabled = props.disabled, checked = props.checked, inlineLabel = props.inlineLabel, onOffMissing = props.onOffMissing;\n    var semanticColors = theme.semanticColors, palette = theme.palette;\n    // Tokens\n    var pillUncheckedBackground = semanticColors.bodyBackground;\n    var pillCheckedBackground = semanticColors.inputBackgroundChecked;\n    var pillCheckedHoveredBackground = semanticColors.inputBackgroundCheckedHovered;\n    var thumbUncheckedHoveredBackground = palette.neutralDark;\n    var pillCheckedDisabledBackground = semanticColors.disabledBodySubtext;\n    var thumbBackground = semanticColors.smallInputBorder;\n    var thumbCheckedBackground = semanticColors.inputForegroundChecked;\n    var thumbDisabledBackground = semanticColors.disabledBodySubtext;\n    var thumbCheckedDisabledBackground = semanticColors.disabledBackground;\n    var pillBorderColor = semanticColors.smallInputBorder;\n    var pillBorderHoveredColor = semanticColors.inputBorderHovered;\n    var pillBorderDisabledColor = semanticColors.disabledBodySubtext;\n    var textDisabledColor = semanticColors.disabledText;\n    return {\n        root: [\n            'ms-Toggle',\n            checked && 'is-checked',\n            !disabled && 'is-enabled',\n            disabled && 'is-disabled',\n            theme.fonts.medium,\n            {\n                marginBottom: '8px',\n            },\n            inlineLabel && {\n                display: 'flex',\n                alignItems: 'center',\n            },\n            className,\n        ],\n        label: [\n            'ms-Toggle-label',\n            { display: 'inline-block' },\n            disabled && {\n                color: textDisabledColor,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        color: 'GrayText',\n                    },\n                    _a),\n            },\n            inlineLabel &&\n                !onOffMissing && {\n                marginRight: 16,\n            },\n            onOffMissing &&\n                inlineLabel && {\n                order: 1,\n                marginLeft: 16,\n            },\n            inlineLabel && { wordBreak: 'break-word' },\n        ],\n        container: [\n            'ms-Toggle-innerContainer',\n            {\n                display: 'flex',\n                position: 'relative',\n            },\n        ],\n        pill: [\n            'ms-Toggle-background',\n            getFocusStyle(theme, { inset: -3 }),\n            {\n                fontSize: '20px',\n                boxSizing: 'border-box',\n                width: DEFAULT_PILL_WIDTH,\n                height: DEFAULT_PILL_HEIGHT,\n                borderRadius: DEFAULT_PILL_HEIGHT / 2,\n                transition: 'all 0.1s ease',\n                border: \"1px solid \".concat(pillBorderColor),\n                background: pillUncheckedBackground,\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0 3px',\n                overflow: 'visible',\n            },\n            !disabled && [\n                !checked && {\n                    selectors: {\n                        ':hover': [\n                            {\n                                borderColor: pillBorderHoveredColor,\n                            },\n                        ],\n                        ':hover .ms-Toggle-thumb': [\n                            {\n                                backgroundColor: thumbUncheckedHoveredBackground,\n                                selectors: (_b = {},\n                                    _b[HighContrastSelector] = {\n                                        borderColor: 'Highlight',\n                                    },\n                                    _b),\n                            },\n                        ],\n                    },\n                },\n                checked && [\n                    {\n                        background: pillCheckedBackground,\n                        borderColor: 'transparent',\n                        justifyContent: 'flex-end',\n                    },\n                    {\n                        selectors: (_c = {\n                                ':hover': [\n                                    {\n                                        backgroundColor: pillCheckedHoveredBackground,\n                                        borderColor: 'transparent',\n                                        selectors: (_d = {},\n                                            _d[HighContrastSelector] = {\n                                                backgroundColor: 'Highlight',\n                                            },\n                                            _d),\n                                    },\n                                ]\n                            },\n                            _c[HighContrastSelector] = __assign({ backgroundColor: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                            _c),\n                    },\n                ],\n            ],\n            disabled && [\n                {\n                    cursor: 'default',\n                },\n                !checked && [\n                    {\n                        borderColor: pillBorderDisabledColor,\n                    },\n                ],\n                checked && [\n                    {\n                        backgroundColor: pillCheckedDisabledBackground,\n                        borderColor: 'transparent',\n                        justifyContent: 'flex-end',\n                    },\n                ],\n            ],\n            !disabled && {\n                selectors: {\n                    '&:hover': {\n                        selectors: (_e = {},\n                            _e[HighContrastSelector] = {\n                                borderColor: 'Highlight',\n                            },\n                            _e),\n                    },\n                },\n            },\n        ],\n        thumb: [\n            'ms-Toggle-thumb',\n            {\n                display: 'block',\n                width: DEFAULT_THUMB_SIZE,\n                height: DEFAULT_THUMB_SIZE,\n                borderRadius: '50%',\n                transition: 'all 0.1s ease',\n                backgroundColor: thumbBackground,\n                /* Border is added to handle high contrast mode for Firefox */\n                borderColor: 'transparent',\n                borderWidth: DEFAULT_THUMB_SIZE / 2,\n                borderStyle: 'solid',\n                boxSizing: 'border-box',\n            },\n            !disabled &&\n                checked && [\n                {\n                    backgroundColor: thumbCheckedBackground,\n                    selectors: (_f = {},\n                        _f[HighContrastSelector] = {\n                            backgroundColor: 'Window',\n                            borderColor: 'Window',\n                        },\n                        _f),\n                },\n            ],\n            disabled && [\n                !checked && [\n                    {\n                        backgroundColor: thumbDisabledBackground,\n                    },\n                ],\n                checked && [\n                    {\n                        backgroundColor: thumbCheckedDisabledBackground,\n                    },\n                ],\n            ],\n        ],\n        text: [\n            'ms-Toggle-stateText',\n            {\n                selectors: {\n                    // Workaround: make rules more specific than Label rules.\n                    '&&': {\n                        padding: '0',\n                        margin: '0 8px',\n                        userSelect: 'none',\n                        fontWeight: FontWeights.regular,\n                    },\n                },\n            },\n            disabled && {\n                selectors: {\n                    '&&': {\n                        color: textDisabledColor,\n                        selectors: (_g = {},\n                            _g[HighContrastSelector] = {\n                                color: 'GrayText',\n                            },\n                            _g),\n                    },\n                },\n            },\n        ],\n    };\n};\n//# sourceMappingURL=Toggle.styles.js.map","import { getGlobalClassNames, HighContrastSelector } from '../../../../Styling';\nimport { SuggestionsItemGlobalClassNames as suggested } from '../../Suggestions/SuggestionsItem.styles';\nvar GlobalClassNames = {\n    root: 'ms-PeoplePicker-personaContent',\n    personaWrapper: 'ms-PeoplePicker-Persona',\n};\nexport function getStyles(props) {\n    var _a, _b, _c;\n    var className = props.className, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var textSelectorsStyles = {\n        selectors: (_a = {},\n            _a[\".\".concat(suggested.isSuggested, \" &\")] = {\n                selectors: (_b = {},\n                    _b[HighContrastSelector] = {\n                        color: 'HighlightText',\n                    },\n                    _b),\n            },\n            _a[\".\".concat(classNames.root, \":hover &\")] = {\n                selectors: (_c = {},\n                    _c[HighContrastSelector] = {\n                        color: 'HighlightText',\n                    },\n                    _c),\n            },\n            _a),\n    };\n    return {\n        root: [\n            classNames.root,\n            {\n                width: '100%',\n                padding: '4px 12px',\n            },\n            className,\n        ],\n        personaWrapper: [\n            classNames.personaWrapper,\n            {\n                width: 180,\n            },\n        ],\n        subComponentStyles: {\n            persona: {\n                primaryText: textSelectorsStyles,\n                secondaryText: textSelectorsStyles,\n            },\n        },\n    };\n}\n//# sourceMappingURL=PeoplePickerItemSuggestion.styles.js.map","/**\n * The possible methods that can be used to fit the image.\n * {@docCategory Image}\n */\nexport var ImageFit;\n(function (ImageFit) {\n    /**\n     * The image is not scaled. The image is centered and cropped within the content box.\n     */\n    ImageFit[ImageFit[\"center\"] = 0] = \"center\";\n    /**\n     * The image is scaled to maintain its aspect ratio while being fully contained within the frame. The image will\n     * be centered horizontally and vertically within the frame. The space in the top and bottom or in the sides of\n     * the frame will be empty depending on the difference in aspect ratio between the image and the frame.\n     */\n    ImageFit[ImageFit[\"contain\"] = 1] = \"contain\";\n    /**\n     * The image is scaled to maintain its aspect ratio while filling the frame. Portions of the image will be cropped\n     * from the top and bottom, or the sides, depending on the difference in aspect ratio between the image and the frame.\n     */\n    ImageFit[ImageFit[\"cover\"] = 2] = \"cover\";\n    /**\n     * Neither the image nor the frame are scaled. If their sizes do not match, the image will either be cropped or the\n     * frame will have empty space.\n     */\n    ImageFit[ImageFit[\"none\"] = 3] = \"none\";\n    /**\n     * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n     * behave as ImageFit.center if the image's natural height or width is less than the Image frame's height or width,\n     * but if both natural height and width are larger than the frame it will behave as ImageFit.cover.\n     */\n    ImageFit[ImageFit[\"centerCover\"] = 4] = \"centerCover\";\n    /**\n     * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n     * behave as ImageFit.center if the image's natural height and width is less than the Image frame's height and width,\n     * but if either natural height or width are larger than the frame it will behave as ImageFit.contain.\n     */\n    ImageFit[ImageFit[\"centerContain\"] = 5] = \"centerContain\";\n})(ImageFit || (ImageFit = {}));\n/**\n * The cover style to be used on the image\n * {@docCategory Image}\n */\nexport var ImageCoverStyle;\n(function (ImageCoverStyle) {\n    /**\n     * The image will be shown at 100% height of container and the width will be scaled accordingly\n     */\n    ImageCoverStyle[ImageCoverStyle[\"landscape\"] = 0] = \"landscape\";\n    /**\n     * The image will be shown at 100% width of container and the height will be scaled accordingly\n     */\n    ImageCoverStyle[ImageCoverStyle[\"portrait\"] = 1] = \"portrait\";\n})(ImageCoverStyle || (ImageCoverStyle = {}));\n/**\n * {@docCategory Image}\n */\nexport var ImageLoadState;\n(function (ImageLoadState) {\n    /**\n     * The image has not yet been loaded, and there is no error yet.\n     */\n    ImageLoadState[ImageLoadState[\"notLoaded\"] = 0] = \"notLoaded\";\n    /**\n     * The image has been loaded successfully.\n     */\n    ImageLoadState[ImageLoadState[\"loaded\"] = 1] = \"loaded\";\n    /**\n     * An error has been encountered while loading the image.\n     */\n    ImageLoadState[ImageLoadState[\"error\"] = 2] = \"error\";\n    /**\n     * @deprecated Not used. Use `onLoadingStateChange` and re-render the Image with a different src.\n     */\n    ImageLoadState[ImageLoadState[\"errorLoaded\"] = 3] = \"errorLoaded\";\n})(ImageLoadState || (ImageLoadState = {}));\n//# sourceMappingURL=Image.types.js.map","var _a;\nimport { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { css, divProperties, elementContains, focusFirstChild, getNativeProps, on, shallowCompare, getPropsWithDefaults, } from '../../Utilities';\nimport { calculateGapSpace, getRectangleFromTarget } from '../../utilities/positioning/positioning';\nimport { positionCallout, RectangleEdge, positionCard, getBoundsFromTargetWindow } from '../../Positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\nimport { useMergedRefs, useAsync, useConst, useTarget, useOnEvent } from '@fluentui/react-hooks';\nimport { useWindowEx } from '../../utilities/dom';\nvar COMPONENT_NAME = 'CalloutContentBase';\nvar ANIMATIONS = (_a = {},\n    _a[RectangleEdge.top] = AnimationClassNames.slideUpIn10,\n    _a[RectangleEdge.bottom] = AnimationClassNames.slideDownIn10,\n    _a[RectangleEdge.left] = AnimationClassNames.slideLeftIn10,\n    _a[RectangleEdge.right] = AnimationClassNames.slideRightIn10,\n    _a);\nvar BEAK_ORIGIN_POSITION = { top: 0, left: 0 };\n// Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\n// Also set pointer-events: none so that the callout will not occlude the element it is\n// going to be positioned against\nvar OFF_SCREEN_STYLE = {\n    opacity: 0,\n    filter: 'opacity(0)',\n    pointerEvents: 'none',\n};\n// role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\nvar ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\nvar DEFAULT_PROPS = {\n    preventDismissOnLostFocus: false,\n    preventDismissOnScroll: false,\n    preventDismissOnResize: false,\n    isBeakVisible: true,\n    beakWidth: 16,\n    gapSpace: 0,\n    minPagePadding: 8,\n    directionalHint: DirectionalHint.bottomAutoEdge,\n};\nvar getClassNames = classNamesFunction({\n    disableCaching: true, // disabling caching because stylesProp.position mutates often\n});\n/**\n * (Hook) to return a function to lazily fetch the bounds of the target element for the callout.\n */\nfunction useBounds(_a, targetRef, targetWindow) {\n    var bounds = _a.bounds, _b = _a.minPagePadding, minPagePadding = _b === void 0 ? DEFAULT_PROPS.minPagePadding : _b, target = _a.target;\n    var _c = React.useState(false), targetWindowResized = _c[0], setTargetWindowResized = _c[1];\n    var cachedBounds = React.useRef();\n    var getBounds = React.useCallback(function () {\n        if (!cachedBounds.current || targetWindowResized) {\n            var currentBounds = typeof bounds === 'function' ? (targetWindow ? bounds(target, targetWindow) : undefined) : bounds;\n            if (!currentBounds && targetWindow) {\n                currentBounds = getBoundsFromTargetWindow(targetRef.current, targetWindow);\n                currentBounds = {\n                    top: currentBounds.top + minPagePadding,\n                    left: currentBounds.left + minPagePadding,\n                    right: currentBounds.right - minPagePadding,\n                    bottom: currentBounds.bottom - minPagePadding,\n                    width: currentBounds.width - minPagePadding * 2,\n                    height: currentBounds.height - minPagePadding * 2,\n                };\n            }\n            cachedBounds.current = currentBounds;\n            targetWindowResized && setTargetWindowResized(false);\n        }\n        return cachedBounds.current;\n    }, [bounds, minPagePadding, target, targetRef, targetWindow, targetWindowResized]);\n    var async = useAsync();\n    useOnEvent(targetWindow, 'resize', async.debounce(function () {\n        setTargetWindowResized(true);\n    }, 500, { leading: true }));\n    return getBounds;\n}\n/**\n * (Hook) to return the maximum available height for the Callout to render into.\n */\nfunction useMaxHeight(_a, getBounds, targetRef, positions) {\n    var _b;\n    var calloutMaxHeight = _a.calloutMaxHeight, finalHeight = _a.finalHeight, directionalHint = _a.directionalHint, directionalHintFixed = _a.directionalHintFixed, hidden = _a.hidden, gapSpace = _a.gapSpace, beakWidth = _a.beakWidth, isBeakVisible = _a.isBeakVisible, coverTarget = _a.coverTarget;\n    var _c = React.useState(), maxHeight = _c[0], setMaxHeight = _c[1];\n    var _d = (_b = positions === null || positions === void 0 ? void 0 : positions.elementPosition) !== null && _b !== void 0 ? _b : {}, top = _d.top, bottom = _d.bottom;\n    var targetRect = (targetRef === null || targetRef === void 0 ? void 0 : targetRef.current) ? getRectangleFromTarget(targetRef.current) : undefined;\n    React.useEffect(function () {\n        var _a;\n        var bounds = (_a = getBounds()) !== null && _a !== void 0 ? _a : {};\n        var topBounds = bounds.top;\n        var bottomBounds = bounds.bottom;\n        var calculatedHeight;\n        // If aligned to top edge of target and not covering target, update bottom bounds to the\n        // top of the target (accounting for gap space and beak)\n        if ((positions === null || positions === void 0 ? void 0 : positions.targetEdge) === RectangleEdge.top && (targetRect === null || targetRect === void 0 ? void 0 : targetRect.top) && !coverTarget) {\n            bottomBounds = targetRect.top - calculateGapSpace(isBeakVisible, beakWidth, gapSpace);\n        }\n        if (typeof top === 'number' && bottomBounds) {\n            calculatedHeight = bottomBounds - top;\n        }\n        else if (typeof bottom === 'number' && typeof topBounds === 'number' && bottomBounds) {\n            calculatedHeight = bottomBounds - topBounds - bottom;\n        }\n        if ((!calloutMaxHeight && !hidden) ||\n            (calloutMaxHeight && calculatedHeight && calloutMaxHeight > calculatedHeight)) {\n            setMaxHeight(calculatedHeight);\n        }\n        else if (calloutMaxHeight) {\n            setMaxHeight(calloutMaxHeight);\n        }\n        else {\n            setMaxHeight(undefined);\n        }\n    }, [\n        bottom,\n        calloutMaxHeight,\n        finalHeight,\n        directionalHint,\n        directionalHintFixed,\n        getBounds,\n        hidden,\n        positions,\n        top,\n        gapSpace,\n        beakWidth,\n        isBeakVisible,\n        targetRect,\n        coverTarget,\n    ]);\n    return maxHeight;\n}\n/**\n * (Hook) to find the current position of Callout. If Callout is resized then a new position is calculated.\n */\nfunction usePositions(props, hostElement, calloutElement, targetRef, getBounds, popupRef) {\n    var _a = React.useState(), positions = _a[0], setPositions = _a[1];\n    var positionAttempts = React.useRef(0);\n    var previousTarget = React.useRef();\n    var async = useAsync();\n    var hidden = props.hidden, target = props.target, finalHeight = props.finalHeight, calloutMaxHeight = props.calloutMaxHeight, onPositioned = props.onPositioned, directionalHint = props.directionalHint, hideOverflow = props.hideOverflow, preferScrollResizePositioning = props.preferScrollResizePositioning;\n    var win = useWindowEx();\n    var localRef = React.useRef();\n    var popupStyles;\n    if (localRef.current !== popupRef.current) {\n        localRef.current = popupRef.current;\n        popupStyles = popupRef.current ? win === null || win === void 0 ? void 0 : win.getComputedStyle(popupRef.current) : undefined;\n    }\n    var popupOverflowY = popupStyles === null || popupStyles === void 0 ? void 0 : popupStyles.overflowY;\n    React.useEffect(function () {\n        if (!hidden) {\n            var timerId_1 = async.requestAnimationFrame(function () {\n                var _a, _b;\n                if (hostElement.current && calloutElement) {\n                    var currentProps = __assign(__assign({}, props), { target: targetRef.current, bounds: getBounds() });\n                    // duplicate calloutElement & remove useMaxHeight's maxHeight for position calc\n                    var dupeCalloutElement = calloutElement.cloneNode(true);\n                    dupeCalloutElement.style.maxHeight = calloutMaxHeight ? \"\".concat(calloutMaxHeight) : '';\n                    dupeCalloutElement.style.visibility = 'hidden';\n                    (_a = calloutElement.parentElement) === null || _a === void 0 ? void 0 : _a.appendChild(dupeCalloutElement);\n                    var previousPositions = previousTarget.current === target ? positions : undefined;\n                    // only account for scroll resizing if styles allow callout to scroll\n                    // (popup styles determine if callout will scroll)\n                    var isOverflowYHidden = hideOverflow || popupOverflowY === 'clip' || popupOverflowY === 'hidden';\n                    var shouldScroll = preferScrollResizePositioning && !isOverflowYHidden;\n                    // If there is a finalHeight given then we assume that the user knows and will handle\n                    // additional positioning adjustments so we should call positionCard\n                    var newPositions = finalHeight\n                        ? positionCard(currentProps, hostElement.current, dupeCalloutElement, previousPositions, win)\n                        : positionCallout(currentProps, hostElement.current, dupeCalloutElement, previousPositions, shouldScroll, undefined, win);\n                    // clean up duplicate calloutElement\n                    (_b = calloutElement.parentElement) === null || _b === void 0 ? void 0 : _b.removeChild(dupeCalloutElement);\n                    // Set the new position only when the positions do not exist or one of the new callout positions\n                    // is different. The position should not change if the position is within 2 decimal places.\n                    if ((!positions && newPositions) ||\n                        (positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5)) {\n                        // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n                        // and we should stop trying to reposition to prevent a stack overflow.\n                        positionAttempts.current++;\n                        setPositions(newPositions);\n                    }\n                    else if (positionAttempts.current > 0) {\n                        // Only call the onPositioned callback if the callout has been re-positioned at least once.\n                        positionAttempts.current = 0;\n                        onPositioned === null || onPositioned === void 0 ? void 0 : onPositioned(positions);\n                    }\n                }\n            }, calloutElement);\n            previousTarget.current = target;\n            return function () {\n                async.cancelAnimationFrame(timerId_1);\n                previousTarget.current = undefined;\n            };\n        }\n        else {\n            // When the callout is hidden, clear position state so that it is not accidentally used next render.\n            setPositions(undefined);\n            positionAttempts.current = 0;\n        }\n    }, [\n        hidden,\n        directionalHint,\n        async,\n        calloutElement,\n        calloutMaxHeight,\n        hostElement,\n        targetRef,\n        finalHeight,\n        getBounds,\n        onPositioned,\n        positions,\n        props,\n        target,\n        hideOverflow,\n        preferScrollResizePositioning,\n        popupOverflowY,\n        win,\n    ]);\n    return positions;\n}\n/**\n * (Hook) to set up behavior to automatically focus the callout when it appears, if indicated by props.\n */\nfunction useAutoFocus(_a, positions, calloutElement) {\n    var hidden = _a.hidden, setInitialFocus = _a.setInitialFocus;\n    var async = useAsync();\n    var hasPositions = !!positions;\n    React.useEffect(function () {\n        if (!hidden && setInitialFocus && hasPositions && calloutElement) {\n            var timerId_2 = async.requestAnimationFrame(function () { return focusFirstChild(calloutElement); }, calloutElement);\n            return function () { return async.cancelAnimationFrame(timerId_2); };\n        }\n    }, [hidden, hasPositions, async, calloutElement, setInitialFocus]);\n}\n/**\n * (Hook) to set up various handlers to dismiss the popup when it loses focus or the window scrolls or similar cases.\n */\nfunction useDismissHandlers(_a, positions, hostElement, targetRef, targetWindow) {\n    var hidden = _a.hidden, onDismiss = _a.onDismiss, \n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnScroll = _a.preventDismissOnScroll, \n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnResize = _a.preventDismissOnResize, \n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnLostFocus = _a.preventDismissOnLostFocus, dismissOnTargetClick = _a.dismissOnTargetClick, shouldDismissOnWindowFocus = _a.shouldDismissOnWindowFocus, preventDismissOnEvent = _a.preventDismissOnEvent;\n    var isMouseDownOnPopup = React.useRef(false);\n    var async = useAsync();\n    var mouseDownHandlers = useConst([\n        function () {\n            isMouseDownOnPopup.current = true;\n        },\n        function () {\n            isMouseDownOnPopup.current = false;\n        },\n    ]);\n    var positionsExists = !!positions;\n    React.useEffect(function () {\n        var dismissOnScroll = function (ev) {\n            if (positionsExists && !preventDismissOnScroll) {\n                dismissOnClickOrScroll(ev);\n            }\n        };\n        var dismissOnResize = function (ev) {\n            if (!preventDismissOnResize && !(preventDismissOnEvent && preventDismissOnEvent(ev))) {\n                onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(ev);\n            }\n        };\n        var dismissOnLostFocus = function (ev) {\n            if (!preventDismissOnLostFocus) {\n                dismissOnClickOrScroll(ev);\n            }\n        };\n        var dismissOnClickOrScroll = function (ev) {\n            var eventPaths = ev.composedPath ? ev.composedPath() : [];\n            var target = eventPaths.length > 0 ? eventPaths[0] : ev.target;\n            var isEventTargetOutsideCallout = hostElement.current && !elementContains(hostElement.current, target);\n            // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n            if (isEventTargetOutsideCallout && isMouseDownOnPopup.current) {\n                isMouseDownOnPopup.current = false;\n                return;\n            }\n            if ((!targetRef.current && isEventTargetOutsideCallout) ||\n                (ev.target !== targetWindow &&\n                    isEventTargetOutsideCallout &&\n                    (!targetRef.current ||\n                        'stopPropagation' in targetRef.current ||\n                        dismissOnTargetClick ||\n                        (target !== targetRef.current && !elementContains(targetRef.current, target))))) {\n                if (preventDismissOnEvent && preventDismissOnEvent(ev)) {\n                    return;\n                }\n                onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(ev);\n            }\n        };\n        var dismissOnTargetWindowBlur = function (ev) {\n            // Do nothing\n            if (!shouldDismissOnWindowFocus) {\n                return;\n            }\n            if (((preventDismissOnEvent && !preventDismissOnEvent(ev)) ||\n                (!preventDismissOnEvent && !preventDismissOnLostFocus)) &&\n                !(targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.hasFocus()) &&\n                ev.relatedTarget === null) {\n                onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(ev);\n            }\n        };\n        // This is added so the callout will dismiss when the window is scrolled\n        // but not when something inside the callout is scrolled. The delay seems\n        // to be required to avoid React firing an async focus event in IE from\n        // the target changing focus quickly prior to rendering the callout.\n        var disposablesPromise = new Promise(function (resolve) {\n            async.setTimeout(function () {\n                if (!hidden && targetWindow) {\n                    var disposables_1 = [\n                        on(targetWindow, 'scroll', dismissOnScroll, true),\n                        on(targetWindow, 'resize', dismissOnResize, true),\n                        on(targetWindow.document.documentElement, 'focus', dismissOnLostFocus, true),\n                        on(targetWindow.document.documentElement, 'click', dismissOnLostFocus, true),\n                        on(targetWindow, 'blur', dismissOnTargetWindowBlur, true),\n                    ];\n                    resolve(function () {\n                        disposables_1.forEach(function (dispose) { return dispose(); });\n                    });\n                }\n            }, 0);\n        });\n        return function () {\n            disposablesPromise.then(function (dispose) { return dispose(); });\n        };\n    }, [\n        hidden,\n        async,\n        hostElement,\n        targetRef,\n        targetWindow,\n        onDismiss,\n        shouldDismissOnWindowFocus,\n        dismissOnTargetClick,\n        preventDismissOnLostFocus,\n        preventDismissOnResize,\n        preventDismissOnScroll,\n        positionsExists,\n        preventDismissOnEvent,\n    ]);\n    return mouseDownHandlers;\n}\nexport var CalloutContentBase = React.memo(React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    var styles = props.styles, style = props.style, ariaLabel = props.ariaLabel, ariaDescribedBy = props.ariaDescribedBy, ariaLabelledBy = props.ariaLabelledBy, className = props.className, isBeakVisible = props.isBeakVisible, children = props.children, beakWidth = props.beakWidth, calloutWidth = props.calloutWidth, calloutMaxWidth = props.calloutMaxWidth, calloutMinWidth = props.calloutMinWidth, doNotLayer = props.doNotLayer, finalHeight = props.finalHeight, _a = props.hideOverflow, hideOverflow = _a === void 0 ? !!finalHeight : _a, backgroundColor = props.backgroundColor, calloutMaxHeight = props.calloutMaxHeight, onScroll = props.onScroll, \n    // eslint-disable-next-line deprecation/deprecation\n    _b = props.shouldRestoreFocus, \n    // eslint-disable-next-line deprecation/deprecation\n    shouldRestoreFocus = _b === void 0 ? true : _b, target = props.target, hidden = props.hidden, onLayerMounted = props.onLayerMounted, popupProps = props.popupProps;\n    var hostElement = React.useRef(null);\n    var popupRef = React.useRef(null);\n    var mergedPopupRefs = useMergedRefs(popupRef, popupProps === null || popupProps === void 0 ? void 0 : popupProps.ref);\n    var _c = React.useState(null), calloutElement = _c[0], setCalloutElement = _c[1];\n    var calloutCallback = React.useCallback(function (calloutEl) {\n        setCalloutElement(calloutEl);\n    }, []);\n    var rootRef = useMergedRefs(hostElement, forwardedRef);\n    var _d = useTarget(props.target, {\n        current: calloutElement,\n    }), targetRef = _d[0], targetWindow = _d[1];\n    var getBounds = useBounds(props, targetRef, targetWindow);\n    var positions = usePositions(props, hostElement, calloutElement, targetRef, getBounds, mergedPopupRefs);\n    var maxHeight = useMaxHeight(props, getBounds, targetRef, positions);\n    var _e = useDismissHandlers(props, positions, hostElement, targetRef, targetWindow), mouseDownOnPopup = _e[0], mouseUpOnPopup = _e[1];\n    // do not set both top and bottom css props from positions\n    // instead, use maxHeight\n    var isForcedInBounds = (positions === null || positions === void 0 ? void 0 : positions.elementPosition.top) && (positions === null || positions === void 0 ? void 0 : positions.elementPosition.bottom);\n    var cssPositions = __assign(__assign({}, positions === null || positions === void 0 ? void 0 : positions.elementPosition), { maxHeight: maxHeight });\n    if (isForcedInBounds) {\n        cssPositions.bottom = undefined;\n    }\n    useAutoFocus(props, positions, calloutElement);\n    React.useEffect(function () {\n        if (!hidden) {\n            onLayerMounted === null || onLayerMounted === void 0 ? void 0 : onLayerMounted();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if hidden changes\n    }, [hidden]);\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!targetWindow) {\n        return null;\n    }\n    var overflowYHidden = hideOverflow;\n    var beakVisible = isBeakVisible && !!target;\n    var classNames = getClassNames(styles, {\n        theme: props.theme,\n        className: className,\n        overflowYHidden: overflowYHidden,\n        calloutWidth: calloutWidth,\n        positions: positions,\n        beakWidth: beakWidth,\n        backgroundColor: backgroundColor,\n        calloutMaxWidth: calloutMaxWidth,\n        calloutMinWidth: calloutMinWidth,\n        doNotLayer: doNotLayer,\n    });\n    var overflowStyle = __assign(__assign({ maxHeight: calloutMaxHeight ? calloutMaxHeight : '100%' }, style), (overflowYHidden && { overflowY: 'hidden' }));\n    var visibilityStyle = props.hidden ? { visibility: 'hidden' } : undefined;\n    // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n    return (React.createElement(\"div\", { ref: rootRef, className: classNames.container, style: visibilityStyle },\n        React.createElement(\"div\", __assign({}, getNativeProps(props, divProperties, ARIA_ROLE_ATTRIBUTES), { className: css(classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge]), style: positions ? __assign({}, cssPositions) : OFF_SCREEN_STYLE, \n            // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n            // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n            tabIndex: -1, ref: calloutCallback }),\n            beakVisible && React.createElement(\"div\", { className: classNames.beak, style: getBeakPosition(positions) }),\n            beakVisible && React.createElement(\"div\", { className: classNames.beakCurtain }),\n            React.createElement(Popup\n            // don't use getNativeElementProps for role and roledescription because it will also\n            // pass through data-* props (resulting in them being used in two places)\n            , __assign({ \n                // don't use getNativeElementProps for role and roledescription because it will also\n                // pass through data-* props (resulting in them being used in two places)\n                role: props.role, \"aria-roledescription\": props['aria-roledescription'], ariaDescribedBy: ariaDescribedBy, ariaLabel: ariaLabel, ariaLabelledBy: ariaLabelledBy, className: classNames.calloutMain, onDismiss: props.onDismiss, onMouseDown: mouseDownOnPopup, onMouseUp: mouseUpOnPopup, onRestoreFocus: props.onRestoreFocus, onScroll: onScroll, shouldRestoreFocus: shouldRestoreFocus, style: overflowStyle }, popupProps, { ref: mergedPopupRefs }), children))));\n}), function (previousProps, nextProps) {\n    if (!nextProps.shouldUpdateWhenHidden && previousProps.hidden && nextProps.hidden) {\n        // Do not update when hidden.\n        return true;\n    }\n    return shallowCompare(previousProps, nextProps);\n});\n/**\n * (Utility) to find and return the current `Callout` Beak position.\n *\n * @param positions\n */\nfunction getBeakPosition(positions) {\n    var _a, _b;\n    var beakPositionStyle = __assign(__assign({}, (_a = positions === null || positions === void 0 ? void 0 : positions.beakPosition) === null || _a === void 0 ? void 0 : _a.elementPosition), { display: ((_b = positions === null || positions === void 0 ? void 0 : positions.beakPosition) === null || _b === void 0 ? void 0 : _b.hideBeak) ? 'none' : undefined });\n    if (!beakPositionStyle.top && !beakPositionStyle.bottom && !beakPositionStyle.left && !beakPositionStyle.right) {\n        beakPositionStyle.left = BEAK_ORIGIN_POSITION.left;\n        beakPositionStyle.top = BEAK_ORIGIN_POSITION.top;\n    }\n    return beakPositionStyle;\n}\n/**\n * (Utility) used to compare two different elementPositions to determine whether they are equal.\n *\n * @param prevElementPositions\n * @param newElementPosition\n */\nfunction arePositionsEqual(prevElementPositions, newElementPosition) {\n    return (comparePositions(prevElementPositions.elementPosition, newElementPosition.elementPosition) &&\n        comparePositions(prevElementPositions.beakPosition.elementPosition, newElementPosition.beakPosition.elementPosition));\n}\n/**\n * (Utility) used in **arePositionsEqual** to compare two different elementPositions.\n *\n * @param prevElementPositions\n * @param newElementPositions\n */\nfunction comparePositions(prevElementPositions, newElementPositions) {\n    for (var key in newElementPositions) {\n        if (newElementPositions.hasOwnProperty(key)) {\n            var oldPositionEdge = prevElementPositions[key];\n            var newPositionEdge = newElementPositions[key];\n            if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n                if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n                    return false;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nCalloutContentBase.displayName = COMPONENT_NAME;\n//# sourceMappingURL=CalloutContent.base.js.map","import { styled } from '../../Utilities';\nimport { OverlayBase } from './Overlay.base';\nimport { getStyles } from './Overlay.styles';\nexport var Overlay = styled(OverlayBase, getStyles, undefined, {\n    scope: 'Overlay',\n});\n//# sourceMappingURL=Overlay.js.map","import { getGlobalClassNames, getInputFocusStyle, getPlaceholderStyles, hiddenContentStyle, HighContrastSelector, } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-BasePicker',\n    text: 'ms-BasePicker-text',\n    itemsWrapper: 'ms-BasePicker-itemsWrapper',\n    input: 'ms-BasePicker-input',\n};\nexport function getStyles(props) {\n    var _a, _b, _c;\n    var className = props.className, theme = props.theme, isFocused = props.isFocused, inputClassName = props.inputClassName, disabled = props.disabled;\n    if (!theme) {\n        throw new Error('theme is undefined or null in base BasePicker getStyles function.');\n    }\n    var semanticColors = theme.semanticColors, effects = theme.effects, fonts = theme.fonts;\n    var inputBorder = semanticColors.inputBorder, inputBorderHovered = semanticColors.inputBorderHovered, inputFocusBorderAlt = semanticColors.inputFocusBorderAlt;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    // placeholder style constants\n    var placeholderStyles = [\n        fonts.medium,\n        {\n            color: semanticColors.inputPlaceholderText,\n            opacity: 1,\n            selectors: (_a = {},\n                _a[HighContrastSelector] = {\n                    color: 'GrayText',\n                },\n                _a),\n        },\n    ];\n    var disabledPlaceholderStyles = {\n        color: semanticColors.disabledText,\n        selectors: (_b = {},\n            _b[HighContrastSelector] = {\n                color: 'GrayText',\n            },\n            _b),\n    };\n    // The following lines are to create a semi-transparent color overlay for the disabled state with designer's approval.\n    // @todo: investigate the performance cost of the calculation below and apply if negligible.\n    //   Replacing with a static color for now.\n    // const rgbColor: IRGB | undefined = cssColor(palette.neutralQuaternaryAlt);\n    // const disabledOverlayColor = rgbColor ? `rgba(${rgbColor.r}, ${rgbColor.g}, ${rgbColor.b}, 0.29)` : 'transparent';\n    var disabledOverlayColor = 'rgba(218, 218, 218, 0.29)';\n    return {\n        root: [classNames.root, className, { position: 'relative' }],\n        text: [\n            classNames.text,\n            {\n                display: 'flex',\n                position: 'relative',\n                flexWrap: 'wrap',\n                alignItems: 'center',\n                boxSizing: 'border-box',\n                minWidth: 180,\n                minHeight: 30,\n                border: \"1px solid \".concat(inputBorder),\n                borderRadius: effects.roundedCorner2,\n            },\n            !isFocused &&\n                !disabled && {\n                selectors: {\n                    ':hover': {\n                        borderColor: inputBorderHovered,\n                    },\n                },\n            },\n            isFocused && !disabled && getInputFocusStyle(inputFocusBorderAlt, effects.roundedCorner2),\n            disabled && {\n                borderColor: disabledOverlayColor,\n                selectors: (_c = {\n                        ':after': {\n                            content: '\"\"',\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            bottom: 0,\n                            left: 0,\n                            background: disabledOverlayColor,\n                        }\n                    },\n                    _c[HighContrastSelector] = {\n                        borderColor: 'GrayText',\n                        selectors: {\n                            ':after': {\n                                background: 'none',\n                            },\n                        },\n                    },\n                    _c),\n            },\n        ],\n        itemsWrapper: [\n            classNames.itemsWrapper,\n            {\n                display: 'flex',\n                flexWrap: 'wrap',\n                maxWidth: '100%',\n            },\n        ],\n        input: [\n            classNames.input,\n            fonts.medium,\n            {\n                height: 30,\n                border: 'none',\n                flexGrow: 1,\n                outline: 'none',\n                padding: '0 6px 0',\n                alignSelf: 'flex-end',\n                borderRadius: effects.roundedCorner2,\n                backgroundColor: 'transparent',\n                color: semanticColors.inputText,\n                selectors: {\n                    '::-ms-clear': {\n                        display: 'none',\n                    },\n                    '&:placeholder-shown': {\n                        textOverflow: 'ellipsis',\n                    },\n                },\n            },\n            getPlaceholderStyles(placeholderStyles),\n            disabled && getPlaceholderStyles(disabledPlaceholderStyles),\n            inputClassName,\n        ],\n        screenReaderText: hiddenContentStyle,\n    };\n}\n//# sourceMappingURL=BasePicker.styles.js.map","import { styled } from '../../Utilities';\nimport { ChoiceGroupBase } from './ChoiceGroup.base';\nimport { getStyles } from './ChoiceGroup.styles';\nexport var ChoiceGroup = styled(ChoiceGroupBase, getStyles, undefined, { scope: 'ChoiceGroup' });\n//# sourceMappingURL=ChoiceGroup.js.map","import { __assign } from \"tslib\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \"react-portal-compat-context\" uses v9 configs via path aliases\nimport { usePortalCompat } from '@fluentui/react-portal-compat-context';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport { classNamesFunction, css, getDocument, setPortalAttribute, setVirtualParent, FocusRectsProvider, FocusRectsContext, IsFocusVisibleClassName, } from '../../Utilities';\nimport { registerLayer, getDefaultTarget, unregisterLayer, getLayerHost, createDefaultLayerHost, } from './Layer.notification';\nimport { useIsomorphicLayoutEffect, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nvar getFocusVisibility = function (providerRef) {\n    if (providerRef === null || providerRef === void 0 ? void 0 : providerRef.current) {\n        return providerRef.current.classList.contains(IsFocusVisibleClassName);\n    }\n    return false;\n};\nexport var LayerBase = React.forwardRef(function (props, ref) {\n    var registerPortalEl = usePortalCompat();\n    var rootRef = React.useRef(null);\n    var mergedRef = useMergedRefs(rootRef, ref);\n    var layerRef = React.useRef();\n    var fabricElementRef = React.useRef(null);\n    var focusContext = React.useContext(FocusRectsContext);\n    // Tracks if the layer mount events need to be raised.\n    // Required to allow the DOM to render after the layer element is added.\n    var _a = React.useState(false), needRaiseLayerMount = _a[0], setNeedRaiseLayerMount = _a[1];\n    // Sets the focus visible className when the FocusRectsProvider for the layer is rendered\n    // This allows the current focus visibility style to be carried over to the layer content\n    var focusRectsRef = React.useCallback(function (el) {\n        var isFocusVisible = getFocusVisibility(focusContext === null || focusContext === void 0 ? void 0 : focusContext.providerRef);\n        if (el && isFocusVisible) {\n            el.classList.add(IsFocusVisibleClassName);\n        }\n    }, [focusContext]);\n    var children = props.children, className = props.className, eventBubblingEnabled = props.eventBubblingEnabled, fabricProps = props.fabricProps, hostId = props.hostId, insertFirst = props.insertFirst, _b = props.onLayerDidMount, onLayerDidMount = _b === void 0 ? function () { return undefined; } : _b, \n    // eslint-disable-next-line deprecation/deprecation\n    _c = props.onLayerMounted, \n    // eslint-disable-next-line deprecation/deprecation\n    onLayerMounted = _c === void 0 ? function () { return undefined; } : _c, onLayerWillUnmount = props.onLayerWillUnmount, styles = props.styles, theme = props.theme;\n    var fabricRef = useMergedRefs(fabricElementRef, fabricProps === null || fabricProps === void 0 ? void 0 : fabricProps.ref, focusRectsRef);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        isNotHost: !hostId,\n    });\n    // Returns the user provided hostId props element, the default target selector,\n    // or undefined if document doesn't exist.\n    var getHost = function (doc, shadowRoot) {\n        var _a, _b;\n        if (shadowRoot === void 0) { shadowRoot = null; }\n        var root = shadowRoot !== null && shadowRoot !== void 0 ? shadowRoot : doc;\n        if (hostId) {\n            var layerHost = getLayerHost(hostId);\n            if (layerHost) {\n                return (_a = layerHost.rootRef.current) !== null && _a !== void 0 ? _a : null;\n            }\n            return (_b = root.getElementById(hostId)) !== null && _b !== void 0 ? _b : null;\n        }\n        else {\n            var defaultHostSelector = getDefaultTarget();\n            // Find the host.\n            var host = defaultHostSelector ? root.querySelector(defaultHostSelector) : null;\n            // If no host is available, create a container for injecting layers in.\n            // Having a container scopes layout computation.\n            if (!host) {\n                host = createDefaultLayerHost(doc, shadowRoot);\n            }\n            return host;\n        }\n    };\n    // Removes the current layer element's parentNode and runs onLayerWillUnmount prop if provided.\n    var removeLayerElement = function () {\n        onLayerWillUnmount === null || onLayerWillUnmount === void 0 ? void 0 : onLayerWillUnmount();\n        var elem = layerRef.current;\n        // Clear ref before removing from the DOM\n        layerRef.current = undefined;\n        if (elem && elem.parentNode) {\n            elem.parentNode.removeChild(elem);\n        }\n    };\n    // If a doc or host exists, it will remove and update layer parentNodes.\n    var createLayerElement = function () {\n        var _a, _b, _c, _d;\n        var doc = getDocument(rootRef.current);\n        var shadowRoot = ((_b = (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.getRootNode()) === null || _b === void 0 ? void 0 : _b.host)\n            ? (_c = rootRef === null || rootRef === void 0 ? void 0 : rootRef.current) === null || _c === void 0 ? void 0 : _c.getRootNode()\n            : undefined;\n        if (!doc || (!doc && !shadowRoot)) {\n            return;\n        }\n        var host = getHost(doc, shadowRoot);\n        if (!host) {\n            return;\n        }\n        // Tabster in V9 sets aria-hidden on the elements outside of the modal dialog. And it doesn't set aria-hidden\n        // on the virtual children of the dialog. But the host element itself is not a virtual child of a dialog, it\n        // might contain virtual children. noDirectAriaHidden flag makes Tabster to poke inside the element and set\n        // aria-hidden on the children (if they are not virtual children of the active V9 dialog) not on the host element.\n        // To avoid importing Tabster as a dependency here, we just set a flag on the host element which is checked by\n        // Tabster.\n        if (!host.__tabsterElementFlags) {\n            host.__tabsterElementFlags = {};\n        }\n        host.__tabsterElementFlags.noDirectAriaHidden = true;\n        // Remove and re-create any previous existing layer elements.\n        removeLayerElement();\n        var el = ((_d = host.ownerDocument) !== null && _d !== void 0 ? _d : doc).createElement('div');\n        el.className = classNames.root;\n        setPortalAttribute(el);\n        setVirtualParent(el, rootRef.current);\n        insertFirst ? host.insertBefore(el, host.firstChild) : host.appendChild(el);\n        layerRef.current = el;\n        setNeedRaiseLayerMount(true);\n    };\n    useIsomorphicLayoutEffect(function () {\n        createLayerElement();\n        // Check if the user provided a hostId prop and register the layer with the ID.\n        if (hostId) {\n            registerLayer(hostId, createLayerElement);\n        }\n        var unregisterPortalEl = layerRef.current ? registerPortalEl(layerRef.current) : undefined;\n        return function () {\n            if (unregisterPortalEl) {\n                unregisterPortalEl();\n            }\n            removeLayerElement();\n            if (hostId) {\n                unregisterLayer(hostId, createLayerElement);\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should run if the hostId updates.\n    }, [hostId]);\n    React.useEffect(function () {\n        if (layerRef.current && needRaiseLayerMount) {\n            onLayerMounted === null || onLayerMounted === void 0 ? void 0 : onLayerMounted();\n            onLayerDidMount === null || onLayerDidMount === void 0 ? void 0 : onLayerDidMount();\n            setNeedRaiseLayerMount(false);\n        }\n    }, [needRaiseLayerMount, onLayerMounted, onLayerDidMount]);\n    useDebugWarnings(props);\n    return (React.createElement(\"span\", { className: \"ms-layer\", ref: mergedRef }, layerRef.current &&\n        ReactDOM.createPortal(React.createElement(FocusRectsProvider, { layerRoot: true, providerRef: fabricRef },\n            React.createElement(Fabric, __assign({}, (!eventBubblingEnabled && getFilteredEvents()), fabricProps, { className: css(classNames.content, fabricProps === null || fabricProps === void 0 ? void 0 : fabricProps.className), ref: fabricRef }), children)), layerRef.current)));\n});\nLayerBase.displayName = 'LayerBase';\nvar filteredEventProps;\nvar onFilterEvent = function (ev) {\n    // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n    // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n    // event name rather than ev.bubble.\n    if (ev.eventPhase === Event.BUBBLING_PHASE &&\n        ev.type !== 'mouseenter' &&\n        ev.type !== 'mouseleave' &&\n        ev.type !== 'touchstart' &&\n        ev.type !== 'touchend') {\n        ev.stopPropagation();\n    }\n};\nfunction getFilteredEvents() {\n    if (!filteredEventProps) {\n        filteredEventProps = {};\n        [\n            'onClick',\n            'onContextMenu',\n            'onDoubleClick',\n            'onDrag',\n            'onDragEnd',\n            'onDragEnter',\n            'onDragExit',\n            'onDragLeave',\n            'onDragOver',\n            'onDragStart',\n            'onDrop',\n            'onMouseDown',\n            'onMouseEnter',\n            'onMouseLeave',\n            'onMouseMove',\n            'onMouseOver',\n            'onMouseOut',\n            'onMouseUp',\n            'onTouchMove',\n            'onTouchStart',\n            'onTouchCancel',\n            'onTouchEnd',\n            'onKeyDown',\n            'onKeyPress',\n            'onKeyUp',\n            'onFocus',\n            'onBlur',\n            'onChange',\n            'onInput',\n            'onInvalid',\n            'onSubmit',\n        ].forEach(function (name) { return (filteredEventProps[name] = onFilterEvent); });\n    }\n    return filteredEventProps;\n}\nfunction useDebugWarnings(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: 'Layer',\n            props: props,\n            deprecations: { onLayerMounted: 'onLayerDidMount' },\n        });\n    }\n}\n//# sourceMappingURL=Layer.base.js.map","import * as React from 'react';\nimport { FocusZone } from '../../../FocusZone';\nimport { addYears, setMonth, getYearStart, getYearEnd, getMonthStart, getMonthEnd, compareDatePart, DEFAULT_DATE_FORMATTING, } from '@fluentui/date-time-utilities';\nimport { Icon } from '../../../Icon';\nimport { getStyles } from './CalendarMonth.styles';\nimport { css, getRTL, classNamesFunction, KeyCodes, format, getPropsWithDefaults } from '@fluentui/utilities';\nimport { CalendarYear } from '../CalendarYear/CalendarYear';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nvar MONTHS_PER_ROW = 4;\nvar getClassNames = classNamesFunction();\nvar DEFAULT_PROPS = {\n    styles: getStyles,\n    strings: undefined,\n    navigationIcons: defaultCalendarNavigationIcons,\n    dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n    yearPickerHidden: false,\n};\nfunction useAnimateBackwards(_a) {\n    var navigatedDate = _a.navigatedDate;\n    var currentYear = navigatedDate.getFullYear();\n    var previousYear = usePrevious(currentYear);\n    if (previousYear === undefined || previousYear === currentYear) {\n        return undefined;\n    }\n    else {\n        return previousYear > currentYear;\n    }\n}\nfunction useFocusLogic(_a) {\n    var componentRef = _a.componentRef;\n    var navigatedMonthRef = React.useRef(null);\n    var calendarYearRef = React.useRef(null);\n    var focusOnUpdate = React.useRef(false);\n    var focus = React.useCallback(function () {\n        if (calendarYearRef.current) {\n            calendarYearRef.current.focus();\n        }\n        else if (navigatedMonthRef.current) {\n            navigatedMonthRef.current.focus();\n        }\n    }, []);\n    React.useImperativeHandle(componentRef, function () { return ({ focus: focus }); }, [focus]);\n    React.useEffect(function () {\n        if (focusOnUpdate.current) {\n            focus();\n            focusOnUpdate.current = false;\n        }\n    });\n    var focusOnNextUpdate = function () {\n        focusOnUpdate.current = true;\n    };\n    return [navigatedMonthRef, calendarYearRef, focusOnNextUpdate];\n}\nexport var CalendarMonthBase = function (propsWithoutDefaults) {\n    var _a, _b;\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    var _c = useFocusLogic(props), navigatedMonthRef = _c[0], calendarYearRef = _c[1], focusOnNextUpdate = _c[2];\n    var _d = React.useState(false), isYearPickerVisible = _d[0], setIsYearPickerVisible = _d[1];\n    var animateBackwards = useAnimateBackwards(props);\n    var navigatedDate = props.navigatedDate, selectedDate = props.selectedDate, strings = props.strings, _e = props.today, today = _e === void 0 ? new Date() : _e, navigationIcons = props.navigationIcons, dateTimeFormatter = props.dateTimeFormatter, minDate = props.minDate, maxDate = props.maxDate, theme = props.theme, styles = props.styles, className = props.className, allFocusable = props.allFocusable, highlightCurrentMonth = props.highlightCurrentMonth, highlightSelectedMonth = props.highlightSelectedMonth, animationDirection = props.animationDirection, yearPickerHidden = props.yearPickerHidden, onNavigateDate = props.onNavigateDate;\n    var selectMonthCallback = function (newMonth) {\n        return function () { return onSelectMonth(newMonth); };\n    };\n    var onSelectNextYear = function () {\n        onNavigateDate(addYears(navigatedDate, 1), false);\n    };\n    var onSelectPrevYear = function () {\n        onNavigateDate(addYears(navigatedDate, -1), false);\n    };\n    var onSelectMonth = function (newMonth) {\n        var _a;\n        // If header is clickable the calendars are overlayed, switch back to day picker when month is clicked\n        (_a = props.onHeaderSelect) === null || _a === void 0 ? void 0 : _a.call(props);\n        onNavigateDate(setMonth(navigatedDate, newMonth), true);\n    };\n    var onHeaderSelect = function () {\n        var _a;\n        if (!yearPickerHidden) {\n            focusOnNextUpdate();\n            setIsYearPickerVisible(true);\n        }\n        else {\n            (_a = props.onHeaderSelect) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n    };\n    var onSelectYear = function (selectedYear) {\n        focusOnNextUpdate();\n        var navYear = navigatedDate.getFullYear();\n        if (navYear !== selectedYear) {\n            var newNavigationDate = new Date(navigatedDate.getTime());\n            newNavigationDate.setFullYear(selectedYear);\n            // for min and max dates, adjust the new navigation date - perhaps this should be\n            // checked on the master navigation date handler (i.e. in Calendar)\n            if (maxDate && newNavigationDate > maxDate) {\n                newNavigationDate = setMonth(newNavigationDate, maxDate.getMonth());\n            }\n            else if (minDate && newNavigationDate < minDate) {\n                newNavigationDate = setMonth(newNavigationDate, minDate.getMonth());\n            }\n            onNavigateDate(newNavigationDate, true);\n        }\n        setIsYearPickerVisible(false);\n    };\n    var onYearPickerHeaderSelect = function (focus) {\n        focusOnNextUpdate();\n        setIsYearPickerVisible(false);\n    };\n    // navigationIcons has a default value in defaultProps, but typescript doesn't recognize this\n    var leftNavigationIcon = navigationIcons.leftNavigation;\n    var rightNavigationIcon = navigationIcons.rightNavigation;\n    var dateFormatter = dateTimeFormatter;\n    // determine if previous/next years are in bounds\n    var isPrevYearInBounds = minDate ? compareDatePart(minDate, getYearStart(navigatedDate)) < 0 : true;\n    var isNextYearInBounds = maxDate ? compareDatePart(getYearEnd(navigatedDate), maxDate) < 0 : true;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        hasHeaderClickCallback: !!props.onHeaderSelect || !yearPickerHidden,\n        highlightCurrent: highlightCurrentMonth,\n        highlightSelected: highlightSelectedMonth,\n        animateBackwards: animateBackwards,\n        animationDirection: animationDirection,\n    });\n    if (isYearPickerVisible) {\n        var _f = getYearStrings(props), onRenderYear = _f[0], yearStrings = _f[1];\n        // use navigated date for the year picker\n        return (React.createElement(CalendarYear, { key: 'calendarYear', minYear: minDate ? minDate.getFullYear() : undefined, maxYear: maxDate ? maxDate.getFullYear() : undefined, \n            // eslint-disable-next-line react/jsx-no-bind\n            onSelectYear: onSelectYear, navigationIcons: navigationIcons, \n            // eslint-disable-next-line react/jsx-no-bind\n            onHeaderSelect: onYearPickerHeaderSelect, selectedYear: selectedDate ? selectedDate.getFullYear() : navigatedDate ? navigatedDate.getFullYear() : undefined, navigatedYear: navigatedDate.getFullYear(), onRenderYear: onRenderYear, strings: yearStrings, componentRef: calendarYearRef, styles: styles, highlightCurrentYear: highlightCurrentMonth, highlightSelectedYear: highlightSelectedMonth, animationDirection: animationDirection }));\n    }\n    var rowIndexes = [];\n    for (var i = 0; i < strings.shortMonths.length / MONTHS_PER_ROW; i++) {\n        rowIndexes.push(i);\n    }\n    var yearString = dateFormatter.formatYear(navigatedDate);\n    var headerAriaLabel = strings.monthPickerHeaderAriaLabel\n        ? format(strings.monthPickerHeaderAriaLabel, yearString)\n        : yearString;\n    return (React.createElement(\"div\", { className: classNames.root },\n        React.createElement(\"div\", { className: classNames.headerContainer },\n            React.createElement(\"button\", { className: classNames.currentItemButton, onClick: onHeaderSelect, onKeyDown: onButtonKeyDown(onHeaderSelect), \"aria-label\": headerAriaLabel, \"data-is-focusable\": !!props.onHeaderSelect || !yearPickerHidden, tabIndex: !!props.onHeaderSelect || !yearPickerHidden ? 0 : -1, type: \"button\" },\n                React.createElement(\"span\", { \"aria-live\": \"polite\", \"aria-atomic\": \"true\" }, yearString)),\n            React.createElement(\"div\", { className: classNames.navigationButtonsContainer },\n                React.createElement(\"button\", { className: css(classNames.navigationButton, (_a = {},\n                        _a[classNames.disabled] = !isPrevYearInBounds,\n                        _a)), \"aria-disabled\": !isPrevYearInBounds, tabIndex: isPrevYearInBounds ? undefined : allFocusable ? 0 : -1, onClick: isPrevYearInBounds ? onSelectPrevYear : undefined, onKeyDown: isPrevYearInBounds ? onButtonKeyDown(onSelectPrevYear) : undefined, title: strings.prevYearAriaLabel\n                        ? strings.prevYearAriaLabel + ' ' + dateFormatter.formatYear(addYears(navigatedDate, -1))\n                        : undefined, type: \"button\" },\n                    React.createElement(Icon, { iconName: getRTL() ? rightNavigationIcon : leftNavigationIcon })),\n                React.createElement(\"button\", { className: css(classNames.navigationButton, (_b = {},\n                        _b[classNames.disabled] = !isNextYearInBounds,\n                        _b)), \"aria-disabled\": !isNextYearInBounds, tabIndex: isNextYearInBounds ? undefined : allFocusable ? 0 : -1, onClick: isNextYearInBounds ? onSelectNextYear : undefined, onKeyDown: isNextYearInBounds ? onButtonKeyDown(onSelectNextYear) : undefined, title: strings.nextYearAriaLabel\n                        ? strings.nextYearAriaLabel + ' ' + dateFormatter.formatYear(addYears(navigatedDate, 1))\n                        : undefined, type: \"button\" },\n                    React.createElement(Icon, { iconName: getRTL() ? leftNavigationIcon : rightNavigationIcon })))),\n        React.createElement(FocusZone, null,\n            React.createElement(\"div\", { className: classNames.gridContainer, role: \"grid\", \"aria-label\": yearString }, rowIndexes.map(function (rowNum) {\n                var monthsForRow = strings.shortMonths.slice(rowNum * MONTHS_PER_ROW, (rowNum + 1) * MONTHS_PER_ROW);\n                return (React.createElement(\"div\", { key: 'monthRow_' + rowNum + navigatedDate.getFullYear(), role: \"row\", className: classNames.buttonRow }, monthsForRow.map(function (month, index) {\n                    var _a;\n                    var monthIndex = rowNum * MONTHS_PER_ROW + index;\n                    var indexedMonth = setMonth(navigatedDate, monthIndex);\n                    var isNavigatedMonth = navigatedDate.getMonth() === monthIndex;\n                    var isSelectedMonth = selectedDate.getMonth() === monthIndex;\n                    var isSelectedYear = selectedDate.getFullYear() === navigatedDate.getFullYear();\n                    var isInBounds = (minDate ? compareDatePart(minDate, getMonthEnd(indexedMonth)) < 1 : true) &&\n                        (maxDate ? compareDatePart(getMonthStart(indexedMonth), maxDate) < 1 : true);\n                    return (React.createElement(\"button\", { ref: isNavigatedMonth ? navigatedMonthRef : undefined, role: 'gridcell', className: css(classNames.itemButton, (_a = {},\n                            _a[classNames.current] = highlightCurrentMonth && isCurrentMonth(monthIndex, navigatedDate.getFullYear(), today),\n                            _a[classNames.selected] = highlightSelectedMonth && isSelectedMonth && isSelectedYear,\n                            _a[classNames.disabled] = !isInBounds,\n                            _a)), disabled: !allFocusable && !isInBounds, key: monthIndex, onClick: isInBounds ? selectMonthCallback(monthIndex) : undefined, onKeyDown: isInBounds ? onButtonKeyDown(selectMonthCallback(monthIndex)) : undefined, \"aria-label\": dateFormatter.formatMonth(indexedMonth, strings), \"aria-selected\": isNavigatedMonth, \"data-is-focusable\": isInBounds ? true : undefined, type: \"button\" }, month));\n                })));\n            })))));\n};\nCalendarMonthBase.displayName = 'CalendarMonthBase';\nfunction getYearStrings(_a) {\n    var strings = _a.strings, navigatedDate = _a.navigatedDate, dateTimeFormatter = _a.dateTimeFormatter;\n    var yearToString = function (year) {\n        if (dateTimeFormatter) {\n            // create a date based on the current nav date\n            var yearFormattingDate = new Date(navigatedDate.getTime());\n            yearFormattingDate.setFullYear(year);\n            return dateTimeFormatter.formatYear(yearFormattingDate);\n        }\n        return String(year);\n    };\n    var yearRangeToString = function (yearRange) {\n        return \"\".concat(yearToString(yearRange.fromYear), \" - \").concat(yearToString(yearRange.toYear));\n    };\n    var yearRangeToNextDecadeLabel = function (yearRange) {\n        return strings.nextYearRangeAriaLabel ? \"\".concat(strings.nextYearRangeAriaLabel, \" \").concat(yearRangeToString(yearRange)) : '';\n    };\n    var yearRangeToPrevDecadeLabel = function (yearRange) {\n        return strings.prevYearRangeAriaLabel ? \"\".concat(strings.prevYearRangeAriaLabel, \" \").concat(yearRangeToString(yearRange)) : '';\n    };\n    return [\n        yearToString,\n        {\n            rangeAriaLabel: yearRangeToString,\n            prevRangeAriaLabel: yearRangeToPrevDecadeLabel,\n            nextRangeAriaLabel: yearRangeToNextDecadeLabel,\n            headerAriaLabelFormatString: strings.yearPickerHeaderAriaLabel,\n        },\n    ];\n}\nfunction isCurrentMonth(month, year, today) {\n    return today.getFullYear() === year && today.getMonth() === month;\n}\nfunction onButtonKeyDown(callback) {\n    return function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n            case KeyCodes.enter:\n                callback();\n                break;\n        }\n    };\n}\n//# sourceMappingURL=CalendarMonth.base.js.map","import { styled } from '../../Utilities';\nimport { DialogContentBase } from './DialogContent.base';\nimport { getStyles } from './DialogContent.styles';\nexport var DialogContent = styled(DialogContentBase, getStyles, undefined, { scope: 'DialogContent' });\nDialogContent.displayName = 'DialogContent';\n//# sourceMappingURL=DialogContent.js.map","import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { anchorProperties, assign, buttonProperties, createMergedRef, css, getId, getNativeProps, initializeComponentRef, memoizeFunction, mergeAriaAttributeValues, nullRender, portalContainsElement, setFocusVisibility, warnConditionallyRequiredProps, warnDeprecations, Async, EventGroup, FocusRects, FocusRectsContext, KeyCodes, } from '../../Utilities';\nimport { Icon, FontIcon, ImageIcon } from '../../Icon';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { ContextualMenu } from '../../ContextualMenu';\nimport { getBaseButtonClassNames } from './BaseButton.classNames';\nimport { getSplitButtonClassNames as getBaseSplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport { KeytipData } from '../../KeytipData';\nimport { composeComponentAs } from '../../Utilities';\nvar TouchIdleDelay = 500; /* ms */\nvar COMPONENT_NAME = 'BaseButton';\n/**\n * {@docCategory Button}\n */\nexport var BaseButton = /** @class */ (function (_super) {\n    __extends(BaseButton, _super);\n    function BaseButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this._buttonElement = React.createRef();\n        _this._splitButtonContainer = React.createRef();\n        _this._mergedRef = createMergedRef();\n        _this._renderedVisibleMenu = false;\n        _this._getMemoizedMenuButtonKeytipProps = memoizeFunction(function (keytipProps) {\n            return __assign(__assign({}, keytipProps), { hasMenu: true });\n        });\n        _this._onRenderIcon = function (buttonProps, defaultRender) {\n            var iconProps = _this.props.iconProps;\n            if (iconProps && (iconProps.iconName !== undefined || iconProps.imageProps)) {\n                var className = iconProps.className, imageProps = iconProps.imageProps, rest = __rest(iconProps, [\"className\", \"imageProps\"]);\n                // If the styles prop is specified as part of iconProps, fall back to regular Icon as FontIcon and ImageIcon\n                // do not have this prop.\n                if (iconProps.styles) {\n                    return React.createElement(Icon, __assign({ className: css(_this._classNames.icon, className), imageProps: imageProps }, rest));\n                }\n                if (iconProps.iconName) {\n                    return React.createElement(FontIcon, __assign({ className: css(_this._classNames.icon, className) }, rest));\n                }\n                if (imageProps) {\n                    return React.createElement(ImageIcon, __assign({ className: css(_this._classNames.icon, className), imageProps: imageProps }, rest));\n                }\n            }\n            return null;\n        };\n        _this._onRenderTextContents = function () {\n            var _a, _b, _c, _d;\n            var text = (_a = _this.props, _a.text), children = _a.children, \n            // eslint-disable-next-line deprecation/deprecation\n            secondaryText = (_b = _a.secondaryText, _b === void 0 ? _this.props.description : _b), onRenderText = (_c = _a.onRenderText, _c === void 0 ? _this._onRenderText : _c), onRenderDescription = (_d = _a.onRenderDescription, _d === void 0 ? _this._onRenderDescription : _d);\n            if (text || typeof children === 'string' || secondaryText) {\n                return (React.createElement(\"span\", { className: _this._classNames.textContainer },\n                    onRenderText(_this.props, _this._onRenderText),\n                    onRenderDescription(_this.props, _this._onRenderDescription)));\n            }\n            return [onRenderText(_this.props, _this._onRenderText), onRenderDescription(_this.props, _this._onRenderDescription)];\n        };\n        _this._onRenderText = function () {\n            var text = _this.props.text;\n            var children = _this.props.children;\n            // For backwards compat, we should continue to take in the text content from children.\n            if (text === undefined && typeof children === 'string') {\n                text = children;\n            }\n            if (_this._hasText()) {\n                return (React.createElement(\"span\", { key: _this._labelId, className: _this._classNames.label, id: _this._labelId }, text));\n            }\n            return null;\n        };\n        _this._onRenderChildren = function () {\n            var children = _this.props.children;\n            // If children is just a string, either it or the text will be rendered via onRenderLabel\n            // If children is another component, it will be rendered after text\n            if (typeof children === 'string') {\n                return null;\n            }\n            return children;\n        };\n        _this._onRenderDescription = function (props) {\n            var _a;\n            // eslint-disable-next-line deprecation/deprecation\n            var secondaryText = (_a = props.secondaryText, _a === void 0 ? _this.props.description : _a);\n            // ms-Button-description is only shown when the button type is compound.\n            // In other cases it will not be displayed.\n            return secondaryText ? (React.createElement(\"span\", { key: _this._descriptionId, className: _this._classNames.description, id: _this._descriptionId }, secondaryText)) : null;\n        };\n        _this._onRenderAriaDescription = function () {\n            var ariaDescription = _this.props.ariaDescription;\n            // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n            // otherwise it will be assigned to descriptionSpan.\n            return ariaDescription ? (React.createElement(\"span\", { className: _this._classNames.screenReaderText, id: _this._ariaDescriptionId }, ariaDescription)) : null;\n        };\n        _this._onRenderMenuIcon = function (props) {\n            var menuIconProps = _this.props.menuIconProps;\n            return React.createElement(FontIcon, __assign({ iconName: \"ChevronDown\" }, menuIconProps, { className: _this._classNames.menuIcon }));\n        };\n        _this._onRenderMenu = function (menuProps) {\n            var MenuType = _this.props.menuAs ? composeComponentAs(_this.props.menuAs, ContextualMenu) : ContextualMenu;\n            return React.createElement(MenuType, __assign({}, menuProps));\n        };\n        _this._onDismissMenu = function (ev) {\n            var menuProps = _this.props.menuProps;\n            if (menuProps && menuProps.onDismiss) {\n                menuProps.onDismiss(ev);\n            }\n            if (!ev || !ev.defaultPrevented) {\n                _this._dismissMenu();\n            }\n        };\n        _this._dismissMenu = function () {\n            _this._menuShouldFocusOnMount = undefined;\n            _this._menuShouldFocusOnContainer = undefined;\n            _this.setState({ menuHidden: true });\n        };\n        _this._openMenu = function (shouldFocusOnContainer, shouldFocusOnMount) {\n            if (shouldFocusOnMount === void 0) { shouldFocusOnMount = true; }\n            if (_this.props.menuProps) {\n                _this._menuShouldFocusOnContainer = shouldFocusOnContainer;\n                _this._menuShouldFocusOnMount = shouldFocusOnMount;\n                _this._renderedVisibleMenu = true;\n                _this.setState({ menuHidden: false });\n            }\n        };\n        _this._onToggleMenu = function (shouldFocusOnContainer) {\n            var shouldFocusOnMount = true;\n            if (_this.props.menuProps && _this.props.menuProps.shouldFocusOnMount === false) {\n                shouldFocusOnMount = false;\n            }\n            _this.state.menuHidden ? _this._openMenu(shouldFocusOnContainer, shouldFocusOnMount) : _this._dismissMenu();\n        };\n        _this._onSplitContainerFocusCapture = function (ev) {\n            var container = _this._splitButtonContainer.current;\n            // If the target is coming from the portal we do not need to set focus on the container.\n            if (!container || (ev.target && portalContainsElement(ev.target, container))) {\n                return;\n            }\n            // We should never be able to focus the individual buttons in a split button. Focus\n            // should always remain on the container.\n            container.focus();\n        };\n        _this._onSplitButtonPrimaryClick = function (ev) {\n            if (!_this.state.menuHidden) {\n                _this._dismissMenu();\n            }\n            // toggle split buttons need two separate targets, even for touch\n            var singleTouchTarget = _this._processingTouch && !_this.props.toggle;\n            if (!singleTouchTarget && _this.props.onClick) {\n                _this.props.onClick(ev);\n            }\n            else if (singleTouchTarget) {\n                _this._onMenuClick(ev);\n            }\n        };\n        _this._onKeyDown = function (ev) {\n            // explicity cancelling event so click won't fire after this\n            // eslint-disable-next-line deprecation/deprecation\n            if (_this.props.disabled && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            else if (!_this.props.disabled) {\n                if (_this.props.menuProps) {\n                    _this._onMenuKeyDown(ev);\n                }\n                else if (_this.props.onKeyDown !== undefined) {\n                    _this.props.onKeyDown(ev); // not cancelling event because it's not disabled\n                }\n            }\n        };\n        _this._onKeyUp = function (ev) {\n            if (!_this.props.disabled && _this.props.onKeyUp !== undefined) {\n                _this.props.onKeyUp(ev); // not cancelling event because it's not disabled\n            }\n        };\n        _this._onKeyPress = function (ev) {\n            // eslint-disable-next-line deprecation/deprecation\n            if (!_this.props.disabled && _this.props.onKeyPress !== undefined) {\n                // eslint-disable-next-line deprecation/deprecation\n                _this.props.onKeyPress(ev); // not cancelling event because it's not disabled\n            }\n        };\n        _this._onMouseUp = function (ev) {\n            if (!_this.props.disabled && _this.props.onMouseUp !== undefined) {\n                _this.props.onMouseUp(ev); // not cancelling event because it's not disabled\n            }\n        };\n        _this._onMouseDown = function (ev) {\n            if (!_this.props.disabled && _this.props.onMouseDown !== undefined) {\n                _this.props.onMouseDown(ev); // not cancelling event because it's not disabled\n            }\n        };\n        _this._onClick = function (ev) {\n            if (!_this.props.disabled) {\n                if (_this.props.menuProps) {\n                    _this._onMenuClick(ev);\n                }\n                else if (_this.props.onClick !== undefined) {\n                    _this.props.onClick(ev); // not cancelling event because it's not disabled\n                }\n            }\n        };\n        _this._onSplitButtonContainerKeyDown = function (ev) {\n            // eslint-disable-next-line deprecation/deprecation\n            if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n                if (_this._buttonElement.current) {\n                    _this._buttonElement.current.click();\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            }\n            else {\n                _this._onMenuKeyDown(ev);\n            }\n        };\n        _this._onMenuKeyDown = function (ev) {\n            var _a;\n            if (_this.props.disabled) {\n                return;\n            }\n            if (_this.props.onKeyDown) {\n                _this.props.onKeyDown(ev);\n            }\n            // eslint-disable-next-line deprecation/deprecation\n            var isUp = ev.which === KeyCodes.up;\n            // eslint-disable-next-line deprecation/deprecation\n            var isDown = ev.which === KeyCodes.down;\n            if (!ev.defaultPrevented && _this._isValidMenuOpenKey(ev)) {\n                var onMenuClick = _this.props.onMenuClick;\n                if (onMenuClick) {\n                    onMenuClick(ev, _this.props);\n                }\n                _this._onToggleMenu(false);\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            // eslint-disable-next-line deprecation/deprecation\n            if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n                // We manually set the focus visibility to true if opening via Enter or Space to account for the scenario where\n                // a user clicks on the button, closes the menu and then opens it via keyboard. In this scenario our default logic\n                // for setting focus visibility is not triggered since there is no keyboard navigation present beforehand.\n                setFocusVisibility(true, ev.target, (_a = _this.context) === null || _a === void 0 ? void 0 : _a.registeredProviders);\n            }\n            if (!(ev.altKey || ev.metaKey) && (isUp || isDown)) {\n                // Suppose a menu, with shouldFocusOnMount: false, is open, and user wants to keyboard to the menu items\n                // We need to re-render the menu with shouldFocusOnMount as true.\n                if (!_this.state.menuHidden && _this.props.menuProps) {\n                    var currentShouldFocusOnMount = _this._menuShouldFocusOnMount !== undefined\n                        ? _this._menuShouldFocusOnMount\n                        : _this.props.menuProps.shouldFocusOnMount;\n                    if (!currentShouldFocusOnMount) {\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                        _this._menuShouldFocusOnMount = true;\n                        _this.forceUpdate();\n                    }\n                }\n            }\n        };\n        _this._onTouchStart = function () {\n            if (_this._isSplitButton &&\n                _this._splitButtonContainer.current &&\n                !('onpointerdown' in _this._splitButtonContainer.current)) {\n                _this._handleTouchAndPointerEvent();\n            }\n        };\n        _this._onMenuClick = function (ev) {\n            var _a;\n            var onMenuClick = (_a = _this.props, _a.onMenuClick), menuProps = _a.menuProps;\n            if (onMenuClick) {\n                onMenuClick(ev, _this.props);\n            }\n            // focus on the container by default when the menu is opened with a click event\n            // this differentiates from a keyboard interaction triggering the click event\n            var shouldFocusOnContainer = typeof (menuProps === null || menuProps === void 0 ? void 0 : menuProps.shouldFocusOnContainer) === 'boolean'\n                ? menuProps.shouldFocusOnContainer\n                : ev.nativeEvent.pointerType === 'mouse';\n            if (!ev.defaultPrevented) {\n                _this._onToggleMenu(shouldFocusOnContainer);\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n        };\n        initializeComponentRef(_this);\n        _this._async = new Async(_this);\n        _this._events = new EventGroup(_this);\n        warnConditionallyRequiredProps(COMPONENT_NAME, props, ['menuProps', 'onClick'], 'split', _this.props.split);\n        warnDeprecations(COMPONENT_NAME, props, {\n            rootProps: undefined,\n            description: 'secondaryText',\n            toggled: 'checked',\n        });\n        _this._labelId = getId();\n        _this._descriptionId = getId();\n        _this._ariaDescriptionId = getId();\n        _this.state = {\n            menuHidden: true,\n        };\n        return _this;\n    }\n    Object.defineProperty(BaseButton.prototype, \"_isSplitButton\", {\n        get: function () {\n            return !!this.props.menuProps && !!this.props.onClick && this.props.split === true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseButton.prototype.render = function () {\n        var _a, _b, _c, _d, _e;\n        var ariaDescription = (_a = this.props, _a.ariaDescription), ariaLabel = _a.ariaLabel, ariaHidden = _a.ariaHidden, className = _a.className, disabled = _a.disabled, allowDisabledFocus = _a.allowDisabledFocus, primaryDisabled = _a.primaryDisabled, \n        // eslint-disable-next-line deprecation/deprecation\n        secondaryText = (_b = _a.secondaryText, _b === void 0 ? this.props.description : _b), href = _a.href, iconProps = _a.iconProps, menuIconProps = _a.menuIconProps, styles = _a.styles, checked = _a.checked, variantClassName = _a.variantClassName, theme = _a.theme, toggle = _a.toggle, getClassNames = _a.getClassNames, role = _a.role;\n        var menuHidden = this.state.menuHidden;\n        // Button is disabled if the whole button (in case of splitButton is disabled) or if the primary action is disabled\n        var isPrimaryButtonDisabled = disabled || primaryDisabled;\n        this._classNames = getClassNames\n            ? getClassNames(theme, className, variantClassName, iconProps && iconProps.className, menuIconProps && menuIconProps.className, isPrimaryButtonDisabled, checked, !menuHidden, !!this.props.menuProps, this.props.split, !!allowDisabledFocus)\n            : getBaseButtonClassNames(theme, styles, className, variantClassName, iconProps && iconProps.className, menuIconProps && menuIconProps.className, isPrimaryButtonDisabled, !!this.props.menuProps, checked, !menuHidden, this.props.split);\n        var _ariaDescriptionId = (_c = this, _c._ariaDescriptionId), _labelId = _c._labelId, _descriptionId = _c._descriptionId;\n        // Anchor tag cannot be disabled hence in disabled state rendering\n        // anchor button as normal button\n        var renderAsAnchor = !isPrimaryButtonDisabled && !!href;\n        var tag = renderAsAnchor ? 'a' : 'button';\n        var nativeProps = getNativeProps(\n        // eslint-disable-next-line deprecation/deprecation\n        assign(renderAsAnchor ? {} : { type: 'button' }, this.props.rootProps, this.props), renderAsAnchor ? anchorProperties : buttonProperties, [\n            'disabled', // let disabled buttons be focused and styled as disabled.\n        ]);\n        // Check for ariaLabel passed in via Button props, and fall back to aria-label passed in via native props\n        var resolvedAriaLabel = ariaLabel || nativeProps['aria-label'];\n        // Check for ariaDescription, secondaryText or aria-describedby in the native props to determine source of\n        // aria-describedby. Otherwise default to undefined so property does not appear in output.\n        var ariaDescribedBy = undefined;\n        if (ariaDescription) {\n            ariaDescribedBy = _ariaDescriptionId;\n        }\n        else if (secondaryText && this.props.onRenderDescription !== nullRender) {\n            // for buttons like CompoundButton with a valid onRenderDescription, we need to set an ariaDescribedBy\n            // for buttons that do not render anything (via nullRender), we should not set an ariaDescribedBy\n            ariaDescribedBy = _descriptionId;\n        }\n        else if (nativeProps['aria-describedby']) {\n            ariaDescribedBy = nativeProps['aria-describedby'];\n        }\n        // If an explicit aria-labelledby is given, use that and we're done.\n        // If any kind of description is given (which will end up as an aria-describedby attribute)\n        // and no ariaLabel is specified, set the labelledby element.\n        // Otherwise, the button is labeled implicitly by the descendent text on the button (if it exists).\n        var ariaLabelledBy = undefined;\n        if (nativeProps['aria-labelledby']) {\n            ariaLabelledBy = nativeProps['aria-labelledby'];\n        }\n        else if (ariaDescribedBy && !resolvedAriaLabel) {\n            ariaLabelledBy = this._hasText() ? _labelId : undefined;\n        }\n        var dataIsFocusable = this.props['data-is-focusable'] === false || (disabled && !allowDisabledFocus) || this._isSplitButton\n            ? false\n            : true;\n        var isCheckboxTypeRole = role === 'menuitemcheckbox' || role === 'checkbox';\n        // if isCheckboxTypeRole, always return a checked value.\n        // Otherwise only return checked value if toggle is set to true.\n        // This is because role=\"checkbox\" always needs to have an aria-checked value\n        // but our checked prop only sets aria-pressed if we mark the button as a toggle=\"true\"\n        var checkedOrPressedValue = isCheckboxTypeRole ? !!checked : toggle === true ? !!checked : undefined;\n        var buttonProps = assign(nativeProps, (_d = {\n                className: this._classNames.root,\n                // eslint-disable-next-line deprecation/deprecation\n                ref: this._mergedRef(this.props.elementRef, this._buttonElement),\n                disabled: isPrimaryButtonDisabled && !allowDisabledFocus,\n                onKeyDown: this._onKeyDown,\n                onKeyPress: this._onKeyPress,\n                onKeyUp: this._onKeyUp,\n                onMouseDown: this._onMouseDown,\n                onMouseUp: this._onMouseUp,\n                onClick: this._onClick,\n                'aria-label': resolvedAriaLabel,\n                'aria-labelledby': ariaLabelledBy,\n                'aria-describedby': ariaDescribedBy,\n                'aria-disabled': isPrimaryButtonDisabled,\n                'data-is-focusable': dataIsFocusable\n            },\n            // aria-pressed attribute should only be present for toggle buttons\n            // aria-checked attribute should only be present for toggle buttons with checkbox type role\n            _d[isCheckboxTypeRole ? 'aria-checked' : 'aria-pressed'] = checkedOrPressedValue,\n            _d));\n        if (ariaHidden) {\n            buttonProps['aria-hidden'] = true;\n        }\n        if (this._isSplitButton) {\n            return this._onRenderSplitButtonContent(tag, buttonProps);\n        }\n        else if (this.props.menuProps) {\n            var id = (_e = this.props.menuProps.id, _e === void 0 ? \"\".concat(this._labelId, \"-menu\") : _e);\n            assign(buttonProps, {\n                'aria-expanded': !menuHidden,\n                'aria-controls': !menuHidden ? id : null,\n                'aria-haspopup': true,\n            });\n        }\n        return this._onRenderContent(tag, buttonProps);\n    };\n    BaseButton.prototype.componentDidMount = function () {\n        // For split buttons, touching anywhere in the button should drop the dropdown, which should contain the\n        // primary action. This gives more hit target space for touch environments. We're setting the onpointerdown here,\n        // because React does not support Pointer events yet.\n        if (this._isSplitButton && this._splitButtonContainer.current) {\n            if ('onpointerdown' in this._splitButtonContainer.current) {\n                this._events.on(this._splitButtonContainer.current, 'pointerdown', this._onPointerDown, true);\n            }\n            if ('onpointerup' in this._splitButtonContainer.current && this.props.onPointerUp) {\n                this._events.on(this._splitButtonContainer.current, 'pointerup', this.props.onPointerUp, true);\n            }\n        }\n    };\n    BaseButton.prototype.componentDidUpdate = function (prevProps, prevState) {\n        // If Button's menu was closed, run onAfterMenuDismiss.\n        if (this.props.onAfterMenuDismiss && !prevState.menuHidden && this.state.menuHidden) {\n            this.props.onAfterMenuDismiss();\n        }\n    };\n    BaseButton.prototype.componentWillUnmount = function () {\n        this._async.dispose();\n        this._events.dispose();\n    };\n    BaseButton.prototype.focus = function () {\n        var _a, _b;\n        if (this._isSplitButton && this._splitButtonContainer.current) {\n            setFocusVisibility(true, undefined, (_a = this.context) === null || _a === void 0 ? void 0 : _a.registeredProviders);\n            this._splitButtonContainer.current.focus();\n        }\n        else if (this._buttonElement.current) {\n            setFocusVisibility(true, undefined, (_b = this.context) === null || _b === void 0 ? void 0 : _b.registeredProviders);\n            this._buttonElement.current.focus();\n        }\n    };\n    BaseButton.prototype.dismissMenu = function () {\n        this._dismissMenu();\n    };\n    BaseButton.prototype.openMenu = function (shouldFocusOnContainer, shouldFocusOnMount) {\n        this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\n    };\n    BaseButton.prototype._onRenderContent = function (tag, buttonProps) {\n        var _a, _b, _c, _d, _e;\n        var _this = this;\n        var props = this.props;\n        var Tag = tag;\n        var menuIconProps = props.menuIconProps, menuProps = props.menuProps, onRenderIcon = (_a = props.onRenderIcon, _a === void 0 ? this._onRenderIcon : _a), onRenderAriaDescription = (_b = props.onRenderAriaDescription, _b === void 0 ? this._onRenderAriaDescription : _b), onRenderChildren = (_c = props.onRenderChildren, _c === void 0 ? this._onRenderChildren : _c), \n        // eslint-disable-next-line deprecation/deprecation\n        onRenderMenu = (_d = props.onRenderMenu, _d === void 0 ? this._onRenderMenu : _d), onRenderMenuIcon = (_e = props.onRenderMenuIcon, _e === void 0 ? this._onRenderMenuIcon : _e), disabled = props.disabled;\n        var keytipProps = props.keytipProps;\n        if (keytipProps && menuProps) {\n            keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n        }\n        var Button = function (keytipAttributes) { return (React.createElement(Tag, __assign({}, buttonProps, keytipAttributes),\n            React.createElement(\"span\", { className: _this._classNames.flexContainer, \"data-automationid\": \"splitbuttonprimary\" },\n                onRenderIcon(props, _this._onRenderIcon),\n                _this._onRenderTextContents(),\n                onRenderAriaDescription(props, _this._onRenderAriaDescription),\n                onRenderChildren(props, _this._onRenderChildren),\n                !_this._isSplitButton &&\n                    (menuProps || menuIconProps || _this.props.onRenderMenuIcon) &&\n                    onRenderMenuIcon(_this.props, _this._onRenderMenuIcon),\n                menuProps &&\n                    !menuProps.doNotLayer &&\n                    _this._shouldRenderMenu() &&\n                    onRenderMenu(_this._getMenuProps(menuProps), _this._onRenderMenu)))); };\n        var Content = keytipProps ? (\n        // If we're making a split button, we won't put the keytip here\n        React.createElement(KeytipData, { keytipProps: !this._isSplitButton ? keytipProps : undefined, ariaDescribedBy: buttonProps['aria-describedby'], disabled: disabled }, function (keytipAttributes) { return Button(keytipAttributes); })) : (Button());\n        if (menuProps && menuProps.doNotLayer) {\n            return (React.createElement(React.Fragment, null,\n                Content,\n                this._shouldRenderMenu() && onRenderMenu(this._getMenuProps(menuProps), this._onRenderMenu)));\n        }\n        return (React.createElement(React.Fragment, null,\n            Content,\n            React.createElement(FocusRects, null)));\n    };\n    /**\n     * Method to help determine if the menu's component tree should\n     * be rendered. It takes into account whether the menu is expanded,\n     * whether it is a persisted menu and whether it has been shown to the user.\n     */\n    BaseButton.prototype._shouldRenderMenu = function () {\n        var _a;\n        var menuHidden = this.state.menuHidden;\n        // eslint-disable-next-line deprecation/deprecation\n        var persistMenu = (_a = this.props, _a.persistMenu), renderPersistedMenuHiddenOnMount = _a.renderPersistedMenuHiddenOnMount;\n        if (!menuHidden) {\n            // Always should render a menu when it is expanded\n            return true;\n        }\n        else if (persistMenu && (this._renderedVisibleMenu || renderPersistedMenuHiddenOnMount)) {\n            // _renderedVisibleMenu ensures that the first rendering of\n            // the menu happens on-screen, as edge's scrollbar calculations are off if done while hidden.\n            return true;\n        }\n        return false;\n    };\n    BaseButton.prototype._hasText = function () {\n        // _onRenderTextContents and _onRenderText do not perform the same checks. Below is parity with what _onRenderText\n        // used to have before the refactor that introduced this function. _onRenderTextContents does not require props.\n        // text to be undefined in order for props.children to be used as a fallback.\n        // Purely a code maintainability/reuse issue, but logged as Issue #4979.\n        return this.props.text !== null && (this.props.text !== undefined || typeof this.props.children === 'string');\n    };\n    BaseButton.prototype._getMenuProps = function (menuProps) {\n        var persistMenu = this.props.persistMenu;\n        var menuHidden = this.state.menuHidden;\n        // the accessible menu label (accessible name) has a relationship to the button.\n        // If the menu props do not specify an explicit value for aria-label or aria-labelledBy,\n        // AND the button has text, we'll set the menu aria-labelledBy to the text element id.\n        if (!menuProps.ariaLabel && !menuProps.labelElementId && this._hasText()) {\n            menuProps = __assign(__assign({}, menuProps), { labelElementId: this._labelId });\n        }\n        return __assign(__assign({ id: this._labelId + '-menu', directionalHint: DirectionalHint.bottomLeftEdge }, menuProps), { shouldFocusOnContainer: this._menuShouldFocusOnContainer, shouldFocusOnMount: this._menuShouldFocusOnMount, hidden: persistMenu ? menuHidden : undefined, className: css('ms-BaseButton-menuhost', menuProps.className), target: this._isSplitButton ? this._splitButtonContainer.current : this._buttonElement.current, onDismiss: this._onDismissMenu });\n    };\n    BaseButton.prototype._onRenderSplitButtonContent = function (tag, buttonProps) {\n        var _a, _b;\n        var _this = this;\n        var styles = (_a = this.props, _b = _a.styles, _b === void 0 ? {} : _b), disabled = _a.disabled, allowDisabledFocus = _a.allowDisabledFocus, checked = _a.checked, getSplitButtonClassNames = _a.getSplitButtonClassNames, primaryDisabled = _a.primaryDisabled, menuProps = _a.menuProps, toggle = _a.toggle, role = _a.role, primaryActionButtonProps = _a.primaryActionButtonProps;\n        var keytipProps = this.props.keytipProps;\n        var menuHidden = this.state.menuHidden;\n        var classNames = getSplitButtonClassNames\n            ? getSplitButtonClassNames(!!disabled, !menuHidden, !!checked, !!allowDisabledFocus)\n            : styles && getBaseSplitButtonClassNames(styles, !!disabled, !menuHidden, !!checked, !!primaryDisabled);\n        assign(buttonProps, {\n            onClick: undefined,\n            onPointerDown: undefined,\n            onPointerUp: undefined,\n            tabIndex: -1,\n            'data-is-focusable': false,\n        });\n        if (keytipProps && menuProps) {\n            keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n        }\n        var containerProps = getNativeProps(buttonProps, [], ['disabled']);\n        // Add additional props to apply on primary action button\n        if (primaryActionButtonProps) {\n            assign(buttonProps, primaryActionButtonProps);\n        }\n        var SplitButton = function (keytipAttributes) { return (React.createElement(\"div\", __assign({}, containerProps, { \"data-ktp-target\": keytipAttributes ? keytipAttributes['data-ktp-target'] : undefined, role: role ? role : 'button', \"aria-disabled\": disabled, \"aria-haspopup\": true, \"aria-expanded\": !menuHidden, \"aria-pressed\": toggle ? !!checked : undefined, \"aria-describedby\": mergeAriaAttributeValues(buttonProps['aria-describedby'], keytipAttributes ? keytipAttributes['aria-describedby'] : undefined), className: classNames && classNames.splitButtonContainer, onKeyDown: _this._onSplitButtonContainerKeyDown, onTouchStart: _this._onTouchStart, ref: _this._splitButtonContainer, \"data-is-focusable\": true, onClick: !disabled && !primaryDisabled ? _this._onSplitButtonPrimaryClick : undefined, tabIndex: (!disabled && !primaryDisabled) || allowDisabledFocus ? 0 : undefined, \"aria-roledescription\": buttonProps['aria-roledescription'], onFocusCapture: _this._onSplitContainerFocusCapture }),\n            React.createElement(\"span\", { style: { display: 'flex', width: '100%' } },\n                _this._onRenderContent(tag, buttonProps),\n                _this._onRenderSplitButtonMenuButton(classNames, keytipAttributes),\n                _this._onRenderSplitButtonDivider(classNames)))); };\n        return keytipProps ? (React.createElement(KeytipData, { keytipProps: keytipProps, disabled: disabled }, function (keytipAttributes) { return SplitButton(keytipAttributes); })) : (SplitButton());\n    };\n    BaseButton.prototype._onRenderSplitButtonDivider = function (classNames) {\n        if (classNames && classNames.divider) {\n            var onClick = function (ev) {\n                ev.stopPropagation();\n            };\n            return React.createElement(\"span\", { className: classNames.divider, \"aria-hidden\": true, onClick: onClick });\n        }\n        return null;\n    };\n    BaseButton.prototype._onRenderSplitButtonMenuButton = function (classNames, keytipAttributes) {\n        var _a;\n        var allowDisabledFocus = (_a = this.props, _a.allowDisabledFocus), checked = _a.checked, disabled = _a.disabled, splitButtonMenuProps = _a.splitButtonMenuProps, splitButtonAriaLabel = _a.splitButtonAriaLabel, primaryDisabled = _a.primaryDisabled;\n        var menuHidden = this.state.menuHidden;\n        var menuIconProps = this.props.menuIconProps;\n        if (menuIconProps === undefined) {\n            menuIconProps = {\n                iconName: 'ChevronDown',\n            };\n        }\n        var splitButtonProps = __assign(__assign({}, splitButtonMenuProps), { styles: classNames, checked: checked, disabled: disabled, allowDisabledFocus: allowDisabledFocus, onClick: this._onMenuClick, menuProps: undefined, iconProps: __assign(__assign({}, menuIconProps), { className: this._classNames.menuIcon }), ariaLabel: splitButtonAriaLabel, 'aria-haspopup': true, 'aria-expanded': !menuHidden, 'data-is-focusable': false });\n        // Add data-ktp-execute-target to the split button if the keytip is defined\n        return (React.createElement(BaseButton, __assign({}, splitButtonProps, { \"data-ktp-execute-target\": keytipAttributes ? keytipAttributes['data-ktp-execute-target'] : keytipAttributes, onMouseDown: this._onMouseDown, tabIndex: primaryDisabled && !allowDisabledFocus ? 0 : -1 })));\n    };\n    BaseButton.prototype._onPointerDown = function (ev) {\n        var onPointerDown = this.props.onPointerDown;\n        if (onPointerDown) {\n            onPointerDown(ev);\n        }\n        if (ev.pointerType === 'touch') {\n            this._handleTouchAndPointerEvent();\n            ev.preventDefault();\n            ev.stopImmediatePropagation();\n        }\n    };\n    BaseButton.prototype._handleTouchAndPointerEvent = function () {\n        var _this = this;\n        // If we already have an existing timeout from a previous touch and pointer event\n        // cancel that timeout so we can set a new one.\n        if (this._lastTouchTimeoutId !== undefined) {\n            this._async.clearTimeout(this._lastTouchTimeoutId);\n            this._lastTouchTimeoutId = undefined;\n        }\n        this._processingTouch = true;\n        this._lastTouchTimeoutId = this._async.setTimeout(function () {\n            _this._processingTouch = false;\n            _this._lastTouchTimeoutId = undefined;\n            // Touch and pointer events don't focus the button naturally,\n            // so adding an imperative focus call to guarantee this behavior.\n            // Only focus the button if a splitbutton menu is not open\n            if (_this.state.menuHidden) {\n                _this.focus();\n            }\n        }, TouchIdleDelay);\n    };\n    /**\n     * Returns if the user hits a valid keyboard key to open the menu\n     * @param ev - the keyboard event\n     * @returns True if user clicks on custom trigger key if enabled or alt + down arrow if not. False otherwise.\n     */\n    BaseButton.prototype._isValidMenuOpenKey = function (ev) {\n        if (this.props.menuTriggerKeyCode) {\n            // eslint-disable-next-line deprecation/deprecation\n            return ev.which === this.props.menuTriggerKeyCode;\n        }\n        else if (this.props.menuProps) {\n            // eslint-disable-next-line deprecation/deprecation\n            return ev.which === KeyCodes.down && (ev.altKey || ev.metaKey);\n        }\n        // Note: When enter is pressed, we will let the event continue to propagate\n        // to trigger the onClick event on the button\n        return false;\n    };\n    BaseButton.defaultProps = {\n        baseClassName: 'ms-Button',\n        styles: {},\n        split: false,\n    };\n    // needed to access registeredProviders when manually setting focus visibility\n    BaseButton.contextType = FocusRectsContext;\n    return BaseButton;\n}(React.Component));\n//# sourceMappingURL=BaseButton.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { ResizeGroupDirection } from './ResizeGroup.types';\nimport { useConst, useMergedRefs, useAsync, useOnEvent, useWarnings } from '@fluentui/react-hooks';\nimport { useWindow } from '../../WindowProvider';\nvar RESIZE_DELAY = 16;\n/**\n * Returns a simple object is able to store measurements with a given key.\n */\nexport var getMeasurementCache = function () {\n    var measurementsCache = {};\n    return {\n        /**\n         * Checks if the provided data has a cacheKey. If it has a cacheKey and there is a\n         * corresponding entry in the measurementsCache, then it will return that value.\n         * Returns undefined otherwise.\n         */\n        getCachedMeasurement: function (data) {\n            if (data && data.cacheKey && measurementsCache.hasOwnProperty(data.cacheKey)) {\n                return measurementsCache[data.cacheKey];\n            }\n            return undefined;\n        },\n        /**\n         * Should be called whenever there is a new measurement associated with a given data object.\n         * If the data has a cacheKey, store that measurement in the measurementsCache.\n         */\n        addMeasurementToCache: function (data, measurement) {\n            if (data.cacheKey) {\n                measurementsCache[data.cacheKey] = measurement;\n            }\n        },\n    };\n};\n/**\n * Returns a function that is able to compute the next state for the ResizeGroup given the current\n * state and any measurement updates.\n */\nexport var getNextResizeGroupStateProvider = function (measurementCache) {\n    if (measurementCache === void 0) { measurementCache = getMeasurementCache(); }\n    var _measurementCache = measurementCache;\n    var _containerDimension;\n    /**\n     * Gets the width/height of the data rendered in a hidden div.\n     * @param measuredData - The data corresponding to the measurement we wish to take.\n     * @param getElementToMeasureDimension - A function that returns the measurement of the rendered data.\n     * Only called when the measurement is not in the cache.\n     */\n    function _getMeasuredDimension(measuredData, getElementToMeasureDimension) {\n        var cachedDimension = _measurementCache.getCachedMeasurement(measuredData);\n        if (cachedDimension !== undefined) {\n            return cachedDimension;\n        }\n        var measuredDimension = getElementToMeasureDimension();\n        _measurementCache.addMeasurementToCache(measuredData, measuredDimension);\n        return measuredDimension;\n    }\n    /**\n     * Will get the next IResizeGroupState based on the current data while trying to shrink contents\n     * to fit in the container.\n     * @param data - The initial data point to start measuring.\n     * @param onReduceData - Function that transforms the data into something that should render with less width/height.\n     * @param getElementToMeasureDimension - A function that returns the measurement of the rendered data.\n     * Only called when the measurement is not in the cache.\n     */\n    function _shrinkContentsUntilTheyFit(data, onReduceData, getElementToMeasureDimension) {\n        var dataToMeasure = data;\n        var measuredDimension = _getMeasuredDimension(data, getElementToMeasureDimension);\n        while (measuredDimension > _containerDimension) {\n            var nextMeasuredData = onReduceData(dataToMeasure);\n            // We don't want to get stuck in an infinite render loop when there are no more\n            // scaling steps, so implementations of onReduceData should return undefined when\n            // there are no more scaling states to apply.\n            if (nextMeasuredData === undefined) {\n                return {\n                    renderedData: dataToMeasure,\n                    resizeDirection: undefined,\n                    dataToMeasure: undefined,\n                };\n            }\n            measuredDimension = _measurementCache.getCachedMeasurement(nextMeasuredData);\n            // If the measurement isn't in the cache, we need to re-render with some data in a hidden div\n            if (measuredDimension === undefined) {\n                return {\n                    dataToMeasure: nextMeasuredData,\n                    resizeDirection: 'shrink',\n                };\n            }\n            dataToMeasure = nextMeasuredData;\n        }\n        return {\n            renderedData: dataToMeasure,\n            resizeDirection: undefined,\n            dataToMeasure: undefined,\n        };\n    }\n    /**\n     * This function should be called when the state changes in a manner that might allow for more content to fit\n     * on the screen, such as the window width/height growing.\n     * @param data - The initial data point to start measuring.\n     * @param onGrowData - Function that transforms the data into something that may take up more space when rendering.\n     * @param getElementToMeasureDimension - A function that returns the measurement of the rendered data.\n     * Only called when the measurement is not in the cache.\n     */\n    function _growDataUntilItDoesNotFit(data, onGrowData, getElementToMeasureDimension, onReduceData) {\n        var dataToMeasure = data;\n        var measuredDimension = _getMeasuredDimension(data, getElementToMeasureDimension);\n        while (measuredDimension < _containerDimension) {\n            var nextMeasuredData = onGrowData(dataToMeasure);\n            // We don't want to get stuck in an infinite render loop when there are no more\n            // scaling steps, so implementations of onGrowData should return undefined when\n            // there are no more scaling states to apply.\n            if (nextMeasuredData === undefined) {\n                return {\n                    renderedData: dataToMeasure,\n                    resizeDirection: undefined,\n                    dataToMeasure: undefined,\n                };\n            }\n            measuredDimension = _measurementCache.getCachedMeasurement(nextMeasuredData);\n            // If the measurement isn't in the cache, we need to re-render with some data in a hidden div\n            if (measuredDimension === undefined) {\n                return {\n                    dataToMeasure: nextMeasuredData,\n                };\n            }\n            dataToMeasure = nextMeasuredData;\n        }\n        // Once the loop is done, we should now shrink until the contents fit.\n        return __assign({ resizeDirection: 'shrink' }, _shrinkContentsUntilTheyFit(dataToMeasure, onReduceData, getElementToMeasureDimension));\n    }\n    /**\n     * Handles an update to the container width/height.\n     * Should only be called when we knew the previous container width/height.\n     * @param newDimension - The new width/height of the container.\n     * @param fullDimensionData - The initial data passed in as a prop to resizeGroup.\n     * @param renderedData - The data that was rendered prior to the container size changing.\n     * @param onGrowData - Set to true if the Resize group has an onGrowData function.\n     */\n    function _updateContainerDimension(newDimension, fullDimensionData, renderedData, onGrowData) {\n        var nextState;\n        if (newDimension > _containerDimension) {\n            if (onGrowData) {\n                nextState = {\n                    resizeDirection: 'grow',\n                    dataToMeasure: onGrowData(renderedData),\n                };\n            }\n            else {\n                nextState = {\n                    resizeDirection: 'shrink',\n                    dataToMeasure: fullDimensionData,\n                };\n            }\n        }\n        else {\n            nextState = {\n                resizeDirection: 'shrink',\n                dataToMeasure: renderedData,\n            };\n        }\n        _containerDimension = newDimension;\n        return __assign(__assign({}, nextState), { measureContainer: false });\n    }\n    function getNextState(props, currentState, getElementToMeasureDimension, newContainerDimension) {\n        // If there is no new container width/height or data to measure, there is no need for a new state update\n        if (newContainerDimension === undefined && currentState.dataToMeasure === undefined) {\n            return undefined;\n        }\n        if (newContainerDimension) {\n            // If we know the last container size and we rendered data at that width/height, we can do an optimized render\n            if (_containerDimension && currentState.renderedData && !currentState.dataToMeasure) {\n                return __assign(__assign({}, currentState), _updateContainerDimension(newContainerDimension, props.data, currentState.renderedData, props.onGrowData));\n            }\n            // If we are just setting the container width/height for the first time, we can't do any optimizations\n            _containerDimension = newContainerDimension;\n        }\n        var nextState = __assign(__assign({}, currentState), { measureContainer: false });\n        if (currentState.dataToMeasure) {\n            if (currentState.resizeDirection === 'grow' && props.onGrowData) {\n                nextState = __assign(__assign({}, nextState), _growDataUntilItDoesNotFit(currentState.dataToMeasure, props.onGrowData, getElementToMeasureDimension, props.onReduceData));\n            }\n            else {\n                nextState = __assign(__assign({}, nextState), _shrinkContentsUntilTheyFit(currentState.dataToMeasure, props.onReduceData, getElementToMeasureDimension));\n            }\n        }\n        return nextState;\n    }\n    /** Function that determines if we need to render content for measurement based on the measurement cache contents. */\n    function shouldRenderDataForMeasurement(dataToMeasure) {\n        if (!dataToMeasure || _measurementCache.getCachedMeasurement(dataToMeasure) !== undefined) {\n            return false;\n        }\n        return true;\n    }\n    function getInitialResizeGroupState(data) {\n        return {\n            dataToMeasure: __assign({}, data),\n            resizeDirection: 'grow',\n            measureContainer: true,\n        };\n    }\n    return {\n        getNextState: getNextState,\n        shouldRenderDataForMeasurement: shouldRenderDataForMeasurement,\n        getInitialResizeGroupState: getInitialResizeGroupState,\n    };\n};\n// Provides a context property that (if true) tells any child components that\n// they are only being used for measurement purposes and will not be visible.\nexport var MeasuredContext = React.createContext({ isMeasured: false });\n// Styles for the hidden div used for measurement\nvar hiddenDivStyles = { position: 'fixed', visibility: 'hidden' };\nvar hiddenParentStyles = { position: 'relative' };\nvar COMPONENT_NAME = 'ResizeGroup';\n/**\n * Use useReducer instead of userState because React is not batching the state updates\n * when state is set in callbacks of setTimeout or requestAnimationFrame.\n * See issue: https://github.com/facebook/react/issues/14259\n */\nfunction resizeDataReducer(state, action) {\n    var _a;\n    switch (action.type) {\n        case 'resizeData':\n            return __assign({}, action.value);\n        case 'dataToMeasure':\n            return __assign(__assign({}, state), { dataToMeasure: action.value, resizeDirection: 'grow', measureContainer: true });\n        default:\n            return __assign(__assign({}, state), (_a = {}, _a[action.type] = action.value, _a));\n    }\n}\nfunction useResizeState(props, nextResizeGroupStateProvider, rootRef) {\n    var initialStateData = useConst(function () { return nextResizeGroupStateProvider.getInitialResizeGroupState(props.data); });\n    var _a = React.useReducer(resizeDataReducer, initialStateData), resizeData = _a[0], dispatchResizeDataAction = _a[1];\n    // Reset state when new data is provided\n    React.useEffect(function () {\n        dispatchResizeDataAction({\n            type: 'dataToMeasure',\n            value: props.data,\n        });\n    }, [props.data]);\n    // Because it's possible that we may force more than one re-render per animation frame, we\n    // want to make sure that the RAF request is using the most recent data.\n    var stateRef = React.useRef(initialStateData);\n    stateRef.current = __assign({}, resizeData);\n    var updateResizeState = React.useCallback(function (nextState) {\n        if (nextState) {\n            dispatchResizeDataAction({\n                type: 'resizeData',\n                value: nextState,\n            });\n        }\n    }, []);\n    var remeasure = React.useCallback(function () {\n        if (rootRef.current) {\n            dispatchResizeDataAction({\n                type: 'measureContainer',\n                value: true,\n            });\n        }\n    }, [rootRef]);\n    return [stateRef, updateResizeState, remeasure];\n}\nfunction useResizingBehavior(props, rootRef) {\n    var nextResizeGroupStateProvider = useConst(getNextResizeGroupStateProvider);\n    // A div that can be used for the initial measurement so that we can avoid mounting a second instance\n    // of the component being measured for the initial render.\n    var initialHiddenDiv = React.useRef(null);\n    // A hidden div that is used for mounting a new instance of the component for measurement in a hidden\n    // div without unmounting the currently visible content.\n    var updateHiddenDiv = React.useRef(null);\n    // Tracks if any content has been rendered to the user. This enables us to do some performance optimizations\n    // for the initial render.\n    var hasRenderedContent = React.useRef(false);\n    var async = useAsync();\n    var _a = useResizeState(props, nextResizeGroupStateProvider, rootRef), stateRef = _a[0], updateResizeState = _a[1], remeasure = _a[2];\n    React.useEffect(function () {\n        var _a;\n        if (stateRef.current.renderedData) {\n            hasRenderedContent.current = true;\n            (_a = props.dataDidRender) === null || _a === void 0 ? void 0 : _a.call(props, stateRef.current.renderedData);\n        }\n    });\n    React.useEffect(function () {\n        async.requestAnimationFrame(function () {\n            var containerDimension = undefined;\n            if (stateRef.current.measureContainer && rootRef.current) {\n                var boundingRect = rootRef.current.getBoundingClientRect();\n                containerDimension =\n                    props.direction === ResizeGroupDirection.vertical ? boundingRect.height : boundingRect.width;\n            }\n            var nextState = nextResizeGroupStateProvider.getNextState(props, stateRef.current, function () {\n                var refToMeasure = !hasRenderedContent.current ? initialHiddenDiv : updateHiddenDiv;\n                if (!refToMeasure.current) {\n                    return 0;\n                }\n                var measuredBoundingRect = refToMeasure.current.getBoundingClientRect();\n                return props.direction === ResizeGroupDirection.vertical\n                    ? measuredBoundingRect.height\n                    : measuredBoundingRect.width;\n            }, containerDimension);\n            updateResizeState(nextState);\n        }, rootRef.current);\n    });\n    var win = useWindow();\n    useOnEvent(win, 'resize', async.debounce(remeasure, RESIZE_DELAY, { leading: true }));\n    var dataNeedsMeasuring = nextResizeGroupStateProvider.shouldRenderDataForMeasurement(stateRef.current.dataToMeasure);\n    var isInitialMeasure = !hasRenderedContent.current && dataNeedsMeasuring;\n    return [\n        stateRef.current.dataToMeasure,\n        stateRef.current.renderedData,\n        remeasure,\n        initialHiddenDiv,\n        updateHiddenDiv,\n        dataNeedsMeasuring,\n        isInitialMeasure,\n    ];\n}\nfunction useDebugWarnings(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: COMPONENT_NAME,\n            props: props,\n            deprecations: { styles: 'className' },\n        });\n    }\n}\nvar measuredContextValue = { isMeasured: true };\nexport var ResizeGroupBase = React.forwardRef(function (props, forwardedRef) {\n    var rootRef = React.useRef(null);\n    // The root div which is the container inside of which we are trying to fit content.\n    var mergedRootRef = useMergedRefs(rootRef, forwardedRef);\n    var _a = useResizingBehavior(props, rootRef), dataToMeasure = _a[0], renderedData = _a[1], remeasure = _a[2], initialHiddenDiv = _a[3], updateHiddenDiv = _a[4], dataNeedsMeasuring = _a[5], isInitialMeasure = _a[6];\n    React.useImperativeHandle(props.componentRef, function () { return ({ remeasure: remeasure }); }, [remeasure]);\n    useDebugWarnings(props);\n    var className = props.className, onRenderData = props.onRenderData;\n    var divProps = getNativeProps(props, divProperties, ['data']);\n    // We only ever render the final content to the user. All measurements are done in a hidden div.\n    // For the initial render, we want this to be as fast as possible, so we need to make sure that we only mount one\n    // version of the component for measurement and the final render. For renders that update what is on screen, we\n    // want to make sure that there are no jarring effects such as the screen flashing as we apply scaling steps for\n    // measurement. In the update case, we mount a second version of the component just for measurement purposes and\n    // leave the rendered content untouched until we know the next state to show to the user.\n    return (React.createElement(\"div\", __assign({}, divProps, { className: className, ref: mergedRootRef }),\n        React.createElement(\"div\", { style: hiddenParentStyles },\n            dataNeedsMeasuring && !isInitialMeasure && (React.createElement(\"div\", { style: hiddenDivStyles, ref: updateHiddenDiv },\n                React.createElement(MeasuredContext.Provider, { value: measuredContextValue }, onRenderData(dataToMeasure)))),\n            React.createElement(\"div\", { ref: initialHiddenDiv, style: isInitialMeasure ? hiddenDivStyles : undefined, \"data-automation-id\": \"visibleContent\" }, isInitialMeasure ? onRenderData(dataToMeasure) : renderedData && onRenderData(renderedData)))));\n});\nResizeGroupBase.displayName = 'ResizeGroupBase';\n//# sourceMappingURL=ResizeGroup.base.js.map","import { ActionButton } from '../ActionButton/ActionButton';\n/**\n * {@docCategory Button}\n */\nexport var CommandButton = ActionButton;\n//# sourceMappingURL=CommandButton.js.map","import { styled } from '../../../Utilities';\nimport { PersonaPresenceBase } from './PersonaPresence.base';\nimport { getStyles } from './PersonaPresence.styles';\n/**\n * PersonaPresence is used to render an individual's presence.\n */\nexport var PersonaPresence = styled(PersonaPresenceBase, getStyles, undefined, { scope: 'PersonaPresence' });\n//# sourceMappingURL=PersonaPresence.js.map","import { styled } from '../../Utilities';\nimport { DialogBase } from './Dialog.base';\nimport { getStyles } from './Dialog.styles';\nexport var Dialog = styled(DialogBase, getStyles, undefined, { scope: 'Dialog' });\nDialog.displayName = 'Dialog';\n//# sourceMappingURL=Dialog.js.map","import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css, composeRenderFunction, getPropsWithDefaults, } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\nvar LARGE_IMAGE_SIZE = 71;\nvar DEFAULT_PROPS = {\n    // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n    imageSize: { width: 32, height: 32 },\n};\nexport var ChoiceGroupOptionBase = function (propsWithoutDefaults) {\n    // Mix the `key` prop back in since custom render functions may be expecting it\n    // (React uses `key` internally rather than passing it through to the component)\n    var props = getPropsWithDefaults(__assign(__assign({}, DEFAULT_PROPS), { key: propsWithoutDefaults.itemKey }), propsWithoutDefaults);\n    var ariaLabel = props.ariaLabel, focused = props.focused, required = props.required, theme = props.theme, iconProps = props.iconProps, imageSrc = props.imageSrc, imageSize = props.imageSize, disabled = props.disabled, checked = props.checked, id = props.id, styles = props.styles, name = props.name, rest = __rest(props, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\"]);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        hasIcon: !!iconProps,\n        hasImage: !!imageSrc,\n        checked: checked,\n        disabled: disabled,\n        imageIsLarge: !!imageSrc && (imageSize.width > LARGE_IMAGE_SIZE || imageSize.height > LARGE_IMAGE_SIZE),\n        imageSize: imageSize,\n        focused: focused,\n    });\n    var _a = getNativeProps(rest, inputProperties), className = _a.className, nativeProps = __rest(_a, [\"className\"]);\n    var defaultOnRenderLabel = function () {\n        return (React.createElement(\"span\", { id: props.labelId, className: \"ms-ChoiceFieldLabel\" }, props.text));\n    };\n    var defaultOnRenderField = function () {\n        var _a = props.imageAlt, imageAlt = _a === void 0 ? '' : _a, selectedImageSrc = props.selectedImageSrc;\n        var onRenderLabel = props.onRenderLabel\n            ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel)\n            : defaultOnRenderLabel;\n        var label = onRenderLabel(__assign(__assign({}, props), { key: props.itemKey }));\n        return (React.createElement(\"label\", { htmlFor: id, className: classNames.field },\n            imageSrc && (React.createElement(\"div\", { className: classNames.innerField },\n                React.createElement(\"div\", { className: classNames.imageWrapper },\n                    React.createElement(Image, __assign({ src: imageSrc, alt: imageAlt }, imageSize))),\n                React.createElement(\"div\", { className: classNames.selectedImageWrapper },\n                    React.createElement(Image, __assign({ src: selectedImageSrc, alt: imageAlt }, imageSize))))),\n            iconProps && (React.createElement(\"div\", { className: classNames.innerField },\n                React.createElement(\"div\", { className: classNames.iconWrapper },\n                    React.createElement(Icon, __assign({}, iconProps))))),\n            imageSrc || iconProps ? React.createElement(\"div\", { className: classNames.labelWrapper }, label) : label));\n    };\n    var _b = props.onRenderField, onRenderField = _b === void 0 ? defaultOnRenderField : _b;\n    var onChange = function (evt) {\n        var _a;\n        (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, evt, __assign(__assign({}, props), { key: props.itemKey }));\n    };\n    var onBlur = function (evt) {\n        var _a;\n        (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n    };\n    var onFocus = function (evt) {\n        var _a;\n        (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, evt, __assign(__assign({}, props), { key: props.itemKey }));\n    };\n    return (React.createElement(\"div\", { className: classNames.root },\n        React.createElement(\"div\", { className: classNames.choiceFieldWrapper },\n            React.createElement(\"input\", __assign({ \"aria-label\": ariaLabel, id: id, className: css(classNames.input, className), type: \"radio\", name: name, disabled: disabled, checked: checked, required: required }, nativeProps, { onChange: onChange, onFocus: onFocus, onBlur: onBlur })),\n            onRenderField(__assign(__assign({}, props), { key: props.itemKey }), defaultOnRenderField))));\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';\n//# sourceMappingURL=ChoiceGroupOption.base.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, getRTL, classNamesFunction, css, format } from '../../../Utilities';\nimport { FocusZone } from '../../../FocusZone';\nimport { Icon } from '../../../Icon';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nvar getClassNames = classNamesFunction();\nvar CELL_COUNT = 12;\nvar CELLS_PER_ROW = 4;\nvar DefaultCalendarYearStrings = {\n    prevRangeAriaLabel: undefined,\n    nextRangeAriaLabel: undefined,\n};\nvar CalendarYearGridCell = function (props) {\n    var _a;\n    var _b;\n    var styles = props.styles, theme = props.theme, className = props.className, highlightCurrentYear = props.highlightCurrentYear, highlightSelectedYear = props.highlightSelectedYear, year = props.year, selected = props.selected, disabled = props.disabled, componentRef = props.componentRef, onSelectYear = props.onSelectYear, onRenderYear = props.onRenderYear;\n    var buttonRef = React.useRef(null);\n    React.useImperativeHandle(componentRef, function () { return ({\n        focus: function () {\n            var _a, _b;\n            (_b = (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        },\n    }); }, []);\n    var onClick = function () {\n        onSelectYear === null || onSelectYear === void 0 ? void 0 : onSelectYear(year);\n    };\n    var onKeyDown = function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        if (ev.which === KeyCodes.enter) {\n            onSelectYear === null || onSelectYear === void 0 ? void 0 : onSelectYear(year);\n        }\n    };\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        highlightCurrent: highlightCurrentYear,\n        highlightSelected: highlightSelectedYear,\n    });\n    return (React.createElement(\"button\", { className: css(classNames.itemButton, (_a = {},\n            _a[classNames.selected] = selected,\n            _a[classNames.disabled] = disabled,\n            _a)), type: \"button\", role: \"gridcell\", onClick: !disabled ? onClick : undefined, onKeyDown: !disabled ? onKeyDown : undefined, disabled: disabled, \"aria-selected\": selected, ref: buttonRef }, (_b = onRenderYear === null || onRenderYear === void 0 ? void 0 : onRenderYear(year)) !== null && _b !== void 0 ? _b : year));\n};\nCalendarYearGridCell.displayName = 'CalendarYearGridCell';\nvar CalendarYearGrid = function (props) {\n    var styles = props.styles, theme = props.theme, className = props.className, fromYear = props.fromYear, toYear = props.toYear, animationDirection = props.animationDirection, animateBackwards = props.animateBackwards, minYear = props.minYear, maxYear = props.maxYear, onSelectYear = props.onSelectYear, selectedYear = props.selectedYear, componentRef = props.componentRef;\n    var selectedCellRef = React.useRef(null);\n    var currentCellRef = React.useRef(null);\n    React.useImperativeHandle(componentRef, function () { return ({\n        focus: function () {\n            var _a, _b;\n            (_b = (_a = (selectedCellRef.current || currentCellRef.current)) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        },\n    }); }, []);\n    var renderCell = function (yearToRender) {\n        var selected = yearToRender === selectedYear;\n        var disabled = (minYear !== undefined && yearToRender < minYear) || (maxYear !== undefined && yearToRender > maxYear);\n        var current = yearToRender === new Date().getFullYear();\n        return (React.createElement(CalendarYearGridCell, __assign({}, props, { key: yearToRender, year: yearToRender, selected: selected, current: current, disabled: disabled, onSelectYear: onSelectYear, componentRef: selected ? selectedCellRef : current ? currentCellRef : undefined, theme: theme })));\n    };\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        animateBackwards: animateBackwards,\n        animationDirection: animationDirection,\n    });\n    var onRenderYear = function (value) {\n        var _a, _b;\n        return (_b = (_a = props.onRenderYear) === null || _a === void 0 ? void 0 : _a.call(props, value)) !== null && _b !== void 0 ? _b : value;\n    };\n    var gridAriaLabel = \"\".concat(onRenderYear(fromYear), \" - \").concat(onRenderYear(toYear));\n    var year = fromYear;\n    var cells = [];\n    for (var i = 0; i < (toYear - fromYear + 1) / CELLS_PER_ROW; i++) {\n        cells.push([]);\n        for (var j = 0; j < CELLS_PER_ROW; j++) {\n            cells[i].push(renderCell(year));\n            year++;\n        }\n    }\n    return (React.createElement(FocusZone, null,\n        React.createElement(\"div\", { className: classNames.gridContainer, role: \"grid\", \"aria-label\": gridAriaLabel }, cells.map(function (cellRow, index) {\n            return (React.createElement.apply(React, __spreadArray([\"div\", { key: 'yearPickerRow_' + index + '_' + fromYear, role: \"row\", className: classNames.buttonRow }], cellRow, false)));\n        }))));\n};\nCalendarYearGrid.displayName = 'CalendarYearGrid';\nvar CalendarYearNavDirection;\n(function (CalendarYearNavDirection) {\n    CalendarYearNavDirection[CalendarYearNavDirection[\"Previous\"] = 0] = \"Previous\";\n    CalendarYearNavDirection[CalendarYearNavDirection[\"Next\"] = 1] = \"Next\";\n})(CalendarYearNavDirection || (CalendarYearNavDirection = {}));\nvar CalendarYearNavArrow = function (props) {\n    var _a;\n    var styles = props.styles, theme = props.theme, className = props.className, _b = props.navigationIcons, navigationIcons = _b === void 0 ? defaultCalendarNavigationIcons : _b, _c = props.strings, strings = _c === void 0 ? DefaultCalendarYearStrings : _c, direction = props.direction, onSelectPrev = props.onSelectPrev, onSelectNext = props.onSelectNext, fromYear = props.fromYear, toYear = props.toYear, maxYear = props.maxYear, minYear = props.minYear;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n    });\n    var ariaLabel = direction === CalendarYearNavDirection.Previous ? strings.prevRangeAriaLabel : strings.nextRangeAriaLabel;\n    var newRangeOffset = direction === CalendarYearNavDirection.Previous ? -CELL_COUNT : CELL_COUNT;\n    var newRange = { fromYear: fromYear + newRangeOffset, toYear: toYear + newRangeOffset };\n    var ariaLabelString = ariaLabel ? (typeof ariaLabel === 'string' ? ariaLabel : ariaLabel(newRange)) : undefined;\n    var disabled = direction === CalendarYearNavDirection.Previous\n        ? minYear !== undefined && fromYear < minYear\n        : maxYear !== undefined && props.fromYear + CELL_COUNT > maxYear;\n    var onNavigate = function () {\n        direction === CalendarYearNavDirection.Previous ? onSelectPrev === null || onSelectPrev === void 0 ? void 0 : onSelectPrev() : onSelectNext === null || onSelectNext === void 0 ? void 0 : onSelectNext();\n    };\n    var onKeyDown = function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        if (ev.which === KeyCodes.enter) {\n            onNavigate();\n        }\n    };\n    // can be condensed, but leaving verbose for clarity due to regressions\n    var isLeftNavigation = getRTL()\n        ? direction === CalendarYearNavDirection.Next\n        : direction === CalendarYearNavDirection.Previous;\n    return (React.createElement(\"button\", { className: css(classNames.navigationButton, (_a = {},\n            _a[classNames.disabled] = disabled,\n            _a)), onClick: !disabled ? onNavigate : undefined, onKeyDown: !disabled ? onKeyDown : undefined, type: \"button\", title: ariaLabelString, disabled: disabled },\n        React.createElement(Icon, { iconName: isLeftNavigation ? navigationIcons.leftNavigation : navigationIcons.rightNavigation })));\n};\nCalendarYearNavArrow.displayName = 'CalendarYearNavArrow';\nvar CalendarYearNav = function (props) {\n    var styles = props.styles, theme = props.theme, className = props.className;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n    });\n    return (React.createElement(\"div\", { className: classNames.navigationButtonsContainer },\n        React.createElement(CalendarYearNavArrow, __assign({}, props, { direction: CalendarYearNavDirection.Previous })),\n        React.createElement(CalendarYearNavArrow, __assign({}, props, { direction: CalendarYearNavDirection.Next }))));\n};\nCalendarYearNav.displayName = 'CalendarYearNav';\nvar CalendarYearTitle = function (props) {\n    var styles = props.styles, theme = props.theme, className = props.className, fromYear = props.fromYear, toYear = props.toYear, _a = props.strings, strings = _a === void 0 ? DefaultCalendarYearStrings : _a, animateBackwards = props.animateBackwards, animationDirection = props.animationDirection;\n    var onHeaderSelect = function () {\n        var _a;\n        (_a = props.onHeaderSelect) === null || _a === void 0 ? void 0 : _a.call(props, true);\n    };\n    var onHeaderKeyDown = function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n            onHeaderSelect();\n        }\n    };\n    var onRenderYear = function (year) {\n        var _a, _b;\n        return (_b = (_a = props.onRenderYear) === null || _a === void 0 ? void 0 : _a.call(props, year)) !== null && _b !== void 0 ? _b : year;\n    };\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        hasHeaderClickCallback: !!props.onHeaderSelect,\n        animateBackwards: animateBackwards,\n        animationDirection: animationDirection,\n    });\n    if (props.onHeaderSelect) {\n        var rangeAriaLabel = strings.rangeAriaLabel;\n        var headerAriaLabelFormatString = strings.headerAriaLabelFormatString;\n        var currentDateRange = rangeAriaLabel\n            ? typeof rangeAriaLabel === 'string'\n                ? rangeAriaLabel\n                : rangeAriaLabel(props)\n            : undefined;\n        var ariaLabel = headerAriaLabelFormatString\n            ? format(headerAriaLabelFormatString, currentDateRange)\n            : currentDateRange;\n        return (React.createElement(\"button\", { className: classNames.currentItemButton, onClick: onHeaderSelect, onKeyDown: onHeaderKeyDown, \"aria-label\": ariaLabel, role: \"button\", type: \"button\" },\n            React.createElement(\"span\", { \"aria-live\": \"assertive\", \"aria-atomic\": \"true\" },\n                onRenderYear(fromYear),\n                \" - \",\n                onRenderYear(toYear))));\n    }\n    return (React.createElement(\"div\", { className: classNames.current },\n        onRenderYear(fromYear),\n        \" - \",\n        onRenderYear(toYear)));\n};\nCalendarYearTitle.displayName = 'CalendarYearTitle';\nvar CalendarYearHeader = function (props) {\n    var _a;\n    var styles = props.styles, theme = props.theme, className = props.className, animateBackwards = props.animateBackwards, animationDirection = props.animationDirection, onRenderTitle = props.onRenderTitle;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        hasHeaderClickCallback: !!props.onHeaderSelect,\n        animateBackwards: animateBackwards,\n        animationDirection: animationDirection,\n    });\n    return (React.createElement(\"div\", { className: classNames.headerContainer }, (_a = onRenderTitle === null || onRenderTitle === void 0 ? void 0 : onRenderTitle(props)) !== null && _a !== void 0 ? _a : React.createElement(CalendarYearTitle, __assign({}, props)),\n        React.createElement(CalendarYearNav, __assign({}, props))));\n};\nCalendarYearHeader.displayName = 'CalendarYearHeader';\nfunction useAnimateBackwards(_a) {\n    var selectedYear = _a.selectedYear, navigatedYear = _a.navigatedYear;\n    var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    var fromYear = Math.floor(rangeYear / 10) * 10;\n    var previousFromYear = usePrevious(fromYear);\n    if (!previousFromYear || previousFromYear === fromYear) {\n        return undefined;\n    }\n    else if (previousFromYear > fromYear) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction useYearRangeState(_a) {\n    var selectedYear = _a.selectedYear, navigatedYear = _a.navigatedYear;\n    var rangeYear = React.useMemo(function () {\n        return selectedYear || navigatedYear || Math.floor(new Date().getFullYear() / 10) * 10;\n    }, [navigatedYear, selectedYear]);\n    var _b = React.useState(rangeYear), fromYear = _b[0], setFromYear = _b[1];\n    var onNavNext = function () {\n        setFromYear(function (year) { return year + CELL_COUNT; });\n    };\n    var onNavPrevious = function () {\n        setFromYear(function (year) { return year - CELL_COUNT; });\n    };\n    React.useEffect(function () {\n        setFromYear(rangeYear);\n    }, [rangeYear]);\n    var toYear = fromYear + CELL_COUNT - 1;\n    return [fromYear, toYear, onNavNext, onNavPrevious];\n}\nexport var CalendarYearBase = function (props) {\n    var animateBackwards = useAnimateBackwards(props);\n    var _a = useYearRangeState(props), fromYear = _a[0], toYear = _a[1], onNavNext = _a[2], onNavPrevious = _a[3];\n    var gridRef = React.useRef(null);\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        focus: function () {\n            var _a, _b;\n            (_b = (_a = gridRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        },\n    }); });\n    var styles = props.styles, theme = props.theme, className = props.className;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n    });\n    return (React.createElement(\"div\", { className: classNames.root },\n        React.createElement(CalendarYearHeader, __assign({}, props, { fromYear: fromYear, toYear: toYear, onSelectPrev: onNavPrevious, onSelectNext: onNavNext, animateBackwards: animateBackwards })),\n        React.createElement(CalendarYearGrid, __assign({}, props, { fromYear: fromYear, toYear: toYear, animateBackwards: animateBackwards, componentRef: gridRef }))));\n};\nCalendarYearBase.displayName = 'CalendarYearBase';\n//# sourceMappingURL=CalendarYear.base.js.map","import { styled } from '../../Utilities';\nimport { TooltipBase } from './Tooltip.base';\nimport { getStyles } from './Tooltip.styles';\nexport var Tooltip = styled(TooltipBase, getStyles, undefined, {\n    scope: 'Tooltip',\n});\n//# sourceMappingURL=Tooltip.js.map","/**\n * Possible variations of the spinner circle size.\n * {@docCategory Spinner}\n */\nexport var SpinnerSize;\n(function (SpinnerSize) {\n    /**\n     * 12px Spinner diameter\n     */\n    SpinnerSize[SpinnerSize[\"xSmall\"] = 0] = \"xSmall\";\n    /**\n     * 16px Spinner diameter\n     */\n    SpinnerSize[SpinnerSize[\"small\"] = 1] = \"small\";\n    /**\n     * 20px Spinner diameter\n     */\n    SpinnerSize[SpinnerSize[\"medium\"] = 2] = \"medium\";\n    /**\n     * 28px Spinner diameter\n     */\n    SpinnerSize[SpinnerSize[\"large\"] = 3] = \"large\";\n})(SpinnerSize || (SpinnerSize = {}));\n/**\n * @deprecated Use `SpinnerSize` instead. Will be removed at \\>= 2.0.0.\n * {@docCategory Spinner}\n */\nexport var SpinnerType;\n(function (SpinnerType) {\n    /**\n     * @deprecated Use `SpinnerSize.medium` instead. Will be removed at \\>= 2.0.0.\n     */\n    SpinnerType[SpinnerType[\"normal\"] = 0] = \"normal\";\n    /**\n     * @deprecated Use `SpinnerSize.large` instead. Will be removed at \\>= 2.0.0.\n     */\n    SpinnerType[SpinnerType[\"large\"] = 1] = \"large\";\n})(SpinnerType || (SpinnerType = {}));\n//# sourceMappingURL=Spinner.types.js.map","import { styled } from '../../Utilities';\nimport { getStyles } from './Shimmer.styles';\nimport { ShimmerBase } from './Shimmer.base';\nexport var Shimmer = styled(ShimmerBase, getStyles, undefined, {\n    scope: 'Shimmer',\n});\n//# sourceMappingURL=Shimmer.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nvar GlobalClassNames = {\n    root: 'ms-Checkbox',\n    label: 'ms-Checkbox-label',\n    checkbox: 'ms-Checkbox-checkbox',\n    checkmark: 'ms-Checkbox-checkmark',\n    text: 'ms-Checkbox-text',\n};\nvar MS_CHECKBOX_LABEL_SIZE = '20px';\nvar MS_CHECKBOX_TRANSITION_DURATION = '200ms';\nvar MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    var className = props.className, theme = props.theme, reversed = props.reversed, checked = props.checked, disabled = props.disabled, isUsingCustomLabelRender = props.isUsingCustomLabelRender, indeterminate = props.indeterminate;\n    var semanticColors = theme.semanticColors, effects = theme.effects, palette = theme.palette, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var checkmarkFontColor = semanticColors.inputForegroundChecked;\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBorder\n    var checkmarkFontColorHovered = palette.neutralSecondary;\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n    var checkboxBorderColor = palette.neutralPrimary;\n    var checkboxBorderIndeterminateColor = semanticColors.inputBackgroundChecked;\n    var checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;\n    var checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;\n    var checkboxBorderHoveredColor = semanticColors.inputBorderHovered;\n    var checkboxBorderIndeterminateHoveredColor = semanticColors.inputBackgroundCheckedHovered;\n    var checkboxBackgroundChecked = semanticColors.inputBackgroundChecked;\n    // TODO: after updating the semanticColors slots mapping the following 2 tokens need to be\n    // semanticColors.inputBackgroundCheckedHovered\n    var checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\n    var checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\n    var checkboxHoveredTextColor = semanticColors.inputTextHovered;\n    var checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;\n    var checkboxTextColor = semanticColors.bodyText;\n    var checkboxTextColorDisabled = semanticColors.disabledText;\n    var indeterminateDotStyles = [\n        (_a = {\n                content: '\"\"',\n                borderRadius: effects.roundedCorner2,\n                position: 'absolute',\n                width: 10,\n                height: 10,\n                top: 4,\n                left: 4,\n                boxSizing: 'border-box',\n                borderWidth: 5,\n                borderStyle: 'solid',\n                borderColor: disabled ? checkboxBorderColorDisabled : checkboxBorderIndeterminateColor,\n                transitionProperty: 'border-width, border, border-color',\n                transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\n                transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING\n            },\n            _a[HighContrastSelector] = {\n                borderColor: 'WindowText',\n            },\n            _a),\n    ];\n    return {\n        root: [\n            classNames.root,\n            {\n                position: 'relative',\n                display: 'flex',\n            },\n            reversed && 'reversed',\n            checked && 'is-checked',\n            !disabled && 'is-enabled',\n            disabled && 'is-disabled',\n            !disabled && [\n                !checked && (_b = {},\n                    _b[\":hover .\".concat(classNames.checkbox)] = (_c = {\n                            borderColor: checkboxBorderHoveredColor\n                        },\n                        _c[HighContrastSelector] = {\n                            borderColor: 'Highlight',\n                        },\n                        _c),\n                    _b[\":focus .\".concat(classNames.checkbox)] = { borderColor: checkboxBorderHoveredColor },\n                    _b[\":hover .\".concat(classNames.checkmark)] = (_d = {\n                            color: checkmarkFontColorHovered,\n                            opacity: '1'\n                        },\n                        _d[HighContrastSelector] = {\n                            color: 'Highlight',\n                        },\n                        _d),\n                    _b),\n                checked &&\n                    !indeterminate && (_e = {},\n                    _e[\":hover .\".concat(classNames.checkbox)] = {\n                        background: checkboxBackgroundCheckedHovered,\n                        borderColor: checkboxBorderColorCheckedHovered,\n                    },\n                    _e[\":focus .\".concat(classNames.checkbox)] = {\n                        background: checkboxBackgroundCheckedHovered,\n                        borderColor: checkboxBorderColorCheckedHovered,\n                    },\n                    _e[HighContrastSelector] = (_f = {},\n                        _f[\":hover .\".concat(classNames.checkbox)] = {\n                            background: 'Highlight',\n                            borderColor: 'Highlight',\n                        },\n                        _f[\":focus .\".concat(classNames.checkbox)] = {\n                            background: 'Highlight',\n                        },\n                        _f[\":focus:hover .\".concat(classNames.checkbox)] = {\n                            background: 'Highlight',\n                        },\n                        _f[\":focus:hover .\".concat(classNames.checkmark)] = {\n                            color: 'Window',\n                        },\n                        _f[\":hover .\".concat(classNames.checkmark)] = {\n                            color: 'Window',\n                        },\n                        _f),\n                    _e),\n                indeterminate && (_g = {},\n                    _g[\":hover .\".concat(classNames.checkbox, \", :hover .\").concat(classNames.checkbox, \":after\")] = (_h = {\n                            borderColor: checkboxBorderIndeterminateHoveredColor\n                        },\n                        _h[HighContrastSelector] = {\n                            borderColor: 'WindowText',\n                        },\n                        _h),\n                    _g[\":focus .\".concat(classNames.checkbox)] = {\n                        borderColor: checkboxBorderIndeterminateHoveredColor,\n                    },\n                    _g[\":hover .\".concat(classNames.checkmark)] = {\n                        opacity: '0',\n                    },\n                    _g),\n                (_j = {},\n                    _j[\":hover .\".concat(classNames.text, \", :focus .\").concat(classNames.text)] = (_k = {\n                            color: checkboxHoveredTextColor\n                        },\n                        _k[HighContrastSelector] = {\n                            color: disabled ? 'GrayText' : 'WindowText',\n                        },\n                        _k),\n                    _j),\n            ],\n            className,\n        ],\n        input: (_l = {\n                position: 'absolute',\n                background: 'none',\n                opacity: 0\n            },\n            // eslint-disable-next-line @fluentui/max-len\n            _l[\".\".concat(IsFocusVisibleClassName, \" &:focus + label::before, :host(.\").concat(IsFocusVisibleClassName, \") &:focus + label::before\")] = (_m = {\n                    outline: '1px solid ' + theme.palette.neutralSecondary,\n                    outlineOffset: '2px'\n                },\n                _m[HighContrastSelector] = {\n                    outline: '1px solid WindowText',\n                },\n                _m),\n            _l),\n        label: [\n            classNames.label,\n            theme.fonts.medium,\n            {\n                display: 'flex',\n                alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',\n                cursor: disabled ? 'default' : 'pointer',\n                position: 'relative',\n                userSelect: 'none',\n            },\n            reversed && {\n                flexDirection: 'row-reverse',\n                justifyContent: 'flex-end',\n            },\n            {\n                '&::before': {\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    content: '\"\"',\n                    pointerEvents: 'none',\n                },\n            },\n        ],\n        checkbox: [\n            classNames.checkbox,\n            (_o = {\n                    position: 'relative',\n                    display: 'flex',\n                    flexShrink: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: MS_CHECKBOX_LABEL_SIZE,\n                    width: MS_CHECKBOX_LABEL_SIZE,\n                    border: \"1px solid \".concat(checkboxBorderColor),\n                    borderRadius: effects.roundedCorner2,\n                    boxSizing: 'border-box',\n                    transitionProperty: 'background, border, border-color',\n                    transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\n                    transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\n                    /* in case the icon is bigger than the box */\n                    overflow: 'hidden',\n                    ':after': indeterminate ? indeterminateDotStyles : null\n                },\n                _o[HighContrastSelector] = __assign({ borderColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n                _o),\n            indeterminate && {\n                borderColor: checkboxBorderIndeterminateColor,\n            },\n            !reversed\n                ? // This margin on the checkbox is for backwards compat. Notably it has the effect where a customRender\n                    // is used, there will be only a 4px margin from checkbox to label. The label by default would have\n                    // another 4px margin for a total of 8px margin between checkbox and label. We don't combine the two\n                    // (and move it into the text) to not incur a breaking change for everyone using custom render atm.\n                    {\n                        marginRight: 4,\n                    }\n                : {\n                    marginLeft: 4,\n                },\n            !disabled &&\n                !indeterminate &&\n                checked && (_p = {\n                    background: checkboxBackgroundChecked,\n                    borderColor: checkboxBorderColorChecked\n                },\n                _p[HighContrastSelector] = {\n                    background: 'Highlight',\n                    borderColor: 'Highlight',\n                },\n                _p),\n            disabled && (_q = {\n                    borderColor: checkboxBorderColorDisabled\n                },\n                _q[HighContrastSelector] = {\n                    borderColor: 'GrayText',\n                },\n                _q),\n            checked &&\n                disabled && (_r = {\n                    background: checkboxBackgroundDisabledChecked,\n                    borderColor: checkboxBorderColorDisabled\n                },\n                _r[HighContrastSelector] = {\n                    background: 'Window',\n                },\n                _r),\n        ],\n        checkmark: [\n            classNames.checkmark,\n            (_s = {\n                    opacity: checked && !indeterminate ? '1' : '0',\n                    color: checkmarkFontColor\n                },\n                _s[HighContrastSelector] = __assign({ color: disabled ? 'GrayText' : 'Window' }, getHighContrastNoAdjustStyle()),\n                _s),\n        ],\n        text: [\n            classNames.text,\n            (_t = {\n                    color: disabled ? checkboxTextColorDisabled : checkboxTextColor,\n                    fontSize: fonts.medium.fontSize,\n                    lineHeight: '20px'\n                },\n                _t[HighContrastSelector] = __assign({ color: disabled ? 'GrayText' : 'WindowText' }, getHighContrastNoAdjustStyle()),\n                _t),\n            !reversed\n                ? {\n                    marginLeft: 4,\n                }\n                : {\n                    marginRight: 4,\n                },\n        ],\n    };\n};\n//# sourceMappingURL=Checkbox.styles.js.map","/* eslint-disable */\nimport { loadStyles } from '@microsoft/load-themed-styles';\nloadStyles([{ \"rawString\": \".picker_94f06b16{position:relative}.pickerText_94f06b16{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-sizing:border-box;box-sizing:border-box;border:1px solid \" }, { \"theme\": \"neutralTertiary\", \"defaultValue\": \"#a19f9d\" }, { \"rawString\": \";min-width:180px;min-height:30px}.pickerText_94f06b16:hover{border-color:\" }, { \"theme\": \"inputBorderHovered\", \"defaultValue\": \"#323130\" }, { \"rawString\": \"}.pickerText_94f06b16.inputFocused_94f06b16{position:relative;border-color:\" }, { \"theme\": \"inputFocusBorderAlt\", \"defaultValue\": \"#0078d4\" }, { \"rawString\": \"}.pickerText_94f06b16.inputFocused_94f06b16:after{pointer-events:none;content:\\\"\\\";position:absolute;left:-1px;top:-1px;bottom:-1px;right:-1px;border:2px solid \" }, { \"theme\": \"inputFocusBorderAlt\", \"defaultValue\": \"#0078d4\" }, { \"rawString\": \"}@media screen and (-ms-high-contrast:active),screen and (forced-colors:active){.pickerText_94f06b16.inputDisabled_94f06b16{position:relative;border-color:GrayText}.pickerText_94f06b16.inputDisabled_94f06b16:after{pointer-events:none;content:\\\"\\\";position:absolute;left:0;top:0;bottom:0;right:0;background-color:Window}}.pickerInput_94f06b16{height:34px;border:none;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;outline:0;padding:0 6px 0;-ms-flex-item-align:end;align-self:flex-end}.pickerItems_94f06b16{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:100%}.screenReaderOnly_94f06b16{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}\" }]);\nexport var picker = \"picker_94f06b16\";\nexport var pickerText = \"pickerText_94f06b16\";\nexport var inputFocused = \"inputFocused_94f06b16\";\nexport var inputDisabled = \"inputDisabled_94f06b16\";\nexport var pickerInput = \"pickerInput_94f06b16\";\nexport var pickerItems = \"pickerItems_94f06b16\";\nexport var screenReaderOnly = \"screenReaderOnly_94f06b16\";\n//# sourceMappingURL=BasePicker.scss.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { buttonProperties, getNativeProps, memoizeFunction, getId, mergeAriaAttributeValues, composeComponentAs, } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu, getMenuItemAriaRole } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nvar ContextualMenuButton = /** @class */ (function (_super) {\n    __extends(ContextualMenuButton, _super);\n    function ContextualMenuButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._btn = React.createRef();\n        _this._getMemoizedMenuButtonKeytipProps = memoizeFunction(function (keytipProps) {\n            return __assign(__assign({}, keytipProps), { hasMenu: true });\n        });\n        _this._renderAriaDescription = function (ariaDescription, className) {\n            // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n            return ariaDescription ? (React.createElement(\"span\", { id: _this._ariaDescriptionId, className: className }, ariaDescription)) : null;\n        };\n        _this._getSubmenuTarget = function () {\n            return _this._btn.current ? _this._btn.current : undefined;\n        };\n        return _this;\n    }\n    ContextualMenuButton.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, item = _a.item, classNames = _a.classNames, index = _a.index, focusableElementIndex = _a.focusableElementIndex, totalItemCount = _a.totalItemCount, hasCheckmarks = _a.hasCheckmarks, hasIcons = _a.hasIcons, contextualMenuItemAs = _a.contextualMenuItemAs, expandedMenuItemKey = _a.expandedMenuItemKey, onItemMouseDown = _a.onItemMouseDown, onItemClick = _a.onItemClick, openSubMenu = _a.openSubMenu, dismissSubMenu = _a.dismissSubMenu, dismissMenu = _a.dismissMenu;\n        var ChildrenRenderer = ContextualMenuItem;\n        if (item.contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(item.contextualMenuItemAs, ChildrenRenderer);\n        }\n        if (contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(contextualMenuItemAs, ChildrenRenderer);\n        }\n        var isChecked = getIsChecked(item);\n        var canCheck = isChecked !== null;\n        var defaultRole = getMenuItemAriaRole(item);\n        var itemHasSubmenu = hasSubmenu(item);\n        var itemProps = item.itemProps, ariaLabel = item.ariaLabel, ariaDescription = item.ariaDescription;\n        var buttonNativeProperties = getNativeProps(item, buttonProperties);\n        // Do not add the disabled attribute to the button so that it is focusable\n        delete buttonNativeProperties.disabled;\n        var itemRole = item.role || defaultRole;\n        // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n        // the description in it to be added to ariaDescribedBy\n        if (ariaDescription) {\n            this._ariaDescriptionId = getId();\n        }\n        var ariaDescribedByIds = mergeAriaAttributeValues(item.ariaDescribedBy, ariaDescription ? this._ariaDescriptionId : undefined, buttonNativeProperties['aria-describedby']);\n        var itemButtonProperties = {\n            className: classNames.root,\n            onClick: this._onItemClick,\n            onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n            onMouseEnter: this._onItemMouseEnter,\n            onMouseLeave: this._onItemMouseLeave,\n            onMouseDown: function (ev) {\n                return onItemMouseDown ? onItemMouseDown(item, ev) : undefined;\n            },\n            onMouseMove: this._onItemMouseMove,\n            href: item.href,\n            title: item.title,\n            'aria-label': ariaLabel,\n            'aria-describedby': ariaDescribedByIds,\n            'aria-haspopup': itemHasSubmenu || undefined,\n            'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n            'aria-posinset': focusableElementIndex + 1,\n            'aria-setsize': totalItemCount,\n            'aria-disabled': isItemDisabled(item),\n            'aria-checked': (itemRole === 'menuitemcheckbox' || itemRole === 'menuitemradio') && canCheck ? !!isChecked : undefined,\n            'aria-selected': itemRole === 'menuitem' && canCheck ? !!isChecked : undefined,\n            role: itemRole,\n            // eslint-disable-next-line deprecation/deprecation\n            style: item.style,\n        };\n        var keytipProps = item.keytipProps;\n        if (keytipProps && itemHasSubmenu) {\n            keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n        }\n        return (React.createElement(KeytipData, { keytipProps: keytipProps, ariaDescribedBy: ariaDescribedByIds, disabled: isItemDisabled(item) }, function (keytipAttributes) { return (React.createElement(\"button\", __assign({ ref: _this._btn }, buttonNativeProperties, itemButtonProperties, keytipAttributes),\n            React.createElement(ChildrenRenderer, __assign({ componentRef: item.componentRef, item: item, classNames: classNames, index: index, onCheckmarkClick: hasCheckmarks && onItemClick ? onItemClick : undefined, hasIcons: hasIcons, openSubMenu: openSubMenu, dismissSubMenu: dismissSubMenu, dismissMenu: dismissMenu, getSubmenuTarget: _this._getSubmenuTarget }, itemProps)),\n            _this._renderAriaDescription(ariaDescription, classNames.screenReaderText))); }));\n    };\n    return ContextualMenuButton;\n}(ContextualMenuItemWrapper));\nexport { ContextualMenuButton };\n//# sourceMappingURL=ContextualMenuButton.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nvar getClassNames = classNamesFunction();\nexport var TooltipBase = /** @class */ (function (_super) {\n    __extends(TooltipBase, _super);\n    function TooltipBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._onRenderContent = function (props) {\n            if (typeof props.content === 'string') {\n                return React.createElement(\"p\", { className: _this._classNames.subText }, props.content);\n            }\n            else {\n                return React.createElement(\"div\", { className: _this._classNames.subText }, props.content);\n            }\n        };\n        return _this;\n    }\n    TooltipBase.prototype.render = function () {\n        var _a, _b;\n        var className = (_a = this.props, _a.className), calloutProps = _a.calloutProps, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, styles = _a.styles, id = _a.id, maxWidth = _a.maxWidth, onRenderContent = (_b = _a.onRenderContent, _b === void 0 ? this._onRenderContent : _b), targetElement = _a.targetElement, theme = _a.theme;\n        this._classNames = getClassNames(styles, {\n            theme: theme,\n            className: className || (calloutProps && calloutProps.className),\n            beakWidth: calloutProps && calloutProps.isBeakVisible ? calloutProps.beakWidth : 0,\n            gapSpace: calloutProps && calloutProps.gapSpace,\n            maxWidth: maxWidth,\n        });\n        return (React.createElement(Callout, __assign({ target: targetElement, directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL }, calloutProps, getNativeProps(this.props, divProperties, ['id']), { className: this._classNames.root }),\n            React.createElement(\"div\", { className: this._classNames.content, id: id, onFocus: this.props.onFocus, onMouseEnter: this.props.onMouseEnter, onMouseLeave: this.props.onMouseLeave }, onRenderContent(this.props, this._onRenderContent))));\n    };\n    // Specify default props values\n    TooltipBase.defaultProps = {\n        directionalHint: DirectionalHint.topCenter,\n        maxWidth: '364px',\n        calloutProps: {\n            isBeakVisible: true,\n            beakWidth: 16,\n            gapSpace: 0,\n            setInitialFocus: true,\n            doNotLayer: false,\n        },\n    };\n    return TooltipBase;\n}(React.Component));\n//# sourceMappingURL=Tooltip.base.js.map","import { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './IconButton.styles';\n/**\n * {@docCategory Button}\n */\nexport var IconButton = /** @class */ (function (_super) {\n    __extends(IconButton, _super);\n    function IconButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IconButton.prototype.render = function () {\n        var _a;\n        var styles = (_a = this.props, _a.styles), theme = _a.theme;\n        return (React.createElement(BaseButton, __assign({}, this.props, { variantClassName: \"ms-Button--icon\", styles: getStyles(theme, styles), onRenderText: nullRender, onRenderDescription: nullRender })));\n    };\n    IconButton = __decorate([\n        customizable('IconButton', ['theme', 'styles'], true)\n    ], IconButton);\n    return IconButton;\n}(React.Component));\n//# sourceMappingURL=IconButton.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, concatStyleSets, getFocusStyle, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n    var effects = theme.effects, palette = theme.palette, semanticColors = theme.semanticColors;\n    var buttonHighContrastFocus = {\n        left: -2,\n        top: -2,\n        bottom: -2,\n        right: -2,\n        border: 'none',\n    };\n    var splitButtonDividerBaseStyles = {\n        position: 'absolute',\n        width: 1,\n        right: 31,\n        top: 8,\n        bottom: 8,\n    };\n    var splitButtonStyles = {\n        splitButtonContainer: [\n            getFocusStyle(theme, { highContrastStyle: buttonHighContrastFocus, inset: 2, pointerEvents: 'none' }),\n            {\n                display: 'inline-flex',\n                '.ms-Button--default': {\n                    borderTopRightRadius: '0',\n                    borderBottomRightRadius: '0',\n                    borderRight: 'none',\n                    flexGrow: '1',\n                },\n                '.ms-Button--primary': (_a = {\n                        borderTopRightRadius: '0',\n                        borderBottomRightRadius: '0',\n                        border: 'none',\n                        flexGrow: '1',\n                        ':hover': {\n                            border: 'none',\n                        },\n                        ':active': {\n                            border: 'none',\n                        }\n                    },\n                    _a[HighContrastSelector] = __assign(__assign({ color: 'WindowText', backgroundColor: 'Window', border: '1px solid WindowText', borderRightWidth: '0' }, getHighContrastNoAdjustStyle()), { ':hover': {\n                            backgroundColor: 'Highlight',\n                            border: '1px solid Highlight',\n                            borderRightWidth: '0',\n                            color: 'HighlightText',\n                        }, ':active': {\n                            border: '1px solid Highlight',\n                        } }),\n                    _a),\n                '.ms-Button--default + .ms-Button': (_b = {},\n                    _b[HighContrastSelector] = {\n                        border: '1px solid WindowText',\n                        borderLeftWidth: '0',\n                        ':hover': {\n                            backgroundColor: 'HighlightText',\n                            borderColor: 'Highlight',\n                            color: 'Highlight',\n                            '.ms-Button-menuIcon': __assign({ backgroundColor: 'HighlightText', color: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                        },\n                    },\n                    _b),\n                '.ms-Button--default + .ms-Button[aria-expanded=\"true\"]': (_c = {},\n                    _c[HighContrastSelector] = {\n                        backgroundColor: 'HighlightText',\n                        borderColor: 'Highlight',\n                        color: 'Highlight',\n                        '.ms-Button-menuIcon': __assign({ backgroundColor: 'HighlightText', color: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                    },\n                    _c),\n                '.ms-Button--primary + .ms-Button': (_d = {\n                        border: 'none'\n                    },\n                    _d[HighContrastSelector] = {\n                        border: '1px solid WindowText',\n                        borderLeftWidth: '0',\n                        ':hover': {\n                            borderLeftWidth: '0',\n                            backgroundColor: 'Highlight',\n                            borderColor: 'Highlight',\n                            color: 'HighlightText',\n                            '.ms-Button-menuIcon': __assign(__assign({}, getHighContrastNoAdjustStyle()), { color: 'HighlightText' }),\n                        },\n                    },\n                    _d),\n                '.ms-Button--primary + .ms-Button[aria-expanded=\"true\"]': __assign(__assign({ backgroundColor: 'Highlight', borderColor: 'Highlight', color: 'HighlightText' }, getHighContrastNoAdjustStyle()), { '.ms-Button-menuIcon': {\n                        color: 'HighlightText',\n                    } }),\n                '.ms-Button.is-disabled': (_e = {},\n                    _e[HighContrastSelector] = {\n                        color: 'GrayText',\n                        borderColor: 'GrayText',\n                        backgroundColor: 'Window',\n                    },\n                    _e),\n            },\n        ],\n        splitButtonContainerHovered: {\n            '.ms-Button--default.is-disabled': (_f = {\n                    backgroundColor: semanticColors.buttonBackgroundDisabled,\n                    color: semanticColors.buttonTextDisabled\n                },\n                _f[HighContrastSelector] = {\n                    color: 'GrayText',\n                    borderColor: 'GrayText',\n                    backgroundColor: 'Window',\n                },\n                _f),\n            '.ms-Button--primary.is-disabled': (_g = {\n                    backgroundColor: semanticColors.primaryButtonBackgroundDisabled,\n                    color: semanticColors.primaryButtonTextDisabled\n                },\n                _g[HighContrastSelector] = {\n                    color: 'GrayText',\n                    borderColor: 'GrayText',\n                    backgroundColor: 'Window',\n                },\n                _g),\n        },\n        splitButtonContainerChecked: {\n            '.ms-Button--primary': (_h = {},\n                _h[HighContrastSelector] = __assign({ color: 'Window', backgroundColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n                _h),\n        },\n        splitButtonContainerCheckedHovered: {\n            '.ms-Button--primary': (_j = {},\n                _j[HighContrastSelector] = __assign({ color: 'Window', backgroundColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n                _j),\n        },\n        splitButtonContainerFocused: {\n            outline: 'none!important',\n        },\n        splitButtonMenuButton: (_k = {\n                padding: 6,\n                height: 'auto',\n                boxSizing: 'border-box',\n                borderRadius: 0,\n                borderTopRightRadius: effects.roundedCorner2,\n                borderBottomRightRadius: effects.roundedCorner2,\n                border: \"1px solid \".concat(palette.neutralSecondaryAlt),\n                borderLeft: 'none',\n                outline: 'transparent',\n                userSelect: 'none',\n                display: 'inline-block',\n                textDecoration: 'none',\n                textAlign: 'center',\n                cursor: 'pointer',\n                verticalAlign: 'top',\n                width: 32,\n                marginLeft: -1,\n                marginTop: 0,\n                marginRight: 0,\n                marginBottom: 0\n            },\n            _k[HighContrastSelector] = {\n                '.ms-Button-menuIcon': {\n                    color: 'WindowText',\n                },\n            },\n            _k),\n        splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles), (_l = {}, _l[HighContrastSelector] = {\n            backgroundColor: 'WindowText',\n        }, _l)),\n        splitButtonDividerDisabled: __assign(__assign({}, splitButtonDividerBaseStyles), (_m = {}, _m[HighContrastSelector] = {\n            backgroundColor: 'GrayText',\n        }, _m)),\n        splitButtonMenuButtonDisabled: (_o = {\n                pointerEvents: 'none',\n                border: 'none',\n                ':hover': {\n                    cursor: 'default',\n                },\n                '.ms-Button--primary': (_p = {},\n                    _p[HighContrastSelector] = {\n                        color: 'GrayText',\n                        borderColor: 'GrayText',\n                        backgroundColor: 'Window',\n                    },\n                    _p),\n                '.ms-Button-menuIcon': (_q = {},\n                    _q[HighContrastSelector] = {\n                        color: 'GrayText',\n                    },\n                    _q)\n            },\n            _o[HighContrastSelector] = {\n                color: 'GrayText',\n                border: '1px solid GrayText',\n                backgroundColor: 'Window',\n            },\n            _o),\n        splitButtonFlexContainer: {\n            display: 'flex',\n            height: '100%',\n            flexWrap: 'nowrap',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        splitButtonContainerDisabled: (_r = {\n                outline: 'none',\n                border: 'none'\n            },\n            _r[HighContrastSelector] = __assign({ color: 'GrayText', borderColor: 'GrayText', backgroundColor: 'Window' }, getHighContrastNoAdjustStyle()),\n            _r),\n        splitButtonMenuFocused: __assign({}, getFocusStyle(theme, { highContrastStyle: buttonHighContrastFocus, inset: 2 })),\n    };\n    return concatStyleSets(splitButtonStyles, customStyles);\n});\n//# sourceMappingURL=SplitButton.styles.js.map","import { styled } from '../../Utilities';\nimport { DropdownBase } from './Dropdown.base';\nimport { getStyles } from './Dropdown.styles';\nexport var Dropdown = styled(DropdownBase, getStyles, undefined, {\n    scope: 'Dropdown',\n});\nDropdown.displayName = 'Dropdown';\n//# sourceMappingURL=Dropdown.js.map","/**\n * Enum to help identify which suggestions action button is selected.\n * {@docCategory Pickers}\n */\nexport var SuggestionActionType;\n(function (SuggestionActionType) {\n    /** None of the actions is selected. */\n    SuggestionActionType[SuggestionActionType[\"none\"] = 0] = \"none\";\n    /** ForceResolve action is selected. */\n    SuggestionActionType[SuggestionActionType[\"forceResolve\"] = 1] = \"forceResolve\";\n    /** SearchMore action is selected. */\n    SuggestionActionType[SuggestionActionType[\"searchMore\"] = 2] = \"searchMore\";\n})(SuggestionActionType || (SuggestionActionType = {}));\n//# sourceMappingURL=Suggestions.types.js.map","import { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './ActionButton.styles';\n/**\n * {@docCategory Button}\n */\nexport var ActionButton = /** @class */ (function (_super) {\n    __extends(ActionButton, _super);\n    function ActionButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ActionButton.prototype.render = function () {\n        var _a;\n        var styles = (_a = this.props, _a.styles), theme = _a.theme;\n        return (React.createElement(BaseButton, __assign({}, this.props, { variantClassName: \"ms-Button--action ms-Button--command\", styles: getStyles(theme, styles), onRenderDescription: nullRender })));\n    };\n    ActionButton = __decorate([\n        customizable('ActionButton', ['theme', 'styles'], true)\n    ], ActionButton);\n    return ActionButton;\n}(React.Component));\n//# sourceMappingURL=ActionButton.js.map","import { styled } from '../../../Utilities';\nimport { ChoiceGroupOptionBase } from './ChoiceGroupOption.base';\nimport { getStyles } from './ChoiceGroupOption.styles';\nexport var ChoiceGroupOption = styled(ChoiceGroupOptionBase, getStyles, undefined, { scope: 'ChoiceGroupOption' });\n//# sourceMappingURL=ChoiceGroupOption.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\nimport { ShimmerElementsGroup } from './ShimmerElementsGroup/ShimmerElementsGroup';\nimport { useSetTimeout, useConst } from '@fluentui/react-hooks';\nvar TRANSITION_ANIMATION_INTERVAL = 200; /* ms */\nvar COMPONENT_NAME = 'Shimmer';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory Shimmer}\n */\nexport var ShimmerBase = React.forwardRef(function (props, ref) {\n    var styles = props.styles, shimmerElements = props.shimmerElements, children = props.children, width = props.width, className = props.className, customElementsGroup = props.customElementsGroup, theme = props.theme, ariaLabel = props.ariaLabel, shimmerColors = props.shimmerColors, _a = props.isDataLoaded, isDataLoaded = _a === void 0 ? false : _a, improveCSSPerformance = props.improveCSSPerformance;\n    var divProps = getNativeProps(props, divProperties);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        isDataLoaded: isDataLoaded,\n        className: className,\n        transitionAnimationInterval: TRANSITION_ANIMATION_INTERVAL,\n        shimmerColor: shimmerColors && shimmerColors.shimmer,\n        shimmerWaveColor: shimmerColors && shimmerColors.shimmerWave,\n        improveCSSPerformance: improveCSSPerformance || !customElementsGroup,\n    });\n    var internalState = useConst({\n        lastTimeoutId: 0,\n    });\n    var _b = useSetTimeout(), setTimeout = _b.setTimeout, clearTimeout = _b.clearTimeout;\n    /**\n     * Flag for knowing when to remove the shimmerWrapper from the DOM.\n     */\n    var _c = React.useState(isDataLoaded), contentLoaded = _c[0], setContentLoaded = _c[1];\n    var divStyleProp = { width: width ? width : '100%' };\n    React.useEffect(function () {\n        if (isDataLoaded !== contentLoaded) {\n            if (isDataLoaded) {\n                internalState.lastTimeoutId = setTimeout(function () {\n                    setContentLoaded(true);\n                }, TRANSITION_ANIMATION_INTERVAL);\n                return function () { return clearTimeout(internalState.lastTimeoutId); };\n            }\n            else {\n                setContentLoaded(false);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- Should only run when isDataLoaded changes.\n    }, [isDataLoaded]);\n    return (React.createElement(\"div\", __assign({}, divProps, { className: classNames.root, ref: ref }),\n        !contentLoaded && (React.createElement(\"div\", { style: divStyleProp, className: classNames.shimmerWrapper },\n            React.createElement(\"div\", { className: classNames.shimmerGradient }),\n            customElementsGroup ? (customElementsGroup) : (React.createElement(ShimmerElementsGroup, { shimmerElements: shimmerElements, backgroundColor: shimmerColors && shimmerColors.background })))),\n        children && React.createElement(\"div\", { className: classNames.dataWrapper }, children),\n        ariaLabel && !isDataLoaded && (React.createElement(\"div\", { role: \"status\", \"aria-live\": \"polite\" },\n            React.createElement(DelayedRender, null,\n                React.createElement(\"div\", { className: classNames.screenReaderText }, ariaLabel))))));\n});\nShimmerBase.displayName = COMPONENT_NAME;\n//# sourceMappingURL=Shimmer.base.js.map","import { FontWeights, normalize, noWrap, getGlobalClassNames } from '../../Styling';\nimport { personaSize, presenceBoolean, sizeBoolean } from './PersonaConsts';\nvar GlobalClassNames = {\n    root: 'ms-Persona',\n    size8: 'ms-Persona--size8',\n    size10: 'ms-Persona--size10',\n    size16: 'ms-Persona--size16',\n    size24: 'ms-Persona--size24',\n    size28: 'ms-Persona--size28',\n    size32: 'ms-Persona--size32',\n    size40: 'ms-Persona--size40',\n    size48: 'ms-Persona--size48',\n    size56: 'ms-Persona--size56',\n    size72: 'ms-Persona--size72',\n    size100: 'ms-Persona--size100',\n    size120: 'ms-Persona--size120',\n    available: 'ms-Persona--online',\n    away: 'ms-Persona--away',\n    blocked: 'ms-Persona--blocked',\n    busy: 'ms-Persona--busy',\n    doNotDisturb: 'ms-Persona--donotdisturb',\n    offline: 'ms-Persona--offline',\n    details: 'ms-Persona-details',\n    primaryText: 'ms-Persona-primaryText',\n    secondaryText: 'ms-Persona-secondaryText',\n    tertiaryText: 'ms-Persona-tertiaryText',\n    optionalText: 'ms-Persona-optionalText',\n    textContent: 'ms-Persona-textContent',\n};\nexport var getStyles = function (props) {\n    var className = props.className, showSecondaryText = props.showSecondaryText, theme = props.theme;\n    var semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var size = sizeBoolean(props.size);\n    var presence = presenceBoolean(props.presence);\n    var showSecondaryTextDefaultHeight = '16px';\n    var sharedTextStyles = {\n        color: semanticColors.bodySubtext,\n        fontWeight: FontWeights.regular,\n        fontSize: fonts.small.fontSize,\n    };\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            normalize,\n            {\n                color: semanticColors.bodyText,\n                position: 'relative',\n                height: personaSize.size48,\n                minWidth: personaSize.size48,\n                display: 'flex',\n                alignItems: 'center',\n                selectors: {\n                    '.contextualHost': {\n                        display: 'none',\n                    },\n                },\n            },\n            size.isSize8 && [\n                classNames.size8,\n                {\n                    height: personaSize.size8,\n                    minWidth: personaSize.size8,\n                },\n            ],\n            // TODO: Deprecated size and needs to be removed in a future major release.\n            size.isSize10 && [\n                classNames.size10,\n                {\n                    height: personaSize.size10,\n                    minWidth: personaSize.size10,\n                },\n            ],\n            // TODO: Deprecated size and needs to be removed in a future major release.\n            size.isSize16 && [\n                classNames.size16,\n                {\n                    height: personaSize.size16,\n                    minWidth: personaSize.size16,\n                },\n            ],\n            size.isSize24 && [\n                classNames.size24,\n                {\n                    height: personaSize.size24,\n                    minWidth: personaSize.size24,\n                },\n            ],\n            size.isSize24 &&\n                showSecondaryText && {\n                height: '36px',\n            },\n            // TODO: Deprecated size and needs to be removed in a future major release.\n            size.isSize28 && [\n                classNames.size28,\n                {\n                    height: personaSize.size28,\n                    minWidth: personaSize.size28,\n                },\n            ],\n            size.isSize28 &&\n                showSecondaryText && {\n                height: '32px',\n            },\n            size.isSize32 && [\n                classNames.size32,\n                {\n                    height: personaSize.size32,\n                    minWidth: personaSize.size32,\n                },\n            ],\n            size.isSize40 && [\n                classNames.size40,\n                {\n                    height: personaSize.size40,\n                    minWidth: personaSize.size40,\n                },\n            ],\n            size.isSize48 && classNames.size48,\n            size.isSize56 && [\n                classNames.size56,\n                {\n                    height: personaSize.size56,\n                    minWidth: personaSize.size56,\n                },\n            ],\n            size.isSize72 && [\n                classNames.size72,\n                {\n                    height: personaSize.size72,\n                    minWidth: personaSize.size72,\n                },\n            ],\n            size.isSize100 && [\n                classNames.size100,\n                {\n                    height: personaSize.size100,\n                    minWidth: personaSize.size100,\n                },\n            ],\n            size.isSize120 && [\n                classNames.size120,\n                {\n                    height: personaSize.size120,\n                    minWidth: personaSize.size120,\n                },\n            ],\n            /**\n             * Modifiers: presence\n             */\n            presence.isAvailable && classNames.available,\n            presence.isAway && classNames.away,\n            presence.isBlocked && classNames.blocked,\n            presence.isBusy && classNames.busy,\n            presence.isDoNotDisturb && classNames.doNotDisturb,\n            presence.isOffline && classNames.offline,\n            className,\n        ],\n        details: [\n            classNames.details,\n            {\n                padding: '0 24px 0 16px',\n                minWidth: 0,\n                width: '100%',\n                textAlign: 'left',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-around',\n            },\n            (size.isSize8 || size.isSize10) && {\n                paddingLeft: 17, // increased padding because we don't render a coin at this size\n            },\n            (size.isSize24 || size.isSize28 || size.isSize32) && {\n                padding: '0 8px',\n            },\n            (size.isSize40 || size.isSize48) && {\n                padding: '0 12px',\n            },\n        ],\n        primaryText: [\n            classNames.primaryText,\n            noWrap,\n            {\n                color: semanticColors.bodyText,\n                fontWeight: FontWeights.regular,\n                fontSize: fonts.medium.fontSize,\n                selectors: {\n                    ':hover': {\n                        color: semanticColors.inputTextHovered,\n                    },\n                },\n            },\n            showSecondaryText && {\n                height: showSecondaryTextDefaultHeight,\n                lineHeight: showSecondaryTextDefaultHeight,\n                overflowX: 'hidden',\n            },\n            (size.isSize8 || size.isSize10) && {\n                fontSize: fonts.small.fontSize,\n                lineHeight: personaSize.size8,\n            },\n            size.isSize16 && {\n                lineHeight: personaSize.size28,\n            },\n            (size.isSize24 || size.isSize28 || size.isSize32 || size.isSize40 || size.isSize48) &&\n                showSecondaryText && {\n                height: 18,\n            },\n            (size.isSize56 || size.isSize72 || size.isSize100 || size.isSize120) && {\n                fontSize: fonts.xLarge.fontSize,\n            },\n            (size.isSize56 || size.isSize72 || size.isSize100 || size.isSize120) &&\n                showSecondaryText && {\n                height: 22,\n            },\n        ],\n        secondaryText: [\n            classNames.secondaryText,\n            noWrap,\n            sharedTextStyles,\n            (size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) && {\n                display: 'none',\n            },\n            showSecondaryText && {\n                display: 'block',\n                height: showSecondaryTextDefaultHeight,\n                lineHeight: showSecondaryTextDefaultHeight,\n                overflowX: 'hidden',\n            },\n            size.isSize24 &&\n                showSecondaryText && {\n                height: 18,\n            },\n            (size.isSize56 || size.isSize72 || size.isSize100 || size.isSize120) && {\n                fontSize: fonts.medium.fontSize,\n            },\n            (size.isSize56 || size.isSize72 || size.isSize100 || size.isSize120) &&\n                showSecondaryText && {\n                height: 18,\n            },\n        ],\n        tertiaryText: [\n            classNames.tertiaryText,\n            noWrap,\n            sharedTextStyles,\n            {\n                display: 'none',\n                fontSize: fonts.medium.fontSize,\n            },\n            (size.isSize72 || size.isSize100 || size.isSize120) && {\n                display: 'block',\n            },\n        ],\n        optionalText: [\n            classNames.optionalText,\n            noWrap,\n            sharedTextStyles,\n            {\n                display: 'none',\n                fontSize: fonts.medium.fontSize,\n            },\n            (size.isSize100 || size.isSize120) && {\n                display: 'block',\n            },\n        ],\n        textContent: [classNames.textContent, noWrap],\n    };\n};\n//# sourceMappingURL=Persona.styles.js.map","import { styled } from '../../Utilities';\nimport { FabricBase } from './Fabric.base';\nimport { getStyles } from './Fabric.styles';\n/**\n * @deprecated This component is deprecated as of `@fluentui/react` version 8. Use `ThemeProvider` instead.\n */\nexport var Fabric = styled(FabricBase, getStyles, undefined, {\n    scope: 'Fabric',\n});\n//# sourceMappingURL=Fabric.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { anchorProperties, getNativeProps, memoizeFunction, getId, mergeAriaAttributeValues, composeComponentAs, } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nvar ContextualMenuAnchor = /** @class */ (function (_super) {\n    __extends(ContextualMenuAnchor, _super);\n    function ContextualMenuAnchor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._anchor = React.createRef();\n        _this._getMemoizedMenuButtonKeytipProps = memoizeFunction(function (keytipProps) {\n            return __assign(__assign({}, keytipProps), { hasMenu: true });\n        });\n        _this._getSubmenuTarget = function () {\n            return _this._anchor.current ? _this._anchor.current : undefined;\n        };\n        _this._onItemClick = function (ev) {\n            var _a = _this.props, item = _a.item, onItemClick = _a.onItemClick;\n            if (onItemClick) {\n                onItemClick(item, ev);\n            }\n        };\n        _this._renderAriaDescription = function (ariaDescription, className) {\n            // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n            return ariaDescription ? (React.createElement(\"span\", { id: _this._ariaDescriptionId, className: className }, ariaDescription)) : null;\n        };\n        return _this;\n    }\n    ContextualMenuAnchor.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, item = _a.item, classNames = _a.classNames, index = _a.index, focusableElementIndex = _a.focusableElementIndex, totalItemCount = _a.totalItemCount, hasCheckmarks = _a.hasCheckmarks, hasIcons = _a.hasIcons, expandedMenuItemKey = _a.expandedMenuItemKey, onItemClick = _a.onItemClick, openSubMenu = _a.openSubMenu, dismissSubMenu = _a.dismissSubMenu, dismissMenu = _a.dismissMenu;\n        var ChildrenRenderer = ContextualMenuItem;\n        if (this.props.item.contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(this.props.item.contextualMenuItemAs, ChildrenRenderer);\n        }\n        if (this.props.contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(this.props.contextualMenuItemAs, ChildrenRenderer);\n        }\n        var anchorRel = item.rel;\n        if (item.target && item.target.toLowerCase() === '_blank') {\n            anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\n        }\n        var itemHasSubmenu = hasSubmenu(item);\n        var nativeProps = getNativeProps(item, anchorProperties);\n        var disabled = isItemDisabled(item);\n        var itemProps = item.itemProps, ariaDescription = item.ariaDescription;\n        var keytipProps = item.keytipProps;\n        if (keytipProps && itemHasSubmenu) {\n            keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n        }\n        // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n        // the description in it to be added to ariaDescribedBy\n        if (ariaDescription) {\n            this._ariaDescriptionId = getId();\n        }\n        var ariaDescribedByIds = mergeAriaAttributeValues(item.ariaDescribedBy, ariaDescription ? this._ariaDescriptionId : undefined, nativeProps['aria-describedby']);\n        var additionalItemProperties = {\n            'aria-describedby': ariaDescribedByIds,\n        };\n        return (React.createElement(\"div\", null,\n            React.createElement(KeytipData, { keytipProps: item.keytipProps, ariaDescribedBy: ariaDescribedByIds, disabled: disabled }, function (keytipAttributes) { return (React.createElement(\"a\", __assign({}, additionalItemProperties, nativeProps, keytipAttributes, { ref: _this._anchor, href: item.href, target: item.target, rel: anchorRel, className: classNames.root, role: \"menuitem\", \"aria-haspopup\": itemHasSubmenu || undefined, \"aria-expanded\": itemHasSubmenu ? item.key === expandedMenuItemKey : undefined, \"aria-posinset\": focusableElementIndex + 1, \"aria-setsize\": totalItemCount, \"aria-disabled\": isItemDisabled(item), \n                // eslint-disable-next-line deprecation/deprecation\n                style: item.style, onClick: _this._onItemClick, onMouseEnter: _this._onItemMouseEnter, onMouseLeave: _this._onItemMouseLeave, onMouseMove: _this._onItemMouseMove, onKeyDown: itemHasSubmenu ? _this._onItemKeyDown : undefined }),\n                React.createElement(ChildrenRenderer, __assign({ componentRef: item.componentRef, item: item, classNames: classNames, index: index, onCheckmarkClick: hasCheckmarks && onItemClick ? onItemClick : undefined, hasIcons: hasIcons, openSubMenu: openSubMenu, dismissSubMenu: dismissSubMenu, dismissMenu: dismissMenu, getSubmenuTarget: _this._getSubmenuTarget }, itemProps)),\n                _this._renderAriaDescription(ariaDescription, classNames.screenReaderText))); })));\n    };\n    return ContextualMenuAnchor;\n}(ContextualMenuItemWrapper));\nexport { ContextualMenuAnchor };\n//# sourceMappingURL=ContextualMenuAnchor.js.map","import { __assign } from \"tslib\";\nimport { FontSizes, FontWeights, getFocusStyle, getGlobalClassNames, AnimationStyles, keyframes, HighContrastSelector, getHighContrastNoAdjustStyle, } from '@fluentui/style-utilities';\nimport { DateRangeType } from '@fluentui/date-time-utilities';\nimport { AnimationDirection } from '../Calendar/Calendar.types';\nvar GlobalClassNames = {\n    hoverStyle: 'ms-CalendarDay-hoverStyle',\n    pressedStyle: 'ms-CalendarDay-pressedStyle',\n    dayIsTodayStyle: 'ms-CalendarDay-dayIsToday',\n    daySelectedStyle: 'ms-CalendarDay-daySelected',\n};\nvar transitionRowDisappearance = keyframes({\n    '100%': {\n        width: 0,\n        height: 0,\n        overflow: 'hidden',\n    },\n    '99.9%': {\n        width: '100%',\n        height: 28,\n        overflow: 'visible',\n    },\n    '0%': {\n        width: '100%',\n        height: 28,\n        overflow: 'visible',\n    },\n});\nexport var styles = function (props) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    var theme = props.theme, dateRangeType = props.dateRangeType, showWeekNumbers = props.showWeekNumbers, lightenDaysOutsideNavigatedMonth = props.lightenDaysOutsideNavigatedMonth, animateBackwards = props.animateBackwards, animationDirection = props.animationDirection;\n    var palette = theme.palette;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var rowAnimationStyle = {};\n    if (animateBackwards !== undefined) {\n        if (animationDirection === AnimationDirection.Horizontal) {\n            rowAnimationStyle = animateBackwards ? AnimationStyles.slideRightIn20 : AnimationStyles.slideLeftIn20;\n        }\n        else {\n            rowAnimationStyle = animateBackwards ? AnimationStyles.slideDownIn20 : AnimationStyles.slideUpIn20;\n        }\n    }\n    var firstTransitionRowAnimationStyle = {};\n    var lastTransitionRowAnimationStyle = {};\n    if (animateBackwards !== undefined) {\n        if (animationDirection !== AnimationDirection.Horizontal) {\n            firstTransitionRowAnimationStyle = animateBackwards ? { animationName: '' } : AnimationStyles.slideUpOut20;\n            lastTransitionRowAnimationStyle = animateBackwards ? AnimationStyles.slideDownOut20 : { animationName: '' };\n        }\n    }\n    var disabledStyle = {\n        selectors: {\n            '&, &:disabled, & button': {\n                color: palette.neutralTertiaryAlt,\n                pointerEvents: 'none',\n            },\n        },\n    };\n    return {\n        wrapper: {\n            paddingBottom: 10,\n        },\n        table: [\n            {\n                textAlign: 'center',\n                borderCollapse: 'collapse',\n                borderSpacing: '0',\n                tableLayout: 'fixed',\n                fontSize: 'inherit',\n                marginTop: 4,\n                width: 196,\n                position: 'relative',\n                paddingBottom: 10,\n            },\n            showWeekNumbers && {\n                width: 226,\n            },\n        ],\n        dayCell: [\n            getFocusStyle(theme, { inset: -3 }),\n            {\n                margin: 0,\n                padding: 0,\n                width: 28,\n                height: 28,\n                lineHeight: 28,\n                fontSize: FontSizes.small,\n                fontWeight: FontWeights.regular,\n                color: palette.neutralPrimary,\n                cursor: 'pointer',\n                position: 'relative',\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = __assign({ color: 'WindowText', backgroundColor: 'transparent', zIndex: 0 }, getHighContrastNoAdjustStyle()),\n                    _a['&.' + classNames.hoverStyle] = {\n                        backgroundColor: palette.neutralLighter,\n                        selectors: (_b = {},\n                            _b[HighContrastSelector] = {\n                                zIndex: 3,\n                                backgroundColor: 'Window',\n                                outline: '1px solid Highlight',\n                            },\n                            _b),\n                    },\n                    _a['&.' + classNames.pressedStyle] = {\n                        backgroundColor: palette.neutralLight,\n                        selectors: (_c = {},\n                            _c[HighContrastSelector] = {\n                                borderColor: 'Highlight',\n                                color: 'Highlight',\n                                backgroundColor: 'Window',\n                            },\n                            _c),\n                    },\n                    _a['&.' + classNames.pressedStyle + '.' + classNames.hoverStyle] = {\n                        selectors: (_d = {},\n                            _d[HighContrastSelector] = {\n                                backgroundColor: 'Window',\n                                outline: '1px solid Highlight',\n                            },\n                            _d),\n                    },\n                    _a),\n            },\n        ],\n        daySelected: [\n            dateRangeType !== DateRangeType.Month && {\n                backgroundColor: palette.neutralLight + '!important',\n                selectors: (_e = {\n                        '&::before': {\n                            content: '\"\"',\n                            position: 'absolute',\n                            top: 0,\n                            bottom: 0,\n                            left: 0,\n                            right: 0,\n                        }\n                    },\n                    _e['&:hover, &.' + classNames.hoverStyle + ', &.' + classNames.pressedStyle] = (_f = {\n                            backgroundColor: palette.neutralLight + '!important'\n                        },\n                        _f[HighContrastSelector] = {\n                            color: 'HighlightText!important',\n                            background: 'Highlight!important',\n                        },\n                        _f),\n                    _e[HighContrastSelector] = __assign({ background: 'Highlight!important', color: 'HighlightText!important', borderColor: 'Highlight!important' }, getHighContrastNoAdjustStyle()),\n                    _e),\n            },\n        ],\n        weekRow: rowAnimationStyle,\n        weekDayLabelCell: AnimationStyles.fadeIn200,\n        weekNumberCell: {\n            margin: 0,\n            padding: 0,\n            borderRight: '1px solid',\n            borderColor: palette.neutralLight,\n            backgroundColor: palette.neutralLighterAlt,\n            color: palette.neutralSecondary,\n            boxSizing: 'border-box',\n            width: 28,\n            height: 28,\n            fontWeight: FontWeights.regular,\n            fontSize: FontSizes.small,\n        },\n        dayOutsideBounds: disabledStyle,\n        dayOutsideNavigatedMonth: lightenDaysOutsideNavigatedMonth && {\n            color: palette.neutralSecondary,\n            fontWeight: FontWeights.regular,\n        },\n        dayButton: {\n            width: 24,\n            height: 24,\n            lineHeight: 24,\n            fontSize: FontSizes.small,\n            fontWeight: 'inherit',\n            borderRadius: 2,\n            border: 'none',\n            padding: 0,\n            color: 'inherit',\n            backgroundColor: 'transparent',\n            cursor: 'pointer',\n            overflow: 'visible',\n            selectors: {\n                span: {\n                    height: 'inherit',\n                    lineHeight: 'inherit',\n                },\n            },\n        },\n        dayIsToday: {\n            backgroundColor: palette.themePrimary + '!important',\n            borderRadius: '100%',\n            color: palette.white + '!important',\n            fontWeight: (FontWeights.semibold + '!important'),\n            selectors: (_g = {},\n                _g[HighContrastSelector] = __assign({ background: 'WindowText!important', color: 'Window!important', borderColor: 'WindowText!important' }, getHighContrastNoAdjustStyle()),\n                _g),\n        },\n        firstTransitionWeek: __assign(__assign({ position: 'absolute', opacity: 0, width: 0, height: 0, overflow: 'hidden' }, firstTransitionRowAnimationStyle), { animationName: firstTransitionRowAnimationStyle.animationName + ',' + transitionRowDisappearance }),\n        lastTransitionWeek: __assign(__assign({ position: 'absolute', opacity: 0, width: 0, height: 0, overflow: 'hidden', marginTop: -28 }, lastTransitionRowAnimationStyle), { animationName: lastTransitionRowAnimationStyle.animationName + ',' + transitionRowDisappearance }),\n        dayMarker: {\n            width: 4,\n            height: 4,\n            backgroundColor: palette.neutralSecondary,\n            borderRadius: '100%',\n            bottom: 1,\n            left: 0,\n            right: 0,\n            position: 'absolute',\n            margin: 'auto',\n            selectors: (_h = {},\n                _h['.' + classNames.dayIsTodayStyle + ' &'] = {\n                    backgroundColor: palette.white,\n                    selectors: (_j = {},\n                        _j[HighContrastSelector] = {\n                            backgroundColor: 'Window',\n                        },\n                        _j),\n                },\n                _h['.' + classNames.daySelectedStyle + ' &'] = {\n                    selectors: (_k = {},\n                        _k[HighContrastSelector] = {\n                            backgroundColor: 'HighlightText',\n                        },\n                        _k),\n                },\n                _h[HighContrastSelector] = __assign({ backgroundColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n                _h),\n        },\n        topRightCornerDate: {\n            borderTopRightRadius: '2px',\n        },\n        topLeftCornerDate: {\n            borderTopLeftRadius: '2px',\n        },\n        bottomRightCornerDate: {\n            borderBottomRightRadius: '2px',\n        },\n        bottomLeftCornerDate: {\n            borderBottomLeftRadius: '2px',\n        },\n        datesAbove: {\n            '&::before': {\n                borderTop: \"1px solid \".concat(palette.neutralSecondary),\n            },\n        },\n        datesBelow: {\n            '&::before': {\n                borderBottom: \"1px solid \".concat(palette.neutralSecondary),\n            },\n        },\n        datesLeft: {\n            '&::before': {\n                borderLeft: \"1px solid \".concat(palette.neutralSecondary),\n            },\n        },\n        datesRight: {\n            '&::before': {\n                borderRight: \"1px solid \".concat(palette.neutralSecondary),\n            },\n        },\n    };\n};\n//# sourceMappingURL=CalendarDayGrid.styles.js.map","/* eslint-disable */\nimport { loadStyles } from '@microsoft/load-themed-styles';\nloadStyles([{ \"rawString\": \".root_8c91000a{min-width:260px}.suggestionsItem_8c91000a{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;position:relative;overflow:hidden}.suggestionsItem_8c91000a:hover{background:\" }, { \"theme\": \"neutralLighter\", \"defaultValue\": \"#f3f2f1\" }, { \"rawString\": \"}.suggestionsItem_8c91000a:hover .closeButton_8c91000a{display:block}.suggestionsItem_8c91000a.suggestionsItemIsSuggested_8c91000a{background:\" }, { \"theme\": \"neutralLight\", \"defaultValue\": \"#edebe9\" }, { \"rawString\": \"}.suggestionsItem_8c91000a.suggestionsItemIsSuggested_8c91000a:hover{background:\" }, { \"theme\": \"neutralTertiaryAlt\", \"defaultValue\": \"#c8c6c4\" }, { \"rawString\": \"}@media screen and (-ms-high-contrast:active),screen and (forced-colors:active){.suggestionsItem_8c91000a.suggestionsItemIsSuggested_8c91000a:hover{background:Highlight;color:HighlightText}}@media screen and (-ms-high-contrast:active),screen and (forced-colors:active){.suggestionsItem_8c91000a.suggestionsItemIsSuggested_8c91000a{background:Highlight;color:HighlightText;-ms-high-contrast-adjust:none}}.suggestionsItem_8c91000a.suggestionsItemIsSuggested_8c91000a .closeButton_8c91000a:hover{background:\" }, { \"theme\": \"neutralTertiary\", \"defaultValue\": \"#a19f9d\" }, { \"rawString\": \";color:\" }, { \"theme\": \"neutralPrimary\", \"defaultValue\": \"#323130\" }, { \"rawString\": \"}@media screen and (-ms-high-contrast:active),screen and (forced-colors:active){.suggestionsItem_8c91000a.suggestionsItemIsSuggested_8c91000a .itemButton_8c91000a{color:HighlightText}}.suggestionsItem_8c91000a .closeButton_8c91000a{display:none;color:\" }, { \"theme\": \"neutralSecondary\", \"defaultValue\": \"#605e5c\" }, { \"rawString\": \"}.suggestionsItem_8c91000a .closeButton_8c91000a:hover{background:\" }, { \"theme\": \"neutralLight\", \"defaultValue\": \"#edebe9\" }, { \"rawString\": \"}.actionButton_8c91000a{background-color:transparent;border:0;cursor:pointer;margin:0;position:relative;border-top:1px solid \" }, { \"theme\": \"neutralLight\", \"defaultValue\": \"#edebe9\" }, { \"rawString\": \";height:40px;width:100%;font-size:12px}[dir=ltr] .actionButton_8c91000a{padding-left:8px}[dir=rtl] .actionButton_8c91000a{padding-right:8px}html[dir=ltr] .actionButton_8c91000a{text-align:left}html[dir=rtl] .actionButton_8c91000a{text-align:right}.actionButton_8c91000a:hover{background-color:\" }, { \"theme\": \"neutralLight\", \"defaultValue\": \"#edebe9\" }, { \"rawString\": \";cursor:pointer}.actionButton_8c91000a:active,.actionButton_8c91000a:focus{background-color:\" }, { \"theme\": \"themeLight\", \"defaultValue\": \"#c7e0f4\" }, { \"rawString\": \"}.actionButton_8c91000a .ms-Button-icon{font-size:16px;width:25px}.actionButton_8c91000a .ms-Button-label{margin:0 4px 0 9px}html[dir=rtl] .actionButton_8c91000a .ms-Button-label{margin:0 9px 0 4px}.buttonSelected_8c91000a{background-color:\" }, { \"theme\": \"themeLight\", \"defaultValue\": \"#c7e0f4\" }, { \"rawString\": \"}.suggestionsTitle_8c91000a{padding:0 12px;color:\" }, { \"theme\": \"themePrimary\", \"defaultValue\": \"#0078d4\" }, { \"rawString\": \";font-size:12px;line-height:40px;border-bottom:1px solid \" }, { \"theme\": \"neutralLight\", \"defaultValue\": \"#edebe9\" }, { \"rawString\": \"}.suggestionsContainer_8c91000a{overflow-y:auto;overflow-x:hidden;max-height:300px;border-bottom:1px solid \" }, { \"theme\": \"neutralLight\", \"defaultValue\": \"#edebe9\" }, { \"rawString\": \"}.suggestionsNone_8c91000a{text-align:center;color:#797775;font-size:12px;line-height:30px}.suggestionsSpinner_8c91000a{margin:5px 0;white-space:nowrap;line-height:20px;font-size:12px}html[dir=ltr] .suggestionsSpinner_8c91000a{padding-left:14px}html[dir=rtl] .suggestionsSpinner_8c91000a{padding-right:14px}html[dir=ltr] .suggestionsSpinner_8c91000a{text-align:left}html[dir=rtl] .suggestionsSpinner_8c91000a{text-align:right}.suggestionsSpinner_8c91000a .ms-Spinner-circle{display:inline-block;vertical-align:middle}.suggestionsSpinner_8c91000a .ms-Spinner-label{display:inline-block;margin:0 10px 0 16px;vertical-align:middle}html[dir=rtl] .suggestionsSpinner_8c91000a .ms-Spinner-label{margin:0 16px 0 10px}.itemButton_8c91000a.itemButton_8c91000a{width:100%;padding:0;min-width:0;height:100%}@media screen and (-ms-high-contrast:active),screen and (forced-colors:active){.itemButton_8c91000a.itemButton_8c91000a{color:WindowText}}.itemButton_8c91000a.itemButton_8c91000a:hover{color:\" }, { \"theme\": \"neutralDark\", \"defaultValue\": \"#201f1e\" }, { \"rawString\": \"}.closeButton_8c91000a.closeButton_8c91000a{padding:0 4px;height:auto;width:32px}@media screen and (-ms-high-contrast:active),screen and (forced-colors:active){.closeButton_8c91000a.closeButton_8c91000a{color:WindowText}}.closeButton_8c91000a.closeButton_8c91000a:hover{background:\" }, { \"theme\": \"neutralTertiaryAlt\", \"defaultValue\": \"#c8c6c4\" }, { \"rawString\": \";color:\" }, { \"theme\": \"neutralDark\", \"defaultValue\": \"#201f1e\" }, { \"rawString\": \"}.suggestionsAvailable_8c91000a{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}\" }]);\nexport var root = \"root_8c91000a\";\nexport var suggestionsItem = \"suggestionsItem_8c91000a\";\nexport var closeButton = \"closeButton_8c91000a\";\nexport var suggestionsItemIsSuggested = \"suggestionsItemIsSuggested_8c91000a\";\nexport var itemButton = \"itemButton_8c91000a\";\nexport var actionButton = \"actionButton_8c91000a\";\nexport var buttonSelected = \"buttonSelected_8c91000a\";\nexport var suggestionsTitle = \"suggestionsTitle_8c91000a\";\nexport var suggestionsContainer = \"suggestionsContainer_8c91000a\";\nexport var suggestionsNone = \"suggestionsNone_8c91000a\";\nexport var suggestionsSpinner = \"suggestionsSpinner_8c91000a\";\nexport var suggestionsAvailable = \"suggestionsAvailable_8c91000a\";\n//# sourceMappingURL=Suggestions.scss.js.map","import { styled } from '../../Utilities';\nimport { ImageBase } from './Image.base';\nimport { getStyles } from './Image.styles';\nexport var Image = styled(ImageBase, getStyles, undefined, {\n    scope: 'Image',\n}, true);\nImage.displayName = 'Image';\n//# sourceMappingURL=Image.js.map","import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nexport var getClassNames = memoizeFunction(function (className, isDragging) {\n    return {\n        root: mergeStyles(className, isDragging && {\n            touchAction: 'none',\n            selectors: {\n                '& *': {\n                    userSelect: 'none',\n                },\n            },\n        }),\n    };\n});\n//# sourceMappingURL=DraggableZone.styles.js.map","import { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warnDeprecations, classNamesFunction, getId } from '../../Utilities';\nimport { DialogType } from './DialogContent.types';\nimport { Modal } from '../../Modal';\nimport { withResponsiveMode } from '../../ResponsiveMode';\nvar getClassNames = classNamesFunction();\nimport { DialogContent } from './DialogContent';\nvar DefaultModalProps = {\n    isDarkOverlay: false,\n    isBlocking: false,\n    className: '',\n    containerClassName: '',\n    topOffsetFixed: false,\n    enableAriaHiddenSiblings: true,\n};\nvar DefaultDialogContentProps = {\n    type: DialogType.normal,\n    className: '',\n    topButtonsProps: [],\n};\n// eslint-disable-next-line deprecation/deprecation\nexport var DialogBase = /** @class */ (function (_super) {\n    __extends(DialogBase, _super);\n    function DialogBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._getSubTextId = function () {\n            var _a;\n            // eslint-disable-next-line deprecation/deprecation\n            var ariaDescribedById = (_a = _this.props, _a.ariaDescribedById), modalProps = _a.modalProps, dialogContentProps = _a.dialogContentProps, subText = _a.subText;\n            var id = (modalProps && modalProps.subtitleAriaId) || ariaDescribedById;\n            if (!id) {\n                id = ((dialogContentProps && dialogContentProps.subText) || subText) && _this._defaultSubTextId;\n            }\n            return id;\n        };\n        _this._getTitleTextId = function () {\n            var _a;\n            // eslint-disable-next-line deprecation/deprecation\n            var ariaLabelledById = (_a = _this.props, _a.ariaLabelledById), modalProps = _a.modalProps, dialogContentProps = _a.dialogContentProps, title = _a.title;\n            var id = (modalProps && modalProps.titleAriaId) || ariaLabelledById;\n            if (!id) {\n                id = ((dialogContentProps && dialogContentProps.title) || title) && _this._defaultTitleTextId;\n            }\n            return id;\n        };\n        _this._id = getId('Dialog');\n        _this._defaultTitleTextId = _this._id + '-title';\n        _this._defaultSubTextId = _this._id + '-subText';\n        if (process.env.NODE_ENV !== 'production') {\n            warnDeprecations('Dialog', props, {\n                isOpen: 'hidden',\n                type: 'dialogContentProps.type',\n                subText: 'dialogContentProps.subText',\n                contentClassName: 'dialogContentProps.className',\n                topButtonsProps: 'dialogContentProps.topButtonsProps',\n                className: 'modalProps.className',\n                isDarkOverlay: 'modalProps.isDarkOverlay',\n                isBlocking: 'modalProps.isBlocking',\n                containerClassName: 'modalProps.containerClassName',\n                onDismissed: 'modalProps.onDismissed',\n                onLayerDidMount: 'modalProps.layerProps.onLayerDidMount',\n                ariaDescribedById: 'modalProps.subtitleAriaId',\n                ariaLabelledById: 'modalProps.titleAriaId',\n            });\n        }\n        return _this;\n    }\n    DialogBase.prototype.render = function () {\n        var _a, _b;\n        var _c, _d, _e;\n        var props = this.props;\n        var \n        /* eslint-disable deprecation/deprecation */\n        className = props.className, containerClassName = props.containerClassName, contentClassName = props.contentClassName, elementToFocusOnDismiss = props.elementToFocusOnDismiss, firstFocusableSelector = props.firstFocusableSelector, forceFocusInsideTrap = props.forceFocusInsideTrap, styles = props.styles, hidden = props.hidden, disableRestoreFocus = (_a = props.disableRestoreFocus, _a === void 0 ? props.ignoreExternalFocusing : _a), isBlocking = props.isBlocking, isClickableOutsideFocusTrap = props.isClickableOutsideFocusTrap, isDarkOverlay = props.isDarkOverlay, isOpen = (_b = props.isOpen, _b === void 0 ? !hidden : _b), onDismiss = props.onDismiss, onDismissed = props.onDismissed, onLayerDidMount = props.onLayerDidMount, responsiveMode = props.responsiveMode, subText = props.subText, theme = props.theme, title = props.title, topButtonsProps = props.topButtonsProps, type = props.type, \n        /* eslint-enable deprecation/deprecation */\n        minWidth = props.minWidth, maxWidth = props.maxWidth, modalProps = props.modalProps;\n        var mergedLayerProps = __assign({ onLayerDidMount: onLayerDidMount }, modalProps === null || modalProps === void 0 ? void 0 : modalProps.layerProps);\n        var dialogDraggableClassName;\n        var dragOptions;\n        // If dragOptions are provided, but no drag handle is specified, we supply a drag handle,\n        // and inform dialog contents to add class to draggable class to the header\n        if ((modalProps === null || modalProps === void 0 ? void 0 : modalProps.dragOptions) && !((_c = modalProps.dragOptions) === null || _c === void 0 ? void 0 : _c.dragHandleSelector)) {\n            // spread options to avoid mutating props\n            dragOptions = __assign({}, modalProps.dragOptions);\n            dialogDraggableClassName = 'ms-Dialog-draggable-header';\n            dragOptions.dragHandleSelector = \".\".concat(dialogDraggableClassName);\n        }\n        var mergedModalProps = __assign(__assign(__assign(__assign({}, DefaultModalProps), { elementToFocusOnDismiss: elementToFocusOnDismiss, firstFocusableSelector: firstFocusableSelector, forceFocusInsideTrap: forceFocusInsideTrap, disableRestoreFocus: disableRestoreFocus, isClickableOutsideFocusTrap: isClickableOutsideFocusTrap, responsiveMode: responsiveMode, className: className, containerClassName: containerClassName, isBlocking: isBlocking, isDarkOverlay: isDarkOverlay, onDismissed: onDismissed }), modalProps), { dragOptions: dragOptions, layerProps: mergedLayerProps, isOpen: isOpen });\n        var dialogContentProps = __assign(__assign(__assign({ className: contentClassName, subText: subText, title: title, topButtonsProps: topButtonsProps, type: type }, DefaultDialogContentProps), props.dialogContentProps), { draggableHeaderClassName: dialogDraggableClassName, titleProps: __assign({ \n                // eslint-disable-next-line deprecation/deprecation\n                id: ((_d = props.dialogContentProps) === null || _d === void 0 ? void 0 : _d.titleId) || this._defaultTitleTextId }, (_e = props.dialogContentProps) === null || _e === void 0 ? void 0 : _e.titleProps) });\n        var classNames = getClassNames(styles, {\n            theme: theme,\n            className: mergedModalProps.className,\n            containerClassName: mergedModalProps.containerClassName,\n            hidden: hidden,\n            dialogDefaultMinWidth: minWidth,\n            dialogDefaultMaxWidth: maxWidth,\n        });\n        return (React.createElement(Modal, __assign({}, mergedModalProps, { className: classNames.root, containerClassName: classNames.main, onDismiss: onDismiss || mergedModalProps.onDismiss, subtitleAriaId: this._getSubTextId(), titleAriaId: this._getTitleTextId() }),\n            React.createElement(DialogContent, __assign({ subTextId: this._defaultSubTextId, showCloseButton: mergedModalProps.isBlocking, onDismiss: onDismiss }, dialogContentProps), props.children)));\n    };\n    DialogBase.defaultProps = {\n        hidden: true,\n    };\n    DialogBase = __decorate([\n        withResponsiveMode\n    ], DialogBase);\n    return DialogBase;\n}(React.Component));\n//# sourceMappingURL=Dialog.base.js.map","import { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { CONTEXTUAL_MENU_ITEM_HEIGHT } from './ContextualMenu.cnstyles';\nvar GlobalClassNames = {\n    root: 'ms-ContextualMenu',\n    container: 'ms-ContextualMenu-container',\n    list: 'ms-ContextualMenu-list',\n    header: 'ms-ContextualMenu-header',\n    title: 'ms-ContextualMenu-title',\n    isopen: 'is-open',\n};\nexport var getStyles = function (props) {\n    var className = props.className, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var fonts = theme.fonts, semanticColors = theme.semanticColors, effects = theme.effects;\n    return {\n        root: [\n            theme.fonts.medium,\n            classNames.root,\n            classNames.isopen,\n            {\n                backgroundColor: semanticColors.menuBackground,\n                minWidth: '180px',\n            },\n            className,\n        ],\n        container: [\n            classNames.container,\n            {\n                selectors: {\n                    ':focus': { outline: 0 },\n                },\n            },\n        ],\n        list: [\n            classNames.list,\n            classNames.isopen,\n            {\n                listStyleType: 'none',\n                margin: '0',\n                padding: '0',\n            },\n        ],\n        header: [\n            classNames.header,\n            fonts.small,\n            {\n                fontWeight: FontWeights.semibold,\n                color: semanticColors.menuHeader,\n                background: 'none',\n                backgroundColor: 'transparent',\n                border: 'none',\n                height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n                cursor: 'default',\n                padding: '0px 6px',\n                userSelect: 'none',\n                textAlign: 'left',\n            },\n        ],\n        title: [\n            classNames.title,\n            {\n                fontSize: fonts.mediumPlus.fontSize,\n                paddingRight: '14px',\n                paddingLeft: '14px',\n                paddingBottom: '5px',\n                paddingTop: '5px',\n                backgroundColor: semanticColors.menuItemBackgroundPressed,\n            },\n        ],\n        subComponentStyles: {\n            callout: {\n                root: {\n                    boxShadow: effects.elevation8,\n                },\n            },\n            menuItem: {},\n        },\n    };\n};\n//# sourceMappingURL=ContextualMenu.styles.js.map","import { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-ChoiceFieldGroup',\n    flexContainer: 'ms-ChoiceFieldGroup-flexContainer',\n};\nexport var getStyles = function (props) {\n    var className = props.className, optionsContainIconOrImage = props.optionsContainIconOrImage, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            className,\n            classNames.root,\n            theme.fonts.medium,\n            {\n                display: 'block',\n            },\n        ],\n        flexContainer: [\n            classNames.flexContainer,\n            optionsContainIconOrImage && {\n                display: 'flex',\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n            },\n        ],\n    };\n};\n//# sourceMappingURL=ChoiceGroup.styles.js.map","import { AnimationVariables, getGlobalClassNames, ZIndexes } from '../../Styling';\nexport var animationDuration = AnimationVariables.durationValue2;\nvar globalClassNames = {\n    root: 'ms-Modal',\n    main: 'ms-Dialog-main',\n    scrollableContent: 'ms-Modal-scrollableContent',\n    isOpen: 'is-open',\n    layer: 'ms-Modal-Layer',\n};\nexport var getStyles = function (props) {\n    var _a;\n    var className = props.className, containerClassName = props.containerClassName, scrollableContentClassName = props.scrollableContentClassName, isOpen = props.isOpen, isVisible = props.isVisible, hasBeenOpened = props.hasBeenOpened, modalRectangleTop = props.modalRectangleTop, theme = props.theme, topOffsetFixed = props.topOffsetFixed, isModeless = props.isModeless, layerClassName = props.layerClassName, isDefaultDragHandle = props.isDefaultDragHandle, windowInnerHeight = props.windowInnerHeight;\n    var palette = theme.palette, effects = theme.effects, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(globalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            fonts.medium,\n            {\n                backgroundColor: 'transparent',\n                position: 'fixed',\n                height: '100%',\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                opacity: 0,\n                pointerEvents: 'none',\n                transition: \"opacity \".concat(animationDuration),\n            },\n            topOffsetFixed &&\n                typeof modalRectangleTop === 'number' &&\n                hasBeenOpened && {\n                alignItems: 'flex-start',\n            },\n            isOpen && classNames.isOpen,\n            isVisible && {\n                opacity: 1,\n            },\n            isVisible &&\n                !isModeless && {\n                pointerEvents: 'auto',\n            },\n            className,\n        ],\n        main: [\n            classNames.main,\n            {\n                boxShadow: effects.elevation64,\n                borderRadius: effects.roundedCorner2,\n                backgroundColor: palette.white,\n                boxSizing: 'border-box',\n                position: 'relative',\n                textAlign: 'left',\n                outline: '3px solid transparent',\n                maxHeight: 'calc(100% - 32px)',\n                maxWidth: 'calc(100% - 32px)',\n                minHeight: '176px',\n                minWidth: '288px',\n                overflowY: 'auto',\n                zIndex: isModeless ? ZIndexes.Layer : undefined,\n            },\n            isModeless && {\n                pointerEvents: 'auto',\n            },\n            topOffsetFixed &&\n                typeof modalRectangleTop === 'number' &&\n                hasBeenOpened && {\n                top: modalRectangleTop,\n            },\n            isDefaultDragHandle && {\n                cursor: 'move',\n            },\n            containerClassName,\n        ],\n        scrollableContent: [\n            classNames.scrollableContent,\n            {\n                overflowY: 'auto',\n                flexGrow: 1,\n                maxHeight: '100vh',\n                selectors: (_a = {},\n                    _a['@supports (-webkit-overflow-scrolling: touch)'] = {\n                        maxHeight: windowInnerHeight,\n                    },\n                    _a),\n            },\n            scrollableContentClassName,\n        ],\n        layer: isModeless && [layerClassName, classNames.layer, { pointerEvents: 'none' }],\n        keyboardMoveIconContainer: {\n            position: 'absolute',\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            padding: '3px 0px',\n        },\n        keyboardMoveIcon: {\n            // eslint-disable-next-line deprecation/deprecation\n            fontSize: fonts.xLargePlus.fontSize,\n            width: '24px',\n        },\n    };\n};\n//# sourceMappingURL=Modal.styles.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport { EventGroup, getId } from '../../Utilities';\nimport { KeytipEvents } from '../../utilities/keytips/KeytipConstants';\n/**\n * This class is responsible for handling registering, updating, and unregistering of keytips\n */\nexport var KeytipManager = /** @class */ (function () {\n    function KeytipManager() {\n        this.keytips = {};\n        this.persistedKeytips = {};\n        this.sequenceMapping = {};\n        // This is (and should be) updated and kept in sync\n        // with the inKeytipMode in KeytipLayer.\n        this.inKeytipMode = false;\n        // Boolean that gets checked before entering keytip mode by the KeytipLayer\n        // Used for an override in special cases (e.g. Disable entering keytip mode when a modal is shown)\n        this.shouldEnterKeytipMode = true;\n        // Boolean to indicate whether to delay firing an event to update subscribers of\n        // keytip data changed.\n        this.delayUpdatingKeytipChange = false;\n    }\n    /**\n     * Static function to get singleton KeytipManager instance\n     *\n     * @returns Singleton KeytipManager instance\n     */\n    KeytipManager.getInstance = function () {\n        return this._instance;\n    };\n    /**\n     * Initialization code to set set parameters to define\n     * how the KeytipManager handles keytip data.\n     *\n     * @param delayUpdatingKeytipChange - T/F if we should delay notifiying keytip subscribers\n     * of keytip changes\n     */\n    KeytipManager.prototype.init = function (delayUpdatingKeytipChange) {\n        this.delayUpdatingKeytipChange = delayUpdatingKeytipChange;\n    };\n    /**\n     * Registers a keytip\n     *\n     * @param keytipProps - Keytip to register\n     * @param persisted - T/F if this keytip should be persisted, default is false\n     * @returns Unique ID for this keytip\n     */\n    KeytipManager.prototype.register = function (keytipProps, persisted) {\n        if (persisted === void 0) { persisted = false; }\n        var props = keytipProps;\n        if (!persisted) {\n            // Add the overflowSetSequence if necessary\n            props = this.addParentOverflow(keytipProps);\n            this.sequenceMapping[props.keySequences.toString()] = props;\n        }\n        // Create a unique keytip\n        var uniqueKeytip = this._getUniqueKtp(props);\n        // Add to dictionary\n        persisted\n            ? (this.persistedKeytips[uniqueKeytip.uniqueID] = uniqueKeytip)\n            : (this.keytips[uniqueKeytip.uniqueID] = uniqueKeytip);\n        // We only want to add something new if we are currently showing keytip mode\n        if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n            var event_1 = persisted ? KeytipEvents.PERSISTED_KEYTIP_ADDED : KeytipEvents.KEYTIP_ADDED;\n            EventGroup.raise(this, event_1, {\n                keytip: props,\n                uniqueID: uniqueKeytip.uniqueID,\n            });\n        }\n        return uniqueKeytip.uniqueID;\n    };\n    /**\n     * Update a keytip\n     *\n     * @param keytipProps - Keytip to update\n     * @param uniqueID - Unique ID of this keytip\n     */\n    KeytipManager.prototype.update = function (keytipProps, uniqueID) {\n        var newKeytipProps = this.addParentOverflow(keytipProps);\n        var uniqueKeytip = this._getUniqueKtp(newKeytipProps, uniqueID);\n        var oldKeyTip = this.keytips[uniqueID];\n        if (oldKeyTip) {\n            // Update everything except 'visible'\n            uniqueKeytip.keytip.visible = oldKeyTip.keytip.visible;\n            // Update keytip in this.keytips\n            this.keytips[uniqueID] = uniqueKeytip;\n            // Update the sequence to be up to date\n            delete this.sequenceMapping[oldKeyTip.keytip.keySequences.toString()];\n            this.sequenceMapping[uniqueKeytip.keytip.keySequences.toString()] = uniqueKeytip.keytip;\n            // Raise event only if we are currently in keytip mode\n            if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n                EventGroup.raise(this, KeytipEvents.KEYTIP_UPDATED, {\n                    keytip: uniqueKeytip.keytip,\n                    uniqueID: uniqueKeytip.uniqueID,\n                });\n            }\n        }\n    };\n    /**\n     * Unregisters a keytip\n     *\n     * @param keytipToRemove - IKeytipProps of the keytip to remove\n     * @param uniqueID - Unique ID of this keytip\n     * @param persisted - T/F if this keytip should be persisted, default is false\n     */\n    KeytipManager.prototype.unregister = function (keytipToRemove, uniqueID, persisted) {\n        if (persisted === void 0) { persisted = false; }\n        persisted ? delete this.persistedKeytips[uniqueID] : delete this.keytips[uniqueID];\n        !persisted && delete this.sequenceMapping[keytipToRemove.keySequences.toString()];\n        var event = persisted ? KeytipEvents.PERSISTED_KEYTIP_REMOVED : KeytipEvents.KEYTIP_REMOVED;\n        // Update keytips only if we're in keytip mode\n        if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n            EventGroup.raise(this, event, {\n                keytip: keytipToRemove,\n                uniqueID: uniqueID,\n            });\n        }\n    };\n    /**\n     * Manual call to enter keytip mode\n     */\n    KeytipManager.prototype.enterKeytipMode = function () {\n        EventGroup.raise(this, KeytipEvents.ENTER_KEYTIP_MODE);\n    };\n    /**\n     * Manual call to exit keytip mode\n     */\n    KeytipManager.prototype.exitKeytipMode = function () {\n        EventGroup.raise(this, KeytipEvents.EXIT_KEYTIP_MODE);\n    };\n    /**\n     * Gets all IKeytipProps from this.keytips\n     *\n     * @returns All keytips stored in the manager\n     */\n    KeytipManager.prototype.getKeytips = function () {\n        var _this = this;\n        return Object.keys(this.keytips).map(function (key) { return _this.keytips[key].keytip; });\n    };\n    /**\n     * Adds the overflowSetSequence to the keytipProps if its parent keytip also has it\n     *\n     * @param keytipProps - Keytip props to add overflowSetSequence to if necessary\n     * @returns - Modified keytip props, if needed to be modified\n     */\n    KeytipManager.prototype.addParentOverflow = function (keytipProps) {\n        var fullSequence = __spreadArray([], keytipProps.keySequences, true);\n        fullSequence.pop();\n        if (fullSequence.length !== 0) {\n            var parentKeytip = this.sequenceMapping[fullSequence.toString()];\n            if (parentKeytip && parentKeytip.overflowSetSequence) {\n                return __assign(__assign({}, keytipProps), { overflowSetSequence: parentKeytip.overflowSetSequence });\n            }\n        }\n        return keytipProps;\n    };\n    /**\n     * Public function to bind for overflow items that have a submenu\n     */\n    KeytipManager.prototype.menuExecute = function (overflowButtonSequences, keytipSequences) {\n        EventGroup.raise(this, KeytipEvents.PERSISTED_KEYTIP_EXECUTE, {\n            overflowButtonSequences: overflowButtonSequences,\n            keytipSequences: keytipSequences,\n        });\n    };\n    /**\n     * Creates an IUniqueKeytip object\n     *\n     * @param keytipProps - IKeytipProps\n     * @param uniqueID - Unique ID, will default to the next unique ID if not passed\n     * @returns IUniqueKeytip object\n     */\n    KeytipManager.prototype._getUniqueKtp = function (keytipProps, uniqueID) {\n        if (uniqueID === void 0) { uniqueID = getId(); }\n        return { keytip: __assign({}, keytipProps), uniqueID: uniqueID };\n    };\n    KeytipManager._instance = new KeytipManager();\n    return KeytipManager;\n}());\n//# sourceMappingURL=KeytipManager.js.map","import { Stylesheet, mergeCssSets, fontFace as mergeFontFace, keyframes as mergeKeyframes, } from '@fluentui/merge-styles';\nvar _seed = 0;\nexport var mergeStylesRenderer = {\n    reset: function () {\n        // If the stylesheet reset call is made, invalidate the cache keys.\n        Stylesheet.getInstance().onReset(function () { return _seed++; });\n    },\n    getId: function () { return _seed; },\n    renderStyles: function (styleSet, options) {\n        return mergeCssSets((Array.isArray(styleSet) ? styleSet : [styleSet]), options);\n    },\n    renderFontFace: function (fontFace, options) {\n        return mergeFontFace(fontFace);\n    },\n    renderKeyframes: function (keyframes) {\n        return mergeKeyframes(keyframes);\n    },\n};\n//# sourceMappingURL=mergeStylesRenderer.js.map","import { AnimationClassNames } from '../../Styling';\nexport var getStyles = function (props) {\n    var className = props.className, _a = props.beakWidth, beakWidth = _a === void 0 ? 16 : _a, _b = props.gapSpace, gapSpace = _b === void 0 ? 0 : _b, maxWidth = props.maxWidth, theme = props.theme;\n    var semanticColors = theme.semanticColors, fonts = theme.fonts, effects = theme.effects;\n    // The math here is done to account for the 45 degree rotation of the beak\n    // and sub-pixel rounding that differs across browsers, which is more noticeable when\n    // the device pixel ratio is larger\n    var tooltipGapSpace = -(Math.sqrt((beakWidth * beakWidth) / 2) + gapSpace) +\n        1 /\n            // There isn't really a great way to pass in a `window` reference here so disabling the line rule\n            // eslint-disable-next-line no-restricted-globals\n            window.devicePixelRatio;\n    return {\n        root: [\n            'ms-Tooltip',\n            theme.fonts.medium,\n            AnimationClassNames.fadeIn200,\n            {\n                background: semanticColors.menuBackground,\n                boxShadow: effects.elevation8,\n                padding: '8px',\n                maxWidth: maxWidth,\n                selectors: {\n                    ':after': {\n                        content: \"''\",\n                        position: 'absolute',\n                        bottom: tooltipGapSpace,\n                        left: tooltipGapSpace,\n                        right: tooltipGapSpace,\n                        top: tooltipGapSpace,\n                        zIndex: 0,\n                    },\n                },\n            },\n            className,\n        ],\n        content: [\n            'ms-Tooltip-content',\n            fonts.small,\n            {\n                position: 'relative',\n                zIndex: 1,\n                color: semanticColors.menuItemText,\n                wordWrap: 'break-word',\n                overflowWrap: 'break-word',\n                overflow: 'hidden',\n            },\n        ],\n        subText: [\n            'ms-Tooltip-subtext',\n            {\n                // Using inherit here to avoid unintentional global overrides of the <p> tag.\n                fontSize: 'inherit',\n                fontWeight: 'inherit',\n                color: 'inherit',\n                margin: 0,\n            },\n        ],\n    };\n};\n//# sourceMappingURL=Tooltip.styles.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { SpinnerType, SpinnerSize } from './Spinner.types';\nimport { classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nexport var SpinnerBase = /** @class */ (function (_super) {\n    __extends(SpinnerBase, _super);\n    function SpinnerBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpinnerBase.prototype.render = function () {\n        var _a;\n        // eslint-disable-next-line deprecation/deprecation\n        var type = (_a = this.props, _a.type), size = _a.size, ariaLabel = _a.ariaLabel, ariaLive = _a.ariaLive, styles = _a.styles, label = _a.label, theme = _a.theme, className = _a.className, labelPosition = _a.labelPosition;\n        var statusMessage = ariaLabel;\n        var nativeProps = getNativeProps(this.props, divProperties, ['size']);\n        // SpinnerType is deprecated. If someone is still using this property, rather than putting the SpinnerType into the\n        // ISpinnerStyleProps, we'll map SpinnerType to its equivalent SpinnerSize and pass that in. Once SpinnerType\n        // finally goes away we should delete this.\n        var styleSize = size;\n        if (styleSize === undefined && type !== undefined) {\n            // eslint-disable-next-line deprecation/deprecation\n            styleSize = type === SpinnerType.large ? SpinnerSize.large : SpinnerSize.medium;\n        }\n        var classNames = getClassNames(styles, {\n            theme: theme,\n            size: styleSize,\n            className: className,\n            labelPosition: labelPosition,\n        });\n        return (React.createElement(\"div\", __assign({}, nativeProps, { className: classNames.root }),\n            React.createElement(\"div\", { className: classNames.circle }),\n            label && React.createElement(\"div\", { className: classNames.label }, label),\n            statusMessage && (React.createElement(\"div\", { role: \"status\", \"aria-live\": ariaLive },\n                React.createElement(DelayedRender, null,\n                    React.createElement(\"div\", { className: classNames.screenReaderText }, statusMessage))))));\n    };\n    SpinnerBase.defaultProps = {\n        size: SpinnerSize.medium,\n        ariaLive: 'polite',\n        labelPosition: 'bottom',\n    };\n    return SpinnerBase;\n}(React.Component));\n//# sourceMappingURL=Spinner.base.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { Label } from '../../Label';\nimport { classNamesFunction, find, FocusRectsContext, getNativeProps, divProperties, setFocusVisibility, useFocusRects, } from '../../Utilities';\nimport { ChoiceGroupOption } from './ChoiceGroupOption/index';\nimport { useId, useControllableValue, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useDocumentEx } from '../../utilities/dom';\nvar getClassNames = classNamesFunction();\nvar getOptionId = function (option, id) {\n    return \"\".concat(id, \"-\").concat(option.key);\n};\nvar findOption = function (options, key) {\n    return key === undefined ? undefined : find(options, function (value) { return value.key === key; });\n};\nvar focusSelectedOption = function (options, keyChecked, id, focusProviders, doc) {\n    var optionToFocus = findOption(options, keyChecked) || options.filter(function (option) { return !option.disabled; })[0];\n    var elementToFocus = optionToFocus && (doc === null || doc === void 0 ? void 0 : doc.getElementById(getOptionId(optionToFocus, id)));\n    if (elementToFocus) {\n        elementToFocus.focus();\n        setFocusVisibility(true, elementToFocus, focusProviders);\n    }\n};\nvar focusFromFocusTrapZone = function (evt) {\n    return evt.relatedTarget instanceof HTMLElement && evt.relatedTarget.dataset.isFocusTrapZoneBumper === 'true';\n};\nvar useComponentRef = function (options, keyChecked, id, componentRef, focusProviders) {\n    var doc = useDocumentEx();\n    React.useImperativeHandle(componentRef, function () { return ({\n        get checkedOption() {\n            return findOption(options, keyChecked);\n        },\n        focus: function () {\n            focusSelectedOption(options, keyChecked, id, focusProviders, doc);\n        },\n    }); }, [options, keyChecked, id, focusProviders, doc]);\n};\nvar COMPONENT_NAME = 'ChoiceGroup';\nexport var ChoiceGroupBase = React.forwardRef(function (props, forwardedRef) {\n    var className = props.className, theme = props.theme, styles = props.styles, _a = props.options, options = _a === void 0 ? [] : _a, label = props.label, required = props.required, disabled = props.disabled, name = props.name, defaultSelectedKey = props.defaultSelectedKey, componentRef = props.componentRef, onChange = props.onChange;\n    var id = useId('ChoiceGroup');\n    var labelId = useId('ChoiceGroupLabel');\n    var divProps = getNativeProps(props, divProperties, [\n        'onChange',\n        'className',\n        'required',\n    ]);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        optionsContainIconOrImage: options.some(function (option) { return !!(option.iconProps || option.imageSrc); }),\n    });\n    var ariaLabelledBy = props.ariaLabelledBy || (label ? labelId : props['aria-labelledby']);\n    var _b = useControllableValue(props.selectedKey, defaultSelectedKey), keyChecked = _b[0], setKeyChecked = _b[1];\n    var _c = React.useState(), keyFocused = _c[0], setKeyFocused = _c[1];\n    var rootRef = React.useRef(null);\n    var mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n    var focusContext = React.useContext(FocusRectsContext);\n    useDebugWarnings(props);\n    useComponentRef(options, keyChecked, id, componentRef, focusContext === null || focusContext === void 0 ? void 0 : focusContext.registeredProviders);\n    useFocusRects(rootRef);\n    var onFocus = React.useCallback(function (ev, option) {\n        var _a;\n        if (option) {\n            setKeyFocused(option.itemKey);\n            (_a = option.onFocus) === null || _a === void 0 ? void 0 : _a.call(option, ev);\n        }\n    }, []);\n    var onBlur = React.useCallback(function (ev, option) {\n        var _a;\n        setKeyFocused(undefined);\n        (_a = option === null || option === void 0 ? void 0 : option.onBlur) === null || _a === void 0 ? void 0 : _a.call(option, ev);\n    }, []);\n    var onOptionChange = React.useCallback(function (evt, option) {\n        var _a;\n        if (!option) {\n            return;\n        }\n        setKeyChecked(option.itemKey);\n        (_a = option.onChange) === null || _a === void 0 ? void 0 : _a.call(option, evt);\n        onChange === null || onChange === void 0 ? void 0 : onChange(evt, findOption(options, option.itemKey));\n    }, [onChange, options, setKeyChecked]);\n    var onRadioFocus = React.useCallback(function (evt) {\n        // Handles scenarios like this bug: https://github.com/microsoft/fluentui/issues/20173\n        if (focusFromFocusTrapZone(evt)) {\n            focusSelectedOption(options, keyChecked, id, focusContext === null || focusContext === void 0 ? void 0 : focusContext.registeredProviders);\n        }\n    }, [options, keyChecked, id, focusContext]);\n    return (React.createElement(\"div\", __assign({ className: classNames.root }, divProps, { ref: mergedRootRefs }),\n        React.createElement(\"div\", __assign({ role: \"radiogroup\" }, (ariaLabelledBy && { 'aria-labelledby': ariaLabelledBy }), { onFocus: onRadioFocus }),\n            label && (React.createElement(Label, { className: classNames.label, required: required, id: labelId, disabled: disabled }, label)),\n            React.createElement(\"div\", { className: classNames.flexContainer }, options.map(function (option) {\n                return (React.createElement(ChoiceGroupOption, __assign({ itemKey: option.key }, option, { key: option.key, onBlur: onBlur, onFocus: onFocus, onChange: onOptionChange, focused: option.key === keyFocused, checked: option.key === keyChecked, disabled: option.disabled || disabled, id: getOptionId(option, id), labelId: option.labelId || \"\".concat(labelId, \"-\").concat(option.key), name: name || id, required: required })));\n            })))));\n});\nChoiceGroupBase.displayName = COMPONENT_NAME;\nfunction useDebugWarnings(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: COMPONENT_NAME,\n            props: props,\n            mutuallyExclusive: {\n                selectedKey: 'defaultSelectedKey',\n            },\n        });\n    }\n}\n//# sourceMappingURL=ChoiceGroup.base.js.map","import { getStyles as getPickerStyles } from '../CalendarPicker/CalendarPicker.styles';\nexport var getStyles = function (props) {\n    /*  Return styles from the base class.\n     *  If this component has extra styles not in the base, apply them here i.e.:\n     *  const myStyle: IStyle = {\n     *    display: \"block\"\n     *  };\n     *  return {...getPickerStyles(props), myStyle};\n     */\n    return getPickerStyles(props);\n};\n//# sourceMappingURL=CalendarYear.styles.js.map","import { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './DefaultButton.styles';\n/**\n * {@docCategory Button}\n */\nexport var DefaultButton = /** @class */ (function (_super) {\n    __extends(DefaultButton, _super);\n    function DefaultButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DefaultButton.prototype.render = function () {\n        var _a, _b;\n        var primary = (_a = this.props, _b = _a.primary, _b === void 0 ? false : _b), styles = _a.styles, theme = _a.theme;\n        return (React.createElement(BaseButton, __assign({}, this.props, { variantClassName: primary ? 'ms-Button--primary' : 'ms-Button--default', styles: getStyles(theme, styles, primary), onRenderDescription: nullRender })));\n    };\n    DefaultButton = __decorate([\n        customizable('DefaultButton', ['theme', 'styles'], true)\n    ], DefaultButton);\n    return DefaultButton;\n}(React.Component));\n//# sourceMappingURL=DefaultButton.js.map","import { AnimationClassNames, getGlobalClassNames } from '../../Styling';\nimport { getWindow } from '../../Utilities';\nvar GlobalClassNames = {\n    root: 'ms-Image',\n    rootMaximizeFrame: 'ms-Image--maximizeFrame',\n    image: 'ms-Image-image',\n    imageCenter: 'ms-Image-image--center',\n    imageContain: 'ms-Image-image--contain',\n    imageCover: 'ms-Image-image--cover',\n    imageCenterContain: 'ms-Image-image--centerContain',\n    imageCenterCover: 'ms-Image-image--centerCover',\n    imageNone: 'ms-Image-image--none',\n    imageLandscape: 'ms-Image-image--landscape',\n    imagePortrait: 'ms-Image-image--portrait',\n};\nexport var getStyles = function (props) {\n    var className = props.className, width = props.width, height = props.height, maximizeFrame = props.maximizeFrame, isLoaded = props.isLoaded, shouldFadeIn = props.shouldFadeIn, shouldStartVisible = props.shouldStartVisible, isLandscape = props.isLandscape, isCenter = props.isCenter, isContain = props.isContain, isCover = props.isCover, isCenterContain = props.isCenterContain, isCenterCover = props.isCenterCover, isNone = props.isNone, isError = props.isError, isNotImageFit = props.isNotImageFit, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var ImageFitStyles = {\n        position: 'absolute',\n        left: '50% /* @noflip */',\n        top: '50%',\n        transform: 'translate(-50%,-50%)', // @todo test RTL renders transform: translate(50%,-50%);\n    };\n    // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n    var window = getWindow();\n    var supportsObjectFit = window !== undefined &&\n        // eslint-disable-next-line @fluentui/max-len\n        // cast needed as vendor prefixed `msMaxTouchPoints` api is no longer part of TS lib declaration - introduced with TS 4.4\n        window.navigator.msMaxTouchPoints === undefined;\n    var fallbackObjectFitStyles = (isContain && isLandscape) || (isCover && !isLandscape)\n        ? { width: '100%', height: 'auto' }\n        : { width: 'auto', height: '100%' };\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                overflow: 'hidden',\n            },\n            maximizeFrame && [\n                classNames.rootMaximizeFrame,\n                {\n                    height: '100%',\n                    width: '100%',\n                },\n            ],\n            isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n            (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n                position: 'relative',\n            },\n            className,\n        ],\n        image: [\n            classNames.image,\n            {\n                display: 'block',\n                opacity: 0,\n            },\n            isLoaded && [\n                'is-loaded',\n                {\n                    opacity: 1,\n                },\n            ],\n            isCenter && [classNames.imageCenter, ImageFitStyles],\n            isContain && [\n                classNames.imageContain,\n                supportsObjectFit && {\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'contain',\n                },\n                !supportsObjectFit && fallbackObjectFitStyles,\n                !supportsObjectFit && ImageFitStyles,\n            ],\n            isCover && [\n                classNames.imageCover,\n                supportsObjectFit && {\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'cover',\n                },\n                !supportsObjectFit && fallbackObjectFitStyles,\n                !supportsObjectFit && ImageFitStyles,\n            ],\n            isCenterContain && [\n                classNames.imageCenterContain,\n                isLandscape && {\n                    maxWidth: '100%',\n                },\n                !isLandscape && {\n                    maxHeight: '100%',\n                },\n                ImageFitStyles,\n            ],\n            isCenterCover && [\n                classNames.imageCenterCover,\n                isLandscape && {\n                    maxHeight: '100%',\n                },\n                !isLandscape && {\n                    maxWidth: '100%',\n                },\n                ImageFitStyles,\n            ],\n            isNone && [\n                classNames.imageNone,\n                {\n                    width: 'auto',\n                    height: 'auto',\n                },\n            ],\n            isNotImageFit && [\n                !!width &&\n                    !height && {\n                    height: 'auto',\n                    width: '100%',\n                },\n                !width &&\n                    !!height && {\n                    height: '100%',\n                    width: 'auto',\n                },\n                !!width &&\n                    !!height && {\n                    height: '100%',\n                    width: '100%',\n                },\n            ],\n            isLandscape && classNames.imageLandscape,\n            !isLandscape && classNames.imagePortrait,\n            !isLoaded && 'is-notLoaded',\n            shouldFadeIn && 'is-fadeIn',\n            isError && 'is-error',\n        ],\n    };\n};\n//# sourceMappingURL=Image.styles.js.map","import { hiddenContentStyle } from '../../Styling';\nexport var getStyles = function (props) {\n    return {\n        root: props.className,\n        screenReaderText: hiddenContentStyle,\n    };\n};\n//# sourceMappingURL=Announced.styles.js.map","import { getGlobalClassNames } from '../../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-ShimmerElementsGroup-root',\n};\nexport function getStyles(props) {\n    var flexWrap = props.flexWrap, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                display: 'flex',\n                alignItems: 'center',\n                flexWrap: flexWrap ? 'wrap' : 'nowrap',\n                position: 'relative',\n            },\n        ],\n    };\n}\n//# sourceMappingURL=ShimmerElementsGroup.styles.js.map","import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nexport var VerticalDividerBase = React.forwardRef(function (props, ref) {\n    // eslint-disable-next-line deprecation/deprecation\n    var styles = props.styles, theme = props.theme, deprecatedGetClassNames = props.getClassNames, className = props.className;\n    var classNames = getClassNames(styles, { theme: theme, getClassNames: deprecatedGetClassNames, className: className });\n    return (React.createElement(\"span\", { className: classNames.wrapper, ref: ref },\n        React.createElement(\"span\", { className: classNames.divider })));\n});\nVerticalDividerBase.displayName = 'VerticalDividerBase';\n//# sourceMappingURL=VerticalDivider.base.js.map","/**\n * {@docCategory Persona}\n */\nexport var PersonaSize;\n(function (PersonaSize) {\n    /**\n     * Deprecated in favor of standardized numeric sizing.\n     * @deprecated Use `size8` instead.\n     */\n    PersonaSize[PersonaSize[\"tiny\"] = 0] = \"tiny\";\n    /**\n     * Deprecated in favor of standardized numeric sizing.\n     * @deprecated Use `size24` instead.\n     */\n    PersonaSize[PersonaSize[\"extraExtraSmall\"] = 1] = \"extraExtraSmall\";\n    /**\n     * Deprecated in favor of standardized numeric sizing.\n     * @deprecated Use `size32` instead.\n     */\n    PersonaSize[PersonaSize[\"extraSmall\"] = 2] = \"extraSmall\";\n    /**\n     * Deprecated in favor of standardized numeric sizing.\n     * @deprecated Use `size40` instead.\n     */\n    PersonaSize[PersonaSize[\"small\"] = 3] = \"small\";\n    /**\n     * Deprecated in favor of standardized numeric sizing.\n     * @deprecated Use `size48` instead.\n     */\n    PersonaSize[PersonaSize[\"regular\"] = 4] = \"regular\";\n    /**\n     * Deprecated in favor of standardized numeric sizing.\n     * @deprecated Use `size72` instead.\n     */\n    PersonaSize[PersonaSize[\"large\"] = 5] = \"large\";\n    /**\n     * Deprecated in favor of standardized numeric sizing.\n     * @deprecated Use `size100` instead.\n     */\n    PersonaSize[PersonaSize[\"extraLarge\"] = 6] = \"extraLarge\";\n    /**\n     * No `PersonaCoin` is rendered.\n     */\n    PersonaSize[PersonaSize[\"size8\"] = 17] = \"size8\";\n    /**\n     * No `PersonaCoin` is rendered. Deprecated to align with design specifications.\n     * @deprecated Use `size8` instead.\n     */\n    PersonaSize[PersonaSize[\"size10\"] = 9] = \"size10\";\n    /**\n     * Renders a 16px `PersonaCoin`.\n     * @deprecated Deprecated due to not being in the design specification.\n     */\n    PersonaSize[PersonaSize[\"size16\"] = 8] = \"size16\";\n    /**\n     * Renders a 24px `PersonaCoin`.\n     */\n    PersonaSize[PersonaSize[\"size24\"] = 10] = \"size24\";\n    /**\n     * Renders a 28px `PersonaCoin`.\n     * @deprecated Deprecated due to not being in the design specification.\n     */\n    PersonaSize[PersonaSize[\"size28\"] = 7] = \"size28\";\n    /**\n     * Renders a 32px `PersonaCoin`.\n     */\n    PersonaSize[PersonaSize[\"size32\"] = 11] = \"size32\";\n    /**\n     * Renders a 40px `PersonaCoin`.\n     */\n    PersonaSize[PersonaSize[\"size40\"] = 12] = \"size40\";\n    /**\n     * Renders a 48px `PersonaCoin`.\n     */\n    PersonaSize[PersonaSize[\"size48\"] = 13] = \"size48\";\n    /**\n     * Renders a 56px `PersonaCoin`.\n     */\n    PersonaSize[PersonaSize[\"size56\"] = 16] = \"size56\";\n    /**\n     * Renders a 72px `PersonaCoin`.\n     */\n    PersonaSize[PersonaSize[\"size72\"] = 14] = \"size72\";\n    /**\n     * Renders a 100px `PersonaCoin`.\n     */\n    PersonaSize[PersonaSize[\"size100\"] = 15] = \"size100\";\n    /**\n     * Renders a 120px `PersonaCoin`.\n     */\n    PersonaSize[PersonaSize[\"size120\"] = 18] = \"size120\";\n})(PersonaSize || (PersonaSize = {}));\n/**\n * {@docCategory Persona}\n */\nexport var PersonaPresence;\n(function (PersonaPresence) {\n    PersonaPresence[PersonaPresence[\"none\"] = 0] = \"none\";\n    PersonaPresence[PersonaPresence[\"offline\"] = 1] = \"offline\";\n    PersonaPresence[PersonaPresence[\"online\"] = 2] = \"online\";\n    PersonaPresence[PersonaPresence[\"away\"] = 3] = \"away\";\n    PersonaPresence[PersonaPresence[\"dnd\"] = 4] = \"dnd\";\n    PersonaPresence[PersonaPresence[\"blocked\"] = 5] = \"blocked\";\n    PersonaPresence[PersonaPresence[\"busy\"] = 6] = \"busy\";\n})(PersonaPresence || (PersonaPresence = {}));\n/**\n * {@docCategory Persona}\n */\nexport var PersonaInitialsColor;\n(function (PersonaInitialsColor) {\n    PersonaInitialsColor[PersonaInitialsColor[\"lightBlue\"] = 0] = \"lightBlue\";\n    PersonaInitialsColor[PersonaInitialsColor[\"blue\"] = 1] = \"blue\";\n    PersonaInitialsColor[PersonaInitialsColor[\"darkBlue\"] = 2] = \"darkBlue\";\n    PersonaInitialsColor[PersonaInitialsColor[\"teal\"] = 3] = \"teal\";\n    PersonaInitialsColor[PersonaInitialsColor[\"lightGreen\"] = 4] = \"lightGreen\";\n    PersonaInitialsColor[PersonaInitialsColor[\"green\"] = 5] = \"green\";\n    PersonaInitialsColor[PersonaInitialsColor[\"darkGreen\"] = 6] = \"darkGreen\";\n    PersonaInitialsColor[PersonaInitialsColor[\"lightPink\"] = 7] = \"lightPink\";\n    PersonaInitialsColor[PersonaInitialsColor[\"pink\"] = 8] = \"pink\";\n    PersonaInitialsColor[PersonaInitialsColor[\"magenta\"] = 9] = \"magenta\";\n    PersonaInitialsColor[PersonaInitialsColor[\"purple\"] = 10] = \"purple\";\n    /**\n     * @deprecated `black` is a color that can result in offensive persona coins with some initials combinations,\n     * so it can only be set with overrides. Will be removed in a future major release.\n     */\n    PersonaInitialsColor[PersonaInitialsColor[\"black\"] = 11] = \"black\";\n    PersonaInitialsColor[PersonaInitialsColor[\"orange\"] = 12] = \"orange\";\n    /**\n     * @deprecated `red` is a color that often has a special meaning, so it is considered a reserved color and\n     * can only be set with overrides. Will be removed in a future major release.\n     */\n    PersonaInitialsColor[PersonaInitialsColor[\"red\"] = 13] = \"red\";\n    PersonaInitialsColor[PersonaInitialsColor[\"darkRed\"] = 14] = \"darkRed\";\n    /**\n     * Transparent is not intended to be used with typical initials due to accessibility issues.\n     * Its primary use is for overflow buttons, so it is considered a reserved color and can only be set with overrides.\n     */\n    PersonaInitialsColor[PersonaInitialsColor[\"transparent\"] = 15] = \"transparent\";\n    PersonaInitialsColor[PersonaInitialsColor[\"violet\"] = 16] = \"violet\";\n    PersonaInitialsColor[PersonaInitialsColor[\"lightRed\"] = 17] = \"lightRed\";\n    PersonaInitialsColor[PersonaInitialsColor[\"gold\"] = 18] = \"gold\";\n    PersonaInitialsColor[PersonaInitialsColor[\"burgundy\"] = 19] = \"burgundy\";\n    PersonaInitialsColor[PersonaInitialsColor[\"warmGray\"] = 20] = \"warmGray\";\n    PersonaInitialsColor[PersonaInitialsColor[\"coolGray\"] = 21] = \"coolGray\";\n    /**\n     * `gray` is a color that can result in offensive persona coins with some initials combinations,\n     * so it can only be set with overrides.\n     */\n    PersonaInitialsColor[PersonaInitialsColor[\"gray\"] = 22] = \"gray\";\n    PersonaInitialsColor[PersonaInitialsColor[\"cyan\"] = 23] = \"cyan\";\n    PersonaInitialsColor[PersonaInitialsColor[\"rust\"] = 24] = \"rust\";\n})(PersonaInitialsColor || (PersonaInitialsColor = {}));\n//# sourceMappingURL=Persona.types.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { styled, composeRenderFunction } from '../../Utilities';\nimport { ContextualMenuBase } from './ContextualMenu.base';\nimport { getStyles } from './ContextualMenu.styles';\nfunction onRenderSubMenu(subMenuProps) {\n    return React.createElement(LocalContextualMenu, __assign({}, subMenuProps));\n}\n// This is to prevent cyclic import with ContextualMenu.base.tsx.\nvar LocalContextualMenu = styled(ContextualMenuBase, getStyles, function (props) { return ({\n    onRenderSubMenu: props.onRenderSubMenu\n        ? composeRenderFunction(props.onRenderSubMenu, onRenderSubMenu)\n        : onRenderSubMenu,\n}); }, { scope: 'ContextualMenu' });\n/**\n * ContextualMenu description\n */\nexport var ContextualMenu = LocalContextualMenu;\nContextualMenu.displayName = 'ContextualMenu';\n//# sourceMappingURL=ContextualMenu.js.map","import { getGlobalClassNames, HighContrastSelector } from '../../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-ShimmerCircle-root',\n    svg: 'ms-ShimmerCircle-svg',\n};\nexport function getStyles(props) {\n    var _a, _b;\n    // eslint-disable-next-line deprecation/deprecation\n    var height = props.height, borderStyle = props.borderStyle, theme = props.theme;\n    var semanticColors = theme.semanticColors;\n    var globalClassNames = getGlobalClassNames(GlobalClassNames, theme);\n    var borderStyles = borderStyle || {};\n    return {\n        root: [\n            globalClassNames.root,\n            theme.fonts.medium,\n            {\n                width: \"\".concat(height, \"px\"),\n                height: \"\".concat(height, \"px\"),\n                minWidth: \"\".concat(height, \"px\"),\n                boxSizing: 'content-box',\n                borderTopStyle: 'solid',\n                borderBottomStyle: 'solid',\n                borderColor: semanticColors.bodyBackground,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        borderColor: 'Window',\n                    },\n                    _a),\n            },\n            borderStyles,\n        ],\n        svg: [\n            globalClassNames.svg,\n            {\n                display: 'block',\n                fill: semanticColors.bodyBackground,\n                selectors: (_b = {},\n                    _b[HighContrastSelector] = {\n                        fill: 'Window',\n                    },\n                    _b),\n            },\n        ],\n    };\n}\n//# sourceMappingURL=ShimmerCircle.styles.js.map","import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\nexport var ShimmerCircleBase = function (props) {\n    // eslint-disable-next-line deprecation/deprecation\n    var height = props.height, styles = props.styles, borderStyle = props.borderStyle, theme = props.theme;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        height: height,\n        borderStyle: borderStyle,\n    });\n    return (React.createElement(\"div\", { className: classNames.root },\n        React.createElement(\"svg\", { viewBox: \"0 0 10 10\", width: height, height: height, className: classNames.svg },\n            React.createElement(\"path\", { d: \"M0,0 L10,0 L10,10 L0,10 L0,0 Z M0,5 C0,7.76142375 2.23857625,10 5,10 C7.76142375,10 10,7.76142375 10,5 C10,2.23857625 7.76142375,2.22044605e-16 5,0 C2.23857625,-2.22044605e-16 0,2.23857625 0,5 L0,5 Z\" }))));\n};\n//# sourceMappingURL=ShimmerCircle.base.js.map","import { styled } from '../../Utilities';\nimport { ContextualMenuItemBase } from './ContextualMenuItem.base';\nimport { getItemStyles } from './ContextualMenu.classNames';\n/**\n * ContextualMenuItem description\n */\nexport var ContextualMenuItem = styled(ContextualMenuItemBase, getItemStyles, undefined, { scope: 'ContextualMenuItem' });\n//# sourceMappingURL=ContextualMenuItem.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getNativeProps, divProperties, initializeComponentRef, warnDeprecations } from '@fluentui/utilities';\nvar COMPONENT_NAME = 'PivotItem';\nvar PivotItem = /** @class */ (function (_super) {\n    __extends(PivotItem, _super);\n    function PivotItem(props) {\n        var _this = _super.call(this, props) || this;\n        initializeComponentRef(_this);\n        warnDeprecations(COMPONENT_NAME, props, {\n            linkText: 'headerText',\n        });\n        return _this;\n    }\n    PivotItem.prototype.render = function () {\n        return React.createElement(\"div\", __assign({}, getNativeProps(this.props, divProperties)), this.props.children);\n    };\n    return PivotItem;\n}(React.Component));\nexport { PivotItem };\n//# sourceMappingURL=PivotItem.js.map","import { styled } from '../../Utilities';\nimport { SpinnerBase } from './Spinner.base';\nimport { getStyles } from './Spinner.styles';\nexport var Spinner = styled(SpinnerBase, getStyles, undefined, { scope: 'Spinner' });\n//# sourceMappingURL=Spinner.js.map","import { styled } from '../../Utilities';\nimport { DialogFooterBase } from './DialogFooter.base';\nimport { getStyles } from './DialogFooter.styles';\nexport var DialogFooter = styled(DialogFooterBase, getStyles, undefined, { scope: 'DialogFooter' });\nDialogFooter.displayName = 'DialogFooter';\n//# sourceMappingURL=DialogFooter.js.map","import { normalize, getGlobalClassNames, FontSizes, HighContrastSelector } from '@fluentui/style-utilities';\nvar GlobalClassNames = {\n    root: 'ms-DatePicker',\n    callout: 'ms-DatePicker-callout',\n    withLabel: 'ms-DatePicker-event--with-label',\n    withoutLabel: 'ms-DatePicker-event--without-label',\n    disabled: 'msDatePickerDisabled ',\n};\nvar TEXTFIELD_HEIGHT = 32;\nexport var styles = function (props) {\n    var _a;\n    var className = props.className, theme = props.theme, disabled = props.disabled, underlined = props.underlined, label = props.label, isDatePickerShown = props.isDatePickerShown;\n    var palette = theme.palette, semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var DatePickerIcon = {\n        color: palette.neutralSecondary,\n        fontSize: FontSizes.icon,\n        lineHeight: '18px',\n        pointerEvents: 'none',\n        position: 'absolute',\n        right: '4px',\n        padding: '5px',\n    };\n    return {\n        root: [classNames.root, theme.fonts.large, isDatePickerShown && 'is-open', normalize, className],\n        textField: [\n            {\n                position: 'relative',\n                selectors: {\n                    '& input[readonly]': {\n                        cursor: 'pointer',\n                    },\n                    input: {\n                        selectors: {\n                            '::-ms-clear': {\n                                display: 'none',\n                            },\n                        },\n                    },\n                },\n            },\n            disabled && {\n                selectors: {\n                    '& input[readonly]': {\n                        cursor: 'default',\n                    },\n                },\n            },\n        ],\n        callout: [classNames.callout],\n        icon: [\n            DatePickerIcon,\n            label ? classNames.withLabel : classNames.withoutLabel,\n            { paddingTop: '7px' },\n            !disabled && [\n                classNames.disabled,\n                {\n                    pointerEvents: 'initial',\n                    cursor: 'pointer',\n                },\n            ],\n            disabled && {\n                color: semanticColors.disabledText,\n                cursor: 'default',\n            },\n        ],\n        statusMessage: [\n            fonts.small,\n            {\n                color: semanticColors.errorText,\n                marginTop: 5,\n            },\n        ],\n        readOnlyTextField: [\n            {\n                cursor: 'pointer',\n                height: TEXTFIELD_HEIGHT,\n                lineHeight: TEXTFIELD_HEIGHT - 2,\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n            },\n            underlined && {\n                lineHeight: TEXTFIELD_HEIGHT + 2,\n            },\n        ],\n        readOnlyPlaceholder: (_a = {\n                color: semanticColors.inputPlaceholderText\n            },\n            _a[HighContrastSelector] = {\n                color: 'GrayText',\n            },\n            _a),\n    };\n};\n//# sourceMappingURL=DatePicker.styles.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nvar splitButtonDividerBaseStyles = function () {\n    return {\n        position: 'absolute',\n        width: 1,\n        right: 31,\n        top: 8,\n        bottom: 8,\n    };\n};\nexport function standardStyles(theme) {\n    var _a, _b, _c, _d, _e;\n    var s = theme.semanticColors, p = theme.palette;\n    var buttonBackground = s.buttonBackground;\n    var buttonBackgroundPressed = s.buttonBackgroundPressed;\n    var buttonBackgroundHovered = s.buttonBackgroundHovered;\n    var buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n    var buttonText = s.buttonText;\n    var buttonTextHovered = s.buttonTextHovered;\n    var buttonTextDisabled = s.buttonTextDisabled;\n    var buttonTextChecked = s.buttonTextChecked;\n    var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n    return {\n        root: {\n            backgroundColor: buttonBackground,\n            color: buttonText,\n        },\n        rootHovered: (_a = {\n                backgroundColor: buttonBackgroundHovered,\n                color: buttonTextHovered\n            },\n            _a[HighContrastSelector] = {\n                borderColor: 'Highlight',\n                color: 'Highlight',\n            },\n            _a),\n        rootPressed: {\n            backgroundColor: buttonBackgroundPressed,\n            color: buttonTextChecked,\n        },\n        rootExpanded: {\n            backgroundColor: buttonBackgroundPressed,\n            color: buttonTextChecked,\n        },\n        rootChecked: {\n            backgroundColor: buttonBackgroundPressed,\n            color: buttonTextChecked,\n        },\n        rootCheckedHovered: {\n            backgroundColor: buttonBackgroundPressed,\n            color: buttonTextCheckedHovered,\n        },\n        rootDisabled: (_b = {\n                color: buttonTextDisabled,\n                backgroundColor: buttonBackgroundDisabled\n            },\n            _b[HighContrastSelector] = {\n                color: 'GrayText',\n                borderColor: 'GrayText',\n                backgroundColor: 'Window',\n            },\n            _b),\n        // Split button styles\n        splitButtonContainer: (_c = {},\n            _c[HighContrastSelector] = {\n                border: 'none',\n            },\n            _c),\n        splitButtonMenuButton: {\n            color: p.white,\n            backgroundColor: 'transparent',\n            ':hover': (_d = {\n                    backgroundColor: p.neutralLight\n                },\n                _d[HighContrastSelector] = {\n                    color: 'Highlight',\n                },\n                _d),\n        },\n        splitButtonMenuButtonDisabled: {\n            backgroundColor: s.buttonBackgroundDisabled,\n            ':hover': {\n                backgroundColor: s.buttonBackgroundDisabled,\n            },\n        },\n        splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), (_e = { backgroundColor: p.neutralTertiaryAlt }, _e[HighContrastSelector] = {\n            backgroundColor: 'WindowText',\n        }, _e)),\n        splitButtonDividerDisabled: {\n            backgroundColor: theme.palette.neutralTertiaryAlt,\n        },\n        splitButtonMenuButtonChecked: {\n            backgroundColor: p.neutralQuaternaryAlt,\n            ':hover': {\n                backgroundColor: p.neutralQuaternaryAlt,\n            },\n        },\n        splitButtonMenuButtonExpanded: {\n            backgroundColor: p.neutralQuaternaryAlt,\n            ':hover': {\n                backgroundColor: p.neutralQuaternaryAlt,\n            },\n        },\n        splitButtonMenuIcon: {\n            color: s.buttonText,\n        },\n        splitButtonMenuIconDisabled: {\n            color: s.buttonTextDisabled,\n        },\n    };\n}\nexport function primaryStyles(theme) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    var p = theme.palette, s = theme.semanticColors;\n    return {\n        root: (_a = {\n                backgroundColor: s.primaryButtonBackground,\n                border: \"1px solid \".concat(s.primaryButtonBackground),\n                color: s.primaryButtonText\n            },\n            _a[HighContrastSelector] = __assign({ color: 'Window', backgroundColor: 'WindowText', borderColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n            _a[\".\".concat(IsFocusVisibleClassName, \" &:focus, :host(.\").concat(IsFocusVisibleClassName, \") &:focus\")] = {\n                ':after': {\n                    border: \"none\",\n                    outlineColor: p.white,\n                },\n            },\n            _a),\n        rootHovered: (_b = {\n                backgroundColor: s.primaryButtonBackgroundHovered,\n                border: \"1px solid \".concat(s.primaryButtonBackgroundHovered),\n                color: s.primaryButtonTextHovered\n            },\n            _b[HighContrastSelector] = {\n                color: 'Window',\n                backgroundColor: 'Highlight',\n                borderColor: 'Highlight',\n            },\n            _b),\n        rootPressed: (_c = {\n                backgroundColor: s.primaryButtonBackgroundPressed,\n                border: \"1px solid \".concat(s.primaryButtonBackgroundPressed),\n                color: s.primaryButtonTextPressed\n            },\n            _c[HighContrastSelector] = __assign({ color: 'Window', backgroundColor: 'WindowText', borderColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n            _c),\n        rootExpanded: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            color: s.primaryButtonTextPressed,\n        },\n        rootChecked: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            color: s.primaryButtonTextPressed,\n        },\n        rootCheckedHovered: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            color: s.primaryButtonTextPressed,\n        },\n        rootDisabled: (_d = {\n                color: s.primaryButtonTextDisabled,\n                backgroundColor: s.primaryButtonBackgroundDisabled\n            },\n            _d[HighContrastSelector] = {\n                color: 'GrayText',\n                borderColor: 'GrayText',\n                backgroundColor: 'Window',\n            },\n            _d),\n        // Split button styles\n        splitButtonContainer: (_e = {},\n            _e[HighContrastSelector] = {\n                border: 'none',\n            },\n            _e),\n        splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), (_f = { backgroundColor: p.white }, _f[HighContrastSelector] = {\n            backgroundColor: 'Window',\n        }, _f)),\n        splitButtonMenuButton: (_g = {\n                backgroundColor: s.primaryButtonBackground,\n                color: s.primaryButtonText\n            },\n            _g[HighContrastSelector] = {\n                backgroundColor: 'Canvas',\n            },\n            _g[':hover'] = (_h = {\n                    backgroundColor: s.primaryButtonBackgroundHovered\n                },\n                _h[HighContrastSelector] = {\n                    color: 'Highlight',\n                },\n                _h),\n            _g),\n        splitButtonMenuButtonDisabled: {\n            backgroundColor: s.primaryButtonBackgroundDisabled,\n            ':hover': {\n                backgroundColor: s.primaryButtonBackgroundDisabled,\n            },\n        },\n        splitButtonMenuButtonChecked: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            ':hover': {\n                backgroundColor: s.primaryButtonBackgroundPressed,\n            },\n        },\n        splitButtonMenuButtonExpanded: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            ':hover': {\n                backgroundColor: s.primaryButtonBackgroundPressed,\n            },\n        },\n        splitButtonMenuIcon: {\n            color: s.primaryButtonText,\n        },\n        splitButtonMenuIconDisabled: (_j = {\n                color: p.neutralTertiary\n            },\n            _j[HighContrastSelector] = {\n                color: 'GrayText',\n            },\n            _j),\n    };\n}\n//# sourceMappingURL=ButtonThemes.js.map","import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory Shimmer}\n */\nexport var ShimmerGapBase = function (props) {\n    // eslint-disable-next-line deprecation/deprecation\n    var height = props.height, styles = props.styles, _a = props.width, width = _a === void 0 ? '10px' : _a, borderStyle = props.borderStyle, theme = props.theme;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        height: height,\n        borderStyle: borderStyle,\n    });\n    return (React.createElement(\"div\", { style: { width: width, minWidth: typeof width === 'number' ? \"\".concat(width, \"px\") : 'auto' }, className: classNames.root }));\n};\n//# sourceMappingURL=ShimmerGap.base.js.map","import { ScreenWidthMinMedium, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-Dialog',\n};\nexport var getStyles = function (props) {\n    var _a;\n    var className = props.className, containerClassName = props.containerClassName, // eslint-disable-line deprecation/deprecation\n    _b = props.dialogDefaultMinWidth, // eslint-disable-line deprecation/deprecation\n    dialogDefaultMinWidth = _b === void 0 ? '288px' : _b, _c = props.dialogDefaultMaxWidth, dialogDefaultMaxWidth = _c === void 0 ? '340px' : _c, hidden = props.hidden, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [classNames.root, theme.fonts.medium, className],\n        main: [\n            {\n                width: dialogDefaultMinWidth,\n                outline: '3px solid transparent',\n                selectors: (_a = {},\n                    _a[\"@media (min-width: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n                        width: 'auto',\n                        maxWidth: dialogDefaultMaxWidth,\n                        minWidth: dialogDefaultMinWidth,\n                    },\n                    _a),\n            },\n            !hidden && { display: 'flex' },\n            containerClassName,\n        ],\n    };\n};\n//# sourceMappingURL=Dialog.styles.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport { css, getNativeProps, htmlElementProperties, memoizeFunction } from '../../Utilities';\nimport { getIcon } from '../../Styling';\nexport var getIconContent = memoizeFunction(function (iconName) {\n    var _a = getIcon(iconName) || {\n        subset: {},\n        code: undefined,\n    }, code = _a.code, subset = _a.subset;\n    if (!code) {\n        return null;\n    }\n    return {\n        children: code,\n        iconClassName: subset.className,\n        fontFamily: subset.fontFace && subset.fontFace.fontFamily,\n        mergeImageProps: subset.mergeImageProps,\n    };\n}, undefined, true /*ignoreNullOrUndefinedResult */);\n/**\n * Fast icon component which only supports font glyphs (not images) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport var FontIcon = function (props) {\n    var iconName = props.iconName, className = props.className, _a = props.style, style = _a === void 0 ? {} : _a;\n    var iconContent = getIconContent(iconName) || {};\n    var iconClassName = iconContent.iconClassName, children = iconContent.children, fontFamily = iconContent.fontFamily, mergeImageProps = iconContent.mergeImageProps;\n    var nativeProps = getNativeProps(props, htmlElementProperties);\n    var accessibleName = props['aria-label'] || props.title;\n    var containerProps = props['aria-label'] || props['aria-labelledby'] || props.title\n        ? {\n            role: mergeImageProps ? undefined : 'img',\n        }\n        : {\n            'aria-hidden': true,\n        };\n    var finalChildren = children;\n    if (mergeImageProps) {\n        if (typeof children === 'object' && typeof children.props === 'object' && accessibleName) {\n            finalChildren = React.cloneElement(children, { alt: accessibleName });\n        }\n    }\n    return (React.createElement(\"i\", __assign({ \"data-icon-name\": iconName }, containerProps, nativeProps, (mergeImageProps\n        ? {\n            title: undefined,\n            'aria-label': undefined,\n        }\n        : {}), { className: css(MS_ICON, classNames.root, iconClassName, !iconName && classNames.placeholder, className), \n        // Apply the font family this way to ensure it doesn't get overridden by Fabric Core ms-Icon styles\n        // https://github.com/microsoft/fluentui/issues/10449\n        style: __assign({ fontFamily: fontFamily }, style) }), finalChildren));\n};\n/**\n * Memoized helper for rendering a FontIcon.\n * @param iconName - The name of the icon to use from the icon font.\n * @param className - Class name for styling the icon.\n * @param ariaLabel - Label for the icon for the benefit of screen readers.\n * {@docCategory Icon}\n */\nexport var getFontIcon = memoizeFunction(function (iconName, className, ariaLabel) {\n    return FontIcon({ iconName: iconName, className: className, 'aria-label': ariaLabel });\n});\n//# sourceMappingURL=FontIcon.js.map","/**\n * Validation state of the user's input.\n * {@docCategory Pickers}\n */\nexport var ValidationState;\n(function (ValidationState) {\n    /** User input is valid. */\n    ValidationState[ValidationState[\"valid\"] = 0] = \"valid\";\n    /** User input could be valid or invalid, its state is not known yet. */\n    ValidationState[ValidationState[\"warning\"] = 1] = \"warning\";\n    /** User input is invalid. */\n    ValidationState[ValidationState[\"invalid\"] = 2] = \"invalid\";\n})(ValidationState || (ValidationState = {}));\n//# sourceMappingURL=BasePicker.types.js.map","import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, css, initializeComponentRef } from '../../../Utilities';\nimport { CommandButton, IconButton } from '../../../Button';\nimport * as stylesImport from './Suggestions.scss';\nvar legacyStyles = stylesImport;\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory Pickers}\n */\nvar SuggestionsItem = /** @class */ (function (_super) {\n    __extends(SuggestionsItem, _super);\n    function SuggestionsItem(props) {\n        var _this = _super.call(this, props) || this;\n        initializeComponentRef(_this);\n        return _this;\n    }\n    SuggestionsItem.prototype.render = function () {\n        var _a;\n        var _b = this.props, suggestionModel = _b.suggestionModel, RenderSuggestion = _b.RenderSuggestion, onClick = _b.onClick, className = _b.className, id = _b.id, onRemoveItem = _b.onRemoveItem, isSelectedOverride = _b.isSelectedOverride, removeButtonAriaLabel = _b.removeButtonAriaLabel, styles = _b.styles, theme = _b.theme, removeButtonIconProps = _b.removeButtonIconProps;\n        // TODO\n        // Clean this up by leaving only the first part after removing support for SASS.\n        // Currently we can not remove the SASS styles from SuggestionsItem class because it\n        // might be used by consumers separately from pickers extending from BasePicker\n        // and have not used the new 'styles' prop. Because it's expecting a type parameter,\n        // we can not use the 'styled' function without adding some helpers which can break\n        // downstream consumers who did not use the new helpers.\n        // We check for 'styles' prop which is going to be injected by the 'styled' HOC\n        // in Suggestions when the typed SuggestionsItem class is ready to be rendered. If the\n        // check passes we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\n        // then we just use the old SASS styles instead.\n        var classNames = styles\n            ? getClassNames(styles, {\n                theme: theme,\n                className: className,\n                suggested: suggestionModel.selected || isSelectedOverride,\n            })\n            : {\n                root: css('ms-Suggestions-item', legacyStyles.suggestionsItem, (_a = {},\n                    _a['is-suggested ' + legacyStyles.suggestionsItemIsSuggested] = suggestionModel.selected || isSelectedOverride,\n                    _a), className),\n                itemButton: css('ms-Suggestions-itemButton', legacyStyles.itemButton),\n                closeButton: css('ms-Suggestions-closeButton', legacyStyles.closeButton),\n            };\n        return (React.createElement(\"div\", { className: classNames.root, role: \"presentation\" },\n            React.createElement(CommandButton, { onClick: onClick, className: classNames.itemButton, id: id, \"aria-selected\": suggestionModel.selected, role: \"option\", \"aria-label\": suggestionModel.ariaLabel }, RenderSuggestion(suggestionModel.item, this.props)),\n            this.props.showRemoveButton ? (React.createElement(IconButton, { iconProps: removeButtonIconProps !== null && removeButtonIconProps !== void 0 ? removeButtonIconProps : { iconName: 'Cancel' }, styles: { icon: { fontSize: '12px' } }, title: removeButtonAriaLabel, ariaLabel: removeButtonAriaLabel, onClick: onRemoveItem, className: classNames.closeButton })) : null));\n    };\n    return SuggestionsItem;\n}(React.Component));\nexport { SuggestionsItem };\n//# sourceMappingURL=SuggestionsItem.js.map","import { styled } from '@fluentui/utilities';\nimport { DatePickerBase } from './DatePicker.base';\nimport { styles } from './DatePicker.styles';\nexport var DatePicker = styled(DatePickerBase, styles, undefined, {\n    scope: 'DatePicker',\n});\n//# sourceMappingURL=DatePicker.js.map","import { CalendarDayBase } from './CalendarDay.base';\nimport { styles } from './CalendarDay.styles';\nimport { styled } from '../../../Utilities';\nexport var CalendarDay = styled(CalendarDayBase, styles, undefined, {\n    scope: 'CalendarDay',\n});\n//# sourceMappingURL=CalendarDay.js.map","import { memoizeFunction } from '../../Utilities';\nimport { getGlobalClassNames, mergeStyleSets } from '../../Styling';\nexport var ButtonGlobalClassNames = {\n    msButton: 'ms-Button',\n    msButtonHasMenu: 'ms-Button--hasMenu',\n    msButtonIcon: 'ms-Button-icon',\n    msButtonMenuIcon: 'ms-Button-menuIcon',\n    msButtonLabel: 'ms-Button-label',\n    msButtonDescription: 'ms-Button-description',\n    msButtonScreenReaderText: 'ms-Button-screenReaderText',\n    msButtonFlexContainer: 'ms-Button-flexContainer',\n    msButtonTextContainer: 'ms-Button-textContainer',\n};\nexport var getBaseButtonClassNames = memoizeFunction(function (theme, styles, className, variantClassName, iconClassName, menuIconClassName, disabled, hasMenu, checked, expanded, isSplit) {\n    var _a, _b;\n    var classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n    var isExpanded = expanded && !isSplit;\n    return mergeStyleSets(styles.__shadowConfig__, {\n        root: [\n            classNames.msButton,\n            styles.root,\n            variantClassName,\n            checked && ['is-checked', styles.rootChecked],\n            isExpanded && [\n                'is-expanded',\n                styles.rootExpanded,\n                (_a = {},\n                    _a[\":hover .\".concat(classNames.msButtonIcon)] = styles.iconExpandedHovered,\n                    // menuIcon falls back to rootExpandedHovered to support original behavior\n                    _a[\":hover .\".concat(classNames.msButtonMenuIcon)] = styles.menuIconExpandedHovered || styles.rootExpandedHovered,\n                    _a[':hover'] = styles.rootExpandedHovered,\n                    _a),\n            ],\n            hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu],\n            disabled && ['is-disabled', styles.rootDisabled],\n            !disabled &&\n                !isExpanded &&\n                !checked && (_b = {\n                    ':hover': styles.rootHovered\n                },\n                _b[\":hover .\".concat(classNames.msButtonLabel)] = styles.labelHovered,\n                _b[\":hover .\".concat(classNames.msButtonIcon)] = styles.iconHovered,\n                _b[\":hover .\".concat(classNames.msButtonDescription)] = styles.descriptionHovered,\n                _b[\":hover .\".concat(classNames.msButtonMenuIcon)] = styles.menuIconHovered,\n                _b[':focus'] = styles.rootFocused,\n                _b[':active'] = styles.rootPressed,\n                _b[\":active .\".concat(classNames.msButtonIcon)] = styles.iconPressed,\n                _b[\":active .\".concat(classNames.msButtonDescription)] = styles.descriptionPressed,\n                _b[\":active .\".concat(classNames.msButtonMenuIcon)] = styles.menuIconPressed,\n                _b),\n            disabled && checked && [styles.rootCheckedDisabled],\n            !disabled &&\n                checked && {\n                ':hover': styles.rootCheckedHovered,\n                ':active': styles.rootCheckedPressed,\n            },\n            className,\n        ],\n        flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n        textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n        icon: [\n            classNames.msButtonIcon,\n            iconClassName,\n            styles.icon,\n            isExpanded && styles.iconExpanded,\n            checked && styles.iconChecked,\n            disabled && styles.iconDisabled,\n        ],\n        label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n        menuIcon: [\n            classNames.msButtonMenuIcon,\n            menuIconClassName,\n            styles.menuIcon,\n            checked && styles.menuIconChecked,\n            disabled && !isSplit && styles.menuIconDisabled,\n            !disabled &&\n                !isExpanded &&\n                !checked && {\n                ':hover': styles.menuIconHovered,\n                ':active': styles.menuIconPressed,\n            },\n            isExpanded && ['is-expanded', styles.menuIconExpanded],\n        ],\n        description: [\n            classNames.msButtonDescription,\n            styles.description,\n            checked && styles.descriptionChecked,\n            disabled && styles.descriptionDisabled,\n        ],\n        screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText],\n    });\n});\n//# sourceMappingURL=BaseButton.classNames.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nexport var getStyles = function (props) {\n    var _a;\n    var theme = props.theme, className = props.className, disabled = props.disabled, required = props.required;\n    var semanticColors = theme.semanticColors;\n    // Tokens\n    var labelFontWeight = FontWeights.semibold;\n    var labelColor = semanticColors.bodyText;\n    var labelDisabledColor = semanticColors.disabledBodyText;\n    var labelRequiredStarColor = semanticColors.errorText;\n    return {\n        root: [\n            'ms-Label',\n            theme.fonts.medium,\n            {\n                fontWeight: labelFontWeight,\n                color: labelColor,\n                boxSizing: 'border-box',\n                boxShadow: 'none',\n                margin: 0,\n                display: 'block',\n                padding: '5px 0',\n                wordWrap: 'break-word',\n                overflowWrap: 'break-word',\n            },\n            disabled && {\n                color: labelDisabledColor,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = __assign({ color: 'GrayText' }, getHighContrastNoAdjustStyle()),\n                    _a),\n            },\n            required && {\n                selectors: {\n                    '::after': {\n                        content: \"' *'\",\n                        color: labelRequiredStarColor,\n                        paddingRight: 12,\n                    },\n                },\n            },\n            className,\n        ],\n    };\n};\n//# sourceMappingURL=Label.styles.js.map","import { styled } from '../../Utilities';\nimport { PanelBase } from './Panel.base';\nimport { getStyles } from './Panel.styles';\n/**\n * Panel description\n */\nexport var Panel = styled(PanelBase, getStyles, undefined, {\n    scope: 'Panel',\n});\n//# sourceMappingURL=Panel.js.map","import { getStyles } from './CalendarYear.styles';\nimport { styled } from '../../../Utilities';\nimport { CalendarYearBase } from './CalendarYear.base';\nexport var CalendarYear = styled(CalendarYearBase, getStyles, undefined, { scope: 'CalendarYear' });\n//# sourceMappingURL=CalendarYear.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useFocusRects, classNamesFunction } from '@fluentui/utilities';\nimport { Icon } from '../Icon/Icon';\nvar getClassNames = classNamesFunction();\nexport var CheckboxBase = React.forwardRef(function (props, forwardedRef) {\n    var disabled = props.disabled, required = props.required, inputProps = props.inputProps, name = props.name, ariaLabel = props.ariaLabel, ariaLabelledBy = props.ariaLabelledBy, ariaDescribedBy = props.ariaDescribedBy, ariaPositionInSet = props.ariaPositionInSet, ariaSetSize = props.ariaSetSize, title = props.title, checkmarkIconProps = props.checkmarkIconProps, styles = props.styles, theme = props.theme, className = props.className, _a = props.boxSide, boxSide = _a === void 0 ? 'start' : _a;\n    var id = useId('checkbox-', props.id);\n    var rootRef = React.useRef(null);\n    var mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n    var inputRef = React.useRef(null);\n    var _b = useControllableValue(props.checked, props.defaultChecked, props.onChange), isChecked = _b[0], setIsChecked = _b[1];\n    var _c = useControllableValue(props.indeterminate, props.defaultIndeterminate), isIndeterminate = _c[0], setIsIndeterminate = _c[1];\n    useFocusRects(rootRef);\n    useDebugWarning(props);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        disabled: disabled,\n        indeterminate: isIndeterminate,\n        checked: isChecked,\n        reversed: boxSide !== 'start',\n        isUsingCustomLabelRender: !!props.onRenderLabel,\n    });\n    var onChange = React.useCallback(function (event) {\n        if (isIndeterminate) {\n            // If indeterminate, clicking the checkbox *only* removes the indeterminate state (or if\n            // controlled, lets the consumer know to change it by calling onChange). It doesn't\n            // change the checked state.\n            setIsChecked(!!isChecked, event);\n            setIsIndeterminate(false);\n        }\n        else {\n            setIsChecked(!isChecked, event);\n        }\n    }, [setIsChecked, setIsIndeterminate, isIndeterminate, isChecked]);\n    var defaultLabelRenderer = React.useCallback(function (checkboxProps) {\n        if (!checkboxProps) {\n            return null;\n        }\n        return checkboxProps.label ? (React.createElement(\"span\", { className: classNames.text, title: checkboxProps.title }, checkboxProps.label)) : null;\n    }, [classNames.text]);\n    var setNativeIndeterminate = React.useCallback(function (indeterminate) {\n        if (!inputRef.current) {\n            return;\n        }\n        var value = !!indeterminate;\n        inputRef.current.indeterminate = value;\n        setIsIndeterminate(value);\n    }, [setIsIndeterminate]);\n    useComponentRef(props, isChecked, isIndeterminate, setNativeIndeterminate, inputRef);\n    React.useEffect(function () { return setNativeIndeterminate(isIndeterminate); }, [setNativeIndeterminate, isIndeterminate]);\n    var onRenderLabel = props.onRenderLabel || defaultLabelRenderer;\n    var ariaChecked = isIndeterminate\n        ? 'mixed'\n        : undefined;\n    var mergedInputProps = __assign(__assign({ className: classNames.input, type: 'checkbox' }, inputProps), { checked: !!isChecked, disabled: disabled, required: required, name: name, id: id, title: title, onChange: onChange, 'aria-disabled': disabled, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy, 'aria-describedby': ariaDescribedBy, 'aria-posinset': ariaPositionInSet, 'aria-setsize': ariaSetSize, 'aria-checked': ariaChecked });\n    return (React.createElement(\"div\", { className: classNames.root, title: title, ref: mergedRootRefs },\n        React.createElement(\"input\", __assign({}, mergedInputProps, { ref: inputRef, title: title, \"data-ktp-execute-target\": true })),\n        React.createElement(\"label\", { className: classNames.label, htmlFor: id },\n            React.createElement(\"div\", { className: classNames.checkbox, \"data-ktp-target\": true },\n                React.createElement(Icon, __assign({ iconName: \"CheckMark\" }, checkmarkIconProps, { className: classNames.checkmark }))),\n            onRenderLabel(props, defaultLabelRenderer))));\n});\nCheckboxBase.displayName = 'CheckboxBase';\nfunction useDebugWarning(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: 'Checkbox',\n            props: props,\n            mutuallyExclusive: {\n                checked: 'defaultChecked',\n                indeterminate: 'defaultIndeterminate',\n            },\n        });\n    }\n}\nfunction useComponentRef(props, isChecked, isIndeterminate, setIndeterminate, checkBoxRef) {\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        get checked() {\n            return !!isChecked;\n        },\n        get indeterminate() {\n            return !!isIndeterminate;\n        },\n        set indeterminate(indeterminate) {\n            setIndeterminate(indeterminate);\n        },\n        focus: function () {\n            if (checkBoxRef.current) {\n                checkBoxRef.current.focus();\n            }\n        },\n    }); }, [checkBoxRef, isChecked, isIndeterminate, setIndeterminate]);\n}\n//# sourceMappingURL=Checkbox.base.js.map","import { FontWeights, getGlobalClassNames, IconFontSizes, ScreenWidthMinSmall, ScreenWidthMaxSmall, } from '../../Styling';\nvar GlobalClassNames = {\n    contentLgHeader: 'ms-Dialog-lgHeader',\n    close: 'ms-Dialog--close',\n    subText: 'ms-Dialog-subText',\n    header: 'ms-Dialog-header',\n    headerLg: 'ms-Dialog--lgHeader',\n    button: 'ms-Dialog-button ms-Dialog-button--close',\n    inner: 'ms-Dialog-inner',\n    content: 'ms-Dialog-content',\n    title: 'ms-Dialog-title',\n};\nexport var getStyles = function (props) {\n    var _a, _b, _c;\n    var className = props.className, theme = props.theme, isLargeHeader = props.isLargeHeader, isClose = props.isClose, hidden = props.hidden, isMultiline = props.isMultiline, draggableHeaderClassName = props.draggableHeaderClassName;\n    var palette = theme.palette, fonts = theme.fonts, effects = theme.effects, semanticColors = theme.semanticColors;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        content: [\n            isLargeHeader && [\n                classNames.contentLgHeader,\n                {\n                    borderTop: \"4px solid \".concat(palette.themePrimary),\n                },\n            ],\n            isClose && classNames.close,\n            {\n                flexGrow: 1,\n                overflowY: 'hidden', // required for allowScrollOnElement\n            },\n            className,\n        ],\n        subText: [\n            classNames.subText,\n            fonts.medium,\n            {\n                margin: '0 0 24px 0',\n                color: semanticColors.bodySubtext,\n                lineHeight: '1.5',\n                wordWrap: 'break-word',\n                fontWeight: FontWeights.regular,\n            },\n        ],\n        header: [\n            classNames.header,\n            {\n                position: 'relative',\n                width: '100%',\n                boxSizing: 'border-box',\n            },\n            isClose && classNames.close,\n            draggableHeaderClassName && [\n                draggableHeaderClassName,\n                {\n                    cursor: 'move',\n                },\n            ],\n        ],\n        button: [\n            classNames.button,\n            hidden && {\n                selectors: {\n                    '.ms-Icon.ms-Icon--Cancel': {\n                        color: semanticColors.buttonText,\n                        fontSize: IconFontSizes.medium,\n                    },\n                },\n            },\n        ],\n        inner: [\n            classNames.inner,\n            {\n                padding: '0 24px 24px',\n                selectors: (_a = {},\n                    _a[\"@media (min-width: \".concat(ScreenWidthMinSmall, \"px) and (max-width: \").concat(ScreenWidthMaxSmall, \"px)\")] = {\n                        padding: '0 16px 16px',\n                    },\n                    _a),\n            },\n        ],\n        innerContent: [\n            classNames.content,\n            {\n                position: 'relative',\n                width: '100%',\n            },\n        ],\n        title: [\n            classNames.title,\n            fonts.xLarge,\n            {\n                color: semanticColors.bodyText,\n                margin: '0',\n                minHeight: fonts.xLarge.fontSize,\n                padding: '16px 46px 20px 24px',\n                lineHeight: 'normal',\n                selectors: (_b = {},\n                    _b[\"@media (min-width: \".concat(ScreenWidthMinSmall, \"px) and (max-width: \").concat(ScreenWidthMaxSmall, \"px)\")] = {\n                        padding: '16px 46px 16px 16px',\n                    },\n                    _b),\n            },\n            isLargeHeader && {\n                color: semanticColors.menuHeader,\n            },\n            isMultiline && { fontSize: fonts.xxLarge.fontSize },\n        ],\n        topButton: [\n            {\n                display: 'flex',\n                flexDirection: 'row',\n                flexWrap: 'nowrap',\n                position: 'absolute',\n                top: '0',\n                right: '0',\n                padding: '15px 15px 0 0',\n                selectors: (_c = {\n                        '> *': {\n                            flex: '0 0 auto',\n                        },\n                        '.ms-Dialog-button': {\n                            color: semanticColors.buttonText,\n                        },\n                        '.ms-Dialog-button:hover': {\n                            color: semanticColors.buttonTextHovered,\n                            borderRadius: effects.roundedCorner2,\n                        }\n                    },\n                    _c[\"@media (min-width: \".concat(ScreenWidthMinSmall, \"px) and (max-width: \").concat(ScreenWidthMaxSmall, \"px)\")] = {\n                        padding: '15px 8px 0 0',\n                    },\n                    _c),\n            },\n        ],\n    };\n};\n//# sourceMappingURL=DialogContent.styles.js.map","import { styled } from '../../../Utilities';\nimport { ShimmerElementsGroupBase } from './ShimmerElementsGroup.base';\nimport { getStyles } from './ShimmerElementsGroup.styles';\nexport var ShimmerElementsGroup = styled(ShimmerElementsGroupBase, getStyles, undefined, { scope: 'ShimmerElementsGroup' });\n//# sourceMappingURL=ShimmerElementsGroup.js.map","/**\n * {@docCategory Pickers}\n */\nvar SuggestionsController = /** @class */ (function () {\n    function SuggestionsController() {\n        var _this = this;\n        this._isSuggestionModel = function (value) {\n            return value.item !== undefined;\n        };\n        this._ensureSuggestionModel = function (suggestion) {\n            if (_this._isSuggestionModel(suggestion)) {\n                return suggestion;\n            }\n            else {\n                return {\n                    item: suggestion,\n                    selected: false,\n                    ariaLabel: suggestion.ariaLabel,\n                };\n            }\n        };\n        this.suggestions = [];\n        this.currentIndex = -1;\n    }\n    SuggestionsController.prototype.updateSuggestions = function (newSuggestions, selectedIndex, maxCount) {\n        if (newSuggestions && newSuggestions.length > 0) {\n            if (maxCount && newSuggestions.length > maxCount) {\n                var startIndex = selectedIndex && selectedIndex > maxCount ? selectedIndex + 1 - maxCount : 0;\n                newSuggestions = newSuggestions.slice(startIndex, startIndex + maxCount - 1);\n            }\n            this.suggestions = this.convertSuggestionsToSuggestionItems(newSuggestions);\n            this.currentIndex = selectedIndex ? selectedIndex : 0;\n            if (selectedIndex === -1) {\n                this.currentSuggestion = undefined;\n            }\n            else if (selectedIndex !== undefined) {\n                this.suggestions[selectedIndex].selected = true;\n                this.currentSuggestion = this.suggestions[selectedIndex];\n            }\n        }\n        else {\n            this.suggestions = [];\n            this.currentIndex = -1;\n            this.currentSuggestion = undefined;\n        }\n    };\n    /**\n     * Increments the suggestion index and gets the next suggestion in the list.\n     */\n    SuggestionsController.prototype.nextSuggestion = function () {\n        if (this.suggestions && this.suggestions.length) {\n            if (this.currentIndex < this.suggestions.length - 1) {\n                this.setSelectedSuggestion(this.currentIndex + 1);\n                return true;\n            }\n            else if (this.currentIndex === this.suggestions.length - 1) {\n                this.setSelectedSuggestion(0);\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Decrements the suggestion index and gets the previous suggestion in the list.\n     */\n    SuggestionsController.prototype.previousSuggestion = function () {\n        if (this.suggestions && this.suggestions.length) {\n            if (this.currentIndex > 0) {\n                this.setSelectedSuggestion(this.currentIndex - 1);\n                return true;\n            }\n            else if (this.currentIndex === 0) {\n                this.setSelectedSuggestion(this.suggestions.length - 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    SuggestionsController.prototype.getSuggestions = function () {\n        return this.suggestions;\n    };\n    SuggestionsController.prototype.getCurrentItem = function () {\n        return this.currentSuggestion;\n    };\n    SuggestionsController.prototype.getSuggestionAtIndex = function (index) {\n        return this.suggestions[index];\n    };\n    SuggestionsController.prototype.hasSelectedSuggestion = function () {\n        return this.currentSuggestion ? true : false;\n    };\n    SuggestionsController.prototype.removeSuggestion = function (index) {\n        this.suggestions.splice(index, 1);\n    };\n    SuggestionsController.prototype.createGenericSuggestion = function (itemToConvert) {\n        var itemToAdd = this.convertSuggestionsToSuggestionItems([itemToConvert])[0];\n        this.currentSuggestion = itemToAdd;\n    };\n    SuggestionsController.prototype.convertSuggestionsToSuggestionItems = function (suggestions) {\n        return Array.isArray(suggestions) ? suggestions.map(this._ensureSuggestionModel) : [];\n    };\n    SuggestionsController.prototype.deselectAllSuggestions = function () {\n        if (this.currentIndex > -1) {\n            this.suggestions[this.currentIndex].selected = false;\n            this.currentIndex = -1;\n        }\n    };\n    SuggestionsController.prototype.setSelectedSuggestion = function (index) {\n        if (index > this.suggestions.length - 1 || index < 0) {\n            this.currentIndex = 0;\n            this.currentSuggestion.selected = false;\n            this.currentSuggestion = this.suggestions[0];\n            this.currentSuggestion.selected = true;\n        }\n        else {\n            if (this.currentIndex > -1) {\n                this.suggestions[this.currentIndex].selected = false;\n            }\n            this.suggestions[index].selected = true;\n            this.currentIndex = index;\n            this.currentSuggestion = this.suggestions[index];\n        }\n    };\n    return SuggestionsController;\n}());\nexport { SuggestionsController };\n//# sourceMappingURL=SuggestionsController.js.map","export var TextStyles = function (props, theme) {\n    var as = props.as, className = props.className, block = props.block, nowrap = props.nowrap, variant = props.variant;\n    var fonts = theme.fonts, semanticColors = theme.semanticColors;\n    var variantObject = fonts[variant || 'medium'];\n    return {\n        root: [\n            variantObject,\n            {\n                color: variantObject.color || semanticColors.bodyText,\n                display: block ? (as === 'td' ? 'table-cell' : 'block') : 'inline',\n                mozOsxFontSmoothing: variantObject.MozOsxFontSmoothing,\n                webkitFontSmoothing: variantObject.WebkitFontSmoothing,\n            },\n            nowrap && {\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n            },\n            className,\n        ],\n    };\n};\n//# sourceMappingURL=Text.styles.js.map","// Helper function that converts a themed spacing key (if given) to the corresponding themed spacing value.\nvar _getThemedSpacing = function (space, theme) {\n    if (theme.spacing.hasOwnProperty(space)) {\n        return theme.spacing[space];\n    }\n    return space;\n};\n// Helper function that takes a gap as a string and converts it into a { value, unit } representation.\nvar _getValueUnitGap = function (gap) {\n    var numericalPart = parseFloat(gap);\n    var numericalValue = isNaN(numericalPart) ? 0 : numericalPart;\n    var numericalString = isNaN(numericalPart) ? '' : numericalPart.toString();\n    var unitPart = gap.substring(numericalString.toString().length);\n    return {\n        value: numericalValue,\n        unit: unitPart || 'px',\n    };\n};\n/**\n * Takes in a gap size in either a CSS-style format (e.g. 10 or \"10px\")\n *  or a key of a themed spacing value (e.g. \"s1\").\n * Returns the separate numerical value of the padding (e.g. 10)\n *  and the CSS unit (e.g. \"px\").\n */\nexport var parseGap = function (gap, theme) {\n    if (gap === undefined || gap === '') {\n        return {\n            rowGap: {\n                value: 0,\n                unit: 'px',\n            },\n            columnGap: {\n                value: 0,\n                unit: 'px',\n            },\n        };\n    }\n    if (typeof gap === 'number') {\n        return {\n            rowGap: {\n                value: gap,\n                unit: 'px',\n            },\n            columnGap: {\n                value: gap,\n                unit: 'px',\n            },\n        };\n    }\n    var splitGap = gap.split(' ');\n    // If the array has more than two values, then return 0px.\n    if (splitGap.length > 2) {\n        return {\n            rowGap: {\n                value: 0,\n                unit: 'px',\n            },\n            columnGap: {\n                value: 0,\n                unit: 'px',\n            },\n        };\n    }\n    // If the array has two values, then parse each one.\n    if (splitGap.length === 2) {\n        return {\n            rowGap: _getValueUnitGap(_getThemedSpacing(splitGap[0], theme)),\n            columnGap: _getValueUnitGap(_getThemedSpacing(splitGap[1], theme)),\n        };\n    }\n    // Else, parse the numerical value and pass it as both the vertical and horizontal gap.\n    var calculatedGap = _getValueUnitGap(_getThemedSpacing(gap, theme));\n    return {\n        rowGap: calculatedGap,\n        columnGap: calculatedGap,\n    };\n};\n/**\n * Takes in a padding in a CSS-style format (e.g. 10, \"10px\", \"10px 10px\", etc.)\n *  where the separate padding values can also be the key of a themed spacing value\n *  (e.g. \"s1 m\", \"10px l1 20px l2\", etc.).\n * Returns a CSS-style padding.\n */\nexport var parsePadding = function (padding, theme) {\n    if (padding === undefined || typeof padding === 'number' || padding === '') {\n        return padding;\n    }\n    var paddingValues = padding.split(' ');\n    if (paddingValues.length < 2) {\n        return _getThemedSpacing(padding, theme);\n    }\n    return paddingValues.reduce(function (padding1, padding2) {\n        return _getThemedSpacing(padding1, theme) + ' ' + _getThemedSpacing(padding2, theme);\n    });\n};\n//# sourceMappingURL=StackUtils.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { DayOfWeek, FirstWeekOfYear, DateRangeType, addMonths, addYears, DEFAULT_CALENDAR_STRINGS, DEFAULT_DATE_FORMATTING, } from '@fluentui/date-time-utilities';\nimport { CalendarDay } from './CalendarDay/CalendarDay';\nimport { CalendarMonth } from './CalendarMonth/CalendarMonth';\nimport { css, KeyCodes, classNamesFunction, focusAsync, format, FocusRects, getPropsWithDefaults, getWindow, } from '@fluentui/utilities';\nimport { useControllableValue } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from './defaults';\nvar MIN_SIZE_FORCE_OVERLAY = 440;\nvar getClassNames = classNamesFunction();\nvar defaultWorkWeekDays = [\n    DayOfWeek.Monday,\n    DayOfWeek.Tuesday,\n    DayOfWeek.Wednesday,\n    DayOfWeek.Thursday,\n    DayOfWeek.Friday,\n];\nvar DEFAULT_PROPS = {\n    isMonthPickerVisible: true,\n    isDayPickerVisible: true,\n    showMonthPickerAsOverlay: false,\n    today: new Date(),\n    firstDayOfWeek: DayOfWeek.Sunday,\n    dateRangeType: DateRangeType.Day,\n    showGoToToday: true,\n    strings: DEFAULT_CALENDAR_STRINGS,\n    highlightCurrentMonth: false,\n    highlightSelectedMonth: false,\n    navigationIcons: defaultCalendarNavigationIcons,\n    showWeekNumbers: false,\n    firstWeekOfYear: FirstWeekOfYear.FirstDay,\n    dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n    showSixWeeksByDefault: false,\n    workWeekDays: defaultWorkWeekDays,\n    showCloseButton: false,\n    allFocusable: false,\n};\nfunction useDateState(props) {\n    var value = props.value, todayProp = props.today, onSelectDate = props.onSelectDate;\n    var today = React.useMemo(function () {\n        if (todayProp === undefined) {\n            return new Date();\n        }\n        return todayProp;\n    }, [todayProp]);\n    /** The currently selected date in the calendar */\n    var _a = useControllableValue(value, today), _b = _a[0], selectedDate = _b === void 0 ? today : _b, setSelectedDate = _a[1];\n    /** The currently focused date in the day picker, but not necessarily selected */\n    var _c = React.useState(value), _d = _c[0], navigatedDay = _d === void 0 ? today : _d, setNavigatedDay = _c[1];\n    /** The currently focused date in the month picker, but not necessarily selected */\n    var _e = React.useState(value), _f = _e[0], navigatedMonth = _f === void 0 ? today : _f, setNavigatedMonth = _e[1];\n    /** If using a controlled value, when that value changes, navigate to that date */\n    var _g = React.useState(value), _h = _g[0], lastSelectedDate = _h === void 0 ? today : _h, setLastSelectedDate = _g[1];\n    if (value && lastSelectedDate.valueOf() !== value.valueOf()) {\n        setNavigatedDay(value);\n        setNavigatedMonth(value);\n        setLastSelectedDate(value);\n    }\n    var navigateMonth = function (date) {\n        setNavigatedMonth(date);\n    };\n    var navigateDay = function (date) {\n        setNavigatedMonth(date);\n        setNavigatedDay(date);\n    };\n    var onDateSelected = function (date, selectedDateRangeArray) {\n        setNavigatedMonth(date);\n        setNavigatedDay(date);\n        setSelectedDate(date);\n        onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(date, selectedDateRangeArray);\n    };\n    return [selectedDate, navigatedDay, navigatedMonth, onDateSelected, navigateDay, navigateMonth];\n}\nfunction useVisibilityState(props) {\n    /** State used to show/hide month picker */\n    var _a = useControllableValue(getShowMonthPickerAsOverlay(props) ? undefined : props.isMonthPickerVisible, false), _b = _a[0], isMonthPickerVisible = _b === void 0 ? true : _b, setIsMonthPickerVisible = _a[1];\n    /** State used to show/hide day picker */\n    var _c = useControllableValue(getShowMonthPickerAsOverlay(props) ? undefined : props.isDayPickerVisible, true), _d = _c[0], isDayPickerVisible = _d === void 0 ? true : _d, setIsDayPickerVisible = _c[1];\n    var toggleDayMonthPickerVisibility = function () {\n        setIsMonthPickerVisible(!isMonthPickerVisible);\n        setIsDayPickerVisible(!isDayPickerVisible);\n    };\n    return [isMonthPickerVisible, isDayPickerVisible, toggleDayMonthPickerVisibility];\n}\nfunction useFocusLogic(_a, isDayPickerVisible, isMonthPickerVisible) {\n    var componentRef = _a.componentRef;\n    var dayPicker = React.useRef(null);\n    var monthPicker = React.useRef(null);\n    var focusOnUpdate = React.useRef(false);\n    var focus = React.useCallback(function () {\n        if (isDayPickerVisible && dayPicker.current) {\n            focusAsync(dayPicker.current);\n        }\n        else if (isMonthPickerVisible && monthPicker.current) {\n            focusAsync(monthPicker.current);\n        }\n    }, [isDayPickerVisible, isMonthPickerVisible]);\n    React.useImperativeHandle(componentRef, function () { return ({ focus: focus }); }, [focus]);\n    React.useEffect(function () {\n        if (focusOnUpdate.current) {\n            focus();\n            focusOnUpdate.current = false;\n        }\n    });\n    var focusOnNextUpdate = function () {\n        focusOnUpdate.current = true;\n    };\n    return [dayPicker, monthPicker, focusOnNextUpdate];\n}\nexport var CalendarBase = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    var _a = useDateState(props), selectedDate = _a[0], navigatedDay = _a[1], navigatedMonth = _a[2], onDateSelected = _a[3], navigateDay = _a[4], navigateMonth = _a[5];\n    var _b = useVisibilityState(props), isMonthPickerVisible = _b[0], isDayPickerVisible = _b[1], toggleDayMonthPickerVisibility = _b[2];\n    var _c = useFocusLogic(props, isDayPickerVisible, isMonthPickerVisible), dayPicker = _c[0], monthPicker = _c[1], focusOnNextUpdate = _c[2];\n    var renderGoToTodayButton = function () {\n        var goTodayEnabled = showGoToToday;\n        if (goTodayEnabled && today) {\n            goTodayEnabled =\n                navigatedDay.getFullYear() !== today.getFullYear() ||\n                    navigatedDay.getMonth() !== today.getMonth() ||\n                    navigatedMonth.getFullYear() !== today.getFullYear() ||\n                    navigatedMonth.getMonth() !== today.getMonth();\n        }\n        return (showGoToToday && (React.createElement(\"button\", { className: css('js-goToday', classes.goTodayButton), onClick: onGotoToday, onKeyDown: onButtonKeyDown(onGotoToday), type: \"button\", disabled: !goTodayEnabled }, strings.goToToday)));\n    };\n    var onNavigateDayDate = function (date, focusOnNavigatedDay) {\n        navigateDay(date);\n        if (focusOnNavigatedDay) {\n            focusOnNextUpdate();\n        }\n    };\n    var onNavigateMonthDate = function (date, focusOnNavigatedDay) {\n        if (focusOnNavigatedDay) {\n            focusOnNextUpdate();\n        }\n        if (!focusOnNavigatedDay) {\n            navigateMonth(date);\n            return;\n        }\n        if (monthPickerOnly) {\n            onDateSelected(date);\n        }\n        navigateDay(date);\n    };\n    var onHeaderSelect = getShowMonthPickerAsOverlay(props)\n        ? function () {\n            toggleDayMonthPickerVisibility();\n            focusOnNextUpdate();\n        }\n        : undefined;\n    var onGotoToday = function () {\n        navigateDay(today);\n        focusOnNextUpdate();\n    };\n    var onButtonKeyDown = function (callback) {\n        return function (ev) {\n            // eslint-disable-next-line deprecation/deprecation\n            switch (ev.which) {\n                case KeyCodes.enter:\n                case KeyCodes.space:\n                    callback();\n                    break;\n            }\n        };\n    };\n    var onDatePickerPopupKeyDown = function (ev) {\n        var _a;\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n            case KeyCodes.enter:\n                ev.preventDefault();\n                break;\n            case KeyCodes.backspace:\n                ev.preventDefault();\n                break;\n            case KeyCodes.escape:\n                (_a = props.onDismiss) === null || _a === void 0 ? void 0 : _a.call(props);\n                break;\n            case KeyCodes.pageUp:\n                if (ev.ctrlKey) {\n                    // go to next year\n                    navigateDay(addYears(navigatedDay, 1));\n                }\n                else {\n                    // go to next month\n                    navigateDay(addMonths(navigatedDay, 1));\n                }\n                ev.preventDefault();\n                break;\n            case KeyCodes.pageDown:\n                if (ev.ctrlKey) {\n                    // go to previous year\n                    navigateDay(addYears(navigatedDay, -1));\n                }\n                else {\n                    // go to previous month\n                    navigateDay(addMonths(navigatedDay, -1));\n                }\n                ev.preventDefault();\n                break;\n            default:\n                break;\n        }\n    };\n    var rootClass = 'ms-DatePicker';\n    var firstDayOfWeek = props.firstDayOfWeek, dateRangeType = props.dateRangeType, strings = props.strings, showGoToToday = props.showGoToToday, highlightCurrentMonth = props.highlightCurrentMonth, highlightSelectedMonth = props.highlightSelectedMonth, navigationIcons = props.navigationIcons, minDate = props.minDate, maxDate = props.maxDate, restrictedDates = props.restrictedDates, id = props.id, className = props.className, showCloseButton = props.showCloseButton, allFocusable = props.allFocusable, styles = props.styles, showWeekNumbers = props.showWeekNumbers, theme = props.theme, calendarDayProps = props.calendarDayProps, calendarMonthProps = props.calendarMonthProps, dateTimeFormatter = props.dateTimeFormatter, _d = props.today, today = _d === void 0 ? new Date() : _d;\n    var showMonthPickerAsOverlay = getShowMonthPickerAsOverlay(props);\n    var monthPickerOnly = !showMonthPickerAsOverlay && !isDayPickerVisible;\n    var overlaidWithButton = showMonthPickerAsOverlay && showGoToToday;\n    var classes = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        isMonthPickerVisible: isMonthPickerVisible,\n        isDayPickerVisible: isDayPickerVisible,\n        monthPickerOnly: monthPickerOnly,\n        showMonthPickerAsOverlay: showMonthPickerAsOverlay,\n        overlaidWithButton: overlaidWithButton,\n        overlayedWithButton: overlaidWithButton,\n        showGoToToday: showGoToToday,\n        showWeekNumbers: showWeekNumbers,\n    });\n    var todayDateString = '';\n    var selectedDateString = '';\n    if (dateTimeFormatter && strings.todayDateFormatString) {\n        todayDateString = format(strings.todayDateFormatString, dateTimeFormatter.formatMonthDayYear(today, strings));\n    }\n    if (dateTimeFormatter && strings.selectedDateFormatString) {\n        var dateStringFormatter = monthPickerOnly\n            ? dateTimeFormatter.formatMonthYear\n            : dateTimeFormatter.formatMonthDayYear;\n        selectedDateString = format(strings.selectedDateFormatString, dateStringFormatter(selectedDate, strings));\n    }\n    var selectionAndTodayString = selectedDateString + ', ' + todayDateString;\n    return (React.createElement(\"div\", { id: id, ref: forwardedRef, role: \"group\", \"aria-label\": selectionAndTodayString, className: css(rootClass, classes.root, className, 'ms-slideDownIn10'), onKeyDown: onDatePickerPopupKeyDown },\n        React.createElement(\"div\", { className: classes.liveRegion, \"aria-live\": \"polite\", \"aria-atomic\": \"true\" },\n            React.createElement(\"span\", null, selectedDateString)),\n        isDayPickerVisible && (React.createElement(CalendarDay, __assign({ selectedDate: selectedDate, navigatedDate: navigatedDay, today: props.today, onSelectDate: onDateSelected, \n            // eslint-disable-next-line react/jsx-no-bind\n            onNavigateDate: onNavigateDayDate, onDismiss: props.onDismiss, firstDayOfWeek: firstDayOfWeek, dateRangeType: dateRangeType, strings: strings, \n            // eslint-disable-next-line react/jsx-no-bind\n            onHeaderSelect: onHeaderSelect, navigationIcons: navigationIcons, showWeekNumbers: props.showWeekNumbers, firstWeekOfYear: props.firstWeekOfYear, dateTimeFormatter: props.dateTimeFormatter, showSixWeeksByDefault: props.showSixWeeksByDefault, minDate: minDate, maxDate: maxDate, restrictedDates: restrictedDates, workWeekDays: props.workWeekDays, componentRef: dayPicker, showCloseButton: showCloseButton, allFocusable: allFocusable }, calendarDayProps))),\n        isDayPickerVisible && isMonthPickerVisible && React.createElement(\"div\", { className: classes.divider }),\n        isMonthPickerVisible ? (React.createElement(\"div\", { className: classes.monthPickerWrapper },\n            React.createElement(CalendarMonth, __assign({ navigatedDate: navigatedMonth, selectedDate: navigatedDay, strings: strings, \n                // eslint-disable-next-line react/jsx-no-bind\n                onNavigateDate: onNavigateMonthDate, today: props.today, highlightCurrentMonth: highlightCurrentMonth, highlightSelectedMonth: highlightSelectedMonth, \n                // eslint-disable-next-line react/jsx-no-bind\n                onHeaderSelect: onHeaderSelect, navigationIcons: navigationIcons, dateTimeFormatter: props.dateTimeFormatter, minDate: minDate, maxDate: maxDate, componentRef: monthPicker }, calendarMonthProps)),\n            renderGoToTodayButton())) : (renderGoToTodayButton()),\n        React.createElement(FocusRects, null)));\n});\nCalendarBase.displayName = 'CalendarBase';\nfunction getShowMonthPickerAsOverlay(_a) {\n    var showMonthPickerAsOverlay = _a.showMonthPickerAsOverlay, isDayPickerVisible = _a.isDayPickerVisible;\n    var win = getWindow();\n    return showMonthPickerAsOverlay || (isDayPickerVisible && win && win.innerWidth <= MIN_SIZE_FORCE_OVERLAY);\n}\n//# sourceMappingURL=Calendar.base.js.map","import { getStyles as getPickerStyles } from '../CalendarPicker/CalendarPicker.styles';\nexport var getStyles = function (props) {\n    /*  Return styles from the base class.\n     *  If this component has extra styles not in the base, apply them here i.e.:\n     *  const myStyle: IStyle = {\n     *    display: \"block\"\n     *  };     *\n     *  return {...getPickerStyles(props), myStyle};\n     */\n    return getPickerStyles(props);\n};\n//# sourceMappingURL=CalendarMonth.styles.js.map","import * as React from 'react';\nimport { getWindow } from '@fluentui/utilities';\nimport { useOnEvent } from '@fluentui/react-hooks';\nimport { getResponsiveMode, getInitialResponsiveMode } from '../decorators/withResponsiveMode';\nimport { useWindow } from '../../WindowProvider';\n/**\n * Hook to get the current responsive mode (window size category).\n * @param elementRef - Use this element's parent window when determining the responsive mode.\n * @param overrideResponsiveMode - Override the responsive mode. If this param is present, it's always returned.\n */\nexport var useResponsiveMode = function (elementRef, overrideResponsiveMode) {\n    var _a = React.useState(getInitialResponsiveMode()), lastResponsiveMode = _a[0], setLastResponsiveMode = _a[1];\n    var onResize = React.useCallback(function () {\n        var newResponsiveMode = getResponsiveMode(getWindow(elementRef.current));\n        // Setting the same value should not cause a re-render.\n        if (lastResponsiveMode !== newResponsiveMode) {\n            setLastResponsiveMode(newResponsiveMode);\n        }\n    }, [elementRef, lastResponsiveMode]);\n    var win = useWindow();\n    useOnEvent(win, 'resize', onResize);\n    // Call resize function initially on mount, or if the override changes from defined to undefined\n    // (the effect will run on all override changes, but onResize will only be called if it changed to undefined)\n    React.useEffect(function () {\n        if (overrideResponsiveMode === undefined) {\n            onResize();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- only meant to run on mount or when override changes\n    }, [overrideResponsiveMode]);\n    return overrideResponsiveMode !== null && overrideResponsiveMode !== void 0 ? overrideResponsiveMode : lastResponsiveMode;\n};\n//# sourceMappingURL=useResponsiveMode.js.map","import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nexport var SplitButtonGlobalClassNames = {\n    msSplitButtonDivider: 'ms-SplitButton-divider',\n};\nexport var getSplitButtonClassNames = memoizeFunction(function (styles, disabled, expanded, checked, primaryDisabled) {\n    return {\n        root: mergeStyles(styles.splitButtonMenuButton, expanded && [styles.splitButtonMenuButtonExpanded], disabled && [styles.splitButtonMenuButtonDisabled], checked && !disabled && [styles.splitButtonMenuButtonChecked], primaryDisabled &&\n            !disabled && [\n            {\n                ':focus': styles.splitButtonMenuFocused,\n            },\n        ]),\n        splitButtonContainer: mergeStyles(styles.splitButtonContainer, !disabled &&\n            checked && [\n            styles.splitButtonContainerChecked,\n            {\n                ':hover': styles.splitButtonContainerCheckedHovered,\n            },\n        ], !disabled &&\n            !checked && [\n            {\n                ':hover': styles.splitButtonContainerHovered,\n                ':focus': styles.splitButtonContainerFocused,\n            },\n        ], disabled && styles.splitButtonContainerDisabled),\n        icon: mergeStyles(styles.splitButtonMenuIcon, disabled && styles.splitButtonMenuIconDisabled, !disabled && primaryDisabled && styles.splitButtonMenuIcon),\n        flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n        divider: mergeStyles(SplitButtonGlobalClassNames.msSplitButtonDivider, styles.splitButtonDivider, (primaryDisabled || disabled) && styles.splitButtonDividerDisabled),\n    };\n});\n//# sourceMappingURL=SplitButton.classNames.js.map","import * as React from 'react';\nimport { useIsomorphicLayoutEffect, useRefEffect } from '@fluentui/react-hooks';\nimport { getWindow } from '@fluentui/utilities';\nimport { observeResize } from './observeResize';\n/**\n * Track whether any items don't fit within their container, and move them to the overflow menu.\n * Items are moved into the overflow menu from back to front, excluding pinned items.\n *\n * The overflow menu button must be the last sibling of all of the items that can be put into the overflow, and it\n * must be hooked up to the `setMenuButtonRef` setter function that's returned by `useOverflow`:\n * ```ts\n * const overflow = useOverflow(...);\n * ```\n * ```jsx\n * <Container>\n *  <Item /> // Index 0\n *  <Item /> // Index 1\n *  ...\n *  <Button ref={overflow.setMenuButtonRef} /> // Can be any React.Component or HTMLElement\n * </Container>\n * ```\n */\nexport var useOverflow = function (_a) {\n    var onOverflowItemsChanged = _a.onOverflowItemsChanged, rtl = _a.rtl, pinnedIndex = _a.pinnedIndex;\n    var updateOverflowRef = React.useRef();\n    var containerWidthRef = React.useRef();\n    // Attach a resize observer to the container\n    var containerRef = useRefEffect(function (container) {\n        var cleanupObserver = observeResize(container, function (entries) {\n            containerWidthRef.current = entries ? entries[0].contentRect.width : container.clientWidth;\n            if (updateOverflowRef.current) {\n                updateOverflowRef.current();\n            }\n        });\n        return function () {\n            cleanupObserver();\n            containerWidthRef.current = undefined;\n        };\n    });\n    var menuButtonRef = useRefEffect(function (menuButton) {\n        containerRef(menuButton.parentElement);\n        return function () { return containerRef(null); };\n    });\n    useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        var menuButton = menuButtonRef.current;\n        if (!container || !menuButton) {\n            return;\n        }\n        // items contains the container's children, excluding the overflow menu button itself\n        var items = [];\n        for (var i = 0; i < container.children.length; i++) {\n            var item = container.children[i];\n            if (item instanceof HTMLElement && item !== menuButton) {\n                items.push(item);\n            }\n        }\n        // Keep track of the minimum width of the container to fit each child index.\n        // This cache is an integral part of the algorithm and not just a performance optimization: it allows us to\n        // recalculate the overflowIndex on subsequent resizes even if some items are already inside the overflow.\n        var minContainerWidth = [];\n        var extraWidth = 0; // The accumulated width of items that don't move into the overflow\n        updateOverflowRef.current = function () {\n            var containerWidth = containerWidthRef.current;\n            if (containerWidth === undefined) {\n                return;\n            }\n            // Iterate the items in reverse order until we find one that fits within the bounds of the container\n            for (var i = items.length - 1; i >= 0; i--) {\n                // Calculate the min container width for this item if we haven't done so yet\n                if (minContainerWidth[i] === undefined) {\n                    var itemOffsetEnd = rtl ? containerWidth - items[i].offsetLeft : items[i].offsetLeft + items[i].offsetWidth;\n                    // If the item after this one is pinned, reserve space for it\n                    if (i + 1 < items.length && i + 1 === pinnedIndex) {\n                        // Use distance between the end of the previous item and this one (rather than the\n                        // pinned item's offsetWidth), to account for any margin between the items.\n                        extraWidth = minContainerWidth[i + 1] - itemOffsetEnd;\n                    }\n                    // Reserve space for the menu button after the first item was added to the overflow\n                    if (i === items.length - 2) {\n                        extraWidth += menuButton.offsetWidth;\n                    }\n                    minContainerWidth[i] = itemOffsetEnd + extraWidth;\n                }\n                if (containerWidth > minContainerWidth[i]) {\n                    setOverflowIndex(i + 1);\n                    return;\n                }\n            }\n            // If we got here, nothing fits outside the overflow\n            setOverflowIndex(0);\n        };\n        var prevOverflowIndex = items.length;\n        var setOverflowIndex = function (overflowIndex) {\n            if (prevOverflowIndex !== overflowIndex) {\n                prevOverflowIndex = overflowIndex;\n                onOverflowItemsChanged(overflowIndex, items.map(function (ele, index) { return ({\n                    ele: ele,\n                    isOverflowing: index >= overflowIndex && index !== pinnedIndex,\n                }); }));\n            }\n        };\n        var cancelAnimationFrame = undefined;\n        // If the container width is already known from a previous render, update the overflow with its width.\n        // Do this in an animation frame to avoid forcing layout to happen early.\n        if (containerWidthRef.current !== undefined) {\n            var win_1 = getWindow(container);\n            if (win_1) {\n                var animationFrameId_1 = win_1.requestAnimationFrame(updateOverflowRef.current);\n                cancelAnimationFrame = function () { return win_1.cancelAnimationFrame(animationFrameId_1); };\n            }\n        }\n        return function () {\n            if (cancelAnimationFrame) {\n                cancelAnimationFrame();\n            }\n            // On cleanup, need to remove all items from the overflow\n            // so they don't have stale properties on the next render\n            setOverflowIndex(items.length);\n            updateOverflowRef.current = undefined;\n        };\n    });\n    return { menuButtonRef: menuButtonRef };\n};\n//# sourceMappingURL=useOverflow.js.map","import { __assign, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { ContextualMenuItemType } from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from '../../FocusZone';\nimport { divProperties, getNativeProps, shallowCompare, assign, classNamesFunction, css, getFirstFocusable, getLastFocusable, getRTL, KeyCodes, shouldWrapFocus, isIOS, isMac, memoizeFunction, getPropsWithDefaults, getDocument, FocusRects, composeComponentAs, } from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { Callout } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport { ContextualMenuSplitButton, ContextualMenuButton, ContextualMenuAnchor, } from './ContextualMenuItemWrapper/index';\nimport { concatStyleSetsWithProps } from '../../Styling';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport { useTarget, usePrevious, useAsync, useWarnings, useId, useIsomorphicLayoutEffect, } from '@fluentui/react-hooks';\nimport { useResponsiveMode, ResponsiveMode } from '../../ResponsiveMode';\nimport { MenuContext } from '../../utilities/MenuContext/index';\nvar getClassNames = classNamesFunction();\nvar getContextualMenuItemClassNames = classNamesFunction();\n// The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\nvar DEFAULT_PROPS = {\n    items: [],\n    shouldFocusOnMount: true,\n    gapSpace: 0,\n    directionalHint: DirectionalHint.bottomAutoEdge,\n    beakWidth: 16,\n};\n/* return number of menu items, excluding headers and dividers */\nfunction getItemCount(items) {\n    var totalItemCount = 0;\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n            var itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n            totalItemCount += itemCount;\n        }\n    }\n    return totalItemCount;\n}\nexport function getSubmenuItems(item, options) {\n    var target = options === null || options === void 0 ? void 0 : options.target;\n    // eslint-disable-next-line deprecation/deprecation\n    var items = item.subMenuProps ? item.subMenuProps.items : item.items;\n    if (items) {\n        var overrideItems = [];\n        for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n            var subItem = items_2[_i];\n            if (subItem.preferMenuTargetAsEventTarget) {\n                // For sub-items which need an overridden target, intercept `onClick`\n                var onClick = subItem.onClick, contextItem = __rest(subItem, [\"onClick\"]);\n                overrideItems.push(__assign(__assign({}, contextItem), { onClick: getOnClickWithOverrideTarget(onClick, target) }));\n            }\n            else {\n                overrideItems.push(subItem);\n            }\n        }\n        return overrideItems;\n    }\n}\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\nexport function canAnyMenuItemsCheck(items) {\n    return items.some(function (item) {\n        if (item.canCheck) {\n            return true;\n        }\n        // If the item is a section, check if any of the items in the section can check.\n        if (item.sectionProps && item.sectionProps.items.some(function (submenuItem) { return submenuItem.canCheck === true; })) {\n            return true;\n        }\n        return false;\n    });\n}\nvar NavigationIdleDelay = 250; /* ms */\nvar COMPONENT_NAME = 'ContextualMenu';\nvar _getMenuItemStylesFunction = memoizeFunction(function () {\n    var styles = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        styles[_i] = arguments[_i];\n    }\n    return function (styleProps) {\n        return concatStyleSetsWithProps.apply(void 0, __spreadArray([styleProps, getItemStyles], styles, false));\n    };\n});\n//#region Custom hooks\nfunction useVisibility(props, targetWindow) {\n    var _a = props.hidden, hidden = _a === void 0 ? false : _a, onMenuDismissed = props.onMenuDismissed, onMenuOpened = props.onMenuOpened;\n    var previousHidden = usePrevious(hidden);\n    var onMenuOpenedRef = React.useRef(onMenuOpened);\n    var onMenuClosedRef = React.useRef(onMenuDismissed);\n    var propsRef = React.useRef(props);\n    onMenuOpenedRef.current = onMenuOpened;\n    onMenuClosedRef.current = onMenuDismissed;\n    propsRef.current = props;\n    React.useEffect(function () {\n        var _a, _b;\n        // Don't issue dismissed callbacks on initial mount\n        if (hidden && previousHidden === false) {\n            (_a = onMenuClosedRef.current) === null || _a === void 0 ? void 0 : _a.call(onMenuClosedRef, propsRef.current);\n        }\n        else if (!hidden && previousHidden !== false) {\n            (_b = onMenuOpenedRef.current) === null || _b === void 0 ? void 0 : _b.call(onMenuOpenedRef, propsRef.current);\n        }\n    }, [hidden, previousHidden]);\n    // Issue onDismissedCallback on unmount\n    React.useEffect(function () { return function () { var _a; return (_a = onMenuClosedRef.current) === null || _a === void 0 ? void 0 : _a.call(onMenuClosedRef, propsRef.current); }; }, []);\n}\nfunction useSubMenuState(_a, dismiss) {\n    var hidden = _a.hidden, items = _a.items, theme = _a.theme, className = _a.className, id = _a.id, menuTarget = _a.target;\n    var _b = React.useState(), expandedMenuItemKey = _b[0], setExpandedMenuItemKey = _b[1];\n    var _c = React.useState(), submenuTarget = _c[0], setSubmenuTarget = _c[1];\n    /** True if the menu was expanded by mouse click OR hover (as opposed to by keyboard) */\n    var _d = React.useState(), shouldFocusOnContainer = _d[0], setShouldFocusOnContainer = _d[1];\n    var subMenuId = useId(COMPONENT_NAME, id);\n    var closeSubMenu = React.useCallback(function () {\n        setShouldFocusOnContainer(undefined);\n        setExpandedMenuItemKey(undefined);\n        setSubmenuTarget(undefined);\n    }, []);\n    var openSubMenu = React.useCallback(function (_a, target, focusContainer) {\n        var submenuItemKey = _a.key;\n        if (expandedMenuItemKey === submenuItemKey) {\n            return;\n        }\n        target.focus();\n        setShouldFocusOnContainer(focusContainer);\n        setExpandedMenuItemKey(submenuItemKey);\n        setSubmenuTarget(target);\n    }, [expandedMenuItemKey]);\n    React.useEffect(function () {\n        if (hidden) {\n            closeSubMenu();\n        }\n    }, [hidden, closeSubMenu]);\n    var onSubMenuDismiss = useOnSubmenuDismiss(dismiss, closeSubMenu);\n    var getSubmenuProps = function () {\n        var item = findItemByKeyFromItems(expandedMenuItemKey, items);\n        var submenuProps = null;\n        if (item) {\n            submenuProps = {\n                items: getSubmenuItems(item, { target: menuTarget }),\n                target: submenuTarget,\n                onDismiss: onSubMenuDismiss,\n                isSubMenu: true,\n                id: subMenuId,\n                shouldFocusOnMount: true,\n                shouldFocusOnContainer: shouldFocusOnContainer,\n                directionalHint: getRTL(theme) ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n                className: className,\n                gapSpace: 0,\n                isBeakVisible: false,\n            };\n            if (item.subMenuProps) {\n                assign(submenuProps, item.subMenuProps);\n            }\n            if (item.preferMenuTargetAsEventTarget) {\n                var onItemClick = item.onItemClick;\n                submenuProps.onItemClick = getOnClickWithOverrideTarget(onItemClick, menuTarget);\n            }\n        }\n        return submenuProps;\n    };\n    return [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss];\n}\nfunction useShouldUpdateFocusOnMouseMove(_a) {\n    var delayUpdateFocusOnHover = _a.delayUpdateFocusOnHover, hidden = _a.hidden;\n    var shouldUpdateFocusOnMouseEvent = React.useRef(!delayUpdateFocusOnHover);\n    var gotMouseMove = React.useRef(false);\n    React.useEffect(function () {\n        shouldUpdateFocusOnMouseEvent.current = !delayUpdateFocusOnHover;\n        gotMouseMove.current = hidden ? false : !delayUpdateFocusOnHover && gotMouseMove.current;\n    }, [delayUpdateFocusOnHover, hidden]);\n    var onMenuFocusCapture = React.useCallback(function () {\n        if (delayUpdateFocusOnHover) {\n            shouldUpdateFocusOnMouseEvent.current = false;\n        }\n    }, [delayUpdateFocusOnHover]);\n    return [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture];\n}\nfunction usePreviousActiveElement(_a, targetWindow, hostElement) {\n    var hidden = _a.hidden, onRestoreFocus = _a.onRestoreFocus;\n    var previousActiveElement = React.useRef();\n    var tryFocusPreviousActiveElement = React.useCallback(function (options) {\n        var _a, _b;\n        if (onRestoreFocus) {\n            onRestoreFocus(options);\n        }\n        else if (options === null || options === void 0 ? void 0 : options.documentContainsFocus) {\n            // Make sure that the focus method actually exists\n            // In some cases the object might exist but not be a real element.\n            // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n            (_b = (_a = previousActiveElement.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }, [onRestoreFocus]);\n    useIsomorphicLayoutEffect(function () {\n        var _a, _b;\n        if (!hidden) {\n            var newElement = targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement;\n            if (!((_a = hostElement.current) === null || _a === void 0 ? void 0 : _a.contains(newElement)) && newElement.tagName !== 'BODY') {\n                previousActiveElement.current = newElement;\n            }\n        }\n        else if (previousActiveElement.current) {\n            tryFocusPreviousActiveElement({\n                originalElement: previousActiveElement.current,\n                containsFocus: true,\n                documentContainsFocus: ((_b = getDocument()) === null || _b === void 0 ? void 0 : _b.hasFocus()) || false,\n            });\n            previousActiveElement.current = undefined;\n        }\n    }, [hidden, targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement, tryFocusPreviousActiveElement, hostElement]);\n    return [tryFocusPreviousActiveElement];\n}\nfunction useKeyHandlers(_a, dismiss, hostElement, openSubMenu) {\n    var theme = _a.theme, isSubMenu = _a.isSubMenu, _b = _a.focusZoneProps, _c = _b === void 0 ? {} : _b, checkForNoWrap = _c.checkForNoWrap, _d = _c.direction, focusZoneDirection = _d === void 0 ? FocusZoneDirection.vertical : _d;\n    /** True if the most recent keydown event was for alt (option) or meta (command). */\n    var lastKeyDownWasAltOrMeta = React.useRef();\n    /**\n     * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n     * if so, stops event propagation and dismisses menu(s).\n     * @param ev - The keyboard event.\n     * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n     * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n     * Only does anything if `shouldHandleKey` returns true.\n     * @returns Whether the event was handled.\n     */\n    var keyHandler = function (ev, shouldHandleKey, dismissAllMenus) {\n        var handled = false;\n        if (shouldHandleKey(ev)) {\n            dismiss(ev, dismissAllMenus);\n            ev.preventDefault();\n            ev.stopPropagation();\n            handled = true;\n        }\n        return handled;\n    };\n    /**\n     * Checks if the submenu should be closed\n     */\n    var shouldCloseSubMenu = function (ev) {\n        var submenuCloseKey = getRTL(theme) ? KeyCodes.right : KeyCodes.left;\n        // eslint-disable-next-line deprecation/deprecation\n        if (ev.which !== submenuCloseKey || !isSubMenu) {\n            return false;\n        }\n        return !!(focusZoneDirection === FocusZoneDirection.vertical ||\n            (checkForNoWrap && !shouldWrapFocus(ev.target, 'data-no-horizontal-wrap')));\n    };\n    var shouldHandleKeyDown = function (ev) {\n        return (\n        // eslint-disable-next-line deprecation/deprecation\n        ev.which === KeyCodes.escape ||\n            shouldCloseSubMenu(ev) ||\n            // eslint-disable-next-line deprecation/deprecation\n            (ev.which === KeyCodes.up && (ev.altKey || ev.metaKey)));\n    };\n    var onKeyDown = function (ev) {\n        // Take note if we are processing an alt (option) or meta (command) keydown.\n        // See comment in shouldHandleKeyUp for reasoning.\n        lastKeyDownWasAltOrMeta.current = isAltOrMeta(ev);\n        // On Mac, pressing escape dismisses all levels of native context menus\n        // eslint-disable-next-line deprecation/deprecation\n        var dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n        return keyHandler(ev, shouldHandleKeyDown, dismissAllMenus);\n    };\n    /**\n     * We close the menu on key up only if ALL of the following are true:\n     * - Most recent key down was alt or meta (command)\n     * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n     *   expand/collapse the menu)\n     * - We're not on a Mac (or iOS)\n     *\n     * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n     * closing any open context menus. There is not a similar behavior on Macs.\n     */\n    var shouldHandleKeyUp = function (ev) {\n        var keyPressIsAltOrMetaAlone = lastKeyDownWasAltOrMeta.current && isAltOrMeta(ev);\n        lastKeyDownWasAltOrMeta.current = false;\n        return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n    };\n    var onKeyUp = function (ev) {\n        return keyHandler(ev, shouldHandleKeyUp, true /* dismissAllMenus */);\n    };\n    var onMenuKeyDown = function (ev) {\n        // Mark as handled if onKeyDown returns true (for handling collapse cases)\n        // or if we are attempting to expand a submenu\n        var handled = onKeyDown(ev);\n        if (handled || !hostElement.current) {\n            return;\n        }\n        // If we have a modifier key being pressed, we do not want to move focus.\n        // Otherwise, handle up and down keys.\n        var hasModifier = !!(ev.altKey || ev.metaKey);\n        // eslint-disable-next-line deprecation/deprecation\n        var isUp = ev.which === KeyCodes.up;\n        // eslint-disable-next-line deprecation/deprecation\n        var isDown = ev.which === KeyCodes.down;\n        if (!hasModifier && (isUp || isDown)) {\n            var elementToFocus = isUp\n                ? getLastFocusable(hostElement.current, hostElement.current.lastChild, true)\n                : getFirstFocusable(hostElement.current, hostElement.current.firstChild, true);\n            if (elementToFocus) {\n                elementToFocus.focus();\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n        }\n    };\n    var onItemKeyDown = function (item, ev) {\n        var openKey = getRTL(theme) ? KeyCodes.left : KeyCodes.right;\n        if (!item.disabled &&\n            // eslint-disable-next-line deprecation/deprecation\n            (ev.which === openKey || ev.which === KeyCodes.enter || (ev.which === KeyCodes.down && (ev.altKey || ev.metaKey)))) {\n            openSubMenu(item, ev.currentTarget);\n            ev.preventDefault();\n        }\n    };\n    return [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown];\n}\nfunction useScrollHandler(asyncTracker) {\n    var isScrollIdle = React.useRef(true);\n    var scrollIdleTimeoutId = React.useRef();\n    /**\n     * Scroll handler for the callout to make sure the mouse events\n     * for updating focus are not interacting during scroll\n     */\n    var onScroll = function () {\n        if (!isScrollIdle.current && scrollIdleTimeoutId.current !== undefined) {\n            asyncTracker.clearTimeout(scrollIdleTimeoutId.current);\n            scrollIdleTimeoutId.current = undefined;\n        }\n        else {\n            isScrollIdle.current = false;\n        }\n        scrollIdleTimeoutId.current = asyncTracker.setTimeout(function () {\n            isScrollIdle.current = true;\n        }, NavigationIdleDelay);\n    };\n    return [onScroll, isScrollIdle];\n}\nfunction useOnSubmenuDismiss(dismiss, closeSubMenu) {\n    var isMountedRef = React.useRef(false);\n    React.useEffect(function () {\n        isMountedRef.current = true;\n        return function () {\n            isMountedRef.current = false;\n        };\n    }, []);\n    /**\n     * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n     * after the component is unmounted. The isMountedRef is added to prevent\n     * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n     * code.\n     */\n    var onSubMenuDismiss = function (ev, dismissAll) {\n        if (dismissAll) {\n            dismiss(ev, dismissAll);\n        }\n        else if (isMountedRef.current) {\n            closeSubMenu();\n        }\n    };\n    return onSubMenuDismiss;\n}\nfunction useSubmenuEnterTimer(_a, asyncTracker) {\n    var _b = _a.subMenuHoverDelay, subMenuHoverDelay = _b === void 0 ? NavigationIdleDelay : _b;\n    var enterTimerRef = React.useRef(undefined);\n    var cancelSubMenuTimer = function () {\n        if (enterTimerRef.current !== undefined) {\n            asyncTracker.clearTimeout(enterTimerRef.current);\n            enterTimerRef.current = undefined;\n        }\n    };\n    var startSubmenuTimer = function (onTimerExpired) {\n        enterTimerRef.current = asyncTracker.setTimeout(function () {\n            onTimerExpired();\n            cancelSubMenuTimer();\n        }, subMenuHoverDelay);\n    };\n    return [cancelSubMenuTimer, startSubmenuTimer, enterTimerRef];\n}\nfunction useMouseHandlers(props, isScrollIdle, subMenuEntryTimer, targetWindow, shouldUpdateFocusOnMouseEvent, gotMouseMove, expandedMenuItemKey, hostElement, startSubmenuTimer, cancelSubMenuTimer, openSubMenu, onSubMenuDismiss, dismiss) {\n    var menuTarget = props.target;\n    var onItemMouseEnterBase = function (item, ev, target) {\n        if (shouldUpdateFocusOnMouseEvent.current) {\n            gotMouseMove.current = true;\n        }\n        if (shouldIgnoreMouseEvent()) {\n            return;\n        }\n        updateFocusOnMouseEvent(item, ev, target);\n    };\n    var onItemMouseMoveBase = function (item, ev, target) {\n        var targetElement = ev.currentTarget;\n        // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n        if (shouldUpdateFocusOnMouseEvent.current) {\n            gotMouseMove.current = true;\n        }\n        else {\n            return;\n        }\n        if (!isScrollIdle.current ||\n            subMenuEntryTimer.current !== undefined ||\n            targetElement === (targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement)) {\n            return;\n        }\n        updateFocusOnMouseEvent(item, ev, target);\n    };\n    var shouldIgnoreMouseEvent = function () {\n        return !isScrollIdle.current || !gotMouseMove.current;\n    };\n    var onMouseItemLeave = function (item, ev) {\n        var _a;\n        if (shouldIgnoreMouseEvent()) {\n            return;\n        }\n        cancelSubMenuTimer();\n        if (expandedMenuItemKey !== undefined) {\n            return;\n        }\n        /**\n         * IE11 focus() method forces parents to scroll to top of element.\n         * Edge and IE expose a setActive() function for focusable divs that\n         * sets the page focus but does not scroll the parent element.\n         */\n        if (hostElement.current.setActive) {\n            try {\n                hostElement.current.setActive();\n            }\n            catch (e) {\n                /* no-op */\n            }\n        }\n        else {\n            (_a = hostElement.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n    };\n    /**\n     * Handles updating focus when mouseEnter or mouseMove fire.\n     * As part of updating focus, This function will also update\n     * the expand/collapse state accordingly.\n     */\n    var updateFocusOnMouseEvent = function (item, ev, target) {\n        var targetElement = target ? target : ev.currentTarget;\n        if (item.key === expandedMenuItemKey) {\n            return;\n        }\n        cancelSubMenuTimer();\n        // If the menu is not expanded we can update focus without any delay\n        if (expandedMenuItemKey === undefined) {\n            targetElement.focus();\n        }\n        // Delay updating expanding/dismissing the submenu\n        // and only set focus if we have not already done so\n        if (hasSubmenu(item)) {\n            ev.stopPropagation();\n            startSubmenuTimer(function () {\n                targetElement.focus();\n                openSubMenu(item, targetElement, true);\n            });\n        }\n        else {\n            startSubmenuTimer(function () {\n                onSubMenuDismiss(ev);\n                targetElement.focus();\n            });\n        }\n    };\n    var onItemClick = function (item, ev) {\n        onItemClickBase(item, ev, ev.currentTarget);\n    };\n    var onItemClickBase = function (item, ev, target) {\n        var items = getSubmenuItems(item, { target: menuTarget });\n        // Cancel an async menu item hover timeout action from being taken and instead\n        // just trigger the click event instead.\n        cancelSubMenuTimer();\n        if (!hasSubmenu(item) && (!items || !items.length)) {\n            // This is an item without a menu. Click it.\n            executeItemClick(item, ev);\n        }\n        else {\n            if (item.key !== expandedMenuItemKey) {\n                // This has a collapsed sub menu. Expand it.\n                // focus on the container by default when the menu is opened with a click event\n                // this differentiates from a keyboard interaction triggering the click event\n                var shouldFocusOnContainer = typeof props.shouldFocusOnContainer === 'boolean'\n                    ? props.shouldFocusOnContainer\n                    : ev.nativeEvent.pointerType === 'mouse';\n                openSubMenu(item, target, shouldFocusOnContainer);\n            }\n        }\n        ev.stopPropagation();\n        ev.preventDefault();\n    };\n    var onAnchorClick = function (item, ev) {\n        executeItemClick(item, ev);\n        ev.stopPropagation();\n    };\n    var executeItemClick = function (item, ev) {\n        if (item.disabled || item.isDisabled) {\n            return;\n        }\n        if (item.preferMenuTargetAsEventTarget) {\n            overrideTarget(ev, menuTarget);\n        }\n        var shouldDismiss = false;\n        if (item.onClick) {\n            shouldDismiss = !!item.onClick(ev, item);\n        }\n        else if (props.onItemClick) {\n            shouldDismiss = !!props.onItemClick(ev, item);\n        }\n        if (shouldDismiss || !ev.defaultPrevented) {\n            dismiss(ev, true);\n        }\n    };\n    return [\n        onItemMouseEnterBase,\n        onItemMouseMoveBase,\n        onMouseItemLeave,\n        onItemClick,\n        onAnchorClick,\n        executeItemClick,\n        onItemClickBase,\n    ];\n}\n//#endregion\nexport var ContextualMenuBase = React.memo(React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var _a;\n    var _b = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults), ref = _b.ref, props = __rest(_b, [\"ref\"]);\n    var hostElement = React.useRef(null);\n    var asyncTracker = useAsync();\n    var menuId = useId(COMPONENT_NAME, props.id);\n    useWarnings({\n        name: COMPONENT_NAME,\n        props: props,\n        deprecations: {\n            getMenuClassNames: 'styles',\n        },\n    });\n    var dismiss = function (ev, dismissAll) { var _a; return (_a = props.onDismiss) === null || _a === void 0 ? void 0 : _a.call(props, ev, dismissAll); };\n    var _c = useTarget(props.target, hostElement), targetRef = _c[0], targetWindow = _c[1];\n    var tryFocusPreviousActiveElement = usePreviousActiveElement(props, targetWindow, hostElement)[0];\n    var _d = useSubMenuState(props, dismiss), expandedMenuItemKey = _d[0], openSubMenu = _d[1], getSubmenuProps = _d[2], onSubMenuDismiss = _d[3];\n    var _e = useShouldUpdateFocusOnMouseMove(props), shouldUpdateFocusOnMouseEvent = _e[0], gotMouseMove = _e[1], onMenuFocusCapture = _e[2];\n    var _f = useScrollHandler(asyncTracker), onScroll = _f[0], isScrollIdle = _f[1];\n    var _g = useSubmenuEnterTimer(props, asyncTracker), cancelSubMenuTimer = _g[0], startSubmenuTimer = _g[1], subMenuEntryTimer = _g[2];\n    var responsiveMode = useResponsiveMode(hostElement, props.responsiveMode);\n    useVisibility(props, targetWindow);\n    var _h = useKeyHandlers(props, dismiss, hostElement, openSubMenu), onKeyDown = _h[0], onKeyUp = _h[1], onMenuKeyDown = _h[2], onItemKeyDown = _h[3];\n    var _j = useMouseHandlers(props, isScrollIdle, subMenuEntryTimer, targetWindow, shouldUpdateFocusOnMouseEvent, gotMouseMove, expandedMenuItemKey, hostElement, startSubmenuTimer, cancelSubMenuTimer, openSubMenu, onSubMenuDismiss, dismiss), onItemMouseEnterBase = _j[0], onItemMouseMoveBase = _j[1], onMouseItemLeave = _j[2], onItemClick = _j[3], onAnchorClick = _j[4], executeItemClick = _j[5], onItemClickBase = _j[6];\n    //#region Render helpers\n    var onDefaultRenderMenuList = function (menuListProps, \n    // eslint-disable-next-line deprecation/deprecation\n    menuClassNames, defaultRender) {\n        var indexCorrection = 0;\n        var items = menuListProps.items, totalItemCount = menuListProps.totalItemCount, hasCheckmarks = menuListProps.hasCheckmarks, hasIcons = menuListProps.hasIcons;\n        return (React.createElement(\"ul\", { className: menuClassNames.list, onKeyDown: onKeyDown, onKeyUp: onKeyUp, role: 'presentation' }, items.map(function (item, index) {\n            var menuItem = renderMenuItem(item, index, indexCorrection, totalItemCount, hasCheckmarks, hasIcons, menuClassNames);\n            if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n                var indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n                indexCorrection += indexIncrease;\n            }\n            return menuItem;\n        })));\n    };\n    var renderFocusZone = function (children, adjustedFocusZoneProps) {\n        var _a = props.focusZoneAs, ChildrenRenderer = _a === void 0 ? FocusZone : _a;\n        return React.createElement(ChildrenRenderer, __assign({}, adjustedFocusZoneProps), children);\n    };\n    /**\n     * !!!IMPORTANT!!! Avoid mutating `item: IContextualMenuItem` argument. It will\n     * cause the menu items to always re-render because the component update is based on shallow comparison.\n     */\n    var renderMenuItem = function (item, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons, \n    // eslint-disable-next-line deprecation/deprecation\n    menuClassNames) {\n        var _a;\n        var renderedItems = [];\n        var iconProps = item.iconProps || { iconName: 'None' };\n        var getItemClassNames = item.getItemClassNames, // eslint-disable-line deprecation/deprecation\n        itemProps = item.itemProps;\n        var styles = itemProps ? itemProps.styles : undefined;\n        // We only send a dividerClassName when the item to be rendered is a divider.\n        // For all other cases, the default divider style is used.\n        var dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n        var subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : '';\n        // eslint-disable-next-line deprecation/deprecation\n        var itemClassNames;\n        // IContextualMenuItem#getItemClassNames for backwards compatibility\n        // otherwise uses mergeStyles for class names.\n        if (getItemClassNames) {\n            itemClassNames = getItemClassNames(props.theme, isItemDisabled(item), expandedMenuItemKey === item.key, !!getIsChecked(item), !!item.href, iconProps.iconName !== 'None', item.className, dividerClassName, iconProps.className, subMenuIconClassName, item.primaryDisabled);\n        }\n        else {\n            var itemStyleProps = {\n                theme: props.theme,\n                disabled: isItemDisabled(item),\n                expanded: expandedMenuItemKey === item.key,\n                checked: !!getIsChecked(item),\n                isAnchorLink: !!item.href,\n                knownIcon: iconProps.iconName !== 'None',\n                itemClassName: item.className,\n                dividerClassName: dividerClassName,\n                iconClassName: iconProps.className,\n                subMenuClassName: subMenuIconClassName,\n                primaryDisabled: item.primaryDisabled,\n            };\n            // We need to generate default styles then override if styles are provided\n            // since the ContextualMenu currently handles item classNames.\n            itemClassNames = getContextualMenuItemClassNames(_getMenuItemStylesFunction((_a = menuClassNames.subComponentStyles) === null || _a === void 0 ? void 0 : _a.menuItem, styles), itemStyleProps);\n        }\n        // eslint-disable-next-line deprecation/deprecation\n        if (item.text === '-' || item.name === '-') {\n            item.itemType = ContextualMenuItemType.Divider;\n        }\n        switch (item.itemType) {\n            case ContextualMenuItemType.Divider:\n                renderedItems.push(renderSeparator(index, itemClassNames));\n                break;\n            case ContextualMenuItemType.Header:\n                renderedItems.push(renderSeparator(index, itemClassNames));\n                var headerItem = renderHeaderMenuItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n                renderedItems.push(renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n                break;\n            case ContextualMenuItemType.Section:\n                renderedItems.push(renderSectionItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons));\n                break;\n            default:\n                var defaultRenderNormalItem = function () {\n                    return renderNormalItem(item, itemClassNames, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons);\n                };\n                var menuItem = props.onRenderContextualMenuItem\n                    ? props.onRenderContextualMenuItem(item, defaultRenderNormalItem)\n                    : defaultRenderNormalItem();\n                renderedItems.push(renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n                break;\n        }\n        // Since multiple nodes *could* be rendered, wrap them all in a fragment with this item's key.\n        // This ensures the reconciler handles multi-item output per-node correctly and does not re-mount content.\n        return React.createElement(React.Fragment, { key: item.key }, renderedItems);\n    };\n    var defaultMenuItemRenderer = function (item, \n    // eslint-disable-next-line deprecation/deprecation\n    menuClassNames) {\n        var index = item.index, focusableElementIndex = item.focusableElementIndex, totalItemCount = item.totalItemCount, hasCheckmarks = item.hasCheckmarks, hasIcons = item.hasIcons;\n        return renderMenuItem(item, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons, menuClassNames);\n    };\n    var renderSectionItem = function (sectionItem, \n    // eslint-disable-next-line deprecation/deprecation\n    itemClassNames, \n    // eslint-disable-next-line deprecation/deprecation\n    menuClassNames, index, hasCheckmarks, hasIcons) {\n        var sectionProps = sectionItem.sectionProps;\n        if (!sectionProps) {\n            return;\n        }\n        var headerItem;\n        var groupProps;\n        if (sectionProps.title) {\n            var headerContextualMenuItem = undefined;\n            var ariaLabelledby = '';\n            if (typeof sectionProps.title === 'string') {\n                // Since title is a user-facing string, it needs to be stripped\n                // of whitespace in order to build a valid element ID\n                var id_1 = menuId + sectionProps.title.replace(/\\s/g, '');\n                headerContextualMenuItem = {\n                    key: \"section-\".concat(sectionProps.title, \"-title\"),\n                    itemType: ContextualMenuItemType.Header,\n                    text: sectionProps.title,\n                    id: id_1,\n                };\n                ariaLabelledby = id_1;\n            }\n            else {\n                var id_2 = sectionProps.title.id || menuId + sectionProps.title.key.replace(/\\s/g, '');\n                headerContextualMenuItem = __assign(__assign({}, sectionProps.title), { id: id_2 });\n                ariaLabelledby = id_2;\n            }\n            if (headerContextualMenuItem) {\n                groupProps = {\n                    role: 'group',\n                    'aria-labelledby': ariaLabelledby,\n                };\n                headerItem = renderHeaderMenuItem(headerContextualMenuItem, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n            }\n        }\n        if (sectionProps.items && sectionProps.items.length > 0) {\n            var correctedIndex_1 = 0;\n            return (React.createElement(\"li\", { role: \"presentation\", key: sectionProps.key || sectionItem.key || \"section-\".concat(index) },\n                React.createElement(\"div\", __assign({}, groupProps),\n                    React.createElement(\"ul\", { className: menuClassNames.list, role: \"presentation\" },\n                        sectionProps.topDivider && renderSeparator(index, itemClassNames, true, true),\n                        headerItem && renderListItem(headerItem, sectionItem.key || index, itemClassNames, sectionItem.title),\n                        sectionProps.items.map(function (contextualMenuItem, itemsIndex) {\n                            var menuItem = renderMenuItem(contextualMenuItem, itemsIndex, correctedIndex_1, getItemCount(sectionProps.items), hasCheckmarks, hasIcons, menuClassNames);\n                            if (contextualMenuItem.itemType !== ContextualMenuItemType.Divider &&\n                                contextualMenuItem.itemType !== ContextualMenuItemType.Header) {\n                                var indexIncrease = contextualMenuItem.customOnRenderListLength\n                                    ? contextualMenuItem.customOnRenderListLength\n                                    : 1;\n                                correctedIndex_1 += indexIncrease;\n                            }\n                            return menuItem;\n                        }),\n                        sectionProps.bottomDivider && renderSeparator(index, itemClassNames, false, true)))));\n        }\n    };\n    var renderListItem = function (content, key, classNames, // eslint-disable-line deprecation/deprecation\n    title) {\n        return (React.createElement(\"li\", { role: \"presentation\", title: title, key: key, className: classNames.item }, content));\n    };\n    var renderSeparator = function (index, classNames, // eslint-disable-line deprecation/deprecation\n    top, fromSection) {\n        if (fromSection || index > 0) {\n            return (React.createElement(\"li\", { role: \"separator\", key: 'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom'), className: classNames.divider, \"aria-hidden\": \"true\" }));\n        }\n        return null;\n    };\n    var renderNormalItem = function (item, classNames, // eslint-disable-line deprecation/deprecation\n    index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons) {\n        if (item.onRender) {\n            return item.onRender(__assign({ 'aria-posinset': focusableElementIndex + 1, 'aria-setsize': totalItemCount }, item), dismiss);\n        }\n        var contextualMenuItemAs = props.contextualMenuItemAs;\n        var commonProps = {\n            item: item,\n            classNames: classNames,\n            index: index,\n            focusableElementIndex: focusableElementIndex,\n            totalItemCount: totalItemCount,\n            hasCheckmarks: hasCheckmarks,\n            hasIcons: hasIcons,\n            contextualMenuItemAs: contextualMenuItemAs,\n            onItemMouseEnter: onItemMouseEnterBase,\n            onItemMouseLeave: onMouseItemLeave,\n            onItemMouseMove: onItemMouseMoveBase,\n            onItemMouseDown: onItemMouseDown,\n            executeItemClick: executeItemClick,\n            onItemKeyDown: onItemKeyDown,\n            expandedMenuItemKey: expandedMenuItemKey,\n            openSubMenu: openSubMenu,\n            dismissSubMenu: onSubMenuDismiss,\n            dismissMenu: dismiss,\n        };\n        if (item.href) {\n            var ContextualMenuAnchorAs = ContextualMenuAnchor;\n            if (item.contextualMenuItemWrapperAs) {\n                ContextualMenuAnchorAs = composeComponentAs(item.contextualMenuItemWrapperAs, ContextualMenuAnchorAs);\n            }\n            return React.createElement(ContextualMenuAnchorAs, __assign({}, commonProps, { onItemClick: onAnchorClick }));\n        }\n        if (item.split && hasSubmenu(item)) {\n            var ContextualMenuSplitButtonAs = ContextualMenuSplitButton;\n            if (item.contextualMenuItemWrapperAs) {\n                ContextualMenuSplitButtonAs = composeComponentAs(item.contextualMenuItemWrapperAs, ContextualMenuSplitButtonAs);\n            }\n            return (React.createElement(ContextualMenuSplitButtonAs, __assign({}, commonProps, { onItemClick: onItemClick, onItemClickBase: onItemClickBase, onTap: cancelSubMenuTimer })));\n        }\n        var ContextualMenuButtonAs = ContextualMenuButton;\n        if (item.contextualMenuItemWrapperAs) {\n            ContextualMenuButtonAs = composeComponentAs(item.contextualMenuItemWrapperAs, ContextualMenuButtonAs);\n        }\n        return React.createElement(ContextualMenuButtonAs, __assign({}, commonProps, { onItemClick: onItemClick, onItemClickBase: onItemClickBase }));\n    };\n    var renderHeaderMenuItem = function (item, \n    // eslint-disable-next-line deprecation/deprecation\n    itemClassNames, \n    // eslint-disable-next-line deprecation/deprecation\n    menuClassNames, index, hasCheckmarks, hasIcons) {\n        var ChildrenRenderer = ContextualMenuItem;\n        if (item.contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(item.contextualMenuItemAs, ChildrenRenderer);\n        }\n        if (props.contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(props.contextualMenuItemAs, ChildrenRenderer);\n        }\n        var itemProps = item.itemProps, id = item.id;\n        var divHtmlProperties = itemProps && getNativeProps(itemProps, divProperties);\n        return (\n        // eslint-disable-next-line deprecation/deprecation\n        React.createElement(\"div\", __assign({ id: id, className: menuClassNames.header }, divHtmlProperties, { style: item.style }),\n            React.createElement(ChildrenRenderer, __assign({ item: item, classNames: itemClassNames, index: index, onCheckmarkClick: hasCheckmarks ? onItemClick : undefined, hasIcons: hasIcons }, itemProps))));\n    };\n    //#endregion\n    //#region Main render\n    var isBeakVisible = props.isBeakVisible;\n    var items = props.items, labelElementId = props.labelElementId, id = props.id, className = props.className, beakWidth = props.beakWidth, directionalHint = props.directionalHint, directionalHintForRTL = props.directionalHintForRTL, alignTargetEdge = props.alignTargetEdge, gapSpace = props.gapSpace, coverTarget = props.coverTarget, ariaLabel = props.ariaLabel, doNotLayer = props.doNotLayer, target = props.target, bounds = props.bounds, useTargetWidth = props.useTargetWidth, useTargetAsMinWidth = props.useTargetAsMinWidth, directionalHintFixed = props.directionalHintFixed, shouldFocusOnMount = props.shouldFocusOnMount, shouldFocusOnContainer = props.shouldFocusOnContainer, title = props.title, styles = props.styles, theme = props.theme, calloutProps = props.calloutProps, _k = props.onRenderSubMenu, onRenderSubMenu = _k === void 0 ? onDefaultRenderSubMenu : _k, _l = props.onRenderMenuList, onRenderMenuList = _l === void 0 ? function (menuListProps, defaultRender) { return onDefaultRenderMenuList(menuListProps, classNames, defaultRender); } : _l, focusZoneProps = props.focusZoneProps, \n    // eslint-disable-next-line deprecation/deprecation\n    getMenuClassNames = props.getMenuClassNames;\n    var classNames = getMenuClassNames\n        ? getMenuClassNames(theme, className)\n        : getClassNames(styles, {\n            theme: theme,\n            className: className,\n        });\n    var hasIcons = itemsHaveIcons(items);\n    function itemsHaveIcons(contextualMenuItems) {\n        for (var _i = 0, contextualMenuItems_1 = contextualMenuItems; _i < contextualMenuItems_1.length; _i++) {\n            var item = contextualMenuItems_1[_i];\n            if (item.iconProps) {\n                return true;\n            }\n            if (item.itemType === ContextualMenuItemType.Section &&\n                item.sectionProps &&\n                itemsHaveIcons(item.sectionProps.items)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var adjustedFocusZoneProps = __assign(__assign({ direction: FocusZoneDirection.vertical, handleTabKey: FocusZoneTabbableElements.all, isCircularNavigation: true, 'data-tabster': '{\"uncontrolled\": {}, \"focusable\": { \"excludeFromMover\": true }}' }, focusZoneProps), { className: css(classNames.root, (_a = props.focusZoneProps) === null || _a === void 0 ? void 0 : _a.className) });\n    var hasCheckmarks = canAnyMenuItemsCheck(items);\n    var submenuProps = expandedMenuItemKey && props.hidden !== true ? getSubmenuProps() : null;\n    isBeakVisible = isBeakVisible === undefined ? responsiveMode <= ResponsiveMode.medium : isBeakVisible;\n    /**\n     * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n     */\n    var contextMenuStyle;\n    var targetAsHtmlElement = targetRef.current;\n    if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n        var targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n        var targetWidth = targetBoundingRect.width - 2; /* Accounts for 1px border */\n        if (useTargetWidth) {\n            contextMenuStyle = {\n                width: targetWidth,\n            };\n        }\n        else if (useTargetAsMinWidth) {\n            contextMenuStyle = {\n                minWidth: targetWidth,\n            };\n        }\n    }\n    // The menu should only return if items were provided, if no items were provided then it should not appear.\n    if (items && items.length > 0) {\n        var totalItemCount_1 = getItemCount(items);\n        var calloutStyles_1 = classNames.subComponentStyles\n            ? classNames.subComponentStyles.callout\n            : undefined;\n        return (React.createElement(MenuContext.Consumer, null, function (menuContext) { return (React.createElement(Callout, __assign({ styles: calloutStyles_1, onRestoreFocus: tryFocusPreviousActiveElement }, calloutProps, { target: target || menuContext.target, isBeakVisible: isBeakVisible, beakWidth: beakWidth, directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL, gapSpace: gapSpace, coverTarget: coverTarget, doNotLayer: doNotLayer, className: css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className), setInitialFocus: shouldFocusOnMount, onDismiss: props.onDismiss || menuContext.onDismiss, onScroll: onScroll, bounds: bounds, directionalHintFixed: directionalHintFixed, alignTargetEdge: alignTargetEdge, hidden: props.hidden || menuContext.hidden, ref: forwardedRef }),\n            React.createElement(\"div\", { style: contextMenuStyle, ref: hostElement, id: id, className: classNames.container, tabIndex: shouldFocusOnContainer ? 0 : -1, onKeyDown: onMenuKeyDown, onKeyUp: onKeyUp, onFocusCapture: onMenuFocusCapture, \"aria-label\": ariaLabel, \"aria-labelledby\": labelElementId, role: 'menu' },\n                title && React.createElement(\"div\", { className: classNames.title },\n                    \" \",\n                    title,\n                    \" \"),\n                items && items.length\n                    ? renderFocusZone(onRenderMenuList({\n                        ariaLabel: ariaLabel,\n                        items: items,\n                        totalItemCount: totalItemCount_1,\n                        hasCheckmarks: hasCheckmarks,\n                        hasIcons: hasIcons,\n                        defaultMenuItemRenderer: function (item) {\n                            return defaultMenuItemRenderer(item, classNames);\n                        },\n                        labelElementId: labelElementId,\n                    }, function (menuListProps, defaultRender) { return onDefaultRenderMenuList(menuListProps, classNames, defaultRender); }), adjustedFocusZoneProps)\n                    : null,\n                submenuProps && onRenderSubMenu(submenuProps, onDefaultRenderSubMenu)),\n            React.createElement(FocusRects, null))); }));\n    }\n    else {\n        return null;\n    }\n    //#endregion\n}), function (prevProps, newProps) {\n    if (!newProps.shouldUpdateWhenHidden && prevProps.hidden && newProps.hidden) {\n        // Do not update when hidden.\n        return true;\n    }\n    return shallowCompare(prevProps, newProps);\n});\nContextualMenuBase.displayName = 'ContextualMenuBase';\n/**\n * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n */\nfunction isAltOrMeta(ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    return ev.which === KeyCodes.alt || ev.key === 'Meta';\n}\nfunction onItemMouseDown(item, ev) {\n    var _a;\n    (_a = item.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(item, item, ev);\n}\nfunction onDefaultRenderSubMenu(subMenuProps, defaultRender) {\n    throw Error('ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' +\n        'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.');\n}\n/**\n * Returns the item that matches a given key if any.\n * @param key - The key of the item to match\n * @param items - The items to look for the key\n */\nfunction findItemByKeyFromItems(key, items) {\n    for (var _i = 0, items_3 = items; _i < items_3.length; _i++) {\n        var item = items_3[_i];\n        if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n            var match = findItemByKeyFromItems(key, item.sectionProps.items);\n            if (match) {\n                return match;\n            }\n        }\n        else if (item.key && item.key === key) {\n            return item;\n        }\n    }\n}\nfunction getOnClickWithOverrideTarget(onClick, target) {\n    return onClick\n        ? function (ev, item) {\n            overrideTarget(ev, target);\n            return onClick(ev, item);\n        }\n        : onClick;\n}\nfunction overrideTarget(ev, target) {\n    if (ev && target) {\n        ev.persist();\n        if (target instanceof Event) {\n            ev.target = target.target;\n        }\n        else if (target instanceof Element) {\n            ev.target = target;\n        }\n    }\n}\n//# sourceMappingURL=ContextualMenu.base.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, getId } from '../../Utilities';\nvar getClassNames = classNamesFunction();\n// if the percentComplete is near 0, don't animate it.\n// This prevents animations on reset to 0 scenarios\nvar ZERO_THRESHOLD = 0.01;\n/**\n * ProgressIndicator with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport var ProgressIndicatorBase = /** @class */ (function (_super) {\n    __extends(ProgressIndicatorBase, _super);\n    function ProgressIndicatorBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._onRenderProgress = function (props) {\n            var _a, _b;\n            var ariaLabel = (_a = _this.props, _a.ariaLabel), ariaValueText = _a.ariaValueText, barHeight = _a.barHeight, className = _a.className, description = _a.description, \n            // eslint-disable-next-line deprecation/deprecation\n            label = (_b = _a.label, _b === void 0 ? _this.props.title : _b), styles = _a.styles, theme = _a.theme;\n            var percentComplete = typeof _this.props.percentComplete === 'number'\n                ? Math.min(100, Math.max(0, _this.props.percentComplete * 100))\n                : undefined;\n            var classNames = getClassNames(styles, {\n                theme: theme,\n                className: className,\n                barHeight: barHeight,\n                indeterminate: percentComplete === undefined ? true : false,\n            });\n            var progressBarStyles = {\n                width: percentComplete !== undefined ? percentComplete + '%' : undefined,\n                transition: percentComplete !== undefined && percentComplete < ZERO_THRESHOLD ? 'none' : undefined,\n            };\n            var ariaValueMin = percentComplete !== undefined ? 0 : undefined;\n            var ariaValueMax = percentComplete !== undefined ? 100 : undefined;\n            var ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete) : undefined;\n            return (React.createElement(\"div\", { className: classNames.itemProgress },\n                React.createElement(\"div\", { className: classNames.progressTrack }),\n                React.createElement(\"div\", { className: classNames.progressBar, style: progressBarStyles, role: \"progressbar\", \"aria-describedby\": description ? _this._descriptionId : undefined, \"aria-label\": ariaLabel, \"aria-labelledby\": label ? _this._labelId : undefined, \"aria-valuemin\": ariaValueMin, \"aria-valuemax\": ariaValueMax, \"aria-valuenow\": ariaValueNow, \"aria-valuetext\": ariaValueText })));\n        };\n        var id = getId('progress-indicator');\n        _this._labelId = id + '-label';\n        _this._descriptionId = id + '-description';\n        return _this;\n    }\n    ProgressIndicatorBase.prototype.render = function () {\n        var _a, _b, _c;\n        var barHeight = (_a = this.props, _a.barHeight), className = _a.className, \n        // eslint-disable-next-line deprecation/deprecation\n        label = (_b = _a.label, _b === void 0 ? this.props.title : _b), // Fall back to deprecated value.\n        description = _a.description, styles = _a.styles, theme = _a.theme, progressHidden = _a.progressHidden, onRenderProgress = (_c = _a.onRenderProgress, _c === void 0 ? this._onRenderProgress : _c);\n        var percentComplete = typeof this.props.percentComplete === 'number'\n            ? Math.min(100, Math.max(0, this.props.percentComplete * 100))\n            : undefined;\n        var classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n            barHeight: barHeight,\n            indeterminate: percentComplete === undefined ? true : false,\n        });\n        return (React.createElement(\"div\", { className: classNames.root },\n            label ? (React.createElement(\"div\", { id: this._labelId, className: classNames.itemName }, label)) : null,\n            !progressHidden\n                ? onRenderProgress(__assign(__assign({}, this.props), { percentComplete: percentComplete }), this._onRenderProgress)\n                : null,\n            description ? (React.createElement(\"div\", { id: this._descriptionId, className: classNames.itemDescription }, description)) : null));\n    };\n    ProgressIndicatorBase.defaultProps = {\n        label: '',\n        description: '',\n        width: 180,\n    };\n    return ProgressIndicatorBase;\n}(React.Component));\n//# sourceMappingURL=ProgressIndicator.base.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hiddenContentStyle } from '../../Styling';\nimport { initializeComponentRef, Async, divProperties, getNativeProps, getId, assign, hasOverflow, portalContainsElement, classNamesFunction, KeyCodes, } from '../../Utilities';\nimport { TooltipOverflowMode } from './TooltipHost.types';\nimport { Tooltip } from './Tooltip';\nimport { TooltipDelay } from './Tooltip.types';\nimport { WindowContext } from '@fluentui/react-window-provider';\nimport { getDocumentEx } from '../../utilities/dom';\nvar getClassNames = classNamesFunction();\nexport var TooltipHostBase = /** @class */ (function (_super) {\n    __extends(TooltipHostBase, _super);\n    // Constructor\n    function TooltipHostBase(props) {\n        var _this = _super.call(this, props) || this;\n        // The wrapping div that gets the hover events\n        _this._tooltipHost = React.createRef();\n        _this._defaultTooltipId = getId('tooltip');\n        _this.show = function () {\n            _this._toggleTooltip(true);\n        };\n        _this.dismiss = function () {\n            _this._hideTooltip();\n        };\n        _this._getTargetElement = function () {\n            if (!_this._tooltipHost.current) {\n                return undefined;\n            }\n            var overflowMode = _this.props.overflowMode;\n            // Select target element based on overflow mode. For parent mode, you want to position the tooltip relative\n            // to the parent element, otherwise it might look off.\n            if (overflowMode !== undefined) {\n                switch (overflowMode) {\n                    case TooltipOverflowMode.Parent:\n                        return _this._tooltipHost.current.parentElement;\n                    case TooltipOverflowMode.Self:\n                        return _this._tooltipHost.current;\n                }\n            }\n            return _this._tooltipHost.current;\n        };\n        _this._onTooltipFocus = function (ev) {\n            if (_this._ignoreNextFocusEvent) {\n                _this._ignoreNextFocusEvent = false;\n                return;\n            }\n            _this._onTooltipMouseEnter(ev);\n        };\n        _this._onTooltipContentFocus = function (ev) {\n            if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== _this) {\n                TooltipHostBase._currentVisibleTooltip.dismiss();\n            }\n            TooltipHostBase._currentVisibleTooltip = _this;\n            _this._clearDismissTimer();\n            _this._clearOpenTimer();\n        };\n        _this._onTooltipBlur = function (ev) {\n            var _a;\n            // The focused element gets a blur event when the document loses focus\n            // (e.g. switching tabs in the browser), but we don't want to show the\n            // tooltip again when the document gets focus back. Handle this case by\n            // checking if the blurred element is still the document's activeElement,\n            // and ignoring when it next gets focus back.\n            // See https://github.com/microsoft/fluentui/issues/13541\n            _this._ignoreNextFocusEvent = ((_a = getDocumentEx(_this.context)) === null || _a === void 0 ? void 0 : _a.activeElement) === ev.target;\n            _this._dismissTimerId = _this._async.setTimeout(function () {\n                _this._hideTooltip();\n            }, 0);\n        };\n        // Show Tooltip\n        _this._onTooltipMouseEnter = function (ev) {\n            var _a;\n            var overflowMode = (_a = _this.props, _a.overflowMode), delay = _a.delay;\n            var doc = getDocumentEx(_this.context);\n            if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== _this) {\n                TooltipHostBase._currentVisibleTooltip.dismiss();\n            }\n            TooltipHostBase._currentVisibleTooltip = _this;\n            if (overflowMode !== undefined) {\n                var overflowElement = _this._getTargetElement();\n                if (overflowElement && !hasOverflow(overflowElement)) {\n                    return;\n                }\n            }\n            if (ev.target && portalContainsElement(ev.target, _this._getTargetElement(), doc)) {\n                // Do not show tooltip when target is inside a portal relative to TooltipHost.\n                return;\n            }\n            _this._clearDismissTimer();\n            _this._clearOpenTimer();\n            if (delay !== TooltipDelay.zero) {\n                var delayTime = _this._getDelayTime(delay); // non-null assertion because we set it in `defaultProps`\n                _this._openTimerId = _this._async.setTimeout(function () {\n                    _this._toggleTooltip(true);\n                }, delayTime);\n            }\n            else {\n                _this._toggleTooltip(true);\n            }\n        };\n        // Hide Tooltip\n        _this._onTooltipMouseLeave = function (ev) {\n            var closeDelay = _this.props.closeDelay;\n            _this._clearDismissTimer();\n            _this._clearOpenTimer();\n            if (closeDelay) {\n                _this._dismissTimerId = _this._async.setTimeout(function () {\n                    _this._toggleTooltip(false);\n                }, closeDelay);\n            }\n            else {\n                _this._toggleTooltip(false);\n            }\n            if (TooltipHostBase._currentVisibleTooltip === _this) {\n                TooltipHostBase._currentVisibleTooltip = undefined;\n            }\n        };\n        _this._onTooltipKeyDown = function (ev) {\n            // eslint-disable-next-line deprecation/deprecation\n            if ((ev.which === KeyCodes.escape || ev.ctrlKey) && _this.state.isTooltipVisible) {\n                _this._hideTooltip();\n                ev.stopPropagation();\n            }\n        };\n        _this._clearDismissTimer = function () {\n            _this._async.clearTimeout(_this._dismissTimerId);\n        };\n        _this._clearOpenTimer = function () {\n            _this._async.clearTimeout(_this._openTimerId);\n        };\n        // Hide Tooltip\n        _this._hideTooltip = function () {\n            _this._clearOpenTimer();\n            _this._clearDismissTimer();\n            _this._toggleTooltip(false);\n        };\n        _this._toggleTooltip = function (isTooltipVisible) {\n            if (_this.state.isTooltipVisible !== isTooltipVisible) {\n                _this.setState({ isTooltipVisible: isTooltipVisible }, function () { return _this.props.onTooltipToggle && _this.props.onTooltipToggle(isTooltipVisible); });\n            }\n        };\n        _this._getDelayTime = function (delay) {\n            switch (delay) {\n                case TooltipDelay.medium:\n                    return 300;\n                case TooltipDelay.long:\n                    return 500;\n                default:\n                    return 0;\n            }\n        };\n        initializeComponentRef(_this);\n        _this.state = {\n            isAriaPlaceholderRendered: false,\n            isTooltipVisible: false,\n        };\n        return _this;\n    }\n    // Render\n    TooltipHostBase.prototype.render = function () {\n        var _a, _b;\n        var calloutProps = (_a = this.props, _a.calloutProps), children = _a.children, content = _a.content, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, className = _a.hostClassName, id = _a.id, \n        // eslint-disable-next-line deprecation/deprecation\n        setAriaDescribedBy = (_b = _a.setAriaDescribedBy, _b === void 0 ? true : _b), tooltipProps = _a.tooltipProps, styles = _a.styles, theme = _a.theme;\n        this._classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n        });\n        var isTooltipVisible = this.state.isTooltipVisible;\n        var tooltipId = id || this._defaultTooltipId;\n        var tooltipRenderProps = __assign(__assign({ id: \"\".concat(tooltipId, \"--tooltip\"), content: content, targetElement: this._getTargetElement(), directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL, calloutProps: assign({}, calloutProps, {\n                onDismiss: this._hideTooltip,\n                onFocus: this._onTooltipContentFocus,\n                onMouseEnter: this._onTooltipMouseEnter,\n                onMouseLeave: this._onTooltipMouseLeave,\n            }), onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave }, getNativeProps(this.props, divProperties, ['id'])), tooltipProps);\n        // Get the content of the tooltip for use in the hidden div used for screen readers\n        var tooltipContent = (tooltipProps === null || tooltipProps === void 0 ? void 0 : tooltipProps.onRenderContent)\n            ? tooltipProps.onRenderContent(tooltipRenderProps, function (props) { return ((props === null || props === void 0 ? void 0 : props.content) ? React.createElement(React.Fragment, null, props.content) : null); })\n            : content;\n        var showTooltip = isTooltipVisible && !!tooltipContent;\n        var ariaDescribedBy = setAriaDescribedBy && isTooltipVisible && !!tooltipContent ? tooltipId : undefined;\n        return (React.createElement(\"div\", __assign({ className: this._classNames.root, ref: this._tooltipHost }, { onFocusCapture: this._onTooltipFocus }, { onBlurCapture: this._onTooltipBlur }, { onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave, onKeyDown: this._onTooltipKeyDown, role: \"none\", \"aria-describedby\": ariaDescribedBy }),\n            children,\n            showTooltip && React.createElement(Tooltip, __assign({}, tooltipRenderProps)),\n            React.createElement(\"div\", { hidden: true, id: tooltipId, style: hiddenContentStyle }, tooltipContent)));\n    };\n    TooltipHostBase.prototype.componentDidMount = function () {\n        this._async = new Async(this);\n    };\n    TooltipHostBase.prototype.componentWillUnmount = function () {\n        if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip === this) {\n            TooltipHostBase._currentVisibleTooltip = undefined;\n        }\n        this._async.dispose();\n    };\n    TooltipHostBase.defaultProps = {\n        delay: TooltipDelay.medium,\n    };\n    TooltipHostBase.contextType = WindowContext;\n    return TooltipHostBase;\n}(React.Component));\n//# sourceMappingURL=TooltipHost.base.js.map","import { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport { mergeStylesRenderer } from './styleRenderers/mergeStylesRenderer';\nimport { useEffect } from 'react';\nvar graphGet = function (graphNode, _a) {\n    var _b, _c, _d;\n    var windowId = _a[0], id = _a[1], theme = _a[2];\n    return (_d = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme)) === null || _d === void 0 ? void 0 : _d.classMap;\n};\nvar graphSet = function (graphNode, _a, classMap) {\n    var _b, _c;\n    var windowId = _a[0], id = _a[1], theme = _a[2];\n    var windowNode = (_b = graphNode.get(windowId)) !== null && _b !== void 0 ? _b : new Map();\n    graphNode.set(windowId, windowNode);\n    var idNode = (_c = windowNode.get(id)) !== null && _c !== void 0 ? _c : new Map();\n    windowNode.set(id, idNode);\n    idNode.set(theme, { classMap: classMap, refCount: 0 });\n};\nfunction graphRef(graphNode, _a) {\n    var _b, _c;\n    var windowId = _a[0], id = _a[1], theme = _a[2];\n    var node = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme);\n    if (node) {\n        node.refCount++;\n    }\n}\nfunction graphDeref(graphNode, _a) {\n    var _b, _c, _d, _e, _f, _g, _h, _j;\n    var windowId = _a[0], id = _a[1], theme = _a[2];\n    var node = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme);\n    if (node) {\n        node.refCount--;\n        if (node.refCount === 0) {\n            (_e = (_d = graphNode.get(windowId)) === null || _d === void 0 ? void 0 : _d.get(id)) === null || _e === void 0 ? void 0 : _e.delete(theme);\n            if (((_g = (_f = graphNode.get(windowId)) === null || _f === void 0 ? void 0 : _f.get(id)) === null || _g === void 0 ? void 0 : _g.size) === 0) {\n                (_h = graphNode.get(windowId)) === null || _h === void 0 ? void 0 : _h.delete(id);\n                if (((_j = graphNode.get(windowId)) === null || _j === void 0 ? void 0 : _j.size) === 0) {\n                    graphNode.delete(windowId);\n                }\n            }\n        }\n    }\n}\n/**\n * Registers a css object, optionally as a function of the theme.\n *\n * @param styleOrFunction - Either a css javascript object, or a function which takes in `ITheme`\n * and returns a css javascript object.\n *\n * @deprecated Use `mergeStyles` instead for v8 related code. We will be using a new implementation of `makeStyles` in\n * future versions of the library.\n */\nexport function makeStyles(styleOrFunction) {\n    // Create graph of inputs to map to output.\n    var graph = new Map();\n    // Retain a dictionary of window ids we're tracking\n    var allWindows = new Set();\n    // cleanupMapEntries will\n    // 1. remove all the graph branches for the window,\n    // 2. remove the event listener,\n    // 3. delete the allWindows entry.\n    var cleanupMapEntries = function (ev) {\n        var win = ev.currentTarget;\n        var winId = win.__id__;\n        graph.delete(winId);\n        win.removeEventListener('unload', cleanupMapEntries);\n        allWindows.delete(winId);\n    };\n    // eslint-disable-next-line deprecation/deprecation\n    return function (options) {\n        if (options === void 0) { options = {}; }\n        var theme = options.theme;\n        var winId;\n        var win = useWindow();\n        if (win) {\n            win.__id__ = win.__id__ || getId();\n            winId = win.__id__;\n            if (!allWindows.has(winId)) {\n                allWindows.add(winId);\n                win.addEventListener('unload', cleanupMapEntries);\n            }\n        }\n        var contextualTheme = useTheme();\n        theme = theme || contextualTheme;\n        var renderer = mergeStylesRenderer;\n        var id = renderer.getId();\n        var path = [winId, id, theme];\n        var value = graphGet(graph, path);\n        // Don't keep around unused styles\n        useEffect(function () {\n            graphRef(graph, [winId, id, theme]);\n            return function () { return graphDeref(graph, [winId, id, theme]); };\n        }, [winId, id, theme]);\n        if (!value) {\n            var styles = isStyleFunction(styleOrFunction)\n                ? styleOrFunction(theme)\n                : styleOrFunction;\n            value = mergeStylesRenderer.renderStyles(styles, { targetWindow: win, rtl: !!theme.rtl });\n            graphSet(graph, path, value);\n        }\n        return value;\n    };\n}\nfunction isStyleFunction(styleOrFunction) {\n    return typeof styleOrFunction === 'function';\n}\n//# sourceMappingURL=makeStyles.js.map","import { PersonaInitialsColor } from './Persona.types';\n/**\n * Following colors are considered reserved and can only be set with overrides, so they are excluded from this set:\n * - `gray` and `black` can result in offensive persona coins with some initials combinations\n * - `red` often has a special meaning\n * - `transparent` is not intended to be used with typical initials due to accessibility issues;\n *   its primary use is for Facepile overflow buttons.\n */\nvar COLOR_SWATCHES_LOOKUP = [\n    PersonaInitialsColor.lightBlue,\n    PersonaInitialsColor.blue,\n    PersonaInitialsColor.darkBlue,\n    PersonaInitialsColor.teal,\n    PersonaInitialsColor.green,\n    PersonaInitialsColor.darkGreen,\n    PersonaInitialsColor.lightPink,\n    PersonaInitialsColor.pink,\n    PersonaInitialsColor.magenta,\n    PersonaInitialsColor.purple,\n    PersonaInitialsColor.orange,\n    PersonaInitialsColor.lightRed,\n    PersonaInitialsColor.darkRed,\n    PersonaInitialsColor.violet,\n    PersonaInitialsColor.gold,\n    PersonaInitialsColor.burgundy,\n    PersonaInitialsColor.warmGray,\n    PersonaInitialsColor.cyan,\n    PersonaInitialsColor.rust,\n    PersonaInitialsColor.coolGray,\n];\nvar COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\nfunction getInitialsColorFromName(displayName) {\n    var color = PersonaInitialsColor.blue;\n    if (!displayName) {\n        return color;\n    }\n    var hashCode = 0;\n    for (var iLen = displayName.length - 1; iLen >= 0; iLen--) {\n        var ch = displayName.charCodeAt(iLen);\n        var shift = iLen % 8;\n        // eslint-disable-next-line no-bitwise\n        hashCode ^= (ch << shift) + (ch >> (8 - shift));\n    }\n    color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n    return color;\n}\nfunction personaInitialsColorToHexCode(personaInitialsColor) {\n    switch (personaInitialsColor) {\n        case PersonaInitialsColor.lightBlue:\n            return '#4F6BED';\n        case PersonaInitialsColor.blue:\n            return '#0078D4';\n        case PersonaInitialsColor.darkBlue:\n            return '#004E8C';\n        case PersonaInitialsColor.teal:\n            return '#038387';\n        case PersonaInitialsColor.lightGreen:\n        case PersonaInitialsColor.green:\n            return '#498205';\n        case PersonaInitialsColor.darkGreen:\n            return '#0B6A0B';\n        case PersonaInitialsColor.lightPink:\n            return '#C239B3';\n        case PersonaInitialsColor.pink:\n            return '#E3008C';\n        case PersonaInitialsColor.magenta:\n            return '#881798';\n        case PersonaInitialsColor.purple:\n            return '#5C2E91';\n        case PersonaInitialsColor.orange:\n            return '#CA5010';\n        // eslint-disable-next-line deprecation/deprecation\n        case PersonaInitialsColor.red:\n            return '#EE1111';\n        case PersonaInitialsColor.lightRed:\n            return '#D13438';\n        case PersonaInitialsColor.darkRed:\n            return '#A4262C';\n        case PersonaInitialsColor.transparent:\n            return 'transparent';\n        case PersonaInitialsColor.violet:\n            return '#8764B8';\n        case PersonaInitialsColor.gold:\n            return '#986F0B';\n        case PersonaInitialsColor.burgundy:\n            return '#750B1C';\n        case PersonaInitialsColor.warmGray:\n            return '#7A7574';\n        case PersonaInitialsColor.cyan:\n            return '#005B70';\n        case PersonaInitialsColor.rust:\n            return '#8E562E';\n        case PersonaInitialsColor.coolGray:\n            return '#69797E';\n        // eslint-disable-next-line deprecation/deprecation\n        case PersonaInitialsColor.black:\n            return '#1D1D1D';\n        case PersonaInitialsColor.gray:\n            return '#393939';\n    }\n}\n/** @deprecated Use `getPersonaInitialsColor` */\nexport function initialsColorPropToColorCode(props) {\n    return getPersonaInitialsColor(props);\n}\n/**\n * Gets the hex color string (prefixed with #) for the given persona props.\n * This is the logic used internally by the Persona control.\n * @param props - Current persona props\n * @returns Hex color string prefixed with #\n */\nexport function getPersonaInitialsColor(props) {\n    // eslint-disable-next-line deprecation/deprecation\n    var primaryText = props.primaryText, text = props.text;\n    var initialsColor = props.initialsColor;\n    var initialsColorCode;\n    if (typeof initialsColor === 'string') {\n        initialsColorCode = initialsColor;\n    }\n    else {\n        initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(text || primaryText);\n        initialsColorCode = personaInitialsColorToHexCode(initialsColor);\n    }\n    return initialsColorCode;\n}\n//# sourceMappingURL=PersonaInitialsColor.js.map","var _a;\nimport { PersonaPresence, PersonaSize } from './Persona.types';\n// Persona Sizes\nexport var personaSize;\n(function (personaSize) {\n    personaSize.size8 = '20px';\n    // TODO: remove in a future major release as it's deprecated.\n    personaSize.size10 = '20px';\n    // TODO: remove in a future major release as it's deprecated.\n    personaSize.size16 = '16px';\n    personaSize.size24 = '24px';\n    // TODO: remove in a future major release as it's deprecated.\n    personaSize.size28 = '28px';\n    personaSize.size32 = '32px';\n    personaSize.size40 = '40px';\n    personaSize.size48 = '48px';\n    personaSize.size56 = '56px';\n    personaSize.size72 = '72px';\n    personaSize.size100 = '100px';\n    personaSize.size120 = '120px';\n})(personaSize || (personaSize = {}));\n// Persona Presence Sizes\nexport var personaPresenceSize;\n(function (personaPresenceSize) {\n    personaPresenceSize.size6 = '6px';\n    personaPresenceSize.size8 = '8px';\n    personaPresenceSize.size12 = '12px';\n    personaPresenceSize.size16 = '16px';\n    personaPresenceSize.size20 = '20px';\n    personaPresenceSize.size28 = '28px';\n    personaPresenceSize.size32 = '32px';\n    /**\n     * @deprecated This is now unused\n     */\n    personaPresenceSize.border = '2px';\n})(personaPresenceSize || (personaPresenceSize = {}));\n// TODO: remove the deprecated parts in a future major release.\nexport var sizeBoolean = function (size) { return ({\n    isSize8: size === PersonaSize.size8,\n    /* eslint-disable deprecation/deprecation */\n    isSize10: size === PersonaSize.size10 || size === PersonaSize.tiny,\n    isSize16: size === PersonaSize.size16,\n    isSize24: size === PersonaSize.size24 || size === PersonaSize.extraExtraSmall,\n    isSize28: size === PersonaSize.size28 || size === PersonaSize.extraSmall,\n    isSize32: size === PersonaSize.size32,\n    isSize40: size === PersonaSize.size40 || size === PersonaSize.small,\n    isSize48: size === PersonaSize.size48 || size === PersonaSize.regular,\n    isSize56: size === PersonaSize.size56,\n    isSize72: size === PersonaSize.size72 || size === PersonaSize.large,\n    isSize100: size === PersonaSize.size100 || size === PersonaSize.extraLarge,\n    isSize120: size === PersonaSize.size120,\n}); };\nexport var sizeToPixels = (_a = {},\n    // Old deprecated sizes\n    _a[PersonaSize.tiny] = 10,\n    _a[PersonaSize.extraExtraSmall] = 24,\n    _a[PersonaSize.extraSmall] = 28,\n    _a[PersonaSize.small] = 40,\n    _a[PersonaSize.regular] = 48,\n    _a[PersonaSize.large] = 72,\n    _a[PersonaSize.extraLarge] = 100,\n    // New sizes\n    _a[PersonaSize.size8] = 8,\n    _a[PersonaSize.size10] = 10,\n    _a[PersonaSize.size16] = 16,\n    _a[PersonaSize.size24] = 24,\n    _a[PersonaSize.size28] = 28,\n    /* eslint-enable deprecation/deprecation */\n    _a[PersonaSize.size32] = 32,\n    _a[PersonaSize.size40] = 40,\n    _a[PersonaSize.size48] = 48,\n    _a[PersonaSize.size56] = 56,\n    _a[PersonaSize.size72] = 72,\n    _a[PersonaSize.size100] = 100,\n    _a[PersonaSize.size120] = 120,\n    _a);\nexport var presenceBoolean = function (presence) { return ({\n    isAvailable: presence === PersonaPresence.online,\n    isAway: presence === PersonaPresence.away,\n    isBlocked: presence === PersonaPresence.blocked,\n    isBusy: presence === PersonaPresence.busy,\n    isDoNotDisturb: presence === PersonaPresence.dnd,\n    isOffline: presence === PersonaPresence.offline,\n}); };\n//# sourceMappingURL=PersonaConsts.js.map","/**\n * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n * {@docCategory Icon}\n */\nexport var IconType;\n(function (IconType) {\n    /**\n     * Render using the fabric icon font.\n     * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n     */\n    IconType[IconType[\"default\"] = 0] = \"default\";\n    /**\n     * Render using an image, where imageProps would be used.\n     * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n     */\n    IconType[IconType[\"image\"] = 1] = \"image\";\n    /**\n     * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n     */\n    IconType[IconType[\"Default\"] = 100000] = \"Default\";\n    /**\n     * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n     */\n    IconType[IconType[\"Image\"] = 100001] = \"Image\";\n})(IconType || (IconType = {}));\n//# sourceMappingURL=Icon.types.js.map","import * as React from 'react';\nimport { css, findIndex } from '@fluentui/utilities';\nimport { DAYS_IN_WEEK } from '@fluentui/date-time-utilities';\nexport var CalendarMonthHeaderRow = function (props) {\n    var showWeekNumbers = props.showWeekNumbers, strings = props.strings, firstDayOfWeek = props.firstDayOfWeek, allFocusable = props.allFocusable, weeksToShow = props.weeksToShow, weeks = props.weeks, classNames = props.classNames;\n    var dayLabels = strings.shortDays.slice();\n    var firstOfMonthIndex = findIndex(weeks[1], function (day) { return day.originalDate.getDate() === 1; });\n    if (weeksToShow === 1 && firstOfMonthIndex >= 0) {\n        // if we only show one week, replace the header with short month name\n        var firstOfMonthIndexOffset = (firstOfMonthIndex + firstDayOfWeek) % DAYS_IN_WEEK;\n        dayLabels[firstOfMonthIndexOffset] = strings.shortMonths[weeks[1][firstOfMonthIndex].originalDate.getMonth()];\n    }\n    return (React.createElement(\"tr\", null,\n        showWeekNumbers && React.createElement(\"th\", { className: classNames.dayCell }),\n        dayLabels.map(function (val, index) {\n            var i = (index + firstDayOfWeek) % DAYS_IN_WEEK;\n            var label = strings.days[i];\n            return (React.createElement(\"th\", { className: css(classNames.dayCell, classNames.weekDayLabelCell), scope: \"col\", key: dayLabels[i] + ' ' + index, title: label, \"aria-label\": label, \"data-is-focusable\": allFocusable ? true : undefined }, dayLabels[i]));\n        })));\n};\n//# sourceMappingURL=CalendarMonthHeaderRow.js.map","import { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-TooltipHost',\n    ariaPlaceholder: 'ms-TooltipHost-aria-placeholder',\n};\nexport var getStyles = function (props) {\n    var className = props.className, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            {\n                display: 'inline',\n            },\n            className,\n        ],\n    };\n};\n//# sourceMappingURL=TooltipHost.styles.js.map","import { styled } from '../../Utilities';\nimport { LabelBase } from './Label.base';\nimport { getStyles } from './Label.styles';\nexport var Label = styled(LabelBase, getStyles, undefined, {\n    scope: 'Label',\n});\n//# sourceMappingURL=Label.js.map","import { getGlobalClassNames, HighContrastSelector } from '../../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-ShimmerGap-root',\n};\nexport function getStyles(props) {\n    var _a;\n    // eslint-disable-next-line deprecation/deprecation\n    var height = props.height, borderStyle = props.borderStyle, theme = props.theme;\n    var semanticColors = theme.semanticColors;\n    var globalClassNames = getGlobalClassNames(GlobalClassNames, theme);\n    var borderStyles = borderStyle || {};\n    return {\n        root: [\n            globalClassNames.root,\n            theme.fonts.medium,\n            {\n                backgroundColor: semanticColors.bodyBackground,\n                height: \"\".concat(height, \"px\"),\n                boxSizing: 'content-box',\n                borderTopStyle: 'solid',\n                borderBottomStyle: 'solid',\n                borderColor: semanticColors.bodyBackground,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        backgroundColor: 'Window',\n                        borderColor: 'Window',\n                    },\n                    _a),\n            },\n            borderStyles,\n        ],\n    };\n}\n//# sourceMappingURL=ShimmerGap.styles.js.map","import { getGlobalClassNames, HighContrastSelector } from '../../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-ShimmerLine-root',\n    topLeftCorner: 'ms-ShimmerLine-topLeftCorner',\n    topRightCorner: 'ms-ShimmerLine-topRightCorner',\n    bottomLeftCorner: 'ms-ShimmerLine-bottomLeftCorner',\n    bottomRightCorner: 'ms-ShimmerLine-bottomRightCorner',\n};\nexport function getStyles(props) {\n    var _a;\n    // eslint-disable-next-line deprecation/deprecation\n    var height = props.height, borderStyle = props.borderStyle, theme = props.theme;\n    var semanticColors = theme.semanticColors;\n    var globalClassNames = getGlobalClassNames(GlobalClassNames, theme);\n    var borderStyles = borderStyle || {};\n    var sharedCornerStyles = {\n        position: 'absolute',\n        fill: semanticColors.bodyBackground,\n    };\n    return {\n        root: [\n            globalClassNames.root,\n            theme.fonts.medium,\n            {\n                height: \"\".concat(height, \"px\"),\n                boxSizing: 'content-box',\n                position: 'relative',\n                borderTopStyle: 'solid',\n                borderBottomStyle: 'solid',\n                borderColor: semanticColors.bodyBackground,\n                borderWidth: 0,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        borderColor: 'Window',\n                        selectors: {\n                            '> *': {\n                                fill: 'Window',\n                            },\n                        },\n                    },\n                    _a),\n            },\n            borderStyles,\n        ],\n        topLeftCorner: [\n            globalClassNames.topLeftCorner,\n            {\n                top: '0',\n                left: '0',\n            },\n            sharedCornerStyles,\n        ],\n        topRightCorner: [\n            globalClassNames.topRightCorner,\n            {\n                top: '0',\n                right: '0',\n            },\n            sharedCornerStyles,\n        ],\n        bottomRightCorner: [\n            globalClassNames.bottomRightCorner,\n            {\n                bottom: '0',\n                right: '0',\n            },\n            sharedCornerStyles,\n        ],\n        bottomLeftCorner: [\n            globalClassNames.bottomLeftCorner,\n            {\n                bottom: '0',\n                left: '0',\n            },\n            sharedCornerStyles,\n        ],\n    };\n}\n//# sourceMappingURL=ShimmerLine.styles.js.map","import { __assign } from \"tslib\";\nimport { getGlobalClassNames, getHighContrastNoAdjustStyle, HighContrastSelector, hiddenContentStyle, } from '../../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-Suggestions',\n    suggestionsContainer: 'ms-Suggestions-container',\n    title: 'ms-Suggestions-title',\n    forceResolveButton: 'ms-forceResolve-button',\n    searchForMoreButton: 'ms-SearchMore-button',\n    spinner: 'ms-Suggestions-spinner',\n    noSuggestions: 'ms-Suggestions-none',\n    suggestionsAvailable: 'ms-Suggestions-suggestionsAvailable',\n    isSelected: 'is-selected',\n};\nexport function getStyles(props) {\n    var _a;\n    var className = props.className, suggestionsClassName = props.suggestionsClassName, theme = props.theme, forceResolveButtonSelected = props.forceResolveButtonSelected, searchForMoreButtonSelected = props.searchForMoreButtonSelected;\n    var palette = theme.palette, semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var actionButtonStyles = {\n        backgroundColor: 'transparent',\n        border: 0,\n        cursor: 'pointer',\n        margin: 0,\n        paddingLeft: 8,\n        position: 'relative',\n        borderTop: \"1px solid \".concat(palette.neutralLight),\n        height: 40,\n        textAlign: 'left',\n        width: '100%',\n        fontSize: fonts.small.fontSize,\n        selectors: {\n            ':hover': {\n                backgroundColor: semanticColors.menuItemBackgroundPressed,\n                cursor: 'pointer',\n            },\n            ':focus, :active': {\n                backgroundColor: palette.themeLight,\n            },\n            '.ms-Button-icon': {\n                fontSize: fonts.mediumPlus.fontSize,\n                width: 25,\n            },\n            '.ms-Button-label': {\n                margin: '0 4px 0 9px',\n            },\n        },\n    };\n    var actionButtonSelectedStyles = {\n        backgroundColor: palette.themeLight,\n        selectors: (_a = {},\n            _a[HighContrastSelector] = __assign({ backgroundColor: 'Highlight', borderColor: 'Highlight', color: 'HighlightText' }, getHighContrastNoAdjustStyle()),\n            _a[':after'] = {\n                pointerEvents: 'none',\n                content: '\"\"',\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                bottom: 0,\n                right: 0,\n                border: \"1px solid \".concat(theme.semanticColors.focusBorder),\n            },\n            _a),\n    };\n    return {\n        root: [\n            classNames.root,\n            {\n                minWidth: 260,\n            },\n            className,\n        ],\n        suggestionsContainer: [\n            classNames.suggestionsContainer,\n            {\n                overflowY: 'auto',\n                overflowX: 'hidden',\n                maxHeight: 300,\n                transform: 'translate3d(0,0,0)',\n            },\n            suggestionsClassName,\n        ],\n        title: [\n            classNames.title,\n            {\n                padding: '0 12px',\n                fontSize: fonts.small.fontSize,\n                color: palette.themePrimary,\n                lineHeight: 40,\n                borderBottom: \"1px solid \".concat(semanticColors.menuItemBackgroundPressed),\n            },\n        ],\n        forceResolveButton: [\n            classNames.forceResolveButton,\n            actionButtonStyles,\n            forceResolveButtonSelected && [classNames.isSelected, actionButtonSelectedStyles],\n        ],\n        searchForMoreButton: [\n            classNames.searchForMoreButton,\n            actionButtonStyles,\n            searchForMoreButtonSelected && [classNames.isSelected, actionButtonSelectedStyles],\n        ],\n        noSuggestions: [\n            classNames.noSuggestions,\n            {\n                textAlign: 'center',\n                color: palette.neutralSecondary,\n                fontSize: fonts.small.fontSize,\n                lineHeight: 30,\n            },\n        ],\n        suggestionsAvailable: [classNames.suggestionsAvailable, hiddenContentStyle],\n        subComponentStyles: {\n            spinner: {\n                root: [\n                    classNames.spinner,\n                    {\n                        margin: '5px 0',\n                        paddingLeft: 14,\n                        textAlign: 'left',\n                        whiteSpace: 'nowrap',\n                        lineHeight: 20,\n                        fontSize: fonts.small.fontSize,\n                    },\n                ],\n                circle: {\n                    display: 'inline-block',\n                    verticalAlign: 'middle',\n                },\n                label: {\n                    display: 'inline-block',\n                    verticalAlign: 'middle',\n                    margin: '0 10px 0 16px',\n                },\n            },\n        },\n    };\n}\n//# sourceMappingURL=Suggestions.styles.js.map","import { __assign } from \"tslib\";\nimport { normalize, FontSizes, FontWeights, getFocusStyle, AnimationStyles, HighContrastSelector, } from '@fluentui/style-utilities';\nexport var styles = function (props) {\n    var _a;\n    var className = props.className, theme = props.theme, headerIsClickable = props.headerIsClickable, showWeekNumbers = props.showWeekNumbers;\n    var palette = theme.palette;\n    var disabledStyle = {\n        selectors: (_a = {\n                '&, &:disabled, & button': {\n                    color: palette.neutralTertiaryAlt,\n                    pointerEvents: 'none',\n                }\n            },\n            _a[HighContrastSelector] = {\n                color: 'GrayText',\n                forcedColorAdjust: 'none',\n            },\n            _a),\n    };\n    return {\n        root: [\n            normalize,\n            {\n                width: 196,\n                padding: 12,\n                boxSizing: 'content-box',\n            },\n            showWeekNumbers && {\n                width: 226,\n            },\n            className,\n        ],\n        header: {\n            position: 'relative',\n            display: 'inline-flex',\n            height: 28,\n            lineHeight: 44,\n            width: '100%',\n        },\n        monthAndYear: [\n            getFocusStyle(theme, { inset: 1 }),\n            __assign(__assign({}, AnimationStyles.fadeIn200), { alignItems: 'center', fontSize: FontSizes.medium, fontFamily: 'inherit', color: palette.neutralPrimary, display: 'inline-block', flexGrow: 1, fontWeight: FontWeights.semibold, padding: '0 4px 0 10px', border: 'none', backgroundColor: 'transparent', borderRadius: 2, lineHeight: 28, overflow: 'hidden', whiteSpace: 'nowrap', textAlign: 'left', textOverflow: 'ellipsis' }),\n            headerIsClickable && {\n                selectors: {\n                    '&:hover': {\n                        cursor: 'pointer',\n                        background: palette.neutralLight,\n                        color: palette.black,\n                    },\n                },\n            },\n        ],\n        monthComponents: {\n            display: 'inline-flex',\n            alignSelf: 'flex-end',\n        },\n        headerIconButton: [\n            getFocusStyle(theme, { inset: -1 }),\n            {\n                width: 28,\n                height: 28,\n                display: 'block',\n                textAlign: 'center',\n                lineHeight: 28,\n                fontSize: FontSizes.small,\n                fontFamily: 'inherit',\n                color: palette.neutralPrimary,\n                borderRadius: 2,\n                position: 'relative',\n                backgroundColor: 'transparent',\n                border: 'none',\n                padding: 0,\n                overflow: 'visible',\n                selectors: {\n                    '&:hover': {\n                        color: palette.neutralDark,\n                        backgroundColor: palette.neutralLight,\n                        cursor: 'pointer',\n                        outline: '1px solid transparent',\n                    },\n                },\n            },\n        ],\n        disabledStyle: disabledStyle,\n    };\n};\n//# sourceMappingURL=CalendarDay.styles.js.map","import { styled } from '../../Utilities';\nimport { LayerBase } from './Layer.base';\nimport { getStyles } from './Layer.styles';\nexport var Layer = styled(LayerBase, getStyles, undefined, {\n    scope: 'Layer',\n    fields: ['hostId', 'theme', 'styles'],\n});\n//# sourceMappingURL=Layer.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { format } from '@fluentui/utilities';\nimport { getWeekNumbersInMonth } from '@fluentui/date-time-utilities';\nimport { CalendarGridDayCell } from './CalendarGridDayCell';\nexport var CalendarGridRow = function (props) {\n    var classNames = props.classNames, week = props.week, weeks = props.weeks, weekIndex = props.weekIndex, rowClassName = props.rowClassName, ariaRole = props.ariaRole, showWeekNumbers = props.showWeekNumbers, firstDayOfWeek = props.firstDayOfWeek, firstWeekOfYear = props.firstWeekOfYear, navigatedDate = props.navigatedDate, strings = props.strings;\n    var weekNumbers = showWeekNumbers\n        ? getWeekNumbersInMonth(weeks.length, firstDayOfWeek, firstWeekOfYear, navigatedDate)\n        : null;\n    var titleString = weekNumbers\n        ? strings.weekNumberFormatString && format(strings.weekNumberFormatString, weekNumbers[weekIndex])\n        : '';\n    return (React.createElement(\"tr\", { role: ariaRole, className: rowClassName, key: weekIndex + '_' + week[0].key },\n        showWeekNumbers && weekNumbers && (React.createElement(\"th\", { className: classNames.weekNumberCell, key: weekIndex, title: titleString, \"aria-label\": titleString, scope: \"row\" },\n            React.createElement(\"span\", null, weekNumbers[weekIndex]))),\n        week.map(function (day, dayIndex) { return (React.createElement(CalendarGridDayCell, __assign({}, props, { key: day.key, day: day, dayIndex: dayIndex }))); })));\n};\n//# sourceMappingURL=CalendarGridRow.js.map","export { DirectionalHint } from '../../common/DirectionalHint';\n/**\n * {@docCategory ContextualMenu}\n */\nexport var ContextualMenuItemType;\n(function (ContextualMenuItemType) {\n    ContextualMenuItemType[ContextualMenuItemType[\"Normal\"] = 0] = \"Normal\";\n    ContextualMenuItemType[ContextualMenuItemType[\"Divider\"] = 1] = \"Divider\";\n    ContextualMenuItemType[ContextualMenuItemType[\"Header\"] = 2] = \"Header\";\n    ContextualMenuItemType[ContextualMenuItemType[\"Section\"] = 3] = \"Section\";\n})(ContextualMenuItemType || (ContextualMenuItemType = {}));\n//# sourceMappingURL=ContextualMenu.types.js.map","/**\n * Describes the possible types for shimmer elements used.\n * {@docCategory Shimmer}\n */\nexport var ShimmerElementType;\n(function (ShimmerElementType) {\n    /**\n     * Line element type\n     */\n    ShimmerElementType[ShimmerElementType[\"line\"] = 1] = \"line\";\n    /**\n     * Circle element type\n     */\n    ShimmerElementType[ShimmerElementType[\"circle\"] = 2] = \"circle\";\n    /**\n     * Gap element type\n     */\n    ShimmerElementType[ShimmerElementType[\"gap\"] = 3] = \"gap\";\n})(ShimmerElementType || (ShimmerElementType = {}));\n/**\n * Describes the default heights for shimmer elements when omitted in implementation.\n * {@docCategory Shimmer}\n */\nexport var ShimmerElementsDefaultHeights;\n(function (ShimmerElementsDefaultHeights) {\n    /**\n     * Default height of the line element when not provided by user: 16px\n     */\n    ShimmerElementsDefaultHeights[ShimmerElementsDefaultHeights[\"line\"] = 16] = \"line\";\n    /**\n     * Default height of the gap element when not provided by user: 16px\n     */\n    ShimmerElementsDefaultHeights[ShimmerElementsDefaultHeights[\"gap\"] = 16] = \"gap\";\n    /**\n     * Default height of the circle element when not provided by user: 24px\n     */\n    ShimmerElementsDefaultHeights[ShimmerElementsDefaultHeights[\"circle\"] = 24] = \"circle\";\n})(ShimmerElementsDefaultHeights || (ShimmerElementsDefaultHeights = {}));\n//# sourceMappingURL=Shimmer.types.js.map","import { concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nvar DEFAULT_BUTTON_MIN_HEIGHT = '32px';\nvar DEFAULT_BUTTON_MIN_WIDTH = '80px';\nexport var getStyles = memoizeFunction(function (theme, customStyles, primary) {\n    var baseButtonStyles = getBaseButtonStyles(theme);\n    var splitButtonStyles = getSplitButtonStyles(theme);\n    var defaultButtonStyles = {\n        root: {\n            minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n            minHeight: DEFAULT_BUTTON_MIN_HEIGHT,\n        },\n        label: {\n            fontWeight: FontWeights.semibold,\n        },\n    };\n    return concatStyleSets(baseButtonStyles, defaultButtonStyles, primary ? primaryStyles(theme) : standardStyles(theme), splitButtonStyles, customStyles);\n});\n//# sourceMappingURL=DefaultButton.styles.js.map","import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, shallowCompare } from '../../../Utilities';\nvar ContextualMenuItemWrapper = /** @class */ (function (_super) {\n    __extends(ContextualMenuItemWrapper, _super);\n    function ContextualMenuItemWrapper(props) {\n        var _this = _super.call(this, props) || this;\n        _this._onItemMouseEnter = function (ev) {\n            var _a = _this.props, item = _a.item, onItemMouseEnter = _a.onItemMouseEnter;\n            if (onItemMouseEnter) {\n                onItemMouseEnter(item, ev, ev.currentTarget);\n            }\n        };\n        _this._onItemClick = function (ev) {\n            var _a = _this.props, item = _a.item, onItemClickBase = _a.onItemClickBase;\n            if (onItemClickBase) {\n                onItemClickBase(item, ev, ev.currentTarget);\n            }\n        };\n        _this._onItemMouseLeave = function (ev) {\n            var _a = _this.props, item = _a.item, onItemMouseLeave = _a.onItemMouseLeave;\n            if (onItemMouseLeave) {\n                onItemMouseLeave(item, ev);\n            }\n        };\n        _this._onItemKeyDown = function (ev) {\n            var _a = _this.props, item = _a.item, onItemKeyDown = _a.onItemKeyDown;\n            if (onItemKeyDown) {\n                onItemKeyDown(item, ev);\n            }\n        };\n        _this._onItemMouseMove = function (ev) {\n            var _a = _this.props, item = _a.item, onItemMouseMove = _a.onItemMouseMove;\n            if (onItemMouseMove) {\n                onItemMouseMove(item, ev, ev.currentTarget);\n            }\n        };\n        _this._getSubmenuTarget = function () {\n            return undefined;\n        };\n        initializeComponentRef(_this);\n        return _this;\n    }\n    ContextualMenuItemWrapper.prototype.shouldComponentUpdate = function (newProps) {\n        return !shallowCompare(newProps, this.props);\n    };\n    return ContextualMenuItemWrapper;\n}(React.Component));\nexport { ContextualMenuItemWrapper };\n//# sourceMappingURL=ContextualMenuItemWrapper.js.map","import { __assign } from \"tslib\";\nimport { keyframes, getGlobalClassNames, hiddenContentStyle, HighContrastSelector, getHighContrastNoAdjustStyle, } from '../../Styling';\nimport { getRTL, memoizeFunction } from '../../Utilities';\nvar GlobalClassNames = {\n    root: 'ms-Shimmer-container',\n    shimmerWrapper: 'ms-Shimmer-shimmerWrapper',\n    shimmerGradient: 'ms-Shimmer-shimmerGradient',\n    dataWrapper: 'ms-Shimmer-dataWrapper',\n};\nvar BACKGROUND_OFF_SCREEN_POSITION = '100%';\nvar shimmerAnimation = memoizeFunction(function () {\n    return keyframes({\n        '0%': {\n            transform: \"translateX(-\".concat(BACKGROUND_OFF_SCREEN_POSITION, \")\"),\n        },\n        '100%': {\n            transform: \"translateX(\".concat(BACKGROUND_OFF_SCREEN_POSITION, \")\"),\n        },\n    });\n});\nvar shimmerAnimationRTL = memoizeFunction(function () {\n    return keyframes({\n        '100%': {\n            transform: \"translateX(-\".concat(BACKGROUND_OFF_SCREEN_POSITION, \")\"),\n        },\n        '0%': {\n            transform: \"translateX(\".concat(BACKGROUND_OFF_SCREEN_POSITION, \")\"),\n        },\n    });\n});\nexport function getStyles(props) {\n    var _a;\n    var isDataLoaded = props.isDataLoaded, className = props.className, theme = props.theme, transitionAnimationInterval = props.transitionAnimationInterval, shimmerColor = props.shimmerColor, shimmerWaveColor = props.shimmerWaveColor, improveCSSPerformance = props.improveCSSPerformance;\n    var semanticColors = theme.semanticColors;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var isRTL = getRTL(theme);\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                position: 'relative',\n                height: 'auto',\n            },\n            className,\n        ],\n        shimmerWrapper: [\n            classNames.shimmerWrapper,\n            {\n                position: 'relative',\n                overflow: 'hidden',\n                transform: 'translateZ(0)',\n                backgroundColor: shimmerColor || semanticColors.disabledBackground,\n                transition: \"opacity \".concat(transitionAnimationInterval, \"ms\"),\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = __assign({ background: \"WindowText\\n                        linear-gradient(\\n                          to right,\\n                          transparent 0%,\\n                          Window 50%,\\n                          transparent 100%)\\n                        0 0 / 90% 100%\\n                        no-repeat\" }, getHighContrastNoAdjustStyle()),\n                    _a),\n            },\n            isDataLoaded && {\n                opacity: '0',\n                position: 'absolute',\n                top: '0',\n                bottom: '0',\n                left: '0',\n                right: '0',\n            },\n            improveCSSPerformance\n                ? {\n                    selectors: {\n                        '> div:last-child': {\n                            transform: 'translateZ(0)',\n                        },\n                    },\n                }\n                : {\n                    selectors: {\n                        '> *': {\n                            transform: 'translateZ(0)',\n                        },\n                    },\n                },\n        ],\n        shimmerGradient: [\n            classNames.shimmerGradient,\n            {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                background: \"\".concat(shimmerColor || semanticColors.disabledBackground, \"\\n                      linear-gradient(\\n                        to right,\\n                        \").concat(shimmerColor || semanticColors.disabledBackground, \" 0%,\\n                        \").concat(shimmerWaveColor || semanticColors.bodyDivider, \" 50%,\\n                        \").concat(shimmerColor || semanticColors.disabledBackground, \" 100%)\\n                      0 0 / 90% 100%\\n                      no-repeat\"),\n                transform: \"translateX(-\".concat(BACKGROUND_OFF_SCREEN_POSITION, \")\"),\n                animationDuration: '2s',\n                animationTimingFunction: 'ease-in-out',\n                animationDirection: 'normal',\n                animationIterationCount: 'infinite',\n                animationName: isRTL ? shimmerAnimationRTL() : shimmerAnimation(),\n            },\n        ],\n        dataWrapper: [\n            classNames.dataWrapper,\n            {\n                position: 'absolute',\n                top: '0',\n                bottom: '0',\n                left: '0',\n                right: '0',\n                opacity: '0',\n                background: 'none',\n                backgroundColor: 'transparent',\n                border: 'none',\n                transition: \"opacity \".concat(transitionAnimationInterval, \"ms\"),\n            },\n            isDataLoaded && {\n                opacity: '1',\n                position: 'static',\n            },\n        ],\n        screenReaderText: hiddenContentStyle,\n    };\n}\n//# sourceMappingURL=Shimmer.styles.js.map","import { styled } from '../../Utilities';\nimport { CommandBarBase } from './CommandBar.base';\nimport { getStyles } from './CommandBar.styles';\n// Create a CommandBar variant which uses these default styles and this styled subcomponent.\nexport var CommandBar = styled(CommandBarBase, getStyles, undefined, {\n    scope: 'CommandBar',\n});\n//# sourceMappingURL=CommandBar.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, css, allowScrollOnElement, allowOverscrollOnElement, getPropsWithDefaults, KeyCodes, elementContains, EventGroup, } from '../../Utilities';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nimport { animationDuration } from './Modal.styles';\nimport { Overlay } from '../../Overlay';\nimport { Layer } from '../../Layer';\nimport { Popup } from '../../Popup';\nimport { ResponsiveMode, useResponsiveMode } from '../../ResponsiveMode';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { Icon } from '../../Icon';\nimport { DraggableZone } from '../../utilities/DraggableZone/index';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport { useBoolean, useMergedRefs, useWarnings, useConst, useSetTimeout, useId, useUnmount, } from '@fluentui/react-hooks';\nvar ZERO = { x: 0, y: 0 };\nvar DEFAULT_PROPS = {\n    isOpen: false,\n    isDarkOverlay: true,\n    className: '',\n    containerClassName: '',\n    enableAriaHiddenSiblings: true,\n};\nvar getClassNames = classNamesFunction();\nvar getMoveDelta = function (ev) {\n    var delta = 10;\n    if (ev.shiftKey) {\n        if (!ev.ctrlKey) {\n            delta = 50;\n        }\n    }\n    else if (ev.ctrlKey) {\n        delta = 1;\n    }\n    return delta;\n};\nvar useComponentRef = function (props, focusTrapZone) {\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        focus: function () {\n            if (focusTrapZone.current) {\n                focusTrapZone.current.focus();\n            }\n        },\n    }); }, [focusTrapZone]);\n};\nexport var ModalBase = React.forwardRef(function (propsWithoutDefaults, ref) {\n    var _a, _b, _c, _d, _e;\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    var allowTouchBodyScroll = props.allowTouchBodyScroll, className = props.className, children = props.children, containerClassName = props.containerClassName, scrollableContentClassName = props.scrollableContentClassName, elementToFocusOnDismiss = props.elementToFocusOnDismiss, firstFocusableSelector = props.firstFocusableSelector, focusTrapZoneProps = props.focusTrapZoneProps, forceFocusInsideTrap = props.forceFocusInsideTrap, \n    // eslint-disable-next-line deprecation/deprecation\n    _f = props.disableRestoreFocus, \n    // eslint-disable-next-line deprecation/deprecation\n    disableRestoreFocus = _f === void 0 ? props.ignoreExternalFocusing : _f, isBlocking = props.isBlocking, isAlert = props.isAlert, isClickableOutsideFocusTrap = props.isClickableOutsideFocusTrap, isDarkOverlay = props.isDarkOverlay, onDismiss = props.onDismiss, layerProps = props.layerProps, overlay = props.overlay, isOpen = props.isOpen, titleAriaId = props.titleAriaId, styles = props.styles, subtitleAriaId = props.subtitleAriaId, theme = props.theme, topOffsetFixed = props.topOffsetFixed, responsiveMode = props.responsiveMode, \n    // eslint-disable-next-line deprecation/deprecation\n    onLayerDidMount = props.onLayerDidMount, isModeless = props.isModeless, dragOptions = props.dragOptions, onDismissed = props.onDismissed, \n    // eslint-disable-next-line deprecation/deprecation\n    enableAriaHiddenSiblings = props.enableAriaHiddenSiblings, popupProps = props.popupProps;\n    var rootRef = React.useRef(null);\n    var focusTrapZone = React.useRef(null);\n    var focusTrapZoneRef = useMergedRefs(focusTrapZone, focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.componentRef);\n    var focusTrapZoneElm = React.useRef(null);\n    var mergedRef = useMergedRefs(rootRef, ref);\n    var modalResponsiveMode = useResponsiveMode(mergedRef);\n    var focusTrapZoneId = useId('ModalFocusTrapZone', focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.id);\n    var win = useWindow();\n    var _g = useSetTimeout(), setTimeout = _g.setTimeout, clearTimeout = _g.clearTimeout;\n    var _h = React.useState(isOpen), isModalOpen = _h[0], setIsModalOpen = _h[1];\n    var _j = React.useState(isOpen), isVisible = _j[0], setIsVisible = _j[1];\n    var _k = React.useState(ZERO), coordinates = _k[0], setCoordinates = _k[1];\n    var _l = React.useState(), modalRectangleTop = _l[0], setModalRectangleTop = _l[1];\n    var _m = useBoolean(false), isModalMenuOpen = _m[0], _o = _m[1], toggleModalMenuOpen = _o.toggle, setModalMenuClose = _o.setFalse;\n    var internalState = useConst(function () { return ({\n        onModalCloseTimer: 0,\n        allowTouchBodyScroll: allowTouchBodyScroll,\n        scrollableContent: null,\n        lastSetCoordinates: ZERO,\n        events: new EventGroup({}),\n    }); });\n    var keepInBounds = (dragOptions || {}).keepInBounds;\n    var isAlertRole = isAlert !== null && isAlert !== void 0 ? isAlert : (isBlocking && !isModeless);\n    var layerClassName = layerProps === undefined ? '' : layerProps.className;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        containerClassName: containerClassName,\n        scrollableContentClassName: scrollableContentClassName,\n        isOpen: isOpen,\n        isVisible: isVisible,\n        hasBeenOpened: internalState.hasBeenOpened,\n        modalRectangleTop: modalRectangleTop,\n        topOffsetFixed: topOffsetFixed,\n        isModeless: isModeless,\n        layerClassName: layerClassName,\n        windowInnerHeight: win === null || win === void 0 ? void 0 : win.innerHeight,\n        isDefaultDragHandle: dragOptions && !dragOptions.dragHandleSelector,\n    });\n    var mergedLayerProps = __assign(__assign({ eventBubblingEnabled: false }, layerProps), { onLayerDidMount: layerProps && layerProps.onLayerDidMount ? layerProps.onLayerDidMount : onLayerDidMount, insertFirst: (layerProps === null || layerProps === void 0 ? void 0 : layerProps.insertFirst) || isModeless, className: classNames.layer });\n    // Allow the user to scroll within the modal but not on the body\n    var allowScrollOnModal = React.useCallback(function (elt) {\n        if (elt) {\n            if (internalState.allowTouchBodyScroll) {\n                allowOverscrollOnElement(elt, internalState.events);\n            }\n            else {\n                allowScrollOnElement(elt, internalState.events);\n            }\n        }\n        else {\n            internalState.events.off(internalState.scrollableContent);\n        }\n        internalState.scrollableContent = elt;\n    }, [internalState]);\n    var registerInitialModalPosition = function () {\n        var dialogMain = focusTrapZoneElm.current;\n        var modalRectangle = dialogMain === null || dialogMain === void 0 ? void 0 : dialogMain.getBoundingClientRect();\n        if (modalRectangle) {\n            if (topOffsetFixed) {\n                setModalRectangleTop(modalRectangle.top);\n            }\n            if (keepInBounds) {\n                // x/y are unavailable in IE, so use the equivalent left/top\n                internalState.minPosition = { x: -modalRectangle.left, y: -modalRectangle.top };\n                internalState.maxPosition = { x: modalRectangle.left, y: modalRectangle.top };\n            }\n        }\n    };\n    /**\n     * Clamps an axis to a specified min and max position.\n     *\n     * @param axis A string that represents the axis (x/y).\n     * @param position The position on the axis.\n     */\n    var getClampedAxis = React.useCallback(function (axis, position) {\n        var minPosition = internalState.minPosition, maxPosition = internalState.maxPosition;\n        if (keepInBounds && minPosition && maxPosition) {\n            position = Math.max(minPosition[axis], position);\n            position = Math.min(maxPosition[axis], position);\n        }\n        return position;\n    }, [keepInBounds, internalState]);\n    var handleModalClose = function () {\n        var _a;\n        internalState.lastSetCoordinates = ZERO;\n        setModalMenuClose();\n        internalState.isInKeyboardMoveMode = false;\n        setIsModalOpen(false);\n        setCoordinates(ZERO);\n        (_a = internalState.disposeOnKeyUp) === null || _a === void 0 ? void 0 : _a.call(internalState);\n        onDismissed === null || onDismissed === void 0 ? void 0 : onDismissed();\n    };\n    var handleDragStart = React.useCallback(function () {\n        setModalMenuClose();\n        internalState.isInKeyboardMoveMode = false;\n    }, [internalState, setModalMenuClose]);\n    var handleDrag = React.useCallback(function (ev, dragData) {\n        setCoordinates(function (prevValue) { return ({\n            x: getClampedAxis('x', prevValue.x + dragData.delta.x),\n            y: getClampedAxis('y', prevValue.y + dragData.delta.y),\n        }); });\n    }, [getClampedAxis]);\n    var handleDragStop = React.useCallback(function () {\n        if (focusTrapZone.current) {\n            focusTrapZone.current.focus();\n        }\n    }, []);\n    var handleEnterKeyboardMoveMode = function () {\n        // We need a global handleKeyDown event when we are in the move mode so that we can\n        // handle the key presses and the components inside the modal do not get the events\n        var handleKeyDown = function (ev) {\n            // eslint-disable-next-line deprecation/deprecation\n            if (ev.altKey && ev.ctrlKey && ev.keyCode === KeyCodes.space) {\n                // CTRL + ALT + SPACE is handled during keyUp\n                ev.preventDefault();\n                ev.stopPropagation();\n                return;\n            }\n            // eslint-disable-next-line deprecation/deprecation\n            var newLocal = ev.altKey || ev.keyCode === KeyCodes.escape;\n            if (isModalMenuOpen && newLocal) {\n                setModalMenuClose();\n            }\n            // eslint-disable-next-line deprecation/deprecation\n            if (internalState.isInKeyboardMoveMode && (ev.keyCode === KeyCodes.escape || ev.keyCode === KeyCodes.enter)) {\n                internalState.isInKeyboardMoveMode = false;\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            if (internalState.isInKeyboardMoveMode) {\n                var handledEvent = true;\n                var delta_1 = getMoveDelta(ev);\n                // eslint-disable-next-line deprecation/deprecation\n                switch (ev.keyCode) {\n                    /* eslint-disable no-fallthrough */\n                    case KeyCodes.escape:\n                        setCoordinates(internalState.lastSetCoordinates);\n                    case KeyCodes.enter: {\n                        // TODO: determine if fallthrough was intentional\n                        /* eslint-enable no-fallthrough */\n                        internalState.lastSetCoordinates = ZERO;\n                        // setIsInKeyboardMoveMode(false);\n                        break;\n                    }\n                    case KeyCodes.up: {\n                        setCoordinates(function (prevValue) { return ({ x: prevValue.x, y: getClampedAxis('y', prevValue.y - delta_1) }); });\n                        break;\n                    }\n                    case KeyCodes.down: {\n                        setCoordinates(function (prevValue) { return ({ x: prevValue.x, y: getClampedAxis('y', prevValue.y + delta_1) }); });\n                        break;\n                    }\n                    case KeyCodes.left: {\n                        setCoordinates(function (prevValue) { return ({ x: getClampedAxis('x', prevValue.x - delta_1), y: prevValue.y }); });\n                        break;\n                    }\n                    case KeyCodes.right: {\n                        setCoordinates(function (prevValue) { return ({ x: getClampedAxis('x', prevValue.x + delta_1), y: prevValue.y }); });\n                        break;\n                    }\n                    default: {\n                        handledEvent = false;\n                    }\n                }\n                if (handledEvent) {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            }\n        };\n        internalState.lastSetCoordinates = coordinates;\n        setModalMenuClose();\n        internalState.isInKeyboardMoveMode = true;\n        internalState.events.on(win, 'keydown', handleKeyDown, true /* useCapture */);\n        internalState.disposeOnKeyDown = function () {\n            internalState.events.off(win, 'keydown', handleKeyDown, true /* useCapture */);\n            internalState.disposeOnKeyDown = undefined;\n        };\n    };\n    var handleExitKeyboardMoveMode = function (ev) {\n        var _a, _b;\n        (_a = focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.onBlur) === null || _a === void 0 ? void 0 : _a.call(focusTrapZoneProps, ev);\n        internalState.lastSetCoordinates = ZERO;\n        internalState.isInKeyboardMoveMode = false;\n        (_b = internalState.disposeOnKeyDown) === null || _b === void 0 ? void 0 : _b.call(internalState);\n    };\n    var registerForKeyUp = function () {\n        var handleKeyUp = function (ev) {\n            // Needs to handle the CTRL + ALT + SPACE key during keyup due to FireFox bug:\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n            // eslint-disable-next-line deprecation/deprecation\n            if (ev.altKey && ev.ctrlKey && ev.keyCode === KeyCodes.space) {\n                if (elementContains(internalState.scrollableContent, ev.target)) {\n                    toggleModalMenuOpen();\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            }\n        };\n        if (!internalState.disposeOnKeyUp) {\n            internalState.events.on(win, 'keyup', handleKeyUp, true /* useCapture */);\n            internalState.disposeOnKeyUp = function () {\n                internalState.events.off(win, 'keyup', handleKeyUp, true /* useCapture */);\n                internalState.disposeOnKeyUp = undefined;\n            };\n        }\n    };\n    React.useEffect(function () {\n        clearTimeout(internalState.onModalCloseTimer);\n        // Opening the dialog\n        if (isOpen) {\n            // This must be done after the modal content has rendered\n            requestAnimationFrame(function () { return setTimeout(registerInitialModalPosition, 0); });\n            setIsModalOpen(true);\n            // Add a keyUp handler for all key up events once the dialog is open.\n            if (dragOptions) {\n                registerForKeyUp();\n            }\n            internalState.hasBeenOpened = true;\n            setIsVisible(true);\n        }\n        // Closing the dialog\n        if (!isOpen && isModalOpen) {\n            internalState.onModalCloseTimer = setTimeout(handleModalClose, parseFloat(animationDuration) * 1000);\n            setIsVisible(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if isModalOpen or isOpen mutates.\n    }, [isModalOpen, isOpen]);\n    useUnmount(function () {\n        internalState.events.dispose();\n    });\n    useComponentRef(props, focusTrapZone);\n    useDebugWarnings(props);\n    var modalContent = (React.createElement(FocusTrapZone, __assign({}, focusTrapZoneProps, { id: focusTrapZoneId, ref: focusTrapZoneElm, componentRef: focusTrapZoneRef, className: css(classNames.main, focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.className), elementToFocusOnDismiss: (_a = focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.elementToFocusOnDismiss) !== null && _a !== void 0 ? _a : elementToFocusOnDismiss, isClickableOutsideFocusTrap: (_b = focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.isClickableOutsideFocusTrap) !== null && _b !== void 0 ? _b : (isModeless || isClickableOutsideFocusTrap || !isBlocking), disableRestoreFocus: (_c = focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.disableRestoreFocus) !== null && _c !== void 0 ? _c : disableRestoreFocus, forceFocusInsideTrap: ((_d = focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.forceFocusInsideTrap) !== null && _d !== void 0 ? _d : forceFocusInsideTrap) && !isModeless, \n        // eslint-disable-next-line deprecation/deprecation\n        firstFocusableSelector: (focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.firstFocusableSelector) || firstFocusableSelector, focusPreviouslyFocusedInnerElement: (_e = focusTrapZoneProps === null || focusTrapZoneProps === void 0 ? void 0 : focusTrapZoneProps.focusPreviouslyFocusedInnerElement) !== null && _e !== void 0 ? _e : true, onBlur: internalState.isInKeyboardMoveMode ? handleExitKeyboardMoveMode : undefined }),\n        dragOptions && internalState.isInKeyboardMoveMode && (React.createElement(\"div\", { className: classNames.keyboardMoveIconContainer }, dragOptions.keyboardMoveIconProps ? (React.createElement(Icon, __assign({}, dragOptions.keyboardMoveIconProps))) : (React.createElement(Icon, { iconName: \"move\", className: classNames.keyboardMoveIcon })))),\n        React.createElement(\"div\", { ref: allowScrollOnModal, className: classNames.scrollableContent, \"data-is-scrollable\": true },\n            dragOptions && isModalMenuOpen && (React.createElement(dragOptions.menu, { items: [\n                    { key: 'move', text: dragOptions.moveMenuItemText, onClick: handleEnterKeyboardMoveMode },\n                    { key: 'close', text: dragOptions.closeMenuItemText, onClick: handleModalClose },\n                ], onDismiss: setModalMenuClose, alignTargetEdge: true, coverTarget: true, directionalHint: DirectionalHint.topLeftEdge, directionalHintFixed: true, shouldFocusOnMount: true, target: internalState.scrollableContent })),\n            children)));\n    return ((isModalOpen && modalResponsiveMode >= (responsiveMode || ResponsiveMode.small) && (React.createElement(Layer, __assign({ ref: mergedRef }, mergedLayerProps),\n        React.createElement(Popup, __assign({ role: isAlertRole ? 'alertdialog' : 'dialog', ariaLabelledBy: titleAriaId, ariaDescribedBy: subtitleAriaId, onDismiss: onDismiss, shouldRestoreFocus: !disableRestoreFocus, \n            // Modeless modals shouldn't hide siblings.\n            // Popup will automatically handle this based on the aria-modal setting.\n            enableAriaHiddenSiblings: enableAriaHiddenSiblings, \"aria-modal\": !isModeless }, popupProps),\n            React.createElement(\"div\", { className: classNames.root, role: !isModeless ? 'document' : undefined },\n                !isModeless && (React.createElement(Overlay, __assign({ \"aria-hidden\": true, isDarkThemed: isDarkOverlay, onClick: isBlocking ? undefined : onDismiss, allowTouchBodyScroll: allowTouchBodyScroll }, overlay))),\n                dragOptions ? (React.createElement(DraggableZone, { handleSelector: dragOptions.dragHandleSelector || \"#\".concat(focusTrapZoneId), preventDragSelector: \"button\", onStart: handleDragStart, onDragChange: handleDrag, onStop: handleDragStop, position: coordinates }, modalContent)) : (modalContent)))))) ||\n        null);\n});\nModalBase.displayName = 'Modal';\nfunction useDebugWarnings(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: 'Modal',\n            props: props,\n            deprecations: { onLayerDidMount: 'layerProps.onLayerDidMount' },\n        });\n    }\n}\n//# sourceMappingURL=Modal.base.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, divProperties, getNativeProps, getPropsWithDefaults } from '../../Utilities';\nimport { TooltipHost, TooltipOverflowMode } from '../../Tooltip';\nimport { PersonaCoin } from './PersonaCoin/PersonaCoin';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from './Persona.types';\nimport { useWarnings, useMergedRefs } from '@fluentui/react-hooks';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nvar getClassNames = classNamesFunction();\nvar DEFAULT_PROPS = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: '',\n    showOverflowTooltip: true,\n};\nfunction useDebugWarnings(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: 'Persona',\n            props: props,\n            deprecations: { primaryText: 'text' },\n        });\n    }\n}\n/**\n * Persona with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport var PersonaBase = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    useDebugWarnings(props);\n    var rootRef = React.useRef(null);\n    var mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n    /**\n     * Deprecation helper for getting text.\n     */\n    var getText = function () {\n        // eslint-disable-next-line deprecation/deprecation\n        return props.text || props.primaryText || '';\n    };\n    /**\n     * Renders various types of Text (primaryText, secondaryText, etc)\n     * based on the classNames passed\n     * @param elementClassNames - element className\n     * @param renderFunction - render function\n     * @param defaultRenderFunction - default render function\n     */\n    var renderElement = function (elementClassNames, renderFunction, defaultRenderFunction) {\n        var content = renderFunction && renderFunction(props, defaultRenderFunction);\n        return content ? (React.createElement(\"div\", { dir: \"auto\", className: elementClassNames }, content)) : undefined;\n    };\n    /**\n     * using closure to wrap the default render behavior\n     * to make it independent of the type of text passed\n     * @param text - text to render\n     */\n    var onRenderText = function (text, tooltip) {\n        if (tooltip === void 0) { tooltip = true; }\n        // return default render behavior for valid text or undefined\n        return text\n            ? tooltip\n                ? function () {\n                    // default onRender behavior\n                    return (React.createElement(TooltipHost, { content: text, overflowMode: TooltipOverflowMode.Parent, directionalHint: DirectionalHint.topLeftEdge }, text));\n                }\n                : function () { return React.createElement(React.Fragment, null, text); }\n            : undefined;\n    };\n    var onInternalRenderPersonaCoin = function (providedCoinProps) {\n        return React.createElement(PersonaCoin, __assign({}, providedCoinProps));\n    };\n    // wrapping default render behavior based on various props properties\n    var onInternalRenderPrimaryText = onRenderText(getText(), props.showOverflowTooltip);\n    var onInternalRenderSecondaryText = onRenderText(props.secondaryText, props.showOverflowTooltip);\n    var onInternalRenderTertiaryText = onRenderText(props.tertiaryText, props.showOverflowTooltip);\n    var onInternalRenderOptionalText = onRenderText(props.optionalText, props.showOverflowTooltip);\n    var hidePersonaDetails = props.hidePersonaDetails, _a = props.onRenderOptionalText, onRenderOptionalText = _a === void 0 ? onInternalRenderOptionalText : _a, _b = props.onRenderPrimaryText, onRenderPrimaryText = _b === void 0 ? onInternalRenderPrimaryText : _b, _c = props.onRenderSecondaryText, onRenderSecondaryText = _c === void 0 ? onInternalRenderSecondaryText : _c, _d = props.onRenderTertiaryText, onRenderTertiaryText = _d === void 0 ? onInternalRenderTertiaryText : _d, _e = props.onRenderPersonaCoin, onRenderPersonaCoin = _e === void 0 ? onInternalRenderPersonaCoin : _e;\n    var size = props.size;\n    // These properties are to be explicitly passed into PersonaCoin because they are the only props directly used\n    var allowPhoneInitials = props.allowPhoneInitials, className = props.className, coinProps = props.coinProps, showUnknownPersonaCoin = props.showUnknownPersonaCoin, coinSize = props.coinSize, styles = props.styles, imageAlt = props.imageAlt, imageInitials = props.imageInitials, imageShouldFadeIn = props.imageShouldFadeIn, imageShouldStartVisible = props.imageShouldStartVisible, imageUrl = props.imageUrl, initialsColor = props.initialsColor, initialsTextColor = props.initialsTextColor, isOutOfOffice = props.isOutOfOffice, onPhotoLoadingStateChange = props.onPhotoLoadingStateChange, \n    // eslint-disable-next-line deprecation/deprecation\n    onRenderCoin = props.onRenderCoin, onRenderInitials = props.onRenderInitials, presence = props.presence, presenceTitle = props.presenceTitle, presenceColors = props.presenceColors, showInitialsUntilImageLoads = props.showInitialsUntilImageLoads, showSecondaryText = props.showSecondaryText, theme = props.theme;\n    var personaCoinProps = __assign({ allowPhoneInitials: allowPhoneInitials, showUnknownPersonaCoin: showUnknownPersonaCoin, coinSize: coinSize, imageAlt: imageAlt, imageInitials: imageInitials, imageShouldFadeIn: imageShouldFadeIn, imageShouldStartVisible: imageShouldStartVisible, imageUrl: imageUrl, initialsColor: initialsColor, initialsTextColor: initialsTextColor, onPhotoLoadingStateChange: onPhotoLoadingStateChange, onRenderCoin: onRenderCoin, onRenderInitials: onRenderInitials, presence: presence, presenceTitle: presenceTitle, showInitialsUntilImageLoads: showInitialsUntilImageLoads, size: size, text: getText(), isOutOfOffice: isOutOfOffice, presenceColors: presenceColors }, coinProps);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        showSecondaryText: showSecondaryText,\n        presence: presence,\n        size: size,\n    });\n    var divProps = getNativeProps(props, divProperties);\n    var personaDetails = (React.createElement(\"div\", { className: classNames.details },\n        renderElement(classNames.primaryText, onRenderPrimaryText, onInternalRenderPrimaryText),\n        renderElement(classNames.secondaryText, onRenderSecondaryText, onInternalRenderSecondaryText),\n        renderElement(classNames.tertiaryText, onRenderTertiaryText, onInternalRenderTertiaryText),\n        renderElement(classNames.optionalText, onRenderOptionalText, onInternalRenderOptionalText),\n        props.children));\n    return (React.createElement(\"div\", __assign({}, divProps, { ref: mergedRootRef, className: classNames.root, style: coinSize ? { height: coinSize, minWidth: coinSize } : undefined }),\n        onRenderPersonaCoin(personaCoinProps, onRenderPersonaCoin),\n        /* eslint-disable deprecation/deprecation */\n        (!hidePersonaDetails ||\n            size === PersonaSize.size8 ||\n            size === PersonaSize.size10 ||\n            size === PersonaSize.tiny) &&\n            personaDetails\n    /* eslint-enable deprecation/deprecation */\n    ));\n});\nPersonaBase.displayName = 'PersonaBase';\n//# sourceMappingURL=Persona.base.js.map","import { __rest } from \"tslib\";\nimport { DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET } from '../../utilities/keytips/index';\nimport { useKeytipData } from './useKeytipData';\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport var KeytipData = function (props) {\n    var _a;\n    var children = props.children, keytipDataProps = __rest(props, [\"children\"]);\n    var _b = useKeytipData(keytipDataProps), keytipId = _b.keytipId, ariaDescribedBy = _b.ariaDescribedBy;\n    return children((_a = {},\n        _a[DATAKTP_TARGET] = keytipId,\n        _a[DATAKTP_EXECUTE_TARGET] = keytipId,\n        _a['aria-describedby'] = ariaDescribedBy,\n        _a));\n};\n//# sourceMappingURL=KeytipData.js.map","import * as React from 'react';\nimport { KeyCodes, css, getRTLSafeKeyCode } from '@fluentui/utilities';\nimport { addDays, addWeeks, compareDates, findAvailableDate, DateRangeType } from '@fluentui/date-time-utilities';\nexport var CalendarGridDayCell = function (props) {\n    var _a;\n    var navigatedDate = props.navigatedDate, dateTimeFormatter = props.dateTimeFormatter, allFocusable = props.allFocusable, strings = props.strings, activeDescendantId = props.activeDescendantId, navigatedDayRef = props.navigatedDayRef, calculateRoundedStyles = props.calculateRoundedStyles, weeks = props.weeks, classNames = props.classNames, day = props.day, dayIndex = props.dayIndex, weekIndex = props.weekIndex, weekCorners = props.weekCorners, ariaHidden = props.ariaHidden, customDayCellRef = props.customDayCellRef, dateRangeType = props.dateRangeType, daysToSelectInDayView = props.daysToSelectInDayView, onSelectDate = props.onSelectDate, restrictedDates = props.restrictedDates, minDate = props.minDate, maxDate = props.maxDate, onNavigateDate = props.onNavigateDate, getDayInfosInRangeOfDay = props.getDayInfosInRangeOfDay, getRefsFromDayInfos = props.getRefsFromDayInfos;\n    var cornerStyle = (_a = weekCorners === null || weekCorners === void 0 ? void 0 : weekCorners[weekIndex + '_' + dayIndex]) !== null && _a !== void 0 ? _a : '';\n    var isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n    var navigateMonthEdge = function (ev, date) {\n        var targetDate = undefined;\n        var direction = 1; // by default search forward\n        // eslint-disable-next-line deprecation/deprecation\n        if (ev.which === KeyCodes.up) {\n            targetDate = addWeeks(date, -1);\n            direction = -1;\n            // eslint-disable-next-line deprecation/deprecation\n        }\n        else if (ev.which === KeyCodes.down) {\n            targetDate = addWeeks(date, 1);\n            // eslint-disable-next-line deprecation/deprecation\n        }\n        else if (ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n            targetDate = addDays(date, -1);\n            direction = -1;\n            // eslint-disable-next-line deprecation/deprecation\n        }\n        else if (ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n            targetDate = addDays(date, 1);\n        }\n        if (!targetDate) {\n            // if we couldn't find a target date at all, do nothing\n            return;\n        }\n        var findAvailableDateOptions = {\n            initialDate: date,\n            targetDate: targetDate,\n            direction: direction,\n            restrictedDates: restrictedDates,\n            minDate: minDate,\n            maxDate: maxDate,\n        };\n        // target date is restricted, search in whatever direction until finding the next possible date,\n        // stopping at boundaries\n        var nextDate = findAvailableDate(findAvailableDateOptions);\n        if (!nextDate) {\n            // if no dates available in initial direction, try going backwards\n            findAvailableDateOptions.direction = -direction;\n            nextDate = findAvailableDate(findAvailableDateOptions);\n        }\n        // if the nextDate is still inside the same focusZone area, let the focusZone handle setting the focus so we\n        // don't jump the view unnecessarily\n        var isInCurrentView = weeks &&\n            nextDate &&\n            weeks.slice(1, weeks.length - 1).some(function (week) {\n                return week.some(function (dayToCompare) {\n                    return compareDates(dayToCompare.originalDate, nextDate);\n                });\n            });\n        if (isInCurrentView) {\n            return;\n        }\n        // else, fire navigation on the date to change the view to show it\n        if (nextDate) {\n            onNavigateDate(nextDate, true);\n            ev.preventDefault();\n        }\n    };\n    var onMouseOverDay = function (ev) {\n        var dayInfos = getDayInfosInRangeOfDay(day);\n        var dayRefs = getRefsFromDayInfos(dayInfos);\n        dayRefs.forEach(function (dayRef, index) {\n            var _a;\n            if (dayRef) {\n                dayRef.classList.add('ms-CalendarDay-hoverStyle');\n                if (!dayInfos[index].isSelected &&\n                    dateRangeType === DateRangeType.Day &&\n                    daysToSelectInDayView &&\n                    daysToSelectInDayView > 1) {\n                    // remove the static classes first to overwrite them\n                    dayRef.classList.remove(classNames.bottomLeftCornerDate, classNames.bottomRightCornerDate, classNames.topLeftCornerDate, classNames.topRightCornerDate);\n                    var classNamesToAdd = calculateRoundedStyles(classNames, false, false, index > 0, index < dayRefs.length - 1).trim();\n                    if (classNamesToAdd) {\n                        (_a = dayRef.classList).add.apply(_a, classNamesToAdd.split(' '));\n                    }\n                }\n            }\n        });\n    };\n    var onMouseDownDay = function (ev) {\n        var dayInfos = getDayInfosInRangeOfDay(day);\n        var dayRefs = getRefsFromDayInfos(dayInfos);\n        dayRefs.forEach(function (dayRef) {\n            if (dayRef) {\n                dayRef.classList.add('ms-CalendarDay-pressedStyle');\n            }\n        });\n    };\n    var onMouseUpDay = function (ev) {\n        var dayInfos = getDayInfosInRangeOfDay(day);\n        var dayRefs = getRefsFromDayInfos(dayInfos);\n        dayRefs.forEach(function (dayRef) {\n            if (dayRef) {\n                dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n            }\n        });\n    };\n    var onMouseOutDay = function (ev) {\n        var dayInfos = getDayInfosInRangeOfDay(day);\n        var dayRefs = getRefsFromDayInfos(dayInfos);\n        dayRefs.forEach(function (dayRef, index) {\n            var _a;\n            if (dayRef) {\n                dayRef.classList.remove('ms-CalendarDay-hoverStyle');\n                dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n                if (!dayInfos[index].isSelected &&\n                    dateRangeType === DateRangeType.Day &&\n                    daysToSelectInDayView &&\n                    daysToSelectInDayView > 1) {\n                    var classNamesToAdd = calculateRoundedStyles(classNames, false, false, index > 0, index < dayRefs.length - 1).trim();\n                    if (classNamesToAdd) {\n                        (_a = dayRef.classList).remove.apply(_a, classNamesToAdd.split(' '));\n                    }\n                }\n            }\n        });\n    };\n    var onDayKeyDown = function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        if (ev.which === KeyCodes.enter) {\n            onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(day.originalDate);\n        }\n        else {\n            navigateMonthEdge(ev, day.originalDate);\n        }\n    };\n    var ariaLabel = day.originalDate.getDate() +\n        ', ' +\n        strings.months[day.originalDate.getMonth()] +\n        ', ' +\n        day.originalDate.getFullYear();\n    if (day.isMarked) {\n        ariaLabel = ariaLabel + ', ' + strings.dayMarkedAriaLabel;\n    }\n    return (React.createElement(\"td\", { className: css(classNames.dayCell, weekCorners && cornerStyle, day.isSelected && classNames.daySelected, day.isSelected && 'ms-CalendarDay-daySelected', !day.isInBounds && classNames.dayOutsideBounds, !day.isInMonth && classNames.dayOutsideNavigatedMonth), ref: function (element) {\n            customDayCellRef === null || customDayCellRef === void 0 ? void 0 : customDayCellRef(element, day.originalDate, classNames);\n            day.setRef(element);\n            isNavigatedDate && (navigatedDayRef.current = element);\n        }, \"aria-hidden\": ariaHidden, \"aria-disabled\": !ariaHidden && !day.isInBounds, onClick: day.isInBounds && !ariaHidden ? day.onSelected : undefined, onMouseOver: !ariaHidden ? onMouseOverDay : undefined, onMouseDown: !ariaHidden ? onMouseDownDay : undefined, onMouseUp: !ariaHidden ? onMouseUpDay : undefined, onMouseOut: !ariaHidden ? onMouseOutDay : undefined, onKeyDown: !ariaHidden ? onDayKeyDown : undefined, role: \"gridcell\", tabIndex: isNavigatedDate ? 0 : undefined, \"aria-current\": day.isToday ? 'date' : undefined, \"aria-selected\": day.isInBounds ? day.isSelected : undefined, \"data-is-focusable\": !ariaHidden && (allFocusable || (day.isInBounds ? true : undefined)) },\n        React.createElement(\"button\", { key: day.key + 'button', \"aria-hidden\": ariaHidden, className: css(classNames.dayButton, day.isToday && classNames.dayIsToday, day.isToday && 'ms-CalendarDay-dayIsToday'), \"aria-label\": ariaLabel, id: isNavigatedDate ? activeDescendantId : undefined, disabled: !ariaHidden && !day.isInBounds, type: \"button\", tabIndex: -1, \"data-is-focusable\": \"false\" },\n            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, dateTimeFormatter.formatDay(day.originalDate)),\n            day.isMarked && React.createElement(\"div\", { \"aria-hidden\": \"true\", className: classNames.dayMarker }))));\n};\n//# sourceMappingURL=CalendarGridDayCell.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, classNamesFunction, format } from '@fluentui/utilities';\nimport { Icon } from '../../../Icon';\nimport { addMonths, compareDatePart, getMonthStart, getMonthEnd } from '@fluentui/date-time-utilities';\nimport { CalendarDayGrid } from '../../CalendarDayGrid/CalendarDayGrid';\nimport { useId } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nexport var CalendarDayBase = function (props) {\n    var dayGrid = React.useRef(null);\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        focus: function () {\n            var _a, _b;\n            (_b = (_a = dayGrid.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        },\n    }); }, []);\n    var strings = props.strings, navigatedDate = props.navigatedDate, dateTimeFormatter = props.dateTimeFormatter, styles = props.styles, theme = props.theme, className = props.className, onHeaderSelect = props.onHeaderSelect, showSixWeeksByDefault = props.showSixWeeksByDefault, minDate = props.minDate, maxDate = props.maxDate, restrictedDates = props.restrictedDates, onNavigateDate = props.onNavigateDate, showWeekNumbers = props.showWeekNumbers, dateRangeType = props.dateRangeType, animationDirection = props.animationDirection;\n    var monthAndYearId = useId();\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        headerIsClickable: !!onHeaderSelect,\n        showWeekNumbers: showWeekNumbers,\n        animationDirection: animationDirection,\n    });\n    var monthAndYear = dateTimeFormatter.formatMonthYear(navigatedDate, strings);\n    var HeaderButtonComponentType = onHeaderSelect ? 'button' : 'div';\n    var headerAriaLabel = strings.yearPickerHeaderAriaLabel\n        ? format(strings.yearPickerHeaderAriaLabel, monthAndYear)\n        : monthAndYear;\n    return (React.createElement(\"div\", { className: classNames.root },\n        React.createElement(\"div\", { className: classNames.header },\n            React.createElement(HeaderButtonComponentType, { \"aria-label\": onHeaderSelect ? headerAriaLabel : undefined, className: classNames.monthAndYear, onClick: onHeaderSelect, \"data-is-focusable\": !!onHeaderSelect, tabIndex: onHeaderSelect ? 0 : -1, onKeyDown: onButtonKeyDown(onHeaderSelect), type: \"button\" },\n                React.createElement(\"span\", { id: monthAndYearId, \"aria-live\": \"polite\", \"aria-atomic\": \"true\" }, monthAndYear)),\n            React.createElement(CalendarDayNavigationButtons, __assign({}, props, { classNames: classNames }))),\n        React.createElement(CalendarDayGrid, __assign({}, props, { styles: styles, componentRef: dayGrid, strings: strings, navigatedDate: navigatedDate, weeksToShow: showSixWeeksByDefault ? 6 : undefined, dateTimeFormatter: dateTimeFormatter, minDate: minDate, maxDate: maxDate, restrictedDates: restrictedDates, onNavigateDate: onNavigateDate, labelledBy: monthAndYearId, dateRangeType: dateRangeType }))));\n};\nCalendarDayBase.displayName = 'CalendarDayBase';\nvar CalendarDayNavigationButtons = function (props) {\n    var _a, _b;\n    var minDate = props.minDate, maxDate = props.maxDate, navigatedDate = props.navigatedDate, allFocusable = props.allFocusable, strings = props.strings, navigationIcons = props.navigationIcons, showCloseButton = props.showCloseButton, classNames = props.classNames, onNavigateDate = props.onNavigateDate, onDismiss = props.onDismiss;\n    var onSelectNextMonth = function () {\n        onNavigateDate(addMonths(navigatedDate, 1), false);\n    };\n    var onSelectPrevMonth = function () {\n        onNavigateDate(addMonths(navigatedDate, -1), false);\n    };\n    var leftNavigationIcon = navigationIcons.leftNavigation;\n    var rightNavigationIcon = navigationIcons.rightNavigation;\n    var closeNavigationIcon = navigationIcons.closeIcon;\n    // determine if previous/next months are in bounds\n    var prevMonthInBounds = minDate ? compareDatePart(minDate, getMonthStart(navigatedDate)) < 0 : true;\n    var nextMonthInBounds = maxDate ? compareDatePart(getMonthEnd(navigatedDate), maxDate) < 0 : true;\n    // use aria-disabled instead of disabled so focus is not lost\n    // when a prev/next button becomes disabled after being clicked\n    return (React.createElement(\"div\", { className: classNames.monthComponents },\n        React.createElement(\"button\", { className: css(classNames.headerIconButton, (_a = {},\n                _a[classNames.disabledStyle] = !prevMonthInBounds,\n                _a)), tabIndex: prevMonthInBounds ? undefined : allFocusable ? 0 : -1, \"aria-disabled\": !prevMonthInBounds, onClick: prevMonthInBounds ? onSelectPrevMonth : undefined, onKeyDown: prevMonthInBounds ? onButtonKeyDown(onSelectPrevMonth) : undefined, title: strings.prevMonthAriaLabel\n                ? strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()]\n                : undefined, type: \"button\" },\n            React.createElement(Icon, { iconName: leftNavigationIcon })),\n        React.createElement(\"button\", { className: css(classNames.headerIconButton, (_b = {},\n                _b[classNames.disabledStyle] = !nextMonthInBounds,\n                _b)), tabIndex: nextMonthInBounds ? undefined : allFocusable ? 0 : -1, \"aria-disabled\": !nextMonthInBounds, onClick: nextMonthInBounds ? onSelectNextMonth : undefined, onKeyDown: nextMonthInBounds ? onButtonKeyDown(onSelectNextMonth) : undefined, title: strings.nextMonthAriaLabel\n                ? strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()]\n                : undefined, type: \"button\" },\n            React.createElement(Icon, { iconName: rightNavigationIcon })),\n        showCloseButton && (React.createElement(\"button\", { className: css(classNames.headerIconButton), onClick: onDismiss, onKeyDown: onButtonKeyDown(onDismiss), title: strings.closeButtonAriaLabel, type: \"button\" },\n            React.createElement(Icon, { iconName: closeNavigationIcon })))));\n};\nCalendarDayNavigationButtons.displayName = 'CalendarDayNavigationButtons';\nvar onButtonKeyDown = function (callback) {\n    return function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n            case KeyCodes.enter:\n                callback === null || callback === void 0 ? void 0 : callback();\n                break;\n        }\n    };\n};\n//# sourceMappingURL=CalendarDay.base.js.map","var _a, _b, _c, _d, _e;\nimport { __assign, __spreadArray } from \"tslib\";\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { RectangleEdge } from '../../Positioning';\nimport { FontWeights, HighContrastSelector, getGlobalClassNames, normalize, HighContrastSelectorWhite, getScreenSelector, ScreenWidthMinMedium, getHighContrastNoAdjustStyle, } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-Dropdown-container',\n    label: 'ms-Dropdown-label',\n    dropdown: 'ms-Dropdown',\n    title: 'ms-Dropdown-title',\n    caretDownWrapper: 'ms-Dropdown-caretDownWrapper',\n    caretDown: 'ms-Dropdown-caretDown',\n    callout: 'ms-Dropdown-callout',\n    panel: 'ms-Dropdown-panel',\n    dropdownItems: 'ms-Dropdown-items',\n    dropdownItem: 'ms-Dropdown-item',\n    dropdownDivider: 'ms-Dropdown-divider',\n    dropdownOptionText: 'ms-Dropdown-optionText',\n    dropdownItemHeader: 'ms-Dropdown-header',\n    titleIsPlaceHolder: 'ms-Dropdown-titleIsPlaceHolder',\n    titleHasError: 'ms-Dropdown-title--hasError',\n};\nvar DROPDOWN_HEIGHT = 32;\nvar DROPDOWN_ITEM_HEIGHT = 36;\nvar highContrastAdjustMixin = (_a = {},\n    _a[\"\".concat(HighContrastSelector, \", \").concat(HighContrastSelectorWhite.replace('@media ', ''))] = __assign({}, getHighContrastNoAdjustStyle()),\n    _a);\nvar highContrastItemAndTitleStateMixin = {\n    selectors: __assign((_b = {}, _b[HighContrastSelector] = (_c = {\n            backgroundColor: 'Highlight',\n            borderColor: 'Highlight',\n            color: 'HighlightText'\n        },\n        _c[\".\".concat(IsFocusVisibleClassName, \" &:focus:after\")] = {\n            borderColor: 'HighlightText',\n        },\n        _c), _b['.ms-Checkbox-checkbox'] = (_d = {},\n        _d[HighContrastSelector] = {\n            borderColor: 'HighlightText',\n        },\n        _d), _b), highContrastAdjustMixin),\n};\nvar highContrastBorderState = {\n    selectors: (_e = {},\n        _e[HighContrastSelector] = {\n            borderColor: 'Highlight',\n        },\n        _e),\n};\nvar MinimumScreenSelector = getScreenSelector(0, ScreenWidthMinMedium);\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    var theme = props.theme, hasError = props.hasError, hasLabel = props.hasLabel, className = props.className, isOpen = props.isOpen, disabled = props.disabled, required = props.required, isRenderingPlaceholder = props.isRenderingPlaceholder, panelClassName = props.panelClassName, calloutClassName = props.calloutClassName, calloutRenderEdge = props.calloutRenderEdge;\n    if (!theme) {\n        throw new Error('theme is undefined or null in base Dropdown getStyles function.');\n    }\n    var globalClassnames = getGlobalClassNames(GlobalClassNames, theme);\n    var palette = theme.palette, semanticColors = theme.semanticColors, effects = theme.effects, fonts = theme.fonts;\n    var rootHoverFocusActiveSelectorNeutralDarkMixin = {\n        color: semanticColors.menuItemTextHovered,\n    };\n    var rootHoverFocusActiveSelectorNeutralPrimaryMixin = {\n        color: semanticColors.menuItemText,\n    };\n    var borderColorError = {\n        borderColor: semanticColors.errorText,\n    };\n    var dropdownItemStyle = [\n        globalClassnames.dropdownItem,\n        {\n            backgroundColor: 'transparent',\n            boxSizing: 'border-box',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '0 8px',\n            width: '100%',\n            minHeight: DROPDOWN_ITEM_HEIGHT,\n            lineHeight: 20,\n            height: 0,\n            position: 'relative',\n            border: '1px solid transparent',\n            borderRadius: 0,\n            wordWrap: 'break-word',\n            overflowWrap: 'break-word',\n            textAlign: 'left',\n            '.ms-Button-flexContainer': {\n                width: '100%',\n            },\n        },\n    ];\n    var dropdownHeaderStyle = [\n        globalClassnames.dropdownItemHeader,\n        __assign(__assign({}, fonts.medium), { fontWeight: FontWeights.semibold, color: semanticColors.menuHeader, background: 'none', backgroundColor: 'transparent', border: 'none', height: DROPDOWN_ITEM_HEIGHT, lineHeight: DROPDOWN_ITEM_HEIGHT, cursor: 'default', padding: '0 8px', userSelect: 'none', textAlign: 'left', selectors: (_a = {},\n                _a[HighContrastSelector] = __assign({ color: 'GrayText' }, getHighContrastNoAdjustStyle()),\n                _a) }),\n    ];\n    var selectedItemBackgroundColor = semanticColors.menuItemBackgroundPressed;\n    var itemSelectors = function (isSelected) {\n        var _a, _b;\n        if (isSelected === void 0) { isSelected = false; }\n        return {\n            selectors: (_a = {\n                    '&:hover': [\n                        {\n                            color: semanticColors.menuItemTextHovered,\n                            backgroundColor: !isSelected ? semanticColors.menuItemBackgroundHovered : selectedItemBackgroundColor,\n                        },\n                        highContrastItemAndTitleStateMixin,\n                    ],\n                    '&.is-multi-select:hover': [\n                        { backgroundColor: !isSelected ? 'transparent' : selectedItemBackgroundColor },\n                        highContrastItemAndTitleStateMixin,\n                    ],\n                    '&:active:hover': [\n                        {\n                            color: semanticColors.menuItemTextHovered,\n                            backgroundColor: !isSelected\n                                ? semanticColors.menuItemBackgroundPressed\n                                : semanticColors.menuItemBackgroundHovered,\n                        },\n                        highContrastItemAndTitleStateMixin,\n                    ]\n                },\n                _a[\".\".concat(IsFocusVisibleClassName, \" &:focus:after, :host(.\").concat(IsFocusVisibleClassName, \") &:focus:after\")] = (_b = {\n                        left: 0,\n                        top: 0,\n                        bottom: 0,\n                        right: 0\n                    },\n                    _b[HighContrastSelector] = {\n                        inset: '2px',\n                    },\n                    _b),\n                _a[HighContrastSelector] = {\n                    border: 'none',\n                },\n                _a),\n        };\n    };\n    var dropdownItemSelected = __spreadArray(__spreadArray([], dropdownItemStyle, true), [\n        {\n            backgroundColor: selectedItemBackgroundColor,\n            color: semanticColors.menuItemTextHovered,\n        },\n        itemSelectors(true),\n        highContrastItemAndTitleStateMixin,\n    ], false);\n    var dropdownItemDisabled = __spreadArray(__spreadArray([], dropdownItemStyle, true), [\n        {\n            color: semanticColors.disabledText,\n            cursor: 'default',\n            selectors: (_b = {},\n                _b[HighContrastSelector] = {\n                    color: 'GrayText',\n                    border: 'none',\n                },\n                _b),\n        },\n    ], false);\n    var titleOpenBorderRadius = calloutRenderEdge === RectangleEdge.bottom\n        ? \"\".concat(effects.roundedCorner2, \" \").concat(effects.roundedCorner2, \" 0 0\")\n        : \"0 0 \".concat(effects.roundedCorner2, \" \").concat(effects.roundedCorner2);\n    var calloutOpenBorderRadius = calloutRenderEdge === RectangleEdge.bottom\n        ? \"0 0 \".concat(effects.roundedCorner2, \" \").concat(effects.roundedCorner2)\n        : \"\".concat(effects.roundedCorner2, \" \").concat(effects.roundedCorner2, \" 0 0\");\n    return {\n        root: [globalClassnames.root, className],\n        label: globalClassnames.label,\n        dropdown: [\n            globalClassnames.dropdown,\n            normalize,\n            fonts.medium,\n            {\n                color: semanticColors.menuItemText,\n                borderColor: semanticColors.focusBorder,\n                position: 'relative',\n                outline: 0,\n                userSelect: 'none',\n                selectors: (_c = {},\n                    _c['&:hover .' + globalClassnames.title] = [\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n                        { borderColor: isOpen ? palette.neutralSecondary : palette.neutralPrimary },\n                        highContrastBorderState,\n                    ],\n                    _c['&:focus .' + globalClassnames.title] = [\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n                        { selectors: (_d = {}, _d[HighContrastSelector] = { color: 'Highlight' }, _d) },\n                    ],\n                    _c['&:focus:after'] = [\n                        {\n                            pointerEvents: 'none',\n                            content: \"''\",\n                            position: 'absolute',\n                            boxSizing: 'border-box',\n                            top: '0px',\n                            left: '0px',\n                            width: '100%',\n                            height: '100%',\n                            // see https://github.com/microsoft/fluentui/pull/9182 for semantic color disc\n                            border: !disabled ? \"2px solid \".concat(palette.themePrimary) : 'none',\n                            borderRadius: '2px',\n                            selectors: (_e = {},\n                                _e[HighContrastSelector] = {\n                                    color: 'Highlight',\n                                },\n                                _e),\n                        },\n                    ],\n                    _c['&:active .' + globalClassnames.title] = [\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n                        { borderColor: palette.themePrimary },\n                        highContrastBorderState,\n                    ],\n                    _c['&:hover .' + globalClassnames.caretDown] = !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n                    _c['&:focus .' + globalClassnames.caretDown] = [\n                        !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n                        { selectors: (_f = {}, _f[HighContrastSelector] = { color: 'Highlight' }, _f) },\n                    ],\n                    _c['&:active .' + globalClassnames.caretDown] = !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n                    _c['&:hover .' + globalClassnames.titleIsPlaceHolder] = !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n                    _c['&:focus .' + globalClassnames.titleIsPlaceHolder] = !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n                    _c['&:active .' + globalClassnames.titleIsPlaceHolder] = !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n                    _c['&:hover .' + globalClassnames.titleHasError] = borderColorError,\n                    _c['&:active .' + globalClassnames.titleHasError] = borderColorError,\n                    _c),\n            },\n            isOpen && 'is-open',\n            disabled && 'is-disabled',\n            required && 'is-required',\n            required &&\n                !hasLabel && {\n                selectors: (_g = {\n                        ':before': {\n                            content: \"'*'\",\n                            color: semanticColors.errorText,\n                            position: 'absolute',\n                            top: -5,\n                            right: -10,\n                        }\n                    },\n                    _g[HighContrastSelector] = {\n                        selectors: {\n                            ':after': {\n                                right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                            },\n                        },\n                    },\n                    _g),\n            },\n        ],\n        title: [\n            globalClassnames.title,\n            normalize,\n            {\n                backgroundColor: semanticColors.inputBackground,\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: semanticColors.inputBorder,\n                borderRadius: isOpen ? titleOpenBorderRadius : effects.roundedCorner2,\n                cursor: 'pointer',\n                display: 'block',\n                height: DROPDOWN_HEIGHT,\n                lineHeight: DROPDOWN_HEIGHT - 2,\n                padding: \"0 28px 0 8px\",\n                position: 'relative',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                textOverflow: 'ellipsis',\n            },\n            isRenderingPlaceholder && [globalClassnames.titleIsPlaceHolder, { color: semanticColors.inputPlaceholderText }],\n            hasError && [globalClassnames.titleHasError, borderColorError],\n            disabled && {\n                backgroundColor: semanticColors.disabledBackground,\n                border: 'none',\n                color: semanticColors.disabledText,\n                cursor: 'default',\n                selectors: (_h = {},\n                    _h[HighContrastSelector] = __assign({ border: '1px solid GrayText', color: 'GrayText', backgroundColor: 'Window' }, getHighContrastNoAdjustStyle()),\n                    _h),\n            },\n        ],\n        caretDownWrapper: [\n            globalClassnames.caretDownWrapper,\n            {\n                height: DROPDOWN_HEIGHT,\n                lineHeight: DROPDOWN_HEIGHT - 2,\n                paddingTop: 1,\n                position: 'absolute',\n                right: 8,\n                top: 0,\n            },\n            !disabled && {\n                cursor: 'pointer',\n            },\n        ],\n        caretDown: [\n            globalClassnames.caretDown,\n            { color: palette.neutralSecondary, fontSize: fonts.small.fontSize, pointerEvents: 'none' },\n            disabled && {\n                color: semanticColors.disabledText,\n                selectors: (_j = {},\n                    _j[HighContrastSelector] = __assign({ color: 'GrayText' }, getHighContrastNoAdjustStyle()),\n                    _j),\n            },\n        ],\n        errorMessage: __assign(__assign({ color: semanticColors.errorText }, theme.fonts.small), { paddingTop: 5 }),\n        callout: [\n            globalClassnames.callout,\n            {\n                boxShadow: effects.elevation8,\n                borderRadius: calloutOpenBorderRadius,\n                selectors: (_k = {},\n                    _k['.ms-Callout-main'] = { borderRadius: calloutOpenBorderRadius },\n                    _k),\n            },\n            calloutClassName,\n        ],\n        dropdownItemsWrapper: { selectors: { '&:focus': { outline: 0 } } },\n        dropdownItems: [globalClassnames.dropdownItems, { display: 'block' }],\n        dropdownItem: __spreadArray(__spreadArray([], dropdownItemStyle, true), [itemSelectors()], false),\n        dropdownItemSelected: dropdownItemSelected,\n        dropdownItemDisabled: dropdownItemDisabled,\n        dropdownItemSelectedAndDisabled: [dropdownItemSelected, dropdownItemDisabled, { backgroundColor: 'transparent' }],\n        dropdownItemHidden: __spreadArray(__spreadArray([], dropdownItemStyle, true), [{ display: 'none' }], false),\n        dropdownDivider: [globalClassnames.dropdownDivider, { height: 1, backgroundColor: semanticColors.bodyDivider }],\n        dropdownDividerHidden: [globalClassnames.dropdownDivider, { display: 'none' }],\n        dropdownOptionText: [\n            globalClassnames.dropdownOptionText,\n            {\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                textOverflow: 'ellipsis',\n                minWidth: 0,\n                maxWidth: '100%',\n                wordWrap: 'break-word',\n                overflowWrap: 'break-word',\n                margin: '1px',\n            },\n        ],\n        dropdownItemHeader: dropdownHeaderStyle,\n        dropdownItemHeaderHidden: __spreadArray(__spreadArray([], dropdownHeaderStyle, true), [{ display: 'none' }], false),\n        subComponentStyles: {\n            label: { root: { display: 'inline-block' } },\n            multiSelectItem: {\n                root: {\n                    padding: 0,\n                },\n                label: {\n                    alignSelf: 'stretch',\n                    padding: '0 8px',\n                    width: '100%',\n                },\n                input: {\n                    selectors: (_l = {},\n                        // eslint-disable-next-line @fluentui/max-len\n                        _l[\".\".concat(IsFocusVisibleClassName, \" &:focus + label::before, :host(.\").concat(IsFocusVisibleClassName, \") &:focus + label::before\")] = {\n                            outlineOffset: '0px',\n                        },\n                        _l),\n                },\n            },\n            panel: {\n                root: [panelClassName],\n                main: {\n                    selectors: (_m = {},\n                        // In case of extra small screen sizes\n                        _m[MinimumScreenSelector] = {\n                            // panelWidth xs\n                            width: 272,\n                        },\n                        _m),\n                },\n                contentInner: { padding: '0 0 20px' },\n            },\n        },\n    };\n};\n//# sourceMappingURL=Dropdown.styles.js.map","import { __spreadArray } from \"tslib\";\nimport { DropdownMenuItemType } from '../Dropdown.types';\n/**\n * A utility class to cache size and position in cache.\n *\n * Dropdown options has non-selectable display types. It is therefore not cheap to determine\n * the total number of actual selectable options as well as the position an option is in the\n * list of options - O(n) cost for each lookup.\n *\n * Given that we potentially have to make this determination on every single render pass, this\n * cache should provide a little bit of relief.\n */\nvar DropdownSizePosCache = /** @class */ (function () {\n    function DropdownSizePosCache() {\n        this._size = 0;\n    }\n    /**\n     * Invalidates the cache and recalculate the size of selectable options.\n     */\n    DropdownSizePosCache.prototype.updateOptions = function (options) {\n        var displayOnlyOptionsCache = [];\n        var notSelectableOptionsCache = [];\n        var size = 0;\n        for (var i = 0; i < options.length; i++) {\n            var _a = options[i], itemType = _a.itemType, hidden = _a.hidden;\n            if (itemType === DropdownMenuItemType.Divider || itemType === DropdownMenuItemType.Header) {\n                displayOnlyOptionsCache.push(i);\n                notSelectableOptionsCache.push(i);\n            }\n            else if (hidden) {\n                notSelectableOptionsCache.push(i);\n            }\n            else {\n                size++;\n            }\n        }\n        this._size = size;\n        this._displayOnlyOptionsCache = displayOnlyOptionsCache;\n        this._notSelectableOptionsCache = notSelectableOptionsCache;\n        this._cachedOptions = __spreadArray([], options, true);\n    };\n    Object.defineProperty(DropdownSizePosCache.prototype, \"optionSetSize\", {\n        /**\n         * The size of all the selectable options.\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DropdownSizePosCache.prototype, \"cachedOptions\", {\n        /**\n         * The chached options array.\n         */\n        get: function () {\n            return this._cachedOptions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns the position of this option element relative to the full set of selectable option elements.\n     * Note: the first selectable element is position 1 in the set.\n     * @param index The raw index of the option element.\n     */\n    DropdownSizePosCache.prototype.positionInSet = function (index) {\n        if (index === undefined) {\n            return undefined;\n        }\n        // we could possibly memoize this too but this should be good enough, most of the time (the expectation is that\n        // when you have a lot of options, the selectable options will heavily dominate over the non-selectable options.\n        var offset = 0;\n        while (index > this._notSelectableOptionsCache[offset]) {\n            offset++;\n        }\n        if (this._displayOnlyOptionsCache[offset] === index) {\n            throw new Error(\"Unexpected: Option at index \".concat(index, \" is not a selectable element.\"));\n        }\n        if (this._notSelectableOptionsCache[offset] === index) {\n            return undefined;\n        }\n        return index - offset + 1;\n    };\n    return DropdownSizePosCache;\n}());\nexport { DropdownSizePosCache };\n//# sourceMappingURL=DropdownSizePosCache.js.map","import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport { mergeStyleSets, getGlobalClassNames, getScreenSelector, ScreenWidthMaxMedium, hiddenContentStyle, } from '../../Styling';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nvar CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nexport var getSplitButtonVerticalDividerClassNames = memoizeFunction(\n/* eslint-disable deprecation/deprecation */\nfunction (theme) {\n    var _a;\n    return mergeStyleSets(getDividerClassNames(theme), {\n        /* eslint-enable deprecation/deprecation */\n        wrapper: {\n            position: 'absolute',\n            right: 28,\n            selectors: (_a = {},\n                _a[MediumScreenSelector] = {\n                    right: 32, // fontSize of the icon increased from 12px to 16px\n                },\n                _a),\n        },\n        divider: {\n            height: 16,\n            width: 1,\n        },\n    });\n});\nvar GlobalClassNames = {\n    item: 'ms-ContextualMenu-item',\n    divider: 'ms-ContextualMenu-divider',\n    root: 'ms-ContextualMenu-link',\n    isChecked: 'is-checked',\n    isExpanded: 'is-expanded',\n    isDisabled: 'is-disabled',\n    linkContent: 'ms-ContextualMenu-linkContent',\n    linkContentMenu: 'ms-ContextualMenu-linkContent',\n    icon: 'ms-ContextualMenu-icon',\n    iconColor: 'ms-ContextualMenu-iconColor',\n    checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n    subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n    label: 'ms-ContextualMenu-itemText',\n    secondaryText: 'ms-ContextualMenu-secondaryText',\n    splitMenu: 'ms-ContextualMenu-splitMenu',\n    screenReaderText: 'ms-ContextualMenu-screenReaderText',\n};\n/**\n * @deprecated Will be removed in \\>= 7.0.\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * @internal\n */\n// TODO: Audit perf. impact of and potentially remove memoizeFunction.\n// https://github.com/microsoft/fluentui/issues/5534\nexport var getItemClassNames = memoizeFunction(function (theme, disabled, expanded, checked, isAnchorLink, knownIcon, itemClassName, dividerClassName, iconClassName, subMenuClassName, primaryDisabled, className) {\n    var _a, _b, _c, _d;\n    var styles = getMenuItemStyles(theme);\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return mergeStyleSets({\n        item: [classNames.item, styles.item, itemClassName],\n        divider: [classNames.divider, styles.divider, dividerClassName],\n        root: [\n            classNames.root,\n            styles.root,\n            checked && [classNames.isChecked, styles.rootChecked],\n            isAnchorLink && styles.anchorLink,\n            expanded && [classNames.isExpanded, styles.rootExpanded],\n            disabled && [classNames.isDisabled, styles.rootDisabled],\n            !disabled &&\n                !expanded && [\n                {\n                    selectors: (_a = {\n                            ':hover': styles.rootHovered,\n                            ':active': styles.rootPressed\n                        },\n                        // eslint-disable-next-line @fluentui/max-len\n                        _a[\".\".concat(IsFocusVisibleClassName, \" &:focus, .\").concat(IsFocusVisibleClassName, \" &:focus:hover, :host(.\").concat(IsFocusVisibleClassName, \") &:focus, :host(.\").concat(IsFocusVisibleClassName, \") &:focus:hover\")] = styles.rootFocused,\n                        _a[\".\".concat(IsFocusVisibleClassName, \" &:hover, :host(.\").concat(IsFocusVisibleClassName, \") &:hover\")] = {\n                            background: 'inherit;',\n                        },\n                        _a),\n                },\n            ],\n            className,\n        ],\n        splitPrimary: [\n            styles.root,\n            {\n                width: \"calc(100% - \".concat(CONTEXTUAL_SPLIT_MENU_MINWIDTH, \")\"),\n            },\n            checked && ['is-checked', styles.rootChecked],\n            (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n            !(disabled || primaryDisabled) &&\n                !checked && [\n                {\n                    selectors: (_b = {\n                            ':hover': styles.rootHovered\n                        },\n                        // when hovering over the splitPrimary also affect the splitMenu\n                        _b[\":hover ~ .\".concat(classNames.splitMenu)] = styles.rootHovered,\n                        _b[':active'] = styles.rootPressed,\n                        // eslint-disable-next-line @fluentui/max-len\n                        _b[\".\".concat(IsFocusVisibleClassName, \" &:focus, .\").concat(IsFocusVisibleClassName, \" &:focus:hover, :host(.\").concat(IsFocusVisibleClassName, \") &:focus, :host(.\").concat(IsFocusVisibleClassName, \") &:focus:hover\")] = styles.rootFocused,\n                        _b[\".\".concat(IsFocusVisibleClassName, \" &:hover, :host(.\").concat(IsFocusVisibleClassName, \") &:hover\")] = {\n                            background: 'inherit;',\n                        },\n                        _b),\n                },\n            ],\n        ],\n        splitMenu: [\n            classNames.splitMenu,\n            styles.root,\n            {\n                flexBasis: '0',\n                padding: '0 8px',\n                minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH,\n            },\n            expanded && ['is-expanded', styles.rootExpanded],\n            disabled && ['is-disabled', styles.rootDisabled],\n            !disabled &&\n                !expanded && [\n                {\n                    selectors: (_c = {\n                            ':hover': styles.rootHovered,\n                            ':active': styles.rootPressed\n                        },\n                        // eslint-disable-next-line @fluentui/max-len\n                        _c[\".\".concat(IsFocusVisibleClassName, \" &:focus, .\").concat(IsFocusVisibleClassName, \" &:focus:hover, :host(.\").concat(IsFocusVisibleClassName, \") &:focus, :host(.\").concat(IsFocusVisibleClassName, \") &:focus:hover\")] = styles.rootFocused,\n                        _c[\".\".concat(IsFocusVisibleClassName, \" &:hover, :host(.\").concat(IsFocusVisibleClassName, \") &:hover\")] = {\n                            background: 'inherit;',\n                        },\n                        _c),\n                },\n            ],\n        ],\n        anchorLink: styles.anchorLink,\n        linkContent: [classNames.linkContent, styles.linkContent],\n        linkContentMenu: [\n            classNames.linkContentMenu,\n            styles.linkContent,\n            {\n                justifyContent: 'center',\n            },\n        ],\n        icon: [\n            classNames.icon,\n            knownIcon && styles.iconColor,\n            styles.icon,\n            iconClassName,\n            disabled && [classNames.isDisabled, styles.iconDisabled],\n        ],\n        iconColor: styles.iconColor,\n        checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n        subMenuIcon: [\n            classNames.subMenuIcon,\n            styles.subMenuIcon,\n            subMenuClassName,\n            expanded && { color: theme.palette.neutralPrimary },\n            disabled && [styles.iconDisabled],\n        ],\n        label: [classNames.label, styles.label],\n        secondaryText: [classNames.secondaryText, styles.secondaryText],\n        splitContainer: [\n            styles.splitButtonFlexContainer,\n            !disabled &&\n                !checked && [\n                {\n                    selectors: (_d = {},\n                        // eslint-disable-next-line @fluentui/max-len\n                        _d[\".\".concat(IsFocusVisibleClassName, \" &:focus, .\").concat(IsFocusVisibleClassName, \" &:focus:hover, :host(.\").concat(IsFocusVisibleClassName, \") &:focus, :host(.\").concat(IsFocusVisibleClassName, \") &:focus:hover\")] = styles.rootFocused,\n                        _d),\n                },\n            ],\n        ],\n        screenReaderText: [\n            classNames.screenReaderText,\n            styles.screenReaderText,\n            hiddenContentStyle,\n            { visibility: 'hidden' },\n        ],\n    });\n});\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props - the ContextualMenuItem style props used to generate its styles.\n */\nexport var getItemStyles = function (props) {\n    var theme = props.theme, disabled = props.disabled, expanded = props.expanded, checked = props.checked, isAnchorLink = props.isAnchorLink, knownIcon = props.knownIcon, itemClassName = props.itemClassName, dividerClassName = props.dividerClassName, iconClassName = props.iconClassName, subMenuClassName = props.subMenuClassName, primaryDisabled = props.primaryDisabled, className = props.className;\n    // eslint-disable-next-line deprecation/deprecation\n    return getItemClassNames(theme, disabled, expanded, checked, isAnchorLink, knownIcon, itemClassName, dividerClassName, iconClassName, subMenuClassName, primaryDisabled, className);\n};\n//# sourceMappingURL=ContextualMenu.classNames.js.map","import { styled } from '../../Utilities';\nimport { TextFieldBase } from './TextField.base';\nimport { getStyles } from './TextField.styles';\nexport var TextField = styled(TextFieldBase, getStyles, undefined, {\n    scope: 'TextField',\n});\n//# sourceMappingURL=TextField.js.map","/**\n * {@docCategory Tooltip}\n */\nexport var TooltipOverflowMode;\n(function (TooltipOverflowMode) {\n    /** Only show tooltip if parent DOM element is overflowing */\n    TooltipOverflowMode[TooltipOverflowMode[\"Parent\"] = 0] = \"Parent\";\n    /**\n     * Only show tooltip if tooltip host's content is overflowing.\n     * Note that this does not check the children for overflow, only the TooltipHost root.\n     */\n    TooltipOverflowMode[TooltipOverflowMode[\"Self\"] = 1] = \"Self\";\n})(TooltipOverflowMode || (TooltipOverflowMode = {}));\n//# sourceMappingURL=TooltipHost.types.js.map","import { styled } from '../../Utilities';\nimport { OverflowSetBase } from './OverflowSet.base';\nimport { getStyles } from './OverflowSet.styles';\nexport var OverflowSet = styled(OverflowSetBase, getStyles, undefined, {\n    scope: 'OverflowSet',\n});\n//# sourceMappingURL=OverflowSet.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport { AnimationVariables, getGlobalClassNames, HighContrastSelector, normalize, FontWeights, getHighContrastNoAdjustStyle, } from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nvar globalClassNames = {\n    count: 'ms-Pivot-count',\n    icon: 'ms-Pivot-icon',\n    linkIsSelected: 'is-selected',\n    link: 'ms-Pivot-link',\n    linkContent: 'ms-Pivot-linkContent',\n    root: 'ms-Pivot',\n    rootIsLarge: 'ms-Pivot--large',\n    rootIsTabs: 'ms-Pivot--tabs',\n    text: 'ms-Pivot-text',\n    linkInMenu: 'ms-Pivot-linkInMenu',\n    overflowMenuButton: 'ms-Pivot-overflowMenuButton',\n};\nvar getLinkStyles = function (props, classNames, isLinkInOverflowMenu) {\n    var _a, _b, _c;\n    if (isLinkInOverflowMenu === void 0) { isLinkInOverflowMenu = false; }\n    var linkSize = props.linkSize, linkFormat = props.linkFormat;\n    var _d = props.theme, semanticColors = _d.semanticColors, fonts = _d.fonts;\n    var rootIsLarge = linkSize === 'large';\n    var rootIsTabs = linkFormat === 'tabs';\n    return [\n        fonts.medium,\n        {\n            color: semanticColors.actionLink,\n            padding: '0 8px',\n            position: 'relative',\n            backgroundColor: 'transparent',\n            border: 0,\n            borderRadius: 0,\n            selectors: {\n                ':hover': {\n                    backgroundColor: semanticColors.buttonBackgroundHovered,\n                    color: semanticColors.buttonTextHovered,\n                    cursor: 'pointer',\n                },\n                ':active': {\n                    backgroundColor: semanticColors.buttonBackgroundPressed,\n                    color: semanticColors.buttonTextHovered,\n                },\n                ':focus': {\n                    outline: 'none',\n                },\n            },\n        },\n        !isLinkInOverflowMenu && [\n            {\n                display: 'inline-block',\n                lineHeight: 44,\n                height: 44,\n                marginRight: 8,\n                textAlign: 'center',\n                selectors: (_a = {},\n                    _a[\".\".concat(IsFocusVisibleClassName, \" &:focus, :host(.\").concat(IsFocusVisibleClassName, \") &:focus\")] = {\n                        outline: \"1px solid \".concat(semanticColors.focusBorder),\n                    },\n                    _a[\".\".concat(IsFocusVisibleClassName, \" &:focus:after, :host(.\").concat(IsFocusVisibleClassName, \") &:focus:after\")] = {\n                        content: 'attr(data-content)',\n                        position: 'relative',\n                        border: 0,\n                    },\n                    _a[':before'] = {\n                        backgroundColor: 'transparent',\n                        bottom: 0,\n                        content: '\"\"',\n                        height: 2,\n                        left: 8,\n                        position: 'absolute',\n                        right: 8,\n                        transition: \"left \".concat(AnimationVariables.durationValue2, \" \").concat(AnimationVariables.easeFunction2, \",\\n                        right \").concat(AnimationVariables.durationValue2, \" \").concat(AnimationVariables.easeFunction2),\n                    },\n                    _a[':after'] = {\n                        color: 'transparent',\n                        content: 'attr(data-content)',\n                        display: 'block',\n                        fontWeight: FontWeights.bold,\n                        height: 1,\n                        overflow: 'hidden',\n                        visibility: 'hidden',\n                    },\n                    _a),\n            },\n            rootIsLarge && {\n                fontSize: fonts.large.fontSize,\n            },\n            rootIsTabs && [\n                {\n                    marginRight: 0,\n                    height: 44,\n                    lineHeight: 44,\n                    backgroundColor: semanticColors.buttonBackground,\n                    padding: '0 10px',\n                    verticalAlign: 'top',\n                    selectors: (_b = {\n                            ':focus': {\n                                outlineOffset: '-2px',\n                            }\n                        },\n                        _b[\".\".concat(IsFocusVisibleClassName, \" &:focus::before, :host(.\").concat(IsFocusVisibleClassName, \") &:focus::before\")] = {\n                            height: 'auto',\n                            background: 'transparent',\n                            transition: 'none',\n                        },\n                        _b['&:hover, &:focus'] = {\n                            color: semanticColors.buttonTextCheckedHovered,\n                        },\n                        _b['&:active, &:hover'] = {\n                            color: semanticColors.primaryButtonText,\n                            backgroundColor: semanticColors.primaryButtonBackground,\n                        },\n                        _b[\"&.\".concat(classNames.linkIsSelected)] = {\n                            backgroundColor: semanticColors.primaryButtonBackground,\n                            color: semanticColors.primaryButtonText,\n                            fontWeight: FontWeights.regular,\n                            selectors: (_c = {\n                                    ':before': {\n                                        backgroundColor: 'transparent',\n                                        transition: 'none',\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        content: '\"\"',\n                                        height: 0,\n                                    },\n                                    ':hover': {\n                                        backgroundColor: semanticColors.primaryButtonBackgroundHovered,\n                                        color: semanticColors.primaryButtonText,\n                                    },\n                                    ':active': {\n                                        backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n                                        color: semanticColors.primaryButtonText,\n                                    }\n                                },\n                                _c[HighContrastSelector] = __assign({ fontWeight: FontWeights.semibold, color: 'HighlightText', background: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                                _c),\n                        },\n                        // eslint-disable-next-line @fluentui/max-len\n                        _b[\".\".concat(IsFocusVisibleClassName, \" &.\").concat(classNames.linkIsSelected, \":focus, :host(.\").concat(IsFocusVisibleClassName, \") &.\").concat(classNames.linkIsSelected, \":focus\")] = {\n                            outlineColor: semanticColors.primaryButtonText,\n                        },\n                        _b),\n                },\n            ],\n        ],\n    ];\n};\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d;\n    var className = props.className, linkSize = props.linkSize, linkFormat = props.linkFormat, theme = props.theme;\n    var semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(globalClassNames, theme);\n    var rootIsLarge = linkSize === 'large';\n    var rootIsTabs = linkFormat === 'tabs';\n    return {\n        root: [\n            classNames.root,\n            fonts.medium,\n            normalize,\n            {\n                position: 'relative',\n                color: semanticColors.link,\n                whiteSpace: 'nowrap',\n            },\n            rootIsLarge && classNames.rootIsLarge,\n            rootIsTabs && classNames.rootIsTabs,\n            className,\n        ],\n        itemContainer: {\n            selectors: {\n                '&[hidden]': {\n                    display: 'none',\n                },\n            },\n        },\n        link: __spreadArray(__spreadArray([\n            classNames.link\n        ], getLinkStyles(props, classNames), true), [\n            (_a = {},\n                _a[\"&[data-is-overflowing='true']\"] = {\n                    display: 'none',\n                },\n                _a),\n        ], false),\n        overflowMenuButton: [\n            classNames.overflowMenuButton,\n            (_b = {\n                    visibility: 'hidden',\n                    position: 'absolute',\n                    right: 0\n                },\n                _b[\".\".concat(classNames.link, \"[data-is-overflowing='true'] ~ &\")] = {\n                    visibility: 'visible',\n                    position: 'relative',\n                },\n                _b),\n        ],\n        linkInMenu: __spreadArray(__spreadArray([\n            classNames.linkInMenu\n        ], getLinkStyles(props, classNames, true), true), [\n            {\n                textAlign: 'left',\n                width: '100%',\n                height: 36,\n                lineHeight: 36,\n            },\n        ], false),\n        linkIsSelected: [\n            classNames.link,\n            classNames.linkIsSelected,\n            {\n                fontWeight: FontWeights.semibold,\n                selectors: (_c = {\n                        ':before': {\n                            backgroundColor: semanticColors.inputBackgroundChecked,\n                            selectors: (_d = {},\n                                _d[HighContrastSelector] = {\n                                    backgroundColor: 'Highlight',\n                                },\n                                _d),\n                        },\n                        ':hover::before': {\n                            left: 0,\n                            right: 0,\n                        }\n                    },\n                    _c[HighContrastSelector] = {\n                        color: 'Highlight',\n                    },\n                    _c),\n            },\n        ],\n        linkContent: [\n            classNames.linkContent,\n            {\n                flex: '0 1 100%',\n                selectors: {\n                    '& > * ': {\n                        marginLeft: 4,\n                    },\n                    '& > *:first-child': {\n                        marginLeft: 0,\n                    },\n                },\n            },\n        ],\n        text: [\n            classNames.text,\n            {\n                display: 'inline-block',\n                verticalAlign: 'top',\n            },\n        ],\n        count: [\n            classNames.count,\n            {\n                display: 'inline-block',\n                verticalAlign: 'top',\n            },\n        ],\n        icon: classNames.icon,\n    };\n};\n//# sourceMappingURL=Pivot.styles.js.map","import { useDocument, useWindow } from '@fluentui/react-window-provider';\n/**\n * NOTE: the check for `window`/`document` is a bit verbose and perhaps\n * overkill but it ensures the prior assumbed behavior of directly\n * calling `window`/`document` is preserved.\n *\n * It is possible to set `window` to undefined on `WindowProvider` so\n * we'll fallback to directly accessing the global in that (hopefully unlikely)\n * case.\n */\n/**\n * Get a reference to the `document` object.\n * Use this in place of the global `document` in React function components.\n * @returns Document | undefined\n */\nexport var useDocumentEx = function () {\n    var _a;\n    // eslint-disable-next-line no-restricted-globals\n    return (_a = useDocument()) !== null && _a !== void 0 ? _a : (typeof document !== 'undefined' ? document : undefined);\n};\n/**\n * Get a reference to the `window` object.\n * Use this in place of the global `window` in React function components.\n * @returns Window | undefined\n */\nexport var useWindowEx = function () {\n    var _a;\n    // eslint-disable-next-line no-restricted-globals\n    return (_a = useWindow()) !== null && _a !== void 0 ? _a : (typeof window !== 'undefined' ? window : undefined);\n};\n/**\n * Get a reference to the `document` object.\n * Use this in place of the global `document` in React class components.\n *\n * @param ctx - Class component WindowContext\n * @returns Document | undefined\n */\nexport var getDocumentEx = function (ctx) {\n    var _a, _b;\n    // eslint-disable-next-line no-restricted-globals\n    return (_b = (_a = ctx === null || ctx === void 0 ? void 0 : ctx.window) === null || _a === void 0 ? void 0 : _a.document) !== null && _b !== void 0 ? _b : (typeof document !== 'undefined' ? document : undefined);\n};\n/**\n * Get a reference to the `window` object.\n * Use this in place of the global `window` in React class components.\n *\n * @param ctx - Class component WindowContext\n * @returns Window | undefined\n */\nexport var getWindowEx = function (ctx) {\n    var _a;\n    // eslint-disable-next-line no-restricted-globals\n    return (_a = ctx === null || ctx === void 0 ? void 0 : ctx.window) !== null && _a !== void 0 ? _a : (typeof window !== 'undefined' ? window : undefined);\n};\n//# sourceMappingURL=dom.js.map","import { styled } from '../../Utilities';\nimport { IconBase } from './Icon.base';\nimport { getStyles } from './Icon.styles';\n/**\n * Legacy Icon component which can be targeted by customization. It's recommended to use `FontIcon`\n * or `ImageIcon` instead, especially in scenarios where rendering performance is important.\n * {@docCategory Icon}\n */\nexport var Icon = styled(IconBase, getStyles, undefined, {\n    scope: 'Icon',\n}, true);\nIcon.displayName = 'Icon';\n//# sourceMappingURL=Icon.js.map","import { __assign, __extends, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, css, nullRender, getNativeProps, divProperties, composeComponentAs, initializeComponentRef, } from '../../Utilities';\nimport { OverflowSet } from '../../OverflowSet';\nimport { ResizeGroup } from '../../ResizeGroup';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { CommandBarButton } from '../../Button';\nimport { TooltipHost } from '../../Tooltip';\nimport { getCommandButtonStyles } from './CommandBar.styles';\nvar getClassNames = classNamesFunction();\nexport var CommandBarBase = /** @class */ (function (_super) {\n    __extends(CommandBarBase, _super);\n    function CommandBarBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._overflowSet = React.createRef();\n        _this._resizeGroup = React.createRef();\n        _this._onRenderData = function (data) {\n            var _a;\n            var ariaLabel = (_a = _this.props, _a.ariaLabel), primaryGroupAriaLabel = _a.primaryGroupAriaLabel, farItemsGroupAriaLabel = _a.farItemsGroupAriaLabel;\n            var hasSecondSet = data.farItems && data.farItems.length > 0;\n            return (React.createElement(FocusZone, { className: css(_this._classNames.root), direction: FocusZoneDirection.horizontal, role: 'menubar', \"aria-label\": ariaLabel },\n                React.createElement(OverflowSet, { role: hasSecondSet ? 'group' : 'none', \"aria-label\": hasSecondSet ? primaryGroupAriaLabel : undefined, componentRef: _this._overflowSet, className: css(_this._classNames.primarySet), items: data.primaryItems, overflowItems: data.overflowItems.length ? data.overflowItems : undefined, onRenderItem: _this._onRenderItem, onRenderOverflowButton: _this._onRenderOverflowButton }),\n                hasSecondSet && (React.createElement(OverflowSet, { role: \"group\", \"aria-label\": farItemsGroupAriaLabel, className: css(_this._classNames.secondarySet), items: data.farItems, onRenderItem: _this._onRenderItem, onRenderOverflowButton: nullRender }))));\n        };\n        _this._onRenderItem = function (item) {\n            if (item.onRender) {\n                // These are the top level items, there is no relevant menu dismissing function to\n                // provide for the IContextualMenuItem onRender function. Pass in a no op function instead.\n                return item.onRender(item, function () { return undefined; });\n            }\n            // eslint-disable-next-line deprecation/deprecation\n            var itemText = item.text || item.name;\n            var commandButtonProps = __assign(__assign({ allowDisabledFocus: true, role: 'menuitem' }, item), { styles: getCommandButtonStyles(item.buttonStyles), className: css('ms-CommandBarItem-link', item.className), text: !item.iconOnly ? itemText : undefined, menuProps: item.subMenuProps, onClick: _this._onButtonClick(item) });\n            if (item.iconOnly && (itemText !== undefined || item.tooltipHostProps)) {\n                return (React.createElement(TooltipHost, __assign({ role: \"none\", content: itemText, setAriaDescribedBy: false }, item.tooltipHostProps), _this._commandButton(item, commandButtonProps)));\n            }\n            return _this._commandButton(item, commandButtonProps);\n        };\n        _this._commandButton = function (item, props) {\n            var ButtonAs = _this.props.buttonAs;\n            var CommandBarButtonAs = item.commandBarButtonAs;\n            var DefaultButtonAs = CommandBarButton;\n            // The prop types between these three possible implementations overlap enough that a force-cast is safe.\n            var Type = DefaultButtonAs;\n            if (CommandBarButtonAs) {\n                Type = composeComponentAs(CommandBarButtonAs, Type);\n            }\n            if (ButtonAs) {\n                Type = composeComponentAs(ButtonAs, Type);\n            }\n            // Always pass the default implementation to the override so it may be composed.\n            return React.createElement(Type, __assign({}, props));\n        };\n        _this._onRenderOverflowButton = function (overflowItems) {\n            var _a;\n            var overflowButtonProps = (_a = _this.props.overflowButtonProps, _a === void 0 ? {} : _a);\n            var combinedOverflowItems = __spreadArray(__spreadArray([], (overflowButtonProps.menuProps ? overflowButtonProps.menuProps.items : []), true), overflowItems, true);\n            var overflowProps = __assign(__assign({ role: 'menuitem' }, overflowButtonProps), { styles: __assign({ menuIcon: { fontSize: '17px' } }, overflowButtonProps.styles), className: css('ms-CommandBar-overflowButton', overflowButtonProps.className), menuProps: __assign(__assign({}, overflowButtonProps.menuProps), { items: combinedOverflowItems }), menuIconProps: __assign({ iconName: 'More' }, overflowButtonProps.menuIconProps) });\n            var OverflowButtonType = _this.props.overflowButtonAs\n                ? composeComponentAs(_this.props.overflowButtonAs, CommandBarButton)\n                : CommandBarButton;\n            return React.createElement(OverflowButtonType, __assign({}, overflowProps));\n        };\n        _this._onReduceData = function (data) {\n            var _a;\n            var shiftOnReduce = (_a = _this.props, _a.shiftOnReduce), onDataReduced = _a.onDataReduced;\n            var primaryItems = data.primaryItems, overflowItems = data.overflowItems, cacheKey = data.cacheKey;\n            var farItems = data.farItems;\n            // Use first item if shiftOnReduce, otherwise use last item\n            var movedItem = primaryItems[shiftOnReduce ? 0 : primaryItems.length - 1];\n            if (movedItem !== undefined) {\n                movedItem.renderedInOverflow = true;\n                overflowItems = __spreadArray([movedItem], overflowItems, true);\n                primaryItems = shiftOnReduce ? primaryItems.slice(1) : primaryItems.slice(0, -1);\n                var newData = __assign(__assign({}, data), { primaryItems: primaryItems, overflowItems: overflowItems });\n                cacheKey = _this._computeCacheKey({ primaryItems: primaryItems, overflow: overflowItems.length > 0, farItems: farItems });\n                if (onDataReduced) {\n                    onDataReduced(movedItem);\n                }\n                newData.cacheKey = cacheKey;\n                return newData;\n            }\n            return undefined;\n        };\n        _this._onGrowData = function (data) {\n            var _a;\n            var shiftOnReduce = (_a = _this.props, _a.shiftOnReduce), onDataGrown = _a.onDataGrown;\n            var minimumOverflowItems = data.minimumOverflowItems;\n            var primaryItems = data.primaryItems, overflowItems = data.overflowItems, cacheKey = data.cacheKey;\n            var farItems = data.farItems;\n            var movedItem = overflowItems[0];\n            // Make sure that moved item exists and is not one of the original overflow items\n            if (movedItem !== undefined && overflowItems.length > minimumOverflowItems) {\n                movedItem.renderedInOverflow = false;\n                overflowItems = overflowItems.slice(1);\n                // if shiftOnReduce, movedItem goes first, otherwise, last.\n                primaryItems = shiftOnReduce ? __spreadArray([movedItem], primaryItems, true) : __spreadArray(__spreadArray([], primaryItems, true), [movedItem], false);\n                var newData = __assign(__assign({}, data), { primaryItems: primaryItems, overflowItems: overflowItems });\n                cacheKey = _this._computeCacheKey({ primaryItems: primaryItems, overflow: overflowItems.length > 0, farItems: farItems });\n                if (onDataGrown) {\n                    onDataGrown(movedItem);\n                }\n                newData.cacheKey = cacheKey;\n                return newData;\n            }\n            return undefined;\n        };\n        initializeComponentRef(_this);\n        return _this;\n    }\n    CommandBarBase.prototype.render = function () {\n        var _a, _b, _c, _d;\n        var items = (_a = this.props, _a.items), overflowItems = _a.overflowItems, farItems = _a.farItems, styles = _a.styles, theme = _a.theme, dataDidRender = _a.dataDidRender, onReduceData = (_b = _a.onReduceData, _b === void 0 ? this._onReduceData : _b), onGrowData = (_c = _a.onGrowData, _c === void 0 ? this._onGrowData : _c), ResizeGroupAs = (_d = _a.resizeGroupAs, _d === void 0 ? ResizeGroup : _d);\n        var commandBarData = {\n            primaryItems: __spreadArray([], items, true),\n            overflowItems: __spreadArray([], overflowItems, true),\n            minimumOverflowItems: __spreadArray([], overflowItems, true).length,\n            farItems: farItems,\n            cacheKey: this._computeCacheKey({\n                primaryItems: __spreadArray([], items, true),\n                overflow: overflowItems && overflowItems.length > 0,\n                farItems: farItems,\n            }),\n        };\n        this._classNames = getClassNames(styles, { theme: theme });\n        // ResizeGroup will render these attributes to the root <div>.\n        // TODO We may need to elevate classNames from <FocusZone> into <ResizeGroup> ?\n        var nativeProps = getNativeProps(this.props, divProperties);\n        return (React.createElement(ResizeGroupAs, __assign({}, nativeProps, { componentRef: this._resizeGroup, data: commandBarData, onReduceData: onReduceData, onGrowData: onGrowData, onRenderData: this._onRenderData, dataDidRender: dataDidRender })));\n    };\n    CommandBarBase.prototype.focus = function () {\n        var overflowSet = this._overflowSet.current;\n        overflowSet && overflowSet.focus();\n    };\n    CommandBarBase.prototype.remeasure = function () {\n        this._resizeGroup.current && this._resizeGroup.current.remeasure();\n    };\n    CommandBarBase.prototype._onButtonClick = function (item) {\n        return function (ev) {\n            // inactive is deprecated. remove check in 7.0\n            // eslint-disable-next-line deprecation/deprecation\n            if (item.inactive) {\n                return;\n            }\n            if (item.onClick) {\n                item.onClick(ev, item);\n            }\n        };\n    };\n    CommandBarBase.prototype._computeCacheKey = function (data) {\n        var primaryItems = data.primaryItems, overflow = data.overflow, farItems = data.farItems;\n        var returnKey = function (acc, current) {\n            var _a = current.cacheKey, cacheKey = _a === void 0 ? current.key : _a;\n            return acc + cacheKey;\n        };\n        var primaryKey = primaryItems && primaryItems.reduce(returnKey, '');\n        var overflowKey = overflow ? 'overflow' : '';\n        var farKey = farItems && farItems.reduce(returnKey, '');\n        return [primaryKey, overflowKey, farKey].join('');\n    };\n    CommandBarBase.defaultProps = {\n        items: [],\n        overflowItems: [],\n    };\n    return CommandBarBase;\n}(React.Component));\n//# sourceMappingURL=CommandBar.base.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { IconType } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { ImageLoadState } from '../Image/Image.types';\nimport { getNativeProps, htmlElementProperties, classNamesFunction } from '../../Utilities';\nimport { getIconContent } from './FontIcon';\nvar getClassNames = classNamesFunction({\n    // Icon is used a lot by other components.\n    // It's likely to see expected cases which pass different className to the Icon.\n    // Therefore setting a larger cache size.\n    cacheSize: 100,\n});\nvar IconBase = /** @class */ (function (_super) {\n    __extends(IconBase, _super);\n    function IconBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._onImageLoadingStateChange = function (state) {\n            if (_this.props.imageProps && _this.props.imageProps.onLoadingStateChange) {\n                _this.props.imageProps.onLoadingStateChange(state);\n            }\n            if (state === ImageLoadState.error) {\n                _this.setState({ imageLoadError: true });\n            }\n        };\n        _this.state = {\n            imageLoadError: false,\n        };\n        return _this;\n    }\n    IconBase.prototype.render = function () {\n        var _a = this.props, children = _a.children, className = _a.className, styles = _a.styles, iconName = _a.iconName, imageErrorAs = _a.imageErrorAs, theme = _a.theme;\n        var isPlaceholder = typeof iconName === 'string' && iconName.length === 0;\n        var isImage = \n        // eslint-disable-next-line deprecation/deprecation\n        !!this.props.imageProps || this.props.iconType === IconType.image || this.props.iconType === IconType.Image;\n        var iconContent = getIconContent(iconName) || {};\n        var iconClassName = iconContent.iconClassName, iconContentChildren = iconContent.children, mergeImageProps = iconContent.mergeImageProps;\n        var classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n            iconClassName: iconClassName,\n            isImage: isImage,\n            isPlaceholder: isPlaceholder,\n        });\n        var RootType = isImage ? 'span' : 'i';\n        var nativeProps = getNativeProps(this.props, htmlElementProperties, [\n            'aria-label',\n        ]);\n        var imageLoadError = this.state.imageLoadError;\n        var imageProps = __assign(__assign({}, this.props.imageProps), { onLoadingStateChange: this._onImageLoadingStateChange });\n        var ImageType = (imageLoadError && imageErrorAs) || Image;\n        // eslint-disable-next-line deprecation/deprecation\n        var ariaLabel = this.props['aria-label'] || this.props.ariaLabel;\n        var accessibleName = imageProps.alt || ariaLabel || this.props.title;\n        var hasName = !!(accessibleName ||\n            this.props['aria-labelledby'] ||\n            imageProps['aria-label'] ||\n            imageProps['aria-labelledby']);\n        var containerProps = hasName\n            ? {\n                role: isImage || mergeImageProps ? undefined : 'img',\n                'aria-label': isImage || mergeImageProps ? undefined : accessibleName,\n            }\n            : {\n                'aria-hidden': true,\n            };\n        var finalIconContentChildren = iconContentChildren;\n        if (mergeImageProps && iconContentChildren && typeof iconContentChildren === 'object' && accessibleName) {\n            finalIconContentChildren = React.cloneElement(iconContentChildren, {\n                alt: accessibleName,\n            });\n        }\n        return (React.createElement(RootType, __assign({ \"data-icon-name\": iconName }, containerProps, nativeProps, (mergeImageProps\n            ? {\n                title: undefined,\n                'aria-label': undefined,\n            }\n            : {}), { className: classNames.root }), isImage ? React.createElement(ImageType, __assign({}, imageProps)) : children || finalIconContentChildren));\n    };\n    return IconBase;\n}(React.Component));\nexport { IconBase };\n//# sourceMappingURL=Icon.base.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, divProperties, getDocument, getNativeProps, getRTL, memoizeFunction, Customizer, FocusRectsProvider, } from '../../Utilities';\nimport { createTheme } from '../../Styling';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nvar getFabricTheme = memoizeFunction(function (theme, isRTL) { return createTheme(__assign(__assign({}, theme), { rtl: isRTL })); });\nvar getDir = function (_a) {\n    var theme = _a.theme, dir = _a.dir;\n    var contextDir = getRTL(theme) ? 'rtl' : 'ltr';\n    var pageDir = getRTL() ? 'rtl' : 'ltr';\n    var componentDir = dir ? dir : contextDir;\n    return {\n        // If Fabric dir !== contextDir\n        // Or If contextDir !== pageDir\n        // Then we need to set dir of the Fabric root\n        rootDir: componentDir !== contextDir || componentDir !== pageDir ? componentDir : dir,\n        // If dir !== contextDir || pageDir\n        // then set contextual theme around content\n        needsTheme: componentDir !== contextDir,\n    };\n};\nexport var FabricBase = React.forwardRef(function (props, ref) {\n    var className = props.className, theme = props.theme, applyTheme = props.applyTheme, applyThemeToBody = props.applyThemeToBody, styles = props.styles;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        applyTheme: applyTheme,\n        className: className,\n    });\n    var rootElement = React.useRef(null);\n    useApplyThemeToBody(applyThemeToBody, classNames, rootElement);\n    return React.createElement(React.Fragment, null, useRenderedContent(props, classNames, rootElement, ref));\n});\nFabricBase.displayName = 'FabricBase';\nfunction useRenderedContent(props, _a, rootElement, ref) {\n    var root = _a.root;\n    var _b = props.as, Root = _b === void 0 ? 'div' : _b, dir = props.dir, theme = props.theme;\n    var divProps = getNativeProps(props, divProperties, ['dir']);\n    var _c = getDir(props), rootDir = _c.rootDir, needsTheme = _c.needsTheme;\n    var renderedContent = (React.createElement(FocusRectsProvider, { providerRef: rootElement },\n        React.createElement(Root, __assign({ dir: rootDir }, divProps, { className: root, ref: useMergedRefs(rootElement, ref) }))));\n    // Create the contextual theme if component direction does not match parent direction.\n    if (needsTheme) {\n        // Disabling ThemeProvider here because theme doesn't need to be re-provided by ThemeProvider if dir has changed.\n        renderedContent = (\n        // eslint-disable-next-line deprecation/deprecation\n        React.createElement(Customizer, { settings: { theme: getFabricTheme(theme, dir === 'rtl') } }, renderedContent));\n    }\n    return renderedContent;\n}\nfunction useApplyThemeToBody(applyThemeToBody, _a, rootElement) {\n    var bodyThemed = _a.bodyThemed;\n    React.useEffect(function () {\n        if (applyThemeToBody) {\n            var currentDoc_1 = getDocument(rootElement.current);\n            if (currentDoc_1) {\n                currentDoc_1.body.classList.add(bodyThemed);\n                return function () {\n                    currentDoc_1.body.classList.remove(bodyThemed);\n                };\n            }\n        }\n    }, [bodyThemed, applyThemeToBody, rootElement]);\n    return rootElement;\n}\n//# sourceMappingURL=Fabric.base.js.map","import { normalize, FontSizes, getFocusStyle, HighContrastSelector } from '@fluentui/style-utilities';\nexport var styles = function (props) {\n    var _a;\n    var className = props.className, theme = props.theme, isDayPickerVisible = props.isDayPickerVisible, isMonthPickerVisible = props.isMonthPickerVisible, showWeekNumbers = props.showWeekNumbers;\n    var palette = theme.palette;\n    var totalWidth = isDayPickerVisible && isMonthPickerVisible ? 440 : 220;\n    if (showWeekNumbers && isDayPickerVisible) {\n        totalWidth += 30;\n    }\n    return {\n        root: [\n            normalize,\n            {\n                display: 'flex',\n                width: totalWidth,\n            },\n            !isMonthPickerVisible && {\n                flexDirection: 'column',\n            },\n            className,\n        ],\n        divider: {\n            top: 0,\n            borderRight: '1px solid',\n            borderColor: palette.neutralLight,\n        },\n        monthPickerWrapper: [\n            {\n                display: 'flex',\n                flexDirection: 'column',\n            },\n        ],\n        goTodayButton: [\n            getFocusStyle(theme, { inset: -1 }),\n            {\n                bottom: 0,\n                color: palette.neutralPrimary,\n                height: 30,\n                lineHeight: 30,\n                backgroundColor: 'transparent',\n                border: 'none',\n                boxSizing: 'content-box',\n                padding: '0 4px',\n                alignSelf: 'flex-end',\n                marginRight: 16,\n                marginTop: 3,\n                fontSize: FontSizes.small,\n                fontFamily: 'inherit',\n                overflow: 'visible',\n                selectors: {\n                    '& div': {\n                        fontSize: FontSizes.small,\n                    },\n                    '&:hover': {\n                        color: palette.themePrimary,\n                        backgroundColor: 'transparent',\n                        cursor: 'pointer',\n                        selectors: (_a = {},\n                            _a[HighContrastSelector] = {\n                                outline: '1px solid Buttontext',\n                                borderRadius: '2px',\n                            },\n                            _a),\n                    },\n                    '&:active': {\n                        color: palette.themeDark,\n                    },\n                    '&:disabled': {\n                        color: palette.neutralTertiaryAlt,\n                        pointerEvents: 'none',\n                    },\n                },\n            },\n        ],\n        liveRegion: {\n            border: 0,\n            height: '1px',\n            margin: '-1px',\n            overflow: 'hidden',\n            padding: 0,\n            width: '1px',\n            position: 'absolute',\n        },\n    };\n};\n//# sourceMappingURL=Calendar.styles.js.map","import { ResizeGroupBase } from './ResizeGroup.base';\nexport var ResizeGroup = ResizeGroupBase;\n//# sourceMappingURL=ResizeGroup.js.map","import { memoizeFunction } from '../../Utilities';\nimport { mergeStyleSets } from '../../Styling';\n/**\n * @deprecated use getStyles exported from VerticalDivider.styles.ts\n */\nexport var getDividerClassNames = memoizeFunction(\n// eslint-disable-next-line deprecation/deprecation\nfunction (theme) {\n    return mergeStyleSets({\n        wrapper: {\n            display: 'inline-flex',\n            height: '100%',\n            alignItems: 'center',\n        },\n        divider: {\n            width: 1,\n            height: '100%',\n            backgroundColor: theme.palette.neutralTertiaryAlt,\n        },\n    });\n});\n//# sourceMappingURL=VerticalDivider.classNames.js.map","import { styled } from '../../Utilities';\nimport { CalloutContentBase } from './CalloutContent.base';\nimport { getStyles } from './CalloutContent.styles';\nexport var CalloutContent = styled(CalloutContentBase, getStyles, undefined, {\n    scope: 'CalloutContent',\n});\n//# sourceMappingURL=CalloutContent.js.map","import { styled } from '../../Utilities';\nimport { ModalBase } from './Modal.base';\nimport { getStyles } from './Modal.styles';\nexport var Modal = styled(ModalBase, getStyles, undefined, {\n    scope: 'Modal',\n    fields: ['theme', 'styles', 'enableAriaHiddenSiblings'],\n});\nModal.displayName = 'Modal';\n//# sourceMappingURL=Modal.js.map","import { __assign } from \"tslib\";\nimport { normalize, FontSizes, FontWeights, getFocusStyle, AnimationStyles, HighContrastSelector, getHighContrastNoAdjustStyle, } from '@fluentui/style-utilities';\nimport { AnimationDirection } from '../Calendar.types';\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    var className = props.className, theme = props.theme, hasHeaderClickCallback = props.hasHeaderClickCallback, highlightCurrent = props.highlightCurrent, highlightSelected = props.highlightSelected, animateBackwards = props.animateBackwards, animationDirection = props.animationDirection;\n    var palette = theme.palette;\n    var animationStyle = {};\n    if (animateBackwards !== undefined) {\n        if (animationDirection === AnimationDirection.Horizontal) {\n            animationStyle = animateBackwards ? AnimationStyles.slideRightIn20 : AnimationStyles.slideLeftIn20;\n        }\n        else {\n            animationStyle = animateBackwards ? AnimationStyles.slideDownIn20 : AnimationStyles.slideUpIn20;\n        }\n    }\n    var headerAnimationStyle = animateBackwards !== undefined ? AnimationStyles.fadeIn200 : {};\n    return {\n        root: [\n            normalize,\n            {\n                width: 196,\n                padding: 12,\n                boxSizing: 'content-box',\n                overflow: 'hidden',\n            },\n            className,\n        ],\n        headerContainer: {\n            display: 'flex',\n        },\n        currentItemButton: [\n            getFocusStyle(theme, { inset: -1 }),\n            __assign(__assign({}, headerAnimationStyle), { fontSize: FontSizes.medium, fontWeight: FontWeights.semibold, fontFamily: 'inherit', textAlign: 'left', color: 'inherit', backgroundColor: 'transparent', flexGrow: 1, padding: '0 4px 0 10px', border: 'none', overflow: 'visible' }),\n            hasHeaderClickCallback && {\n                selectors: {\n                    '&:hover, &:active': {\n                        cursor: !hasHeaderClickCallback ? 'default' : 'pointer',\n                        color: palette.neutralDark,\n                        outline: '1px solid transparent',\n                        backgroundColor: palette.neutralLight,\n                    },\n                },\n            },\n        ],\n        navigationButtonsContainer: {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        navigationButton: [\n            getFocusStyle(theme, { inset: -1 }),\n            {\n                fontFamily: 'inherit',\n                width: 28,\n                minWidth: 28,\n                height: 28,\n                minHeight: 28,\n                display: 'block',\n                textAlign: 'center',\n                lineHeight: 28,\n                fontSize: FontSizes.small,\n                color: palette.neutralPrimary,\n                borderRadius: 2,\n                position: 'relative',\n                backgroundColor: 'transparent',\n                border: 'none',\n                padding: 0,\n                overflow: 'visible',\n                selectors: {\n                    '&:hover': {\n                        color: palette.neutralDark,\n                        cursor: 'pointer',\n                        outline: '1px solid transparent',\n                        backgroundColor: palette.neutralLight,\n                    },\n                },\n            },\n        ],\n        gridContainer: {\n            marginTop: 4,\n        },\n        buttonRow: __assign(__assign({}, animationStyle), { marginBottom: 16, selectors: {\n                '&:nth-child(n + 3)': {\n                    marginBottom: 0,\n                },\n            } }),\n        itemButton: [\n            getFocusStyle(theme, { inset: -1 }),\n            {\n                width: 40,\n                height: 40,\n                minWidth: 40,\n                minHeight: 40,\n                lineHeight: 40,\n                fontSize: FontSizes.small,\n                fontFamily: 'inherit',\n                padding: 0,\n                margin: '0 12px 0 0',\n                color: palette.neutralPrimary,\n                backgroundColor: 'transparent',\n                border: 'none',\n                borderRadius: 2,\n                overflow: 'visible',\n                selectors: {\n                    '&:nth-child(4n + 4)': {\n                        marginRight: 0,\n                    },\n                    '&:nth-child(n + 9)': {\n                        marginBottom: 0,\n                    },\n                    '& div': {\n                        fontWeight: FontWeights.regular,\n                    },\n                    '&:hover': {\n                        color: palette.neutralDark,\n                        backgroundColor: palette.neutralLight,\n                        cursor: 'pointer',\n                        outline: '1px solid transparent',\n                        selectors: (_a = {},\n                            _a[HighContrastSelector] = __assign({ background: 'Window', color: 'WindowText', outline: '1px solid Highlight' }, getHighContrastNoAdjustStyle()),\n                            _a),\n                    },\n                    '&:active': {\n                        backgroundColor: palette.themeLight,\n                        selectors: (_b = {},\n                            _b[HighContrastSelector] = __assign({ background: 'Window', color: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                            _b),\n                    },\n                },\n            },\n        ],\n        current: highlightCurrent\n            ? {\n                color: palette.white,\n                backgroundColor: palette.themePrimary,\n                selectors: (_c = {\n                        '& div': {\n                            fontWeight: FontWeights.semibold,\n                        },\n                        '&:hover': {\n                            backgroundColor: palette.themePrimary,\n                            selectors: (_d = {},\n                                _d[HighContrastSelector] = __assign({ backgroundColor: 'WindowText', color: 'Window' }, getHighContrastNoAdjustStyle()),\n                                _d),\n                        }\n                    },\n                    _c[HighContrastSelector] = __assign({ backgroundColor: 'WindowText', color: 'Window' }, getHighContrastNoAdjustStyle()),\n                    _c),\n            }\n            : {},\n        selected: highlightSelected\n            ? {\n                color: palette.neutralPrimary,\n                backgroundColor: palette.themeLight,\n                fontWeight: FontWeights.semibold,\n                selectors: (_e = {\n                        '& div': {\n                            fontWeight: FontWeights.semibold,\n                        },\n                        '&:hover, &:active': {\n                            backgroundColor: palette.themeLight,\n                            selectors: (_f = {},\n                                _f[HighContrastSelector] = __assign({ color: 'Window', background: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                                _f),\n                        }\n                    },\n                    _e[HighContrastSelector] = __assign({ background: 'Highlight', color: 'Window' }, getHighContrastNoAdjustStyle()),\n                    _e),\n            }\n            : {},\n        disabled: {\n            selectors: (_g = {\n                    '&, &:disabled, & button': {\n                        color: palette.neutralTertiaryAlt,\n                        pointerEvents: 'none',\n                    }\n                },\n                _g[HighContrastSelector] = {\n                    color: 'GrayText',\n                    forcedColorAdjust: 'none',\n                },\n                _g),\n        },\n    };\n};\n//# sourceMappingURL=CalendarPicker.styles.js.map","import { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, getFocusStyle, hiddenContentStyle } from '../../Styling';\nvar noOutline = {\n    outline: 0,\n};\nvar iconStyle = function (fontSize) {\n    return {\n        fontSize: fontSize,\n        margin: '0 4px',\n        height: '16px',\n        lineHeight: '16px',\n        textAlign: 'center',\n        flexShrink: 0,\n    };\n};\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport var getStyles = memoizeFunction(function (theme) {\n    var _a, _b;\n    var semanticColors = theme.semanticColors, effects = theme.effects, fonts = theme.fonts;\n    var border = semanticColors.buttonBorder;\n    var disabledBackground = semanticColors.disabledBackground;\n    var disabledText = semanticColors.disabledText;\n    var buttonHighContrastFocus = {\n        left: -2,\n        top: -2,\n        bottom: -2,\n        right: -2,\n        outlineColor: 'ButtonText',\n    };\n    return {\n        root: [\n            getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n            theme.fonts.medium,\n            {\n                border: '1px solid ' + border,\n                borderRadius: effects.roundedCorner2,\n                boxSizing: 'border-box',\n                cursor: 'pointer',\n                display: 'inline-block',\n                padding: '0 16px',\n                textDecoration: 'none',\n                textAlign: 'center',\n                userSelect: 'none',\n                // IE11 workaround for preventing shift of child elements of a button when active.\n                ':active > span': {\n                    position: 'relative',\n                    left: 0,\n                    top: 0,\n                },\n            },\n        ],\n        rootDisabled: [\n            getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n            {\n                backgroundColor: disabledBackground,\n                borderColor: disabledBackground,\n                color: disabledText,\n                cursor: 'default',\n                ':hover': noOutline,\n                ':focus': noOutline,\n            },\n        ],\n        iconDisabled: (_a = {\n                color: disabledText\n            },\n            _a[HighContrastSelector] = {\n                color: 'GrayText',\n            },\n            _a),\n        menuIconDisabled: (_b = {\n                color: disabledText\n            },\n            _b[HighContrastSelector] = {\n                color: 'GrayText',\n            },\n            _b),\n        flexContainer: {\n            display: 'flex',\n            height: '100%',\n            flexWrap: 'nowrap',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        description: {\n            display: 'block',\n        },\n        textContainer: {\n            flexGrow: 1,\n            display: 'block',\n        },\n        icon: iconStyle(fonts.mediumPlus.fontSize),\n        menuIcon: iconStyle(fonts.small.fontSize),\n        label: {\n            margin: '0 4px',\n            lineHeight: '100%',\n            display: 'block',\n        },\n        screenReaderText: hiddenContentStyle,\n    };\n});\n//# sourceMappingURL=BaseButton.styles.js.map","import { CalendarMonthBase } from './CalendarMonth.base';\nimport { getStyles } from './CalendarMonth.styles';\nimport { styled } from '../../../Utilities';\nexport var CalendarMonth = styled(CalendarMonthBase, getStyles, undefined, { scope: 'CalendarMonth' });\n//# sourceMappingURL=CalendarMonth.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport { classNamesFunction, divProperties, elementContains, getNativeProps, focusFirstChild } from '../../Utilities';\nimport { OverflowButton } from './OverflowButton';\nimport { useDocumentEx } from '../../utilities/dom';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'OverflowSet';\nvar useComponentRef = function (props, divContainer) {\n    var doc = useDocumentEx();\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        focus: function (_forceIntoFirstElement, bypassHiddenElements) {\n            var focusSucceeded = false;\n            if (divContainer.current) {\n                focusSucceeded = focusFirstChild(divContainer.current, bypassHiddenElements);\n            }\n            return focusSucceeded;\n        },\n        focusElement: function (childElement) {\n            var focusSucceeded = false;\n            if (!childElement) {\n                return false;\n            }\n            if (divContainer.current && elementContains(divContainer.current, childElement)) {\n                childElement.focus();\n                focusSucceeded = (doc === null || doc === void 0 ? void 0 : doc.activeElement) === childElement;\n            }\n            return focusSucceeded;\n        },\n    }); }, [divContainer, doc]);\n};\nexport var OverflowSetBase = React.forwardRef(function (props, forwardedRef) {\n    var divContainer = React.useRef(null);\n    var mergedRef = useMergedRefs(divContainer, forwardedRef);\n    useComponentRef(props, divContainer);\n    var items = props.items, overflowItems = props.overflowItems, className = props.className, styles = props.styles, vertical = props.vertical, role = props.role, _a = props.overflowSide, overflowSide = _a === void 0 ? 'end' : _a, onRenderItem = props.onRenderItem;\n    var classNames = getClassNames(styles, { className: className, vertical: vertical });\n    var showOverflow = !!overflowItems && overflowItems.length > 0;\n    return (React.createElement(\"div\", __assign({}, getNativeProps(props, divProperties), { role: role || 'group', \"aria-orientation\": role === 'menubar' ? (vertical === true ? 'vertical' : 'horizontal') : undefined, className: classNames.root, ref: mergedRef }),\n        overflowSide === 'start' && showOverflow && React.createElement(OverflowButton, __assign({}, props, { className: classNames.overflowButton })),\n        items &&\n            items.map(function (item, i) { return (React.createElement(\"div\", { className: classNames.item, key: item.key, role: \"none\" }, onRenderItem(item))); }),\n        overflowSide === 'end' && showOverflow && React.createElement(OverflowButton, __assign({}, props, { className: classNames.overflowButton }))));\n});\nOverflowSetBase.displayName = COMPONENT_NAME;\n//# sourceMappingURL=OverflowSet.base.js.map","import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { CalloutContent } from './CalloutContent';\nimport { Layer } from '../../Layer';\nexport var Callout = React.forwardRef(function (_a, forwardedRef) {\n    var layerProps = _a.layerProps, doNotLayer = _a.doNotLayer, rest = __rest(_a, [\"layerProps\", \"doNotLayer\"]);\n    var content = React.createElement(CalloutContent, __assign({}, rest, { doNotLayer: doNotLayer, ref: forwardedRef }));\n    return doNotLayer ? content : React.createElement(Layer, __assign({}, layerProps), content);\n});\nCallout.displayName = 'Callout';\n//# sourceMappingURL=Callout.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction({\n    // Label is used a lot by other components.\n    // It's likely to see expected cases which pass different className to the Label.\n    // Therefore setting a larger cache size.\n    cacheSize: 100,\n});\nvar LabelBase = /** @class */ (function (_super) {\n    __extends(LabelBase, _super);\n    function LabelBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LabelBase.prototype.render = function () {\n        var _a = this.props, _b = _a.as, RootType = _b === void 0 ? 'label' : _b, children = _a.children, className = _a.className, disabled = _a.disabled, styles = _a.styles, required = _a.required, theme = _a.theme;\n        var classNames = getClassNames(styles, {\n            className: className,\n            disabled: disabled,\n            required: required,\n            theme: theme,\n        });\n        return (React.createElement(RootType, __assign({}, getNativeProps(this.props, divProperties), { className: classNames.root }), children));\n    };\n    return LabelBase;\n}(React.Component));\nexport { LabelBase };\n//# sourceMappingURL=Label.base.js.map","/**\n * {@docCategory Dialog}\n */\nexport var DialogType;\n(function (DialogType) {\n    /** Standard dialog */\n    DialogType[DialogType[\"normal\"] = 0] = \"normal\";\n    /** Dialog with large header banner */\n    DialogType[DialogType[\"largeHeader\"] = 1] = \"largeHeader\";\n    /** Dialog with an 'x' close button in the upper-right corner */\n    DialogType[DialogType[\"close\"] = 2] = \"close\";\n})(DialogType || (DialogType = {}));\n//# sourceMappingURL=DialogContent.types.js.map","import { HighContrastSelector, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-Overlay',\n    rootDark: 'ms-Overlay--dark',\n};\nexport var getStyles = function (props) {\n    var _a;\n    var className = props.className, theme = props.theme, isNone = props.isNone, isDark = props.isDark;\n    var palette = theme.palette;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                backgroundColor: palette.whiteTranslucent40,\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0,\n                position: 'absolute',\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        border: '1px solid WindowText',\n                        opacity: 0,\n                    },\n                    _a),\n            },\n            isNone && {\n                visibility: 'hidden',\n            },\n            isDark && [\n                classNames.rootDark,\n                {\n                    backgroundColor: palette.blackTranslucent40,\n                },\n            ],\n            className,\n        ],\n    };\n};\n//# sourceMappingURL=Overlay.styles.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Async, EventGroup, KeyCodes, elementContains, findScrollableParent, getParent, getDocument, getWindow, isElementTabbable, css, initializeComponentRef, FocusRects, } from '../../Utilities';\nimport { SelectionMode } from './interfaces';\n// Selection definitions:\n//\n// Anchor index: the point from which a range selection starts.\n// Focus index: the point from which layout movement originates from.\n//\n// These two can differ. Tests:\n//\n// If you start at index 5\n// Shift click to index 10\n//    The focus is 10, the anchor is 5.\n// If you shift click at index 0\n//    The anchor remains at 5, the items between 0 and 5 are selected and everything else is cleared.\n// If you click index 8\n//    The anchor and focus are set to 8.\nvar SELECTION_DISABLED_ATTRIBUTE_NAME = 'data-selection-disabled';\nvar SELECTION_INDEX_ATTRIBUTE_NAME = 'data-selection-index';\nvar SELECTION_SPAN_ATTRIBUTE_NAME = 'data-selection-span';\nvar SELECTION_TOGGLE_ATTRIBUTE_NAME = 'data-selection-toggle';\nvar SELECTION_INVOKE_ATTRIBUTE_NAME = 'data-selection-invoke';\nvar SELECTION_INVOKE_TOUCH_ATTRIBUTE_NAME = 'data-selection-touch-invoke';\nvar SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME = 'data-selection-all-toggle';\nvar SELECTION_SELECT_ATTRIBUTE_NAME = 'data-selection-select';\n/**\n * {@docCategory Selection}\n */\nexport var SelectionZone = /** @class */ (function (_super) {\n    __extends(SelectionZone, _super);\n    function SelectionZone(props) {\n        var _this = _super.call(this, props) || this;\n        _this._root = React.createRef();\n        /**\n         * In some cases, the consuming scenario requires to set focus on a row without having SelectionZone\n         * react to the event. Note that focus events in IE \\<= 11 will occur asynchronously after .focus() has\n         * been called on an element, so we need a flag to store the idea that we will bypass the \"next\"\n         * focus event that occurs. This method does that.\n         */\n        _this.ignoreNextFocus = function () {\n            _this._handleNextFocus(false);\n        };\n        _this._onSelectionChange = function () {\n            var selection = _this.props.selection;\n            var isModal = selection.isModal && selection.isModal();\n            _this.setState({\n                isModal: isModal,\n            });\n        };\n        _this._onMouseDownCapture = function (ev) {\n            var target = ev.target;\n            var win = getWindow(_this._root.current);\n            var doc = win === null || win === void 0 ? void 0 : win.document;\n            if ((doc === null || doc === void 0 ? void 0 : doc.activeElement) !== target && !elementContains(doc === null || doc === void 0 ? void 0 : doc.activeElement, target)) {\n                _this.ignoreNextFocus();\n                return;\n            }\n            if (!elementContains(target, _this._root.current)) {\n                return;\n            }\n            while (target !== _this._root.current) {\n                if (_this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\n                    _this.ignoreNextFocus();\n                    break;\n                }\n                target = getParent(target);\n            }\n        };\n        /**\n         * When we focus an item, for single/multi select scenarios, we should try to select it immediately\n         * as long as the focus did not originate from a mouse down/touch event. For those cases, we handle them\n         * specially.\n         */\n        _this._onFocus = function (ev) {\n            var target = ev.target;\n            var selection = _this.props.selection;\n            var isToggleModifierPressed = _this._isCtrlPressed || _this._isMetaPressed;\n            var selectionMode = _this._getSelectionMode();\n            if (_this._shouldHandleFocus && selectionMode !== SelectionMode.none) {\n                var isToggle = _this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME);\n                var itemRoot = _this._findItemRoot(target);\n                if (!isToggle && itemRoot) {\n                    var index = _this._getItemIndex(itemRoot);\n                    var span = _this._getItemSpan(itemRoot);\n                    if (span === undefined) {\n                        if (isToggleModifierPressed) {\n                            // set anchor only.\n                            selection.setIndexSelected(index, selection.isIndexSelected(index), true);\n                            if (_this.props.enterModalOnTouch && _this._isTouch && selection.setModal) {\n                                selection.setModal(true);\n                                _this._setIsTouch(false);\n                            }\n                        }\n                        else {\n                            if (_this.props.isSelectedOnFocus) {\n                                _this._onItemSurfaceClick('focus', index);\n                            }\n                        }\n                    }\n                }\n            }\n            _this._handleNextFocus(false);\n        };\n        _this._onMouseDown = function (ev) {\n            _this._updateModifiers(ev);\n            var toggleWithoutModifierPressed = _this.props.toggleWithoutModifierPressed;\n            var target = ev.target;\n            var itemRoot = _this._findItemRoot(target);\n            // No-op if selection is disabled\n            if (_this._isSelectionDisabled(target)) {\n                return;\n            }\n            while (target !== _this._root.current) {\n                if (_this._hasAttribute(target, SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME)) {\n                    break;\n                }\n                else if (itemRoot) {\n                    if (_this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\n                        break;\n                    }\n                    else if (_this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\n                        break;\n                    }\n                    else if ((target === itemRoot || _this._shouldAutoSelect(target)) &&\n                        !_this._isShiftPressed &&\n                        !_this._isCtrlPressed &&\n                        !_this._isMetaPressed &&\n                        !toggleWithoutModifierPressed) {\n                        _this._onInvokeMouseDown(ev, _this._getItemIndex(itemRoot), _this._getItemSpan(itemRoot));\n                        break;\n                    }\n                    else if (_this.props.disableAutoSelectOnInputElements &&\n                        (target.tagName === 'A' || target.tagName === 'BUTTON' || target.tagName === 'INPUT')) {\n                        return;\n                    }\n                }\n                target = getParent(target);\n            }\n        };\n        _this._onTouchStartCapture = function (ev) {\n            _this._setIsTouch(true);\n        };\n        _this._onClick = function (ev) {\n            var _a;\n            var enableTouchInvocationTarget = (_a = _this.props.enableTouchInvocationTarget, _a === void 0 ? false : _a);\n            _this._updateModifiers(ev);\n            var target = ev.target;\n            var itemRoot = _this._findItemRoot(target);\n            var isSelectionDisabled = _this._isSelectionDisabled(target);\n            while (target !== _this._root.current) {\n                if (_this._hasAttribute(target, SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME)) {\n                    if (!isSelectionDisabled) {\n                        _this._onToggleAllClick(ev);\n                    }\n                    break;\n                }\n                else if (itemRoot) {\n                    var index = _this._getItemIndex(itemRoot);\n                    var span = _this._getItemSpan(itemRoot);\n                    if (_this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\n                        if (!isSelectionDisabled) {\n                            if (_this._isShiftPressed) {\n                                _this._onItemSurfaceClick('click', index, span);\n                            }\n                            else {\n                                _this._onToggleClick(ev, index, span);\n                            }\n                        }\n                        break;\n                    }\n                    else if ((_this._isTouch &&\n                        enableTouchInvocationTarget &&\n                        _this._hasAttribute(target, SELECTION_INVOKE_TOUCH_ATTRIBUTE_NAME)) ||\n                        _this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\n                        if (span === undefined) {\n                            // Items should be invokable even if selection is disabled.\n                            _this._onInvokeClick(ev, index);\n                        }\n                        break;\n                    }\n                    else if (target === itemRoot) {\n                        if (!isSelectionDisabled) {\n                            _this._onItemSurfaceClick('click', index, span);\n                        }\n                        break;\n                    }\n                    else if (target.tagName === 'A' || target.tagName === 'BUTTON' || target.tagName === 'INPUT') {\n                        return;\n                    }\n                }\n                target = getParent(target);\n            }\n        };\n        _this._onContextMenu = function (ev) {\n            var _a;\n            var target = ev.target;\n            var onItemContextMenu = (_a = _this.props, _a.onItemContextMenu), selection = _a.selection;\n            if (onItemContextMenu) {\n                var itemRoot = _this._findItemRoot(target);\n                if (itemRoot) {\n                    var index = _this._getItemIndex(itemRoot);\n                    _this._onInvokeMouseDown(ev, index);\n                    var skipPreventDefault = onItemContextMenu(selection.getItems()[index], index, ev.nativeEvent);\n                    // In order to keep back compat, if the value here is undefined, then we should still\n                    // call preventDefault(). Only in the case where true is explicitly returned should\n                    // the call be skipped.\n                    if (!skipPreventDefault) {\n                        ev.preventDefault();\n                    }\n                }\n            }\n        };\n        /**\n         * In multi selection, if you double click within an item's root (but not within the invoke element or\n         * input elements), we should execute the invoke handler.\n         */\n        _this._onDoubleClick = function (ev) {\n            var target = ev.target;\n            var onItemInvoked = _this.props.onItemInvoked;\n            var itemRoot = _this._findItemRoot(target);\n            if (itemRoot && onItemInvoked && !_this._isInputElement(target)) {\n                var index = _this._getItemIndex(itemRoot);\n                while (target !== _this._root.current) {\n                    if (_this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME) ||\n                        _this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\n                        break;\n                    }\n                    else if (target === itemRoot) {\n                        _this._onInvokeClick(ev, index);\n                        break;\n                    }\n                    target = getParent(target);\n                }\n                target = getParent(target);\n            }\n        };\n        _this._onKeyDownCapture = function (ev) {\n            _this._updateModifiers(ev);\n            _this._handleNextFocus(true);\n        };\n        _this._onKeyDown = function (ev) {\n            var _a;\n            _this._updateModifiers(ev);\n            var target = ev.target;\n            var isSelectionDisabled = _this._isSelectionDisabled(target);\n            var selection = (_a = _this.props, _a.selection), selectionClearedOnEscapePress = _a.selectionClearedOnEscapePress;\n            // eslint-disable-next-line deprecation/deprecation\n            var isSelectAllKey = ev.which === KeyCodes.a && (_this._isCtrlPressed || _this._isMetaPressed);\n            // eslint-disable-next-line deprecation/deprecation\n            var isClearSelectionKey = ev.which === KeyCodes.escape;\n            // Ignore key downs from input elements.\n            if (_this._isInputElement(target)) {\n                // A key was pressed while an item in this zone was focused.\n                return;\n            }\n            var selectionMode = _this._getSelectionMode();\n            // If ctrl-a is pressed, select all (if all are not already selected.)\n            if (isSelectAllKey && selectionMode === SelectionMode.multiple && !selection.isAllSelected()) {\n                if (!isSelectionDisabled) {\n                    selection.setAllSelected(true);\n                }\n                ev.stopPropagation();\n                ev.preventDefault();\n                return;\n            }\n            // If escape is pressed and the component is configured to clear on escape press,\n            // clear selection (if any are selected.)\n            if (selectionClearedOnEscapePress && isClearSelectionKey && selection.getSelectedCount() > 0) {\n                if (!isSelectionDisabled) {\n                    selection.setAllSelected(false);\n                }\n                ev.stopPropagation();\n                ev.preventDefault();\n                return;\n            }\n            var itemRoot = _this._findItemRoot(target);\n            // If a key was pressed within an item, we should treat \"enters\" as invokes and \"space\" as toggle\n            if (itemRoot) {\n                var index = _this._getItemIndex(itemRoot);\n                var span = _this._getItemSpan(itemRoot);\n                while (target !== _this._root.current) {\n                    if (_this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\n                        // For toggle elements, assuming they are rendered as buttons, they will generate a click event,\n                        // so we can no-op for any keydowns in this case.\n                        break;\n                    }\n                    else if (_this._shouldAutoSelect(target)) {\n                        if (!isSelectionDisabled && span === undefined) {\n                            // If the event went to an element which should trigger auto-select, select it and then let\n                            // the default behavior kick in.\n                            _this._onInvokeMouseDown(ev, index, span);\n                        }\n                        break;\n                    }\n                    else if (\n                    // eslint-disable-next-line deprecation/deprecation\n                    (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) &&\n                        (target.tagName === 'BUTTON' ||\n                            target.tagName === 'A' ||\n                            target.tagName === 'INPUT' ||\n                            target.tagName === 'SUMMARY')) {\n                        return false;\n                    }\n                    else if (target === itemRoot) {\n                        // eslint-disable-next-line deprecation/deprecation\n                        if (ev.which === KeyCodes.enter) {\n                            if (span === undefined) {\n                                // Items should be invokable even if selection is disabled.\n                                _this._onInvokeClick(ev, index);\n                                ev.preventDefault();\n                            }\n                            return;\n                            // eslint-disable-next-line deprecation/deprecation\n                        }\n                        else if (ev.which === KeyCodes.space) {\n                            if (!isSelectionDisabled) {\n                                _this._onToggleClick(ev, index, span);\n                            }\n                            ev.preventDefault();\n                            return;\n                        }\n                        break;\n                    }\n                    target = getParent(target);\n                }\n            }\n        };\n        _this._events = new EventGroup(_this);\n        _this._async = new Async(_this);\n        initializeComponentRef(_this);\n        var selection = _this.props.selection;\n        // Reflect the initial modal state of selection into the state.\n        var isModal = selection.isModal && selection.isModal();\n        _this.state = {\n            isModal: isModal,\n        };\n        return _this;\n    }\n    SelectionZone.getDerivedStateFromProps = function (nextProps, prevState) {\n        var isModal = nextProps.selection.isModal && nextProps.selection.isModal();\n        return __assign(__assign({}, prevState), { isModal: isModal });\n    };\n    SelectionZone.prototype.componentDidMount = function () {\n        var win = getWindow(this._root.current);\n        var doc = win === null || win === void 0 ? void 0 : win.document;\n        // Track the latest modifier keys globally.\n        this._events.on(win, 'keydown, keyup', this._updateModifiers, true);\n        this._events.on(doc, 'click', this._findScrollParentAndTryClearOnEmptyClick);\n        this._events.on(doc === null || doc === void 0 ? void 0 : doc.body, 'touchstart', this._onTouchStartCapture, true);\n        this._events.on(doc === null || doc === void 0 ? void 0 : doc.body, 'touchend', this._onTouchStartCapture, true);\n        // Subscribe to the selection to keep modal state updated.\n        this._events.on(this.props.selection, 'change', this._onSelectionChange);\n    };\n    SelectionZone.prototype.render = function () {\n        var isModal = this.state.isModal;\n        return (React.createElement(\"div\", { className: css('ms-SelectionZone', this.props.className, {\n                'ms-SelectionZone--modal': !!isModal,\n            }), ref: this._root, onKeyDown: this._onKeyDown, onMouseDown: this._onMouseDown, onKeyDownCapture: this._onKeyDownCapture, onClick: this._onClick, role: \"presentation\", onDoubleClick: this._onDoubleClick, onContextMenu: this._onContextMenu, onMouseDownCapture: this._onMouseDownCapture, onFocusCapture: this._onFocus, \"data-selection-is-modal\": isModal ? true : undefined },\n            this.props.children,\n            React.createElement(FocusRects, null)));\n    };\n    SelectionZone.prototype.componentDidUpdate = function (previousProps) {\n        var selection = this.props.selection;\n        if (selection !== previousProps.selection) {\n            // Whenever selection changes, update the subscripton to keep modal state updated.\n            this._events.off(previousProps.selection);\n            this._events.on(selection, 'change', this._onSelectionChange);\n        }\n    };\n    SelectionZone.prototype.componentWillUnmount = function () {\n        this._events.dispose();\n        this._async.dispose();\n    };\n    SelectionZone.prototype._isSelectionDisabled = function (target) {\n        if (this._getSelectionMode() === SelectionMode.none) {\n            return true;\n        }\n        while (target !== this._root.current) {\n            if (this._hasAttribute(target, SELECTION_DISABLED_ATTRIBUTE_NAME)) {\n                return true;\n            }\n            target = getParent(target);\n        }\n        return false;\n    };\n    SelectionZone.prototype._onToggleAllClick = function (ev) {\n        var selection = this.props.selection;\n        var selectionMode = this._getSelectionMode();\n        if (selectionMode === SelectionMode.multiple) {\n            selection.toggleAllSelected();\n            ev.stopPropagation();\n            ev.preventDefault();\n        }\n    };\n    SelectionZone.prototype._onToggleClick = function (ev, index, span) {\n        var selection = this.props.selection;\n        var selectionMode = this._getSelectionMode();\n        selection.setChangeEvents(false);\n        if (this.props.enterModalOnTouch &&\n            this._isTouch &&\n            (span !== undefined ? !selection.isRangeSelected(index, span) : !selection.isIndexSelected(index)) &&\n            selection.setModal) {\n            selection.setModal(true);\n            this._setIsTouch(false);\n        }\n        if (selectionMode === SelectionMode.multiple) {\n            if (span !== undefined) {\n                selection.toggleRangeSelected(index, span);\n            }\n            else {\n                selection.toggleIndexSelected(index);\n            }\n        }\n        else if (selectionMode === SelectionMode.single) {\n            if (span === undefined || span === 1) {\n                var isSelected = selection.isIndexSelected(index);\n                var isModal = selection.isModal && selection.isModal();\n                selection.setAllSelected(false);\n                selection.setIndexSelected(index, !isSelected, true);\n                if (isModal && selection.setModal) {\n                    // Since the above call to setAllSelected(false) clears modal state,\n                    // restore it. This occurs because the SelectionMode of the Selection\n                    // may differ from the SelectionZone.\n                    selection.setModal(true);\n                }\n            }\n        }\n        else {\n            selection.setChangeEvents(true);\n            return;\n        }\n        selection.setChangeEvents(true);\n        ev.stopPropagation();\n        // NOTE: ev.preventDefault is not called for toggle clicks, because this will kill the browser behavior\n        // for checkboxes if you use a checkbox for the toggle.\n    };\n    SelectionZone.prototype._onInvokeClick = function (ev, index) {\n        var _a;\n        var selection = (_a = this.props, _a.selection), onItemInvoked = _a.onItemInvoked;\n        if (onItemInvoked) {\n            onItemInvoked(selection.getItems()[index], index, ev.nativeEvent);\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n    };\n    SelectionZone.prototype._onItemSurfaceClick = function (type, index, span) {\n        var _a;\n        var _b;\n        var selection = (_a = this.props, _a.selection), toggleWithoutModifierPressed = _a.toggleWithoutModifierPressed;\n        var isToggleModifierPressed = this._isCtrlPressed || this._isMetaPressed;\n        var selectionMode = this._getSelectionMode();\n        if (selectionMode === SelectionMode.multiple) {\n            if (this._isShiftPressed && !this._isTabPressed) {\n                if (span !== undefined) {\n                    (_b = selection.selectToRange) === null || _b === void 0 ? void 0 : _b.call(selection, index, span, !isToggleModifierPressed);\n                }\n                else {\n                    selection.selectToIndex(index, !isToggleModifierPressed);\n                }\n            }\n            else if (type === 'click' && (isToggleModifierPressed || toggleWithoutModifierPressed)) {\n                if (span !== undefined) {\n                    selection.toggleRangeSelected(index, span);\n                }\n                else {\n                    selection.toggleIndexSelected(index);\n                }\n            }\n            else {\n                this._clearAndSelectIndex(index, span);\n            }\n        }\n        else if (selectionMode === SelectionMode.single) {\n            this._clearAndSelectIndex(index, span);\n        }\n    };\n    SelectionZone.prototype._onInvokeMouseDown = function (ev, index, span) {\n        var selection = this.props.selection;\n        if (span !== undefined) {\n            if (selection.isRangeSelected(index, span)) {\n                return;\n            }\n        }\n        else {\n            // Only do work if item is not selected.\n            if (selection.isIndexSelected(index)) {\n                return;\n            }\n        }\n        this._clearAndSelectIndex(index, span);\n    };\n    /**\n     * To avoid high startup cost of traversing the DOM on component mount,\n     * defer finding the scrollable parent until a click interaction.\n     *\n     * The styles will probably already calculated since we're running in a click handler,\n     * so this is less likely to cause layout thrashing then doing it in mount.\n     */\n    SelectionZone.prototype._findScrollParentAndTryClearOnEmptyClick = function (ev) {\n        var win = getWindow(this._root.current);\n        var doc = win === null || win === void 0 ? void 0 : win.document;\n        var scrollParent = findScrollableParent(this._root.current);\n        // unbind this handler and replace binding with a binding on the actual scrollable parent\n        this._events.off(doc, 'click', this._findScrollParentAndTryClearOnEmptyClick);\n        this._events.on(scrollParent, 'click', this._tryClearOnEmptyClick);\n        // If we clicked inside the scrollable parent, call through to the handler on this click.\n        if ((scrollParent && ev.target instanceof Node && scrollParent.contains(ev.target)) || scrollParent === ev.target) {\n            this._tryClearOnEmptyClick(ev);\n        }\n    };\n    SelectionZone.prototype._tryClearOnEmptyClick = function (ev) {\n        if (!this.props.selectionPreservedOnEmptyClick && this._isNonHandledClick(ev.target)) {\n            this.props.selection.setAllSelected(false);\n        }\n    };\n    SelectionZone.prototype._clearAndSelectIndex = function (index, span) {\n        var _a, _b;\n        var _c;\n        var selection = (_a = this.props, _a.selection), selectionClearedOnSurfaceClick = (_b = _a.selectionClearedOnSurfaceClick, _b === void 0 ? true : _b);\n        var isAlreadySingleSelected = (span === undefined || span === 1) && selection.getSelectedCount() === 1 && selection.isIndexSelected(index);\n        if (!isAlreadySingleSelected && selectionClearedOnSurfaceClick) {\n            var isModal = selection.isModal && selection.isModal();\n            selection.setChangeEvents(false);\n            selection.setAllSelected(false);\n            if (span !== undefined) {\n                (_c = selection.setRangeSelected) === null || _c === void 0 ? void 0 : _c.call(selection, index, span, true, true);\n            }\n            else {\n                selection.setIndexSelected(index, true, true);\n            }\n            if (isModal || (this.props.enterModalOnTouch && this._isTouch)) {\n                if (selection.setModal) {\n                    selection.setModal(true);\n                }\n                if (this._isTouch) {\n                    this._setIsTouch(false);\n                }\n            }\n            selection.setChangeEvents(true);\n        }\n    };\n    /**\n     * We need to track the modifier key states so that when focus events occur, which do not contain\n     * modifier states in the Event object, we know how to behave.\n     */\n    SelectionZone.prototype._updateModifiers = function (ev) {\n        this._isShiftPressed = ev.shiftKey;\n        this._isCtrlPressed = ev.ctrlKey;\n        this._isMetaPressed = ev.metaKey;\n        // eslint-disable-next-line deprecation/deprecation\n        var keyCode = ev.keyCode;\n        this._isTabPressed = keyCode ? keyCode === KeyCodes.tab : false;\n    };\n    SelectionZone.prototype._findItemRoot = function (target) {\n        var selection = this.props.selection;\n        while (target !== this._root.current) {\n            var indexValue = target.getAttribute(SELECTION_INDEX_ATTRIBUTE_NAME);\n            var index = Number(indexValue);\n            if (indexValue !== null && index >= 0 && index < selection.getItems().length) {\n                break;\n            }\n            target = getParent(target);\n        }\n        if (target === this._root.current) {\n            return undefined;\n        }\n        return target;\n    };\n    SelectionZone.prototype._getItemIndex = function (itemRoot) {\n        var _a;\n        var indexValue = parseInt((_a = itemRoot.getAttribute(SELECTION_INDEX_ATTRIBUTE_NAME)) !== null && _a !== void 0 ? _a : '', 10);\n        return isNaN(indexValue) ? -1 : indexValue;\n    };\n    SelectionZone.prototype._getItemSpan = function (itemRoot) {\n        var _a;\n        var spanValue = parseInt((_a = itemRoot.getAttribute(SELECTION_SPAN_ATTRIBUTE_NAME)) !== null && _a !== void 0 ? _a : '', 10);\n        return isNaN(spanValue) ? undefined : spanValue;\n    };\n    SelectionZone.prototype._shouldAutoSelect = function (element) {\n        return this._hasAttribute(element, SELECTION_SELECT_ATTRIBUTE_NAME);\n    };\n    SelectionZone.prototype._hasAttribute = function (element, attributeName) {\n        var isToggle = false;\n        while (!isToggle && element !== this._root.current) {\n            var value = element.getAttribute(attributeName);\n            if (value === 'false') {\n                isToggle = false;\n                break;\n            }\n            isToggle = value === 'true';\n            element = getParent(element);\n        }\n        return isToggle;\n    };\n    SelectionZone.prototype._isInputElement = function (element) {\n        return (element.tagName === 'INPUT' ||\n            element.tagName === 'TEXTAREA' ||\n            element.getAttribute('contenteditable') === 'true' ||\n            element.getAttribute('contenteditable') === '');\n    };\n    SelectionZone.prototype._isNonHandledClick = function (element) {\n        var doc = getDocument();\n        if (doc && element) {\n            while (element && element !== doc.documentElement) {\n                if (isElementTabbable(element) || element.hasAttribute('data-selection-index')) {\n                    return false;\n                }\n                element = getParent(element);\n            }\n        }\n        return true;\n    };\n    SelectionZone.prototype._handleNextFocus = function (handleFocus) {\n        var _this = this;\n        if (this._shouldHandleFocusTimeoutId) {\n            this._async.clearTimeout(this._shouldHandleFocusTimeoutId);\n            this._shouldHandleFocusTimeoutId = undefined;\n        }\n        this._shouldHandleFocus = handleFocus;\n        if (handleFocus) {\n            this._async.setTimeout(function () {\n                _this._shouldHandleFocus = false;\n            }, 100);\n        }\n    };\n    SelectionZone.prototype._setIsTouch = function (isTouch) {\n        var _this = this;\n        if (this._isTouchTimeoutId) {\n            this._async.clearTimeout(this._isTouchTimeoutId);\n            this._isTouchTimeoutId = undefined;\n        }\n        this._isTouch = true;\n        if (isTouch) {\n            this._async.setTimeout(function () {\n                _this._isTouch = false;\n            }, 300);\n        }\n    };\n    SelectionZone.prototype._getSelectionMode = function () {\n        var _a;\n        var selection = this.props.selection;\n        var selectionMode = (_a = this.props.selectionMode, _a === void 0 ? selection ? selection.mode : SelectionMode.none : _a);\n        return selectionMode;\n    };\n    SelectionZone.defaultProps = {\n        isSelectedOnFocus: true,\n        toggleWithoutModifierPressed: false,\n        selectionMode: SelectionMode.multiple,\n        selectionClearedOnEscapePress: true,\n    };\n    return SelectionZone;\n}(React.Component));\n//# sourceMappingURL=SelectionZone.js.map","import { styled } from '../../Utilities';\nimport { AnnouncedBase } from './Announced.base';\nimport { getStyles } from './Announced.styles';\nexport var Announced = styled(AnnouncedBase, getStyles, undefined, { scope: 'Announced' });\n//# sourceMappingURL=Announced.js.map","import { __assign } from \"tslib\";\nimport { withSlots, createComponent, getSlots } from '@fluentui/foundation-legacy';\nimport { getNativeProps, htmlElementProperties } from '../../../Utilities';\nimport { StackItemStyles as styles } from './StackItem.styles';\nvar StackItemView = function (props) {\n    var children = props.children;\n    var nativeProps = getNativeProps(props, htmlElementProperties);\n    // eslint-disable-next-line eqeqeq\n    if (children == null) {\n        return null;\n    }\n    var Slots = getSlots(props, {\n        root: 'div',\n    });\n    return withSlots(Slots.root, __assign({}, nativeProps), children);\n};\nexport var StackItem = createComponent(StackItemView, {\n    displayName: 'StackItem',\n    styles: styles,\n});\nexport default StackItem;\n//# sourceMappingURL=StackItem.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getRTL, getInitials, styled } from '../../../Utilities';\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\nimport { ValidationState } from '../BasePicker.types';\nimport { PeoplePickerItem } from './PeoplePickerItems/PeoplePickerItem';\nimport { PeoplePickerItemSuggestion } from './PeoplePickerItems/PeoplePickerItemSuggestion';\nimport { getStyles } from '../BasePicker.styles';\n/**\n * {@docCategory PeoplePicker}\n */\nvar BasePeoplePicker = /** @class */ (function (_super) {\n    __extends(BasePeoplePicker, _super);\n    function BasePeoplePicker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return BasePeoplePicker;\n}(BasePicker));\nexport { BasePeoplePicker };\n/**\n * {@docCategory PeoplePicker}\n */\nvar MemberListPeoplePicker = /** @class */ (function (_super) {\n    __extends(MemberListPeoplePicker, _super);\n    function MemberListPeoplePicker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MemberListPeoplePicker;\n}(BasePickerListBelow));\nexport { MemberListPeoplePicker };\n/**\n * Standard People Picker.\n * {@docCategory PeoplePicker}\n */\nexport var NormalPeoplePickerBase = /** @class */ (function (_super) {\n    __extends(NormalPeoplePickerBase, _super);\n    function NormalPeoplePickerBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** Default props for NormalPeoplePicker. */\n    NormalPeoplePickerBase.defaultProps = {\n        onRenderItem: function (props) { return React.createElement(PeoplePickerItem, __assign({}, props)); },\n        onRenderSuggestionsItem: function (personaProps, suggestionsProps) { return (React.createElement(PeoplePickerItemSuggestion, { personaProps: personaProps, suggestionsProps: suggestionsProps })); },\n        createGenericItem: createGenericItem,\n    };\n    return NormalPeoplePickerBase;\n}(BasePeoplePicker));\n/**\n * Compact layout. It uses personas without secondary text when displaying search results.\n * {@docCategory PeoplePicker}\n */\nexport var CompactPeoplePickerBase = /** @class */ (function (_super) {\n    __extends(CompactPeoplePickerBase, _super);\n    function CompactPeoplePickerBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** Default props for CompactPeoplePicker. */\n    CompactPeoplePickerBase.defaultProps = {\n        onRenderItem: function (props) { return React.createElement(PeoplePickerItem, __assign({}, props)); },\n        onRenderSuggestionsItem: function (personaProps, suggestionsProps) { return (React.createElement(PeoplePickerItemSuggestion, { personaProps: personaProps, suggestionsProps: suggestionsProps, compact: true })); },\n        createGenericItem: createGenericItem,\n    };\n    return CompactPeoplePickerBase;\n}(BasePeoplePicker));\n/**\n * MemberList layout. The selected people show up below the search box.\n * {@docCategory PeoplePicker}\n */\nexport var ListPeoplePickerBase = /** @class */ (function (_super) {\n    __extends(ListPeoplePickerBase, _super);\n    function ListPeoplePickerBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** Default props for ListPeoplePicker. */\n    ListPeoplePickerBase.defaultProps = {\n        onRenderItem: function (props) { return React.createElement(PeoplePickerItem, __assign({}, props)); },\n        onRenderSuggestionsItem: function (personaProps, suggestionsProps) { return (React.createElement(PeoplePickerItemSuggestion, { personaProps: personaProps, suggestionsProps: suggestionsProps })); },\n        createGenericItem: createGenericItem,\n    };\n    return ListPeoplePickerBase;\n}(MemberListPeoplePicker));\n/**\n * {@docCategory PeoplePicker}\n */\nexport function createGenericItem(name, currentValidationState) {\n    var personaToConvert = {\n        key: name,\n        primaryText: name,\n        imageInitials: '!',\n        ValidationState: currentValidationState,\n    };\n    if (currentValidationState !== ValidationState.warning) {\n        personaToConvert.imageInitials = getInitials(name, getRTL());\n    }\n    return personaToConvert;\n}\nexport var NormalPeoplePicker = styled(NormalPeoplePickerBase, getStyles, undefined, {\n    scope: 'NormalPeoplePicker',\n});\nexport var CompactPeoplePicker = styled(CompactPeoplePickerBase, getStyles, undefined, {\n    scope: 'CompactPeoplePicker',\n});\nexport var ListPeoplePicker = styled(ListPeoplePickerBase, getStyles, undefined, {\n    scope: 'ListPeoplePickerBase',\n});\n//# sourceMappingURL=PeoplePicker.js.map","import { styled } from '../../../Utilities';\nimport { ShimmerLineBase } from './ShimmerLine.base';\nimport { getStyles } from './ShimmerLine.styles';\nexport var ShimmerLine = styled(ShimmerLineBase, getStyles, undefined, {\n    scope: 'ShimmerLine',\n});\n//# sourceMappingURL=ShimmerLine.js.map","import { styled } from '../../Utilities';\nimport { ProgressIndicatorBase } from './ProgressIndicator.base';\nimport { getStyles } from './ProgressIndicator.styles';\n/**\n * ProgressIndicator description\n */\nexport var ProgressIndicator = styled(ProgressIndicatorBase, getStyles, undefined, { scope: 'ProgressIndicator' });\n//# sourceMappingURL=ProgressIndicator.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, divProperties, doesElementContainFocus, getDocument, getNativeProps, getPropsWithDefaults, getWindow, modalize, } from '../../Utilities';\nimport { useMergedRefs, useAsync, useOnEvent } from '@fluentui/react-hooks';\nimport { useWindow } from '@fluentui/react-window-provider';\nfunction useScrollbarAsync(props, root) {\n    var async = useAsync();\n    var _a = React.useState(false), needsVerticalScrollBarState = _a[0], setNeedsVerticalScrollBar = _a[1];\n    React.useEffect(function () {\n        async.requestAnimationFrame(function () {\n            var _a;\n            // If overflowY is overridden, don't waste time calculating whether the scrollbar is necessary.\n            if (props.style && props.style.overflowY) {\n                return;\n            }\n            var needsVerticalScrollBar = false;\n            if (root && root.current && ((_a = root.current) === null || _a === void 0 ? void 0 : _a.firstElementChild)) {\n                // ClientHeight returns the client height of an element rounded to an\n                // integer. On some browsers at different zoom levels this rounding\n                // can generate different results for the root container and child even\n                // though they are the same height. This causes us to show a scroll bar\n                // when not needed. Ideally we would use BoundingClientRect().height\n                // instead however seems that the API is 90% slower than using ClientHeight.\n                // Therefore instead we will calculate the difference between heights and\n                // allow for a 1px difference to still be considered ok and not show the\n                // scroll bar.\n                var rootHeight = root.current.clientHeight;\n                var firstChildHeight = root.current.firstElementChild.clientHeight;\n                if (rootHeight > 0 && firstChildHeight > rootHeight) {\n                    needsVerticalScrollBar = firstChildHeight - rootHeight > 1;\n                }\n            }\n            if (needsVerticalScrollBarState !== needsVerticalScrollBar) {\n                setNeedsVerticalScrollBar(needsVerticalScrollBar);\n            }\n        });\n        return function () { return async.dispose(); };\n    });\n    return needsVerticalScrollBarState;\n}\nfunction defaultFocusRestorer(options) {\n    var originalElement = options.originalElement, containsFocus = options.containsFocus;\n    if (originalElement && containsFocus && originalElement !== getWindow()) {\n        // Make sure that the focus method actually exists\n        // In some cases the object might exist but not be a real element.\n        // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n        // This is wrapped in a setTimeout because of a React 16 bug that is resolved in 17.\n        // Once we move to 17, the setTimeout should be removed (ref: https://github.com/facebook/react/issues/17894#issuecomment-656094405)\n        setTimeout(function () {\n            var _a;\n            (_a = originalElement.focus) === null || _a === void 0 ? void 0 : _a.call(originalElement);\n        }, 0);\n    }\n}\nfunction useRestoreFocus(props, root) {\n    var _a = props.onRestoreFocus, onRestoreFocus = _a === void 0 ? defaultFocusRestorer : _a;\n    var originalFocusedElement = React.useRef();\n    var containsFocus = React.useRef(false);\n    React.useEffect(function () {\n        originalFocusedElement.current = getDocument().activeElement;\n        if (doesElementContainFocus(root.current)) {\n            containsFocus.current = true;\n        }\n        return function () {\n            var _a;\n            onRestoreFocus === null || onRestoreFocus === void 0 ? void 0 : onRestoreFocus({\n                originalElement: originalFocusedElement.current,\n                containsFocus: containsFocus.current,\n                documentContainsFocus: ((_a = getDocument()) === null || _a === void 0 ? void 0 : _a.hasFocus()) || false,\n            });\n            // De-reference DOM Node to avoid retainment via transpiled closure of _onKeyDown\n            originalFocusedElement.current = undefined;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []);\n    useOnEvent(root, 'focus', React.useCallback(function () {\n        containsFocus.current = true;\n    }, []), true);\n    useOnEvent(root, 'blur', React.useCallback(function (ev) {\n        /** The popup should update this._containsFocus when:\n         * relatedTarget exists AND\n         * the relatedTarget is not contained within the popup.\n         * If the relatedTarget is within the popup, that means the popup still has focus\n         * and focused moved from one element to another within the popup.\n         * If relatedTarget is undefined or null that usually means that a\n         * keyboard event occurred and focus didn't change\n         */\n        if (root.current && ev.relatedTarget && !root.current.contains(ev.relatedTarget)) {\n            containsFocus.current = false;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []), true);\n}\nfunction useHideSiblingNodes(props, root) {\n    // eslint-disable-next-line deprecation/deprecation\n    var shouldHideSiblings = String(props['aria-modal']).toLowerCase() === 'true' && props.enableAriaHiddenSiblings;\n    React.useEffect(function () {\n        if (!(shouldHideSiblings && root.current)) {\n            return;\n        }\n        var unmodalize = modalize(root.current);\n        return unmodalize;\n    }, [root, shouldHideSiblings]);\n}\n/**\n * This adds accessibility to Dialog and Panel controls\n */\nexport var Popup = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var props = getPropsWithDefaults({ shouldRestoreFocus: true, enableAriaHiddenSiblings: true }, propsWithoutDefaults);\n    var root = React.useRef();\n    var mergedRootRef = useMergedRefs(root, forwardedRef);\n    useHideSiblingNodes(props, root);\n    useRestoreFocus(props, root);\n    var role = props.role, className = props.className, ariaLabel = props.ariaLabel, ariaLabelledBy = props.ariaLabelledBy, ariaDescribedBy = props.ariaDescribedBy, style = props.style, children = props.children, onDismiss = props.onDismiss;\n    var needsVerticalScrollBar = useScrollbarAsync(props, root);\n    var onKeyDown = React.useCallback(function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n            case KeyCodes.escape:\n                if (onDismiss) {\n                    onDismiss(ev);\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n                break;\n        }\n    }, [onDismiss]);\n    var win = useWindow();\n    useOnEvent(win, 'keydown', onKeyDown);\n    return (React.createElement(\"div\", __assign({ ref: mergedRootRef }, getNativeProps(props, divProperties), { className: className, role: role, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, onKeyDown: onKeyDown, style: __assign({ overflowY: needsVerticalScrollBar ? 'scroll' : undefined, outline: 'none' }, style) }), children));\n});\nPopup.displayName = 'Popup';\n//# sourceMappingURL=Popup.js.map","import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useControllableValue, useId } from '@fluentui/react-hooks';\nimport { classNamesFunction, css, divProperties, getNativeProps, getRTL, KeyCodes, warn } from '@fluentui/utilities';\nimport { CommandButton } from '../../Button';\nimport { useOverflow } from '../../utilities/useOverflow';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { DirectionalHint } from '../ContextualMenu/ContextualMenu.types';\nimport { Icon } from '../Icon/Icon';\nimport { PivotItem } from './PivotItem';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'Pivot';\nvar getTabId = function (props, pivotId, itemKey, index) {\n    if (props.getTabId) {\n        return props.getTabId(itemKey, index);\n    }\n    return pivotId + \"-Tab\".concat(index);\n};\n// Gets the set of PivotLinks as array of IPivotItemProps\n// The set of Links is determined by child components of type PivotItem\nvar getLinkItems = function (props, pivotId) {\n    var result = {\n        links: [],\n        keyToIndexMapping: {},\n        keyToTabIdMapping: {},\n    };\n    React.Children.forEach(React.Children.toArray(props.children), function (child, index) {\n        if (isPivotItem(child)) {\n            // eslint-disable-next-line deprecation/deprecation\n            var _a = child.props, linkText = _a.linkText, pivotItemProps = __rest(_a, [\"linkText\"]);\n            var itemKey = child.props.itemKey || index.toString();\n            result.links.push(__assign(__assign({ headerText: linkText }, pivotItemProps), { itemKey: itemKey }));\n            result.keyToIndexMapping[itemKey] = index;\n            result.keyToTabIdMapping[itemKey] = getTabId(props, pivotId, itemKey, index);\n        }\n        else if (child) {\n            warn('The children of a Pivot component must be of type PivotItem to be rendered.');\n        }\n    });\n    return result;\n};\nvar isPivotItem = function (item) {\n    var _a;\n    return React.isValidElement(item) && ((_a = item.type) === null || _a === void 0 ? void 0 : _a.name) === PivotItem.name;\n};\nexport var PivotBase = React.forwardRef(function (props, ref) {\n    var focusZoneRef = React.useRef(null);\n    var overflowMenuButtonComponentRef = React.useRef(null);\n    var pivotId = useId('Pivot');\n    var _a = useControllableValue(props.selectedKey, props.defaultSelectedKey), selectedKey = _a[0], setSelectedKey = _a[1];\n    var componentRef = props.componentRef, theme = props.theme, linkSize = props.linkSize, linkFormat = props.linkFormat, overflowBehavior = props.overflowBehavior, overflowAriaLabel = props.overflowAriaLabel, focusZoneProps = props.focusZoneProps, overflowButtonAs = props.overflowButtonAs;\n    var classNames;\n    var nameProps = {\n        'aria-label': props['aria-label'],\n        'aria-labelledby': props['aria-labelledby'],\n    };\n    var divProps = getNativeProps(props, divProperties, [\n        'aria-label',\n        'aria-labelledby',\n    ]);\n    var linkCollection = getLinkItems(props, pivotId);\n    React.useImperativeHandle(componentRef, function () { return ({\n        focus: function () {\n            var _a;\n            (_a = focusZoneRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        },\n    }); });\n    var renderLinkContent = function (link) {\n        if (!link) {\n            return null;\n        }\n        var itemCount = link.itemCount, itemIcon = link.itemIcon, headerText = link.headerText;\n        return (React.createElement(\"span\", { className: classNames.linkContent },\n            itemIcon !== undefined && (React.createElement(\"span\", { className: classNames.icon },\n                React.createElement(Icon, { iconName: itemIcon }))),\n            headerText !== undefined && React.createElement(\"span\", { className: classNames.text },\n                \" \",\n                link.headerText),\n            itemCount !== undefined && React.createElement(\"span\", { className: classNames.count },\n                \" (\",\n                itemCount,\n                \")\")));\n    };\n    var renderPivotLink = function (renderLinkCollection, link, renderPivotLinkSelectedKey, className) {\n        var itemKey = link.itemKey, headerButtonProps = link.headerButtonProps, onRenderItemLink = link.onRenderItemLink;\n        var tabId = renderLinkCollection.keyToTabIdMapping[itemKey];\n        var linkContent;\n        var isSelected = renderPivotLinkSelectedKey === itemKey;\n        if (onRenderItemLink) {\n            linkContent = onRenderItemLink(link, renderLinkContent);\n        }\n        else {\n            linkContent = renderLinkContent(link);\n        }\n        var contentString = link.headerText || '';\n        contentString += link.itemCount ? ' (' + link.itemCount + ')' : '';\n        // Adding space supplementary for icon\n        contentString += link.itemIcon ? ' xx' : '';\n        var itemSemantics = link.role && link.role !== 'tab'\n            ? {\n                role: link.role,\n            }\n            : {\n                role: 'tab',\n                'aria-selected': isSelected,\n            };\n        return (React.createElement(CommandButton, __assign({}, headerButtonProps, itemSemantics, { id: tabId, key: itemKey, className: css(className, isSelected && classNames.linkIsSelected), \n            // eslint-disable-next-line react/jsx-no-bind\n            onClick: function (ev) { return onLinkClick(itemKey, ev); }, \n            // eslint-disable-next-line react/jsx-no-bind\n            onKeyDown: function (ev) { return onKeyDown(itemKey, ev); }, \"aria-label\": link.ariaLabel, name: link.headerText, keytipProps: link.keytipProps, \"data-content\": contentString }), linkContent));\n    };\n    var onLinkClick = function (itemKey, ev) {\n        ev.preventDefault();\n        updateSelectedItem(itemKey, ev);\n    };\n    var onKeyDown = function (itemKey, ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        if (ev.which === KeyCodes.enter) {\n            ev.preventDefault();\n            updateSelectedItem(itemKey);\n        }\n    };\n    var updateSelectedItem = function (itemKey, ev) {\n        var _a;\n        setSelectedKey(itemKey);\n        linkCollection = getLinkItems(props, pivotId);\n        if (props.onLinkClick && linkCollection.keyToIndexMapping[itemKey] >= 0) {\n            var selectedIndex = linkCollection.keyToIndexMapping[itemKey];\n            var item = React.Children.toArray(props.children)[selectedIndex];\n            if (isPivotItem(item)) {\n                props.onLinkClick(item, ev);\n            }\n        }\n        (_a = overflowMenuButtonComponentRef.current) === null || _a === void 0 ? void 0 : _a.dismissMenu();\n    };\n    var renderPivotItem = function (itemKey, isActive) {\n        if (props.headersOnly || !itemKey) {\n            return null;\n        }\n        var index = linkCollection.keyToIndexMapping[itemKey];\n        var selectedTabId = linkCollection.keyToTabIdMapping[itemKey];\n        return (React.createElement(\"div\", { role: \"tabpanel\", hidden: !isActive, key: itemKey, \"aria-hidden\": !isActive, \"aria-labelledby\": selectedTabId, className: classNames.itemContainer }, React.Children.toArray(props.children)[index]));\n    };\n    var isKeyValid = function (itemKey) {\n        return itemKey === null || (itemKey !== undefined && linkCollection.keyToIndexMapping[itemKey] !== undefined);\n    };\n    var getSelectedKey = function () {\n        if (isKeyValid(selectedKey)) {\n            return selectedKey;\n        }\n        if (linkCollection.links.length) {\n            return linkCollection.links[0].itemKey;\n        }\n        return undefined;\n    };\n    classNames = getClassNames(props.styles, {\n        theme: theme,\n        linkSize: linkSize,\n        linkFormat: linkFormat,\n    });\n    var renderedSelectedKey = getSelectedKey();\n    var renderedSelectedIndex = renderedSelectedKey ? linkCollection.keyToIndexMapping[renderedSelectedKey] : 0;\n    var items = linkCollection.links.map(function (l) {\n        return renderPivotLink(linkCollection, l, renderedSelectedKey, classNames.link);\n    });\n    // The overflow menu starts empty and items[] is updated as the overflow items change\n    var overflowMenuProps = React.useMemo(function () { return ({\n        items: [],\n        alignTargetEdge: true,\n        directionalHint: DirectionalHint.bottomRightEdge,\n    }); }, []);\n    var overflowMenuButtonRef = useOverflow({\n        onOverflowItemsChanged: function (overflowIndex, elements) {\n            // Set data-is-overflowing on each item\n            elements.forEach(function (_a) {\n                var ele = _a.ele, isOverflowing = _a.isOverflowing;\n                return (ele.dataset.isOverflowing = \"\".concat(isOverflowing));\n            });\n            // Update the menu items\n            overflowMenuProps.items = linkCollection.links\n                .slice(overflowIndex)\n                .filter(function (link) { return link.itemKey !== renderedSelectedKey; })\n                .map(function (link, index) {\n                link.role = 'menuitem';\n                return {\n                    key: link.itemKey || \"\".concat(overflowIndex + index),\n                    onRender: function () { return renderPivotLink(linkCollection, link, renderedSelectedKey, classNames.linkInMenu); },\n                };\n            });\n        },\n        rtl: getRTL(theme),\n        pinnedIndex: renderedSelectedIndex,\n    }).menuButtonRef;\n    var OverflowButton = overflowButtonAs ? overflowButtonAs : CommandButton;\n    return (React.createElement(\"div\", __assign({ ref: ref }, divProps),\n        React.createElement(FocusZone, __assign({ componentRef: focusZoneRef, role: \"tablist\" }, nameProps, { direction: FocusZoneDirection.horizontal }, focusZoneProps, { className: css(classNames.root, focusZoneProps === null || focusZoneProps === void 0 ? void 0 : focusZoneProps.className) }),\n            items,\n            overflowBehavior === 'menu' && (React.createElement(OverflowButton, { className: css(classNames.link, classNames.overflowMenuButton), elementRef: overflowMenuButtonRef, componentRef: overflowMenuButtonComponentRef, menuProps: overflowMenuProps, menuIconProps: { iconName: 'More', style: { color: 'inherit' } }, ariaLabel: overflowAriaLabel, role: \"tab\" }))),\n        renderedSelectedKey &&\n            linkCollection.links.map(function (link) {\n                return (link.alwaysRender === true || renderedSelectedKey === link.itemKey) &&\n                    renderPivotItem(link.itemKey, renderedSelectedKey === link.itemKey);\n            })));\n});\nPivotBase.displayName = COMPONENT_NAME;\n//# sourceMappingURL=Pivot.base.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\nimport { getWindow, hoistStatics, EventGroup } from '../../Utilities';\nimport { WindowContext } from '../../WindowProvider';\nexport var ResponsiveMode;\n(function (ResponsiveMode) {\n    /** Width \\<= 479px */\n    ResponsiveMode[ResponsiveMode[\"small\"] = 0] = \"small\";\n    /** Width \\> 479px and \\<= 639px */\n    ResponsiveMode[ResponsiveMode[\"medium\"] = 1] = \"medium\";\n    /** Width \\> 639px and \\<= 1023px */\n    ResponsiveMode[ResponsiveMode[\"large\"] = 2] = \"large\";\n    /** Width \\> 1023px and \\<= 1365px */\n    ResponsiveMode[ResponsiveMode[\"xLarge\"] = 3] = \"xLarge\";\n    /** Width \\> 1365px and \\<= 1919px */\n    ResponsiveMode[ResponsiveMode[\"xxLarge\"] = 4] = \"xxLarge\";\n    /** Width \\> 1919px */\n    ResponsiveMode[ResponsiveMode[\"xxxLarge\"] = 5] = \"xxxLarge\";\n    ResponsiveMode[ResponsiveMode[\"unknown\"] = 999] = \"unknown\";\n})(ResponsiveMode || (ResponsiveMode = {}));\nvar RESPONSIVE_MAX_CONSTRAINT = [479, 639, 1023, 1365, 1919, 99999999];\n/**\n * User specified mode to default to, useful for server side rendering scenarios.\n */\nvar _defaultMode;\n/**\n * Tracking the last mode we successfully rendered, which allows us to\n * paint initial renders with the correct size.\n */\nvar _lastMode;\n/**\n * Allows a server rendered scenario to provide a **default** responsive mode.\n * This WILL NOT trigger any updates to components that have already consumed the responsive mode!\n */\nexport function setResponsiveMode(responsiveMode) {\n    _defaultMode = responsiveMode;\n}\n/**\n * Initializes the responsive mode to the current window size. This can be used to avoid\n * a re-render during first component mount since the window would otherwise not be measured\n * until after mounting.\n *\n * This WILL NOT trigger any updates to components that have already consumed the responsive mode!\n */\nexport function initializeResponsiveMode(element) {\n    var currentWindow = getWindow(element);\n    if (currentWindow) {\n        getResponsiveMode(currentWindow);\n    }\n}\nexport function getInitialResponsiveMode() {\n    var _a;\n    return (_a = _defaultMode !== null && _defaultMode !== void 0 ? _defaultMode : _lastMode) !== null && _a !== void 0 ? _a : ResponsiveMode.large;\n}\n/**\n * @deprecated Decorator usage is deprecated. Either call `getResponsiveMode` manually, or\n * use the `useResponsiveMode` hook within a function component.\n */\nexport function withResponsiveMode(ComposedComponent) {\n    var _a;\n    // eslint-disable-next-line deprecation/deprecation\n    var resultClass = (_a = /** @class */ (function (_super) {\n            __extends(WithResponsiveMode, _super);\n            function WithResponsiveMode(props) {\n                var _this = _super.call(this, props) || this;\n                _this._onResize = function () {\n                    var responsiveMode = getResponsiveMode(_this.context.window);\n                    if (responsiveMode !== _this.state.responsiveMode) {\n                        _this.setState({\n                            responsiveMode: responsiveMode,\n                        });\n                    }\n                };\n                _this._events = new EventGroup(_this);\n                _this._updateComposedComponentRef = _this._updateComposedComponentRef.bind(_this);\n                _this.state = {\n                    responsiveMode: getInitialResponsiveMode(),\n                };\n                return _this;\n            }\n            WithResponsiveMode.prototype.componentDidMount = function () {\n                this._events.on(this.context.window, 'resize', this._onResize);\n                this._onResize();\n            };\n            WithResponsiveMode.prototype.componentWillUnmount = function () {\n                this._events.dispose();\n            };\n            WithResponsiveMode.prototype.render = function () {\n                var responsiveMode = this.state.responsiveMode;\n                return responsiveMode === ResponsiveMode.unknown ? null : (React.createElement(ComposedComponent, __assign({ ref: this._updateComposedComponentRef, responsiveMode: responsiveMode }, this.props)));\n            };\n            return WithResponsiveMode;\n        }(BaseDecorator)),\n        _a.contextType = WindowContext,\n        _a);\n    return hoistStatics(ComposedComponent, resultClass);\n}\nfunction getWidthOfCurrentWindow(currentWindow) {\n    try {\n        return currentWindow.document.documentElement.clientWidth;\n    }\n    catch (e) {\n        return currentWindow.innerWidth;\n    }\n}\n/**\n * Hook to get the current responsive mode (window size category).\n * @param currentWindow - Use this window when determining the responsive mode.\n */\nexport function getResponsiveMode(currentWindow) {\n    var responsiveMode = ResponsiveMode.small;\n    if (currentWindow) {\n        try {\n            while (getWidthOfCurrentWindow(currentWindow) > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {\n                responsiveMode++;\n            }\n        }\n        catch (e) {\n            // Return a best effort result in cases where we're in the browser but it throws on getting innerWidth.\n            responsiveMode = getInitialResponsiveMode();\n        }\n        // Tracking last mode just gives us a better default in future renders,\n        // which avoids starting with the wrong value if we've measured once.\n        _lastMode = responsiveMode;\n    }\n    else {\n        if (_defaultMode !== undefined) {\n            responsiveMode = _defaultMode;\n        }\n        else {\n            throw new Error('Content was rendered in a server environment without providing a default responsive mode. ' +\n                'Call setResponsiveMode to define what the responsive mode is.');\n        }\n    }\n    return responsiveMode;\n}\n//# sourceMappingURL=withResponsiveMode.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Label } from '../../Label';\nimport { Icon } from '../../Icon';\nimport { Async, classNamesFunction, DelayedRender, getId, getNativeProps, getWindow, initializeComponentRef, inputProperties, isControlled, isIE11, textAreaProperties, warn, warnControlledUsage, warnMutuallyExclusive, } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nvar DEFAULT_STATE_VALUE = '';\nvar COMPONENT_NAME = 'TextField';\nvar REVEAL_ICON_NAME = 'RedEye';\nvar HIDE_ICON_NAME = 'Hide';\nexport var TextFieldBase = /** @class */ (function (_super) {\n    __extends(TextFieldBase, _super);\n    function TextFieldBase(props) {\n        var _a;\n        var _this = _super.call(this, props) || this;\n        _this._textElement = React.createRef();\n        _this._onFocus = function (ev) {\n            if (_this.props.onFocus) {\n                _this.props.onFocus(ev);\n            }\n            _this.setState({ isFocused: true }, function () {\n                if (_this.props.validateOnFocusIn) {\n                    _this._validate(_this.value);\n                }\n            });\n        };\n        _this._onBlur = function (ev) {\n            if (_this.props.onBlur) {\n                _this.props.onBlur(ev);\n            }\n            _this.setState({ isFocused: false }, function () {\n                if (_this.props.validateOnFocusOut) {\n                    _this._validate(_this.value);\n                }\n            });\n        };\n        _this._onRenderLabel = function (props) {\n            var label = props.label, required = props.required;\n            // IProcessedStyleSet definition requires casting for what Label expects as its styles prop\n            var labelStyles = _this._classNames.subComponentStyles\n                ? _this._classNames.subComponentStyles.label\n                : undefined;\n            if (label) {\n                return (React.createElement(Label, { required: required, htmlFor: _this._id, styles: labelStyles, disabled: props.disabled, id: _this._labelId }, props.label));\n            }\n            return null;\n        };\n        _this._onRenderDescription = function (props) {\n            if (props.description) {\n                return React.createElement(\"span\", { className: _this._classNames.description }, props.description);\n            }\n            return null;\n        };\n        _this._onRevealButtonClick = function (event) {\n            _this.setState(function (prevState) { return ({ isRevealingPassword: !prevState.isRevealingPassword }); });\n        };\n        _this._onInputChange = function (event) {\n            // Previously, we needed to call both onInput and onChange due to some weird IE/React issues,\n            // which have *probably* been fixed now:\n            // - https://github.com/microsoft/fluentui/issues/744 (likely fixed)\n            // - https://github.com/microsoft/fluentui/issues/824 (confirmed fixed)\n            var _a, _b;\n            // TODO (Fabric 8?) - Switch to calling only onChange. This switch is pretty disruptive for\n            // tests (ours and maybe consumers' too), so it seemed best to do the switch in a major bump.\n            var element = event.target;\n            var value = element.value;\n            // Ignore this event if any of the following are true:\n            // - the value is undefined (in case one of the IE bugs comes back)\n            // - it's a duplicate event (important since onInputChange is called twice per actual user event)\n            // - it's the same as the previous value\n            var previousValue = _getValue(_this.props, _this.state) || '';\n            if (value === undefined || value === _this._lastChangeValue || value === previousValue) {\n                _this._lastChangeValue = undefined;\n                return;\n            }\n            _this._lastChangeValue = value;\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, event, value);\n            if (!_this._isControlled) {\n                // ONLY if this is an uncontrolled component, update the displayed value.\n                // (Controlled components must update the `value` prop from `onChange`.)\n                _this.setState({ uncontrolledValue: value });\n            }\n        };\n        initializeComponentRef(_this);\n        _this._async = new Async(_this);\n        if (process.env.NODE_ENV !== 'production') {\n            warnMutuallyExclusive(COMPONENT_NAME, props, {\n                errorMessage: 'onGetErrorMessage',\n            });\n        }\n        _this._fallbackId = getId(COMPONENT_NAME);\n        _this._descriptionId = getId(COMPONENT_NAME + 'Description');\n        _this._labelId = getId(COMPONENT_NAME + 'Label');\n        _this._prefixId = getId(COMPONENT_NAME + 'Prefix');\n        _this._suffixId = getId(COMPONENT_NAME + 'Suffix');\n        _this._warnControlledUsage();\n        var defaultValue = (_a = props.defaultValue, _a === void 0 ? DEFAULT_STATE_VALUE : _a);\n        if (typeof defaultValue === 'number') {\n            // This isn't allowed per the props, but happens anyway.\n            defaultValue = String(defaultValue);\n        }\n        _this.state = {\n            uncontrolledValue: _this._isControlled ? undefined : defaultValue,\n            isFocused: false,\n            errorMessage: '',\n        };\n        _this._delayedValidate = _this._async.debounce(_this._validate, _this.props.deferredValidationTime);\n        _this._lastValidation = 0;\n        return _this;\n    }\n    Object.defineProperty(TextFieldBase.prototype, \"value\", {\n        /**\n         * Gets the current value of the text field.\n         */\n        get: function () {\n            return _getValue(this.props, this.state);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextFieldBase.prototype.componentDidMount = function () {\n        this._adjustInputHeight();\n        if (this.props.validateOnLoad) {\n            this._validate(this.value);\n        }\n    };\n    TextFieldBase.prototype.componentWillUnmount = function () {\n        this._async.dispose();\n    };\n    TextFieldBase.prototype.getSnapshotBeforeUpdate = function (prevProps, prevState) {\n        return {\n            selection: [this.selectionStart, this.selectionEnd],\n        };\n    };\n    TextFieldBase.prototype.componentDidUpdate = function (prevProps, prevState, snapshot) {\n        var _a;\n        var props = this.props;\n        var selection = (_a = (snapshot || {}).selection, _a === void 0 ? [null, null] : _a);\n        var start = selection[0], end = selection[1];\n        if (!!prevProps.multiline !== !!props.multiline && prevState.isFocused) {\n            // The text field has just changed between single- and multi-line, so we need to reset focus\n            // and selection/cursor.\n            this.focus();\n            if (start !== null && end !== null && start >= 0 && end >= 0) {\n                this.setSelectionRange(start, end);\n            }\n        }\n        if (prevProps.value !== props.value) {\n            // Only if the value in props changed, reset the record of the last value seen by a\n            // change/input event (don't do this if the value in state changed, since at least in tests\n            // the state update may happen before the second event in a series)\n            this._lastChangeValue = undefined;\n        }\n        var prevValue = _getValue(prevProps, prevState);\n        var value = this.value;\n        if (prevValue !== value) {\n            // Handle controlled/uncontrolled warnings and status\n            this._warnControlledUsage(prevProps);\n            // Clear error message if needed\n            // TODO: is there any way to do this without an extra render?\n            if (this.state.errorMessage && !props.errorMessage) {\n                this.setState({ errorMessage: '' });\n            }\n            // Adjust height if needed based on new value\n            this._adjustInputHeight();\n            // TODO: #5875 added logic to trigger validation in componentWillReceiveProps and other places.\n            // This seems a bit odd and hard to integrate with the new approach.\n            // (Starting to think we should just put the validation logic in a separate wrapper component...?)\n            if (_shouldValidateAllChanges(props)) {\n                this._delayedValidate(value);\n            }\n        }\n    };\n    TextFieldBase.prototype.render = function () {\n        var _a, _b, _c, _d, _e, _f;\n        var borderless = (_a = this.props, _a.borderless), className = _a.className, disabled = _a.disabled, invalid = _a.invalid, iconProps = _a.iconProps, inputClassName = _a.inputClassName, label = _a.label, multiline = _a.multiline, required = _a.required, underlined = _a.underlined, prefix = _a.prefix, resizable = _a.resizable, suffix = _a.suffix, theme = _a.theme, styles = _a.styles, autoAdjustHeight = _a.autoAdjustHeight, canRevealPassword = _a.canRevealPassword, revealPasswordAriaLabel = _a.revealPasswordAriaLabel, type = _a.type, onRenderPrefix = (_b = _a.onRenderPrefix, _b === void 0 ? this._onRenderPrefix : _b), onRenderSuffix = (_c = _a.onRenderSuffix, _c === void 0 ? this._onRenderSuffix : _c), onRenderLabel = (_d = _a.onRenderLabel, _d === void 0 ? this._onRenderLabel : _d), onRenderDescription = (_e = _a.onRenderDescription, _e === void 0 ? this._onRenderDescription : _e);\n        var isFocused = (_f = this.state, _f.isFocused), isRevealingPassword = _f.isRevealingPassword;\n        var errorMessage = this._errorMessage;\n        var isInvalid = typeof invalid === 'boolean' ? invalid : !!errorMessage;\n        var hasRevealButton = !!canRevealPassword && type === 'password' && _browserNeedsRevealButton();\n        var classNames = (this._classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n            disabled: disabled,\n            focused: isFocused,\n            required: required,\n            multiline: multiline,\n            hasLabel: !!label,\n            hasErrorMessage: isInvalid,\n            borderless: borderless,\n            resizable: resizable,\n            hasIcon: !!iconProps,\n            underlined: underlined,\n            inputClassName: inputClassName,\n            autoAdjustHeight: autoAdjustHeight,\n            hasRevealButton: hasRevealButton,\n        }));\n        return (\n        // eslint-disable-next-line deprecation/deprecation\n        React.createElement(\"div\", { ref: this.props.elementRef, className: classNames.root },\n            React.createElement(\"div\", { className: classNames.wrapper },\n                onRenderLabel(this.props, this._onRenderLabel),\n                React.createElement(\"div\", { className: classNames.fieldGroup },\n                    (prefix !== undefined || this.props.onRenderPrefix) && (React.createElement(\"div\", { className: classNames.prefix, id: this._prefixId }, onRenderPrefix(this.props, this._onRenderPrefix))),\n                    multiline ? this._renderTextArea() : this._renderInput(),\n                    iconProps && React.createElement(Icon, __assign({ className: classNames.icon }, iconProps)),\n                    hasRevealButton && (\n                    // Explicitly set type=\"button\" since the default button type within a form is \"submit\"\n                    React.createElement(\"button\", { \"aria-label\": revealPasswordAriaLabel, className: classNames.revealButton, onClick: this._onRevealButtonClick, \"aria-pressed\": !!isRevealingPassword, type: \"button\" },\n                        React.createElement(\"span\", { className: classNames.revealSpan },\n                            React.createElement(Icon, { className: classNames.revealIcon, iconName: isRevealingPassword ? HIDE_ICON_NAME : REVEAL_ICON_NAME })))),\n                    (suffix !== undefined || this.props.onRenderSuffix) && (React.createElement(\"div\", { className: classNames.suffix, id: this._suffixId }, onRenderSuffix(this.props, this._onRenderSuffix))))),\n            this._isDescriptionAvailable && (React.createElement(\"span\", { id: this._descriptionId },\n                onRenderDescription(this.props, this._onRenderDescription),\n                errorMessage && (React.createElement(\"div\", { role: \"alert\" },\n                    React.createElement(DelayedRender, null, this._renderErrorMessage())))))));\n    };\n    /**\n     * Sets focus on the text field\n     */\n    TextFieldBase.prototype.focus = function () {\n        if (this._textElement.current) {\n            this._textElement.current.focus();\n        }\n    };\n    /**\n     * Blurs the text field.\n     */\n    TextFieldBase.prototype.blur = function () {\n        if (this._textElement.current) {\n            this._textElement.current.blur();\n        }\n    };\n    /**\n     * Selects the text field\n     */\n    TextFieldBase.prototype.select = function () {\n        if (this._textElement.current) {\n            this._textElement.current.select();\n        }\n    };\n    /**\n     * Sets the selection start of the text field to a specified value\n     */\n    TextFieldBase.prototype.setSelectionStart = function (value) {\n        if (this._textElement.current) {\n            this._textElement.current.selectionStart = value;\n        }\n    };\n    /**\n     * Sets the selection end of the text field to a specified value\n     */\n    TextFieldBase.prototype.setSelectionEnd = function (value) {\n        if (this._textElement.current) {\n            this._textElement.current.selectionEnd = value;\n        }\n    };\n    Object.defineProperty(TextFieldBase.prototype, \"selectionStart\", {\n        /**\n         * Gets the selection start of the text field\n         */\n        get: function () {\n            return this._textElement.current ? this._textElement.current.selectionStart : -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextFieldBase.prototype, \"selectionEnd\", {\n        /**\n         * Gets the selection end of the text field\n         */\n        get: function () {\n            return this._textElement.current ? this._textElement.current.selectionEnd : -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Sets the start and end positions of a selection in a text field.\n     * @param start - Index of the start of the selection.\n     * @param end - Index of the end of the selection.\n     */\n    TextFieldBase.prototype.setSelectionRange = function (start, end) {\n        if (this._textElement.current) {\n            this._textElement.current.setSelectionRange(start, end);\n        }\n    };\n    TextFieldBase.prototype._warnControlledUsage = function (prevProps) {\n        // Show warnings if props are being used in an invalid way\n        warnControlledUsage({\n            componentId: this._id,\n            componentName: COMPONENT_NAME,\n            props: this.props,\n            oldProps: prevProps,\n            valueProp: 'value',\n            defaultValueProp: 'defaultValue',\n            onChangeProp: 'onChange',\n            readOnlyProp: 'readOnly',\n        });\n        if (this.props.value === null && !this._hasWarnedNullValue) {\n            this._hasWarnedNullValue = true;\n            warn(\"Warning: 'value' prop on '\".concat(COMPONENT_NAME, \"' should not be null. Consider using an \") +\n                'empty string to clear the component or undefined to indicate an uncontrolled component.');\n        }\n    };\n    Object.defineProperty(TextFieldBase.prototype, \"_id\", {\n        /** Returns `props.id` if available, or a fallback if not. */\n        get: function () {\n            return this.props.id || this._fallbackId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextFieldBase.prototype, \"_isControlled\", {\n        get: function () {\n            return isControlled(this.props, 'value');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextFieldBase.prototype._onRenderPrefix = function (props) {\n        var prefix = props.prefix;\n        return React.createElement(\"span\", { style: { paddingBottom: '1px' } }, prefix);\n    };\n    TextFieldBase.prototype._onRenderSuffix = function (props) {\n        var suffix = props.suffix;\n        return React.createElement(\"span\", { style: { paddingBottom: '1px' } }, suffix);\n    };\n    Object.defineProperty(TextFieldBase.prototype, \"_errorMessage\", {\n        /**\n         * Current error message from either `props.errorMessage` or the result of `props.onGetErrorMessage`.\n         *\n         * - If there is no validation error or we have not validated the input value, errorMessage is an empty string.\n         * - If we have done the validation and there is validation error, errorMessage is the validation error message.\n         */\n        get: function () {\n            var _a;\n            var errorMessage = (_a = this.props.errorMessage, _a === void 0 ? this.state.errorMessage : _a);\n            return errorMessage || '';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Renders error message based on the type of the message.\n     *\n     * - If error message is string, it will render using the built in styles.\n     * - If error message is an element, user has full control over how it's rendered.\n     */\n    TextFieldBase.prototype._renderErrorMessage = function () {\n        var errorMessage = this._errorMessage;\n        return errorMessage ? (typeof errorMessage === 'string' ? (React.createElement(\"p\", { className: this._classNames.errorMessage },\n            React.createElement(\"span\", { \"data-automation-id\": \"error-message\" }, errorMessage))) : (React.createElement(\"div\", { className: this._classNames.errorMessage, \"data-automation-id\": \"error-message\" }, errorMessage))) : null;\n    };\n    Object.defineProperty(TextFieldBase.prototype, \"_isDescriptionAvailable\", {\n        /**\n         * If a custom description render function is supplied then treat description as always available.\n         * Otherwise defer to the presence of description or error message text.\n         */\n        get: function () {\n            var props = this.props;\n            return !!(props.onRenderDescription || props.description || this._errorMessage);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextFieldBase.prototype._renderTextArea = function () {\n        var _a;\n        var invalid = (_a = this.props.invalid, _a === void 0 ? !!this._errorMessage : _a);\n        var textAreaProps = getNativeProps(this.props, textAreaProperties, ['defaultValue']);\n        var ariaLabelledBy = this.props['aria-labelledby'] || (this.props.label ? this._labelId : undefined);\n        return (React.createElement(\"textarea\", __assign({ id: this._id }, textAreaProps, { ref: this._textElement, value: this.value || '', onInput: this._onInputChange, onChange: this._onInputChange, className: this._classNames.field, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'], \"aria-invalid\": invalid, \"aria-label\": this.props.ariaLabel, readOnly: this.props.readOnly, onFocus: this._onFocus, onBlur: this._onBlur })));\n    };\n    TextFieldBase.prototype._renderInput = function () {\n        var _a, _b, _c;\n        var ariaLabel = (_a = this.props, _a.ariaLabel), invalid = (_b = _a.invalid, _b === void 0 ? !!this._errorMessage : _b), onRenderPrefix = _a.onRenderPrefix, onRenderSuffix = _a.onRenderSuffix, prefix = _a.prefix, suffix = _a.suffix, type = (_c = _a.type, _c === void 0 ? 'text' : _c), label = _a.label;\n        // build aria-labelledby list from label, prefix, and suffix\n        var labelIds = [];\n        label && labelIds.push(this._labelId);\n        (prefix !== undefined || onRenderPrefix) && labelIds.push(this._prefixId);\n        (suffix !== undefined || onRenderSuffix) && labelIds.push(this._suffixId);\n        var inputProps = __assign(__assign({ type: this.state.isRevealingPassword ? 'text' : type, id: this._id }, getNativeProps(this.props, inputProperties, ['defaultValue', 'type'])), { 'aria-labelledby': this.props['aria-labelledby'] || (labelIds.length > 0 ? labelIds.join(' ') : undefined), ref: this._textElement, value: this.value || '', onInput: this._onInputChange, onChange: this._onInputChange, className: this._classNames.field, 'aria-label': ariaLabel, 'aria-describedby': this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'], 'aria-invalid': invalid, onFocus: this._onFocus, onBlur: this._onBlur });\n        var defaultRender = function (updatedInputProps) {\n            return React.createElement(\"input\", __assign({}, updatedInputProps));\n        };\n        var onRenderInput = this.props.onRenderInput || defaultRender;\n        return onRenderInput(inputProps, defaultRender);\n    };\n    TextFieldBase.prototype._validate = function (value) {\n        var _this = this;\n        // In case _validate is called again while validation promise is executing\n        if (this._latestValidateValue === value && _shouldValidateAllChanges(this.props)) {\n            return;\n        }\n        this._latestValidateValue = value;\n        var onGetErrorMessage = this.props.onGetErrorMessage;\n        var result = onGetErrorMessage && onGetErrorMessage(value || '');\n        if (result !== undefined) {\n            if (typeof result === 'string' || !('then' in result)) {\n                this.setState({ errorMessage: result });\n                this._notifyAfterValidate(value, result);\n            }\n            else {\n                var currentValidation_1 = ++this._lastValidation;\n                result.then(function (errorMessage) {\n                    if (currentValidation_1 === _this._lastValidation) {\n                        _this.setState({ errorMessage: errorMessage });\n                    }\n                    _this._notifyAfterValidate(value, errorMessage);\n                });\n            }\n        }\n        else {\n            this._notifyAfterValidate(value, '');\n        }\n    };\n    TextFieldBase.prototype._notifyAfterValidate = function (value, errorMessage) {\n        if (value === this.value && this.props.onNotifyValidationResult) {\n            this.props.onNotifyValidationResult(errorMessage, value);\n        }\n    };\n    TextFieldBase.prototype._adjustInputHeight = function () {\n        var _a, _b;\n        if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\n            var scrollTop = (_b = (_a = this.props.scrollContainerRef) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.scrollTop;\n            var textField = this._textElement.current;\n            textField.style.height = '';\n            textField.style.height = textField.scrollHeight + 'px';\n            if (scrollTop) {\n                // Safe to assert not null, otherwise we wouldn't have a scrollTop;\n                this.props.scrollContainerRef.current.scrollTop = scrollTop;\n            }\n        }\n    };\n    TextFieldBase.defaultProps = {\n        resizable: true,\n        deferredValidationTime: 200,\n        validateOnLoad: true,\n    };\n    return TextFieldBase;\n}(React.Component));\n/** Get the value from the given state and props (converting from number to string if needed) */\nfunction _getValue(props, state) {\n    var _a = props.value, value = _a === void 0 ? state.uncontrolledValue : _a;\n    if (typeof value === 'number') {\n        // not allowed per typings, but happens anyway\n        return String(value);\n    }\n    return value;\n}\n/**\n * If `validateOnFocusIn` or `validateOnFocusOut` is true, validation should run **only** on that event.\n * Otherwise, validation should run on every change.\n */\nfunction _shouldValidateAllChanges(props) {\n    return !(props.validateOnFocusIn || props.validateOnFocusOut);\n}\n// Only calculate this once across all TextFields, since will stay the same\nvar __browserNeedsRevealButton;\nfunction _browserNeedsRevealButton() {\n    if (typeof __browserNeedsRevealButton !== 'boolean') {\n        var win = getWindow();\n        if (win === null || win === void 0 ? void 0 : win.navigator) {\n            // Edge, Chromium Edge\n            var isEdge = /Edg/.test(win.navigator.userAgent || '');\n            __browserNeedsRevealButton = !(isIE11() || isEdge);\n        }\n        else {\n            __browserNeedsRevealButton = true;\n        }\n    }\n    return __browserNeedsRevealButton;\n}\n//# sourceMappingURL=TextField.base.js.map","import { __assign, __rest } from \"tslib\";\nimport { memoizeFunction } from '../../Utilities';\nvar COMMAND_BAR_HEIGHT = 44;\nexport var getStyles = function (props) {\n    var className = props.className, theme = props.theme;\n    var semanticColors = theme.semanticColors;\n    return {\n        root: [\n            theme.fonts.medium,\n            'ms-CommandBar',\n            {\n                display: 'flex',\n                backgroundColor: semanticColors.bodyBackground,\n                padding: '0 14px 0 24px',\n                height: COMMAND_BAR_HEIGHT,\n            },\n            className,\n        ],\n        primarySet: [\n            'ms-CommandBar-primaryCommand',\n            {\n                flexGrow: '1',\n                display: 'flex',\n                alignItems: 'stretch',\n            },\n        ],\n        secondarySet: [\n            'ms-CommandBar-secondaryCommand',\n            {\n                flexShrink: '0',\n                display: 'flex',\n                alignItems: 'stretch',\n            },\n        ],\n    };\n};\nexport var getCommandButtonStyles = memoizeFunction(function (customStyles) {\n    var rootStyles = {\n        height: '100%',\n    };\n    var labelStyles = {\n        whiteSpace: 'nowrap',\n    };\n    var _a = customStyles || {}, root = _a.root, label = _a.label, restCustomStyles = __rest(_a, [\"root\", \"label\"]);\n    return __assign(__assign({}, restCustomStyles), { root: root ? [rootStyles, root] : rootStyles, label: label ? [labelStyles, label] : labelStyles });\n});\n//# sourceMappingURL=CommandBar.styles.js.map","import { __assign } from \"tslib\";\nimport { getGlobalClassNames, getFocusStyle, HighContrastSelector, getHighContrastNoAdjustStyle, } from '../../../../Styling';\nimport { ButtonGlobalClassNames } from '../../../Button/BaseButton.classNames';\nvar GlobalClassNames = {\n    root: 'ms-PickerPersona-container',\n    itemContent: 'ms-PickerItem-content',\n    removeButton: 'ms-PickerItem-removeButton',\n    isSelected: 'is-selected',\n    isInvalid: 'is-invalid',\n};\nvar REMOVE_BUTTON_SIZE = 24;\nvar PICKER_PERSONA_RADIUS = 15;\nexport function getStyles(props) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    var className = props.className, theme = props.theme, selected = props.selected, invalid = props.invalid, disabled = props.disabled;\n    var palette = theme.palette, semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var personaRootStyles = {\n        color: 'inherit',\n    };\n    // set text color to inherit to allow focus styles to control persona text colors\n    var personaPrimaryTextStyles = [\n        selected &&\n            !invalid &&\n            !disabled && {\n            color: 'inherit',\n            selectors: (_a = {\n                    ':hover': {\n                        color: 'inherit',\n                    }\n                },\n                _a[HighContrastSelector] = {\n                    color: 'HighlightText',\n                },\n                _a),\n        },\n        ((invalid && !selected) || (invalid && selected && disabled)) && {\n            color: 'inherit',\n            borderBottom: \"2px dotted currentColor\",\n            selectors: (_b = {},\n                _b[\".\".concat(classNames.root, \":hover &\")] = {\n                    // override Persona root:hover selector\n                    color: 'inherit',\n                },\n                _b),\n        },\n        invalid &&\n            selected &&\n            !disabled && {\n            color: 'inherit',\n            borderBottom: \"2px dotted currentColor\",\n            selectors: {\n                ':hover': {\n                    color: 'inherit',\n                },\n            },\n        },\n        disabled && {\n            selectors: (_c = {},\n                _c[HighContrastSelector] = {\n                    color: 'GrayText',\n                },\n                _c),\n        },\n    ];\n    var personaSecondaryTextStyles = [\n        selected &&\n            !invalid &&\n            !disabled && {\n            color: 'inherit',\n            selectors: (_d = {\n                    ':hover': {\n                        color: 'inherit',\n                    }\n                },\n                _d[HighContrastSelector] = {\n                    color: 'HighlightText',\n                },\n                _d),\n        },\n    ];\n    var personaCoinInitialsStyles = [\n        invalid && {\n            fontSize: fonts.xLarge.fontSize,\n        },\n    ];\n    return {\n        root: [\n            classNames.root,\n            getFocusStyle(theme, { inset: -2 }),\n            {\n                borderRadius: PICKER_PERSONA_RADIUS,\n                display: 'inline-flex',\n                alignItems: 'center',\n                background: palette.neutralLighter,\n                margin: '1px 2px',\n                cursor: 'default',\n                userSelect: 'none',\n                maxWidth: 300,\n                verticalAlign: 'middle',\n                minWidth: 0,\n                selectors: (_e = {\n                        ':hover': {\n                            background: !selected && !disabled ? palette.neutralLight : '',\n                        }\n                    },\n                    _e[HighContrastSelector] = [{ border: '1px solid WindowText' }, disabled && { borderColor: 'GrayText' }],\n                    _e),\n            },\n            selected &&\n                !disabled && [\n                classNames.isSelected,\n                {\n                    selectors: (_f = {\n                            ':focus-within': {\n                                background: palette.themePrimary,\n                                color: palette.white,\n                            }\n                        },\n                        _f[HighContrastSelector] = __assign({ borderColor: 'HighLight', background: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                        _f),\n                },\n            ],\n            invalid && [classNames.isInvalid],\n            invalid &&\n                selected &&\n                !disabled && {\n                ':focus-within': {\n                    background: palette.redDark,\n                    color: palette.white,\n                },\n            },\n            ((invalid && !selected) || (invalid && selected && disabled)) && {\n                color: palette.redDark,\n            },\n            className,\n        ],\n        itemContent: [\n            classNames.itemContent,\n            {\n                flex: '0 1 auto',\n                minWidth: 0,\n                // CSS below is needed for IE 11 to properly truncate long persona names in the picker\n                // and to clip the presence indicator (in all browsers)\n                maxWidth: '100%',\n                overflow: 'hidden',\n            },\n        ],\n        removeButton: [\n            classNames.removeButton,\n            {\n                borderRadius: PICKER_PERSONA_RADIUS,\n                color: palette.neutralPrimary,\n                flex: '0 0 auto',\n                width: REMOVE_BUTTON_SIZE,\n                height: REMOVE_BUTTON_SIZE,\n                selectors: {\n                    ':hover': {\n                        background: palette.neutralTertiaryAlt,\n                        color: palette.neutralDark,\n                    },\n                },\n            },\n            selected && [\n                getFocusStyle(theme, {\n                    inset: 2,\n                    borderColor: 'transparent',\n                    highContrastStyle: { inset: 2, left: 1, top: 1, bottom: 1, right: 1, outlineColor: 'ButtonText' },\n                    outlineColor: palette.white,\n                    borderRadius: PICKER_PERSONA_RADIUS,\n                }),\n                {\n                    selectors: (_g = {\n                            ':hover': {\n                                color: palette.white,\n                                background: palette.themeDark,\n                            },\n                            ':active': {\n                                color: palette.white,\n                                background: palette.themeDarker,\n                            },\n                            ':focus': {\n                                color: palette.white,\n                            }\n                        },\n                        _g[HighContrastSelector] = {\n                            color: 'HighlightText',\n                        },\n                        _g),\n                },\n                invalid && {\n                    selectors: {\n                        ':hover': {\n                            color: palette.white,\n                            background: palette.red,\n                        },\n                        ':active': {\n                            color: palette.white,\n                            background: palette.redDark,\n                        },\n                    },\n                },\n            ],\n            disabled && {\n                selectors: (_h = {},\n                    _h[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n                        color: semanticColors.buttonText,\n                    },\n                    _h),\n            },\n        ],\n        subComponentStyles: {\n            persona: {\n                root: personaRootStyles,\n                primaryText: personaPrimaryTextStyles,\n                secondaryText: personaSecondaryTextStyles,\n            },\n            personaCoin: {\n                initials: personaCoinInitialsStyles,\n            },\n        },\n    };\n}\n//# sourceMappingURL=PeoplePickerItem.styles.js.map","import * as React from 'react';\nexport var ThemeContext = React.createContext(undefined);\n//# sourceMappingURL=ThemeContext.js.map","import { HighContrastSelector, focusClear, getGlobalClassNames, ZIndexes } from '../../Styling';\nfunction getBeakStyle(beakWidth) {\n    return {\n        height: beakWidth,\n        width: beakWidth,\n    };\n}\nvar GlobalClassNames = {\n    container: 'ms-Callout-container',\n    root: 'ms-Callout',\n    beak: 'ms-Callout-beak',\n    beakCurtain: 'ms-Callout-beakCurtain',\n    calloutMain: 'ms-Callout-main',\n};\nexport var getStyles = function (props) {\n    var _a;\n    var theme = props.theme, className = props.className, overflowYHidden = props.overflowYHidden, calloutWidth = props.calloutWidth, beakWidth = props.beakWidth, backgroundColor = props.backgroundColor, calloutMaxWidth = props.calloutMaxWidth, calloutMinWidth = props.calloutMinWidth, doNotLayer = props.doNotLayer;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var semanticColors = theme.semanticColors, effects = theme.effects;\n    return {\n        container: [\n            classNames.container,\n            {\n                position: 'relative',\n            },\n        ],\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                position: 'absolute',\n                display: 'flex',\n                zIndex: doNotLayer ? ZIndexes.Layer : undefined,\n                boxSizing: 'border-box',\n                borderRadius: effects.roundedCorner2,\n                boxShadow: effects.elevation16,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        borderWidth: 1,\n                        borderStyle: 'solid',\n                        borderColor: 'WindowText',\n                    },\n                    _a),\n            },\n            focusClear(),\n            className,\n            !!calloutWidth && { width: calloutWidth },\n            !!calloutMaxWidth && { maxWidth: calloutMaxWidth },\n            !!calloutMinWidth && { minWidth: calloutMinWidth },\n        ],\n        beak: [\n            classNames.beak,\n            {\n                position: 'absolute',\n                backgroundColor: semanticColors.menuBackground,\n                boxShadow: 'inherit',\n                border: 'inherit',\n                boxSizing: 'border-box',\n                transform: 'rotate(45deg)',\n            },\n            getBeakStyle(beakWidth),\n            backgroundColor && {\n                backgroundColor: backgroundColor,\n            },\n        ],\n        beakCurtain: [\n            classNames.beakCurtain,\n            {\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0,\n                backgroundColor: semanticColors.menuBackground,\n                borderRadius: effects.roundedCorner2,\n            },\n        ],\n        calloutMain: [\n            classNames.calloutMain,\n            {\n                backgroundColor: semanticColors.menuBackground,\n                overflowX: 'hidden',\n                overflowY: 'auto',\n                position: 'relative',\n                width: '100%',\n                borderRadius: effects.roundedCorner2,\n            },\n            overflowYHidden && {\n                overflowY: 'hidden',\n            },\n            backgroundColor && {\n                backgroundColor: backgroundColor,\n            },\n        ],\n    };\n};\n//# sourceMappingURL=CalloutContent.styles.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, styled } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { getStyles } from './PeoplePickerItemSuggestion.styles';\nvar getClassNames = classNamesFunction();\nexport var PeoplePickerItemSuggestionBase = function (props) {\n    var personaProps = props.personaProps, suggestionsProps = props.suggestionsProps, compact = props.compact, styles = props.styles, theme = props.theme, className = props.className;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: (suggestionsProps && suggestionsProps.suggestionsItemClassName) || className,\n    });\n    var personaStyles = classNames.subComponentStyles && classNames.subComponentStyles.persona\n        ? classNames.subComponentStyles.persona\n        : undefined;\n    return (React.createElement(\"div\", { className: classNames.root },\n        React.createElement(Persona, __assign({ size: PersonaSize.size24, styles: personaStyles, className: classNames.personaWrapper, showSecondaryText: !compact, showOverflowTooltip: false }, personaProps))));\n};\nexport var PeoplePickerItemSuggestion = styled(PeoplePickerItemSuggestionBase, getStyles, undefined, { scope: 'PeoplePickerItemSuggestion' });\n//# sourceMappingURL=PeoplePickerItemSuggestion.js.map","import { __assign } from \"tslib\";\nimport { getGlobalClassNames, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nexport var SuggestionsItemGlobalClassNames = {\n    root: 'ms-Suggestions-item',\n    itemButton: 'ms-Suggestions-itemButton',\n    closeButton: 'ms-Suggestions-closeButton',\n    isSuggested: 'is-suggested',\n};\nexport function getStyles(props) {\n    var _a, _b, _c, _d, _e, _f;\n    var className = props.className, theme = props.theme, suggested = props.suggested;\n    var palette = theme.palette, semanticColors = theme.semanticColors;\n    var classNames = getGlobalClassNames(SuggestionsItemGlobalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            {\n                display: 'flex',\n                alignItems: 'stretch',\n                boxSizing: 'border-box',\n                width: '100%',\n                position: 'relative',\n                selectors: {\n                    '&:hover': {\n                        background: semanticColors.menuItemBackgroundHovered,\n                    },\n                    '&:hover .ms-Suggestions-closeButton': {\n                        display: 'block',\n                    },\n                },\n            },\n            suggested && {\n                selectors: (_a = {},\n                    _a[\".\".concat(IsFocusVisibleClassName, \" &, :host(.\").concat(IsFocusVisibleClassName, \") &\")] = {\n                        selectors: (_b = {},\n                            _b[\".\".concat(classNames.closeButton)] = {\n                                display: 'block',\n                                background: semanticColors.menuItemBackgroundPressed,\n                            },\n                            _b),\n                    },\n                    _a[':after'] = {\n                        pointerEvents: 'none',\n                        content: '\"\"',\n                        position: 'absolute',\n                        left: 0,\n                        top: 0,\n                        bottom: 0,\n                        right: 0,\n                        border: \"1px solid \".concat(theme.semanticColors.focusBorder),\n                    },\n                    _a),\n            },\n            className,\n        ],\n        itemButton: [\n            classNames.itemButton,\n            {\n                width: '100%',\n                padding: 0,\n                border: 'none',\n                height: '100%',\n                // Force the item button to be collapsible so it can always shrink\n                // to accommodate the close button as a peer in its flex container.\n                minWidth: 0,\n                // Require for IE11 to truncate the component.\n                overflow: 'hidden',\n                selectors: (_c = {},\n                    _c[HighContrastSelector] = {\n                        color: 'WindowText',\n                        selectors: {\n                            ':hover': __assign({ background: 'Highlight', color: 'HighlightText' }, getHighContrastNoAdjustStyle()),\n                        },\n                    },\n                    _c[':hover'] = {\n                        color: semanticColors.menuItemTextHovered,\n                    },\n                    _c),\n            },\n            suggested && [\n                classNames.isSuggested,\n                {\n                    background: semanticColors.menuItemBackgroundPressed,\n                    selectors: (_d = {\n                            ':hover': {\n                                background: semanticColors.menuDivider,\n                            }\n                        },\n                        _d[HighContrastSelector] = __assign({ background: 'Highlight', color: 'HighlightText' }, getHighContrastNoAdjustStyle()),\n                        _d),\n                },\n            ],\n        ],\n        closeButton: [\n            classNames.closeButton,\n            {\n                display: 'none',\n                color: palette.neutralSecondary,\n                padding: '0 4px',\n                height: 'auto',\n                width: 32,\n                selectors: (_e = {\n                        ':hover, :active': {\n                            background: palette.neutralTertiaryAlt,\n                            color: palette.neutralDark,\n                        }\n                    },\n                    _e[HighContrastSelector] = {\n                        color: 'WindowText',\n                    },\n                    _e),\n            },\n            suggested && (_f = {},\n                _f[\".\".concat(IsFocusVisibleClassName, \" &, :host(.\").concat(IsFocusVisibleClassName, \") &\")] = {\n                    selectors: {\n                        ':hover, :active': {\n                            background: palette.neutralTertiary,\n                        },\n                    },\n                },\n                _f.selectors = {\n                    ':hover, :active': {\n                        background: palette.neutralTertiary,\n                        color: palette.neutralPrimary,\n                    },\n                },\n                _f),\n        ],\n    };\n}\n//# sourceMappingURL=SuggestionsItem.styles.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeytipManager } from '../../utilities/keytips/KeytipManager';\nimport { useConst, usePrevious } from '@fluentui/react-hooks';\nvar registerPersistedKeytips = function (keytipsToRegister, keytipManager, registeredPersistedKeytips) {\n    for (var _i = 0, keytipsToRegister_1 = keytipsToRegister; _i < keytipsToRegister_1.length; _i++) {\n        var keytip = keytipsToRegister_1[_i];\n        var uniqueID = keytipManager.register(keytip, true);\n        // Update map\n        registeredPersistedKeytips[uniqueID] = keytip;\n    }\n};\nvar unregisterPersistedKeytips = function (keytipManager, registeredPersistedKeytips) {\n    for (var _i = 0, _a = Object.keys(registeredPersistedKeytips); _i < _a.length; _i++) {\n        var uniqueID = _a[_i];\n        keytipManager.unregister(registeredPersistedKeytips[uniqueID], uniqueID, true);\n        delete registeredPersistedKeytips[uniqueID];\n    }\n};\nvar useKeytipRegistrations = function (registeredPersistedKeytips, keytipsToRegister, keytipManager) {\n    var prevPersistedKeytips = usePrevious(registeredPersistedKeytips);\n    // Update\n    React.useEffect(function () {\n        if (prevPersistedKeytips) {\n            // Unregister old keytips\n            unregisterPersistedKeytips(keytipManager, prevPersistedKeytips);\n            // Register new keytips\n            registerPersistedKeytips(keytipsToRegister, keytipManager, registeredPersistedKeytips);\n        }\n    });\n    // Mount/Unmount\n    React.useEffect(function () {\n        // Register on mount\n        registerPersistedKeytips(keytipsToRegister, keytipManager, registeredPersistedKeytips);\n        return function () {\n            // Unregister on unmount\n            unregisterPersistedKeytips(keytipManager, registeredPersistedKeytips);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n};\nexport var OverflowButton = function (props) {\n    var keytipManager = KeytipManager.getInstance();\n    var className = props.className, overflowItems = props.overflowItems, keytipSequences = props.keytipSequences, itemSubMenuProvider = props.itemSubMenuProvider, onRenderOverflowButton = props.onRenderOverflowButton;\n    var persistedKeytips = useConst({});\n    // Gets the subMenu for an overflow item\n    var getSubMenuForItem = React.useCallback(function (item) {\n        // Checks if itemSubMenuProvider has been defined, if not defaults to subMenuProps\n        if (itemSubMenuProvider) {\n            return itemSubMenuProvider(item);\n        }\n        if (item.subMenuProps) {\n            return item.subMenuProps.items;\n        }\n        return undefined;\n    }, [itemSubMenuProvider]);\n    var _a = React.useMemo(function () {\n        var newKeytipsToRegister = [];\n        var newOverflowItems = [];\n        if (keytipSequences) {\n            overflowItems === null || overflowItems === void 0 ? void 0 : overflowItems.forEach(function (overflowItem) {\n                var _a;\n                var keytip = overflowItem.keytipProps;\n                if (keytip) {\n                    // Create persisted keytip\n                    var persistedKeytip = {\n                        content: keytip.content,\n                        keySequences: keytip.keySequences,\n                        disabled: keytip.disabled || !!(overflowItem.disabled || overflowItem.isDisabled),\n                        hasDynamicChildren: keytip.hasDynamicChildren,\n                        hasMenu: keytip.hasMenu,\n                    };\n                    if (keytip.hasDynamicChildren || getSubMenuForItem(overflowItem)) {\n                        // If the keytip has a submenu or children nodes, change onExecute to persistedKeytipExecute\n                        persistedKeytip.onExecute = keytipManager.menuExecute.bind(keytipManager, keytipSequences, (_a = overflowItem === null || overflowItem === void 0 ? void 0 : overflowItem.keytipProps) === null || _a === void 0 ? void 0 : _a.keySequences);\n                        persistedKeytip.hasOverflowSubMenu = true;\n                    }\n                    else {\n                        // If the keytip doesn't have a submenu, just execute the original function\n                        persistedKeytip.onExecute = keytip.onExecute;\n                    }\n                    newKeytipsToRegister.push(persistedKeytip);\n                    // Add the overflow sequence to this item\n                    var newOverflowItem = __assign(__assign({}, overflowItem), { keytipProps: __assign(__assign({}, keytip), { overflowSetSequence: keytipSequences }) });\n                    newOverflowItems === null || newOverflowItems === void 0 ? void 0 : newOverflowItems.push(newOverflowItem);\n                }\n                else {\n                    // Nothing to change, add overflowItem to list\n                    newOverflowItems === null || newOverflowItems === void 0 ? void 0 : newOverflowItems.push(overflowItem);\n                }\n            });\n        }\n        else {\n            newOverflowItems = overflowItems;\n        }\n        return { modifiedOverflowItems: newOverflowItems, keytipsToRegister: newKeytipsToRegister };\n    }, [overflowItems, getSubMenuForItem, keytipManager, keytipSequences]), modifiedOverflowItems = _a.modifiedOverflowItems, keytipsToRegister = _a.keytipsToRegister;\n    useKeytipRegistrations(persistedKeytips, keytipsToRegister, keytipManager);\n    return React.createElement(\"div\", { className: className }, onRenderOverflowButton(modifiedOverflowItems));\n};\n//# sourceMappingURL=OverflowButton.js.map","export var SelectableOptionMenuItemType;\n(function (SelectableOptionMenuItemType) {\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Normal\"] = 0] = \"Normal\";\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Divider\"] = 1] = \"Divider\";\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Header\"] = 2] = \"Header\";\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"SelectAll\"] = 3] = \"SelectAll\";\n})(SelectableOptionMenuItemType || (SelectableOptionMenuItemType = {}));\n//# sourceMappingURL=SelectableOption.types.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { useConst, useIsomorphicLayoutEffect, usePrevious } from '@fluentui/react-hooks';\nimport { mergeAriaAttributeValues } from '../../Utilities';\nimport { KeytipManager, mergeOverflows, sequencesToID, getAriaDescribedBy } from '../../utilities/keytips/index';\n/**\n * Hook that creates attributes for components which are enabled with Keytip.\n */\nexport function useKeytipData(options) {\n    var uniqueId = React.useRef();\n    var keytipProps = options.keytipProps\n        ? __assign({ disabled: options.disabled }, options.keytipProps) : undefined;\n    var keytipManager = useConst(KeytipManager.getInstance());\n    var prevOptions = usePrevious(options);\n    // useLayoutEffect used to strictly emulate didUpdate/didMount behavior\n    useIsomorphicLayoutEffect(function () {\n        if (uniqueId.current &&\n            keytipProps &&\n            ((prevOptions === null || prevOptions === void 0 ? void 0 : prevOptions.keytipProps) !== options.keytipProps || (prevOptions === null || prevOptions === void 0 ? void 0 : prevOptions.disabled) !== options.disabled)) {\n            keytipManager.update(keytipProps, uniqueId.current);\n        }\n    });\n    useIsomorphicLayoutEffect(function () {\n        // Register Keytip in KeytipManager\n        if (keytipProps) {\n            uniqueId.current = keytipManager.register(keytipProps);\n        }\n        return function () {\n            // Unregister Keytip in KeytipManager\n            keytipProps && keytipManager.unregister(keytipProps, uniqueId.current);\n        };\n        // this is meant to run only at mount, and updates are handled separately\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    var nativeKeytipProps = {\n        ariaDescribedBy: undefined,\n        keytipId: undefined,\n    };\n    if (keytipProps) {\n        nativeKeytipProps = getKeytipData(keytipManager, keytipProps, options.ariaDescribedBy);\n    }\n    return nativeKeytipProps;\n}\n/**\n * Gets the aria- and data- attributes to attach to the component\n * @param keytipProps - options for Keytip\n * @param describedByPrepend - ariaDescribedBy value to prepend\n */\nfunction getKeytipData(keytipManager, keytipProps, describedByPrepend) {\n    // Add the parent overflow sequence if necessary\n    var newKeytipProps = keytipManager.addParentOverflow(keytipProps);\n    // Construct aria-describedby and data-ktp-id attributes\n    var ariaDescribedBy = mergeAriaAttributeValues(describedByPrepend, getAriaDescribedBy(newKeytipProps.keySequences));\n    var keySequences = __spreadArray([], newKeytipProps.keySequences, true);\n    if (newKeytipProps.overflowSetSequence) {\n        keySequences = mergeOverflows(keySequences, newKeytipProps.overflowSetSequence);\n    }\n    var keytipId = sequencesToID(keySequences);\n    return {\n        ariaDescribedBy: ariaDescribedBy,\n        keytipId: keytipId,\n    };\n}\n//# sourceMappingURL=useKeytipData.js.map","import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nvar DEFAULT_BUTTON_HEIGHT = '40px';\nvar DEFAULT_PADDING = '0 4px';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n    var _a, _b, _c;\n    var baseButtonStyles = getBaseButtonStyles(theme);\n    var actionButtonStyles = {\n        root: (_a = {\n                padding: DEFAULT_PADDING,\n                height: DEFAULT_BUTTON_HEIGHT,\n                color: theme.palette.neutralPrimary,\n                backgroundColor: 'transparent',\n                border: '1px solid transparent'\n            },\n            _a[HighContrastSelector] = {\n                borderColor: 'Window',\n            },\n            _a),\n        rootHovered: (_b = {\n                color: theme.palette.themePrimary\n            },\n            _b[HighContrastSelector] = {\n                color: 'Highlight',\n            },\n            _b),\n        iconHovered: {\n            color: theme.palette.themePrimary,\n        },\n        rootPressed: {\n            color: theme.palette.black,\n        },\n        rootExpanded: {\n            color: theme.palette.themePrimary,\n        },\n        iconPressed: {\n            color: theme.palette.themeDarker,\n        },\n        rootDisabled: (_c = {\n                color: theme.palette.neutralTertiary,\n                backgroundColor: 'transparent',\n                borderColor: 'transparent'\n            },\n            _c[HighContrastSelector] = {\n                color: 'GrayText',\n            },\n            _c),\n        rootChecked: {\n            color: theme.palette.black,\n        },\n        iconChecked: {\n            color: theme.palette.themeDarker,\n        },\n        flexContainer: {\n            justifyContent: 'flex-start',\n        },\n        icon: {\n            color: theme.palette.themeDarkAlt,\n        },\n        iconDisabled: {\n            color: 'inherit',\n        },\n        menuIcon: {\n            color: theme.palette.neutralSecondary,\n        },\n        textContainer: {\n            flexGrow: 0,\n        },\n    };\n    return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles);\n});\n//# sourceMappingURL=ActionButton.styles.js.map","import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport { PersonaPresence as PersonaPresenceEnum } from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nvar coinSizeFontScaleFactor = 6;\nvar coinSizePresenceScaleFactor = 3;\nvar presenceMaxSize = 40;\nvar presenceFontMaxSize = 20;\nvar getClassNames = classNamesFunction({\n    // There can be many PersonaPresence rendered with different sizes.\n    // Therefore setting a larger cache size.\n    cacheSize: 100,\n});\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport var PersonaPresenceBase = React.forwardRef(function (props, forwardedRef) {\n    var coinSize = props.coinSize, isOutOfOffice = props.isOutOfOffice, styles = props.styles, // Use getStyles from props.\n    presence = props.presence, theme = props.theme, presenceTitle = props.presenceTitle, presenceColors = props.presenceColors;\n    var rootRef = React.useRef(null);\n    var mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n    var size = sizeBoolean(props.size);\n    // Render Presence Icon if Persona is above size 32.\n    var renderIcon = !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) &&\n        (coinSize ? coinSize > 32 : true);\n    var presenceHeightWidth = coinSize\n        ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize\n            ? coinSize / coinSizePresenceScaleFactor + 'px'\n            : presenceMaxSize + 'px'\n        : '';\n    var presenceFontSize = coinSize\n        ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize\n            ? coinSize / coinSizeFontScaleFactor + 'px'\n            : presenceFontMaxSize + 'px'\n        : '';\n    var coinSizeWithPresenceIconStyle = coinSize\n        ? { fontSize: presenceFontSize, lineHeight: presenceHeightWidth }\n        : undefined;\n    var coinSizeWithPresenceStyle = coinSize ? { width: presenceHeightWidth, height: presenceHeightWidth } : undefined;\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        presence: presence,\n        size: props.size,\n        isOutOfOffice: isOutOfOffice,\n        presenceColors: presenceColors,\n    });\n    if (presence === PersonaPresenceEnum.none) {\n        return null;\n    }\n    return (React.createElement(\"div\", { role: \"presentation\", className: classNames.presence, style: coinSizeWithPresenceStyle, title: presenceTitle, ref: mergedRootRef }, renderIcon && (React.createElement(Icon, { className: classNames.presenceIcon, iconName: determineIcon(props.presence, props.isOutOfOffice), style: coinSizeWithPresenceIconStyle }))));\n});\nPersonaPresenceBase.displayName = 'PersonaPresenceBase';\nfunction determineIcon(presence, isOutOfOffice) {\n    if (!presence) {\n        return undefined;\n    }\n    var oofIcon = 'SkypeArrow';\n    switch (PersonaPresenceEnum[presence]) {\n        case 'online':\n            return 'SkypeCheck';\n        case 'away':\n            return isOutOfOffice ? oofIcon : 'SkypeClock';\n        case 'dnd':\n            return 'SkypeMinus';\n        case 'offline':\n            return isOutOfOffice ? oofIcon : '';\n    }\n    return '';\n}\n//# sourceMappingURL=PersonaPresence.base.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Async, KeyCodes, css, elementContains, format, getId, classNamesFunction, styled, initializeComponentRef, } from '../../Utilities';\nimport { Callout } from '../../Callout';\nimport { Selection, SelectionZone, SelectionMode } from '../../utilities/selection/index';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { Suggestions } from './Suggestions/Suggestions';\nimport { getStyles as suggestionsStyles } from './Suggestions/Suggestions.styles';\nimport { SuggestionsController } from './Suggestions/SuggestionsController';\nimport { ValidationState } from './BasePicker.types';\nimport { Autofill } from '../Autofill/index';\nimport * as stylesImport from './BasePicker.scss';\nimport { WindowContext } from '@fluentui/react-window-provider';\nimport { getDocumentEx } from '../../utilities/dom';\nvar legacyStyles = stylesImport;\nvar EXTENDED_LOAD_TIME = 3000;\nvar getClassNames = classNamesFunction();\n/**\n * Should be removed once new picker without inheritance is created\n */\nfunction getStyledSuggestions(suggestionsType) {\n    return styled(suggestionsType, suggestionsStyles, undefined, {\n        scope: 'Suggestions',\n    });\n}\n/**\n * {@docCategory Pickers}\n */\nexport var BasePicker = /** @class */ (function (_super) {\n    __extends(BasePicker, _super);\n    function BasePicker(basePickerProps) {\n        var _this = _super.call(this, basePickerProps) || this;\n        // Refs\n        _this.root = React.createRef();\n        _this.input = React.createRef();\n        _this.suggestionElement = React.createRef();\n        /**\n         * @deprecated this is no longer necessary as typescript now supports generic elements\n         */\n        _this.SuggestionOfProperType = Suggestions;\n        // eslint-disable-next-line deprecation/deprecation\n        _this._styledSuggestions = getStyledSuggestions(_this.SuggestionOfProperType);\n        _this._overrideScrollDismiss = false;\n        _this.dismissSuggestions = function (ev) {\n            var selectItemFunction = function () {\n                var addItemOnDismiss = true;\n                if (_this.props.onDismiss) {\n                    addItemOnDismiss = _this.props.onDismiss(ev, _this.suggestionStore.currentSuggestion ? _this.suggestionStore.currentSuggestion.item : undefined);\n                }\n                if (!ev || (ev && !ev.defaultPrevented)) {\n                    // Select the first suggestion if one is available and permitted by onDismiss when user leaves.\n                    if (addItemOnDismiss !== false &&\n                        _this.canAddItems() &&\n                        _this.suggestionStore.hasSelectedSuggestion() &&\n                        _this.state.suggestedDisplayValue) {\n                        _this.addItemByIndex(0);\n                    }\n                }\n            };\n            if (_this.currentPromise) {\n                _this.currentPromise.then(function () { return selectItemFunction(); });\n            }\n            else {\n                selectItemFunction();\n            }\n            _this.setState({ suggestionsVisible: false });\n        };\n        _this.refocusSuggestions = function (keyCode) {\n            _this.resetFocus();\n            if (_this.suggestionStore.suggestions && _this.suggestionStore.suggestions.length > 0) {\n                if (keyCode === KeyCodes.up) {\n                    _this.suggestionStore.setSelectedSuggestion(_this.suggestionStore.suggestions.length - 1);\n                }\n                else if (keyCode === KeyCodes.down) {\n                    _this.suggestionStore.setSelectedSuggestion(0);\n                }\n            }\n        };\n        _this.onInputChange = function (value) {\n            _this.updateValue(value);\n            _this.setState({\n                moreSuggestionsAvailable: true,\n                isMostRecentlyUsedVisible: false,\n            });\n        };\n        _this.onSuggestionClick = function (ev, item, index) {\n            _this.addItemByIndex(index);\n        };\n        _this.onSuggestionRemove = function (ev, item, index) {\n            if (_this.props.onRemoveSuggestion) {\n                _this.props.onRemoveSuggestion(item);\n            }\n            _this.suggestionStore.removeSuggestion(index);\n        };\n        _this.onInputFocus = function (ev) {\n            _this.selection.setAllSelected(false);\n            // Only trigger all of the focus if this component isn't already focused.\n            // For example when an item is selected or removed from the selected list it should be treated\n            // as though the input is still focused.\n            if (!_this.state.isFocused) {\n                _this._userTriggeredSuggestions();\n                if (_this.props.inputProps && _this.props.inputProps.onFocus) {\n                    _this.props.inputProps.onFocus(ev);\n                }\n            }\n        };\n        _this.onInputBlur = function (ev) {\n            if (_this.props.inputProps && _this.props.inputProps.onBlur) {\n                _this.props.inputProps.onBlur(ev);\n            }\n        };\n        _this.onBlur = function (ev) {\n            if (_this.state.isFocused) {\n                // Only blur the entire component if an unrelated element gets focus.\n                // Otherwise treat it as though it still has focus.\n                // Do nothing if the blur is coming from something\n                // inside the comboBox root or the comboBox menu since\n                // it we are not really bluring from the whole comboBox\n                var relatedTarget = ev.relatedTarget;\n                if (ev.relatedTarget === null) {\n                    // In IE11, due to lack of support, event.relatedTarget is always\n                    // null making every onBlur call to be \"outside\" of the ComboBox\n                    // even when it's not. Using document.activeElement is another way\n                    // for us to be able to get what the relatedTarget without relying\n                    // on the event\n                    relatedTarget = getDocumentEx(_this.context).activeElement;\n                }\n                if (relatedTarget && !elementContains(_this.root.current, relatedTarget)) {\n                    _this.setState({ isFocused: false });\n                    if (_this.props.onBlur) {\n                        _this.props.onBlur(ev);\n                    }\n                }\n            }\n        };\n        /**\n         * Resets focus to last element in wrapper div if clicking back into Picker that has hit item limit\n         */\n        _this.onWrapperClick = function (ev) {\n            if (_this.state.items.length && !_this.canAddItems()) {\n                _this.resetFocus(_this.state.items.length - 1);\n            }\n        };\n        /**\n         * Reveals suggestions any time the user clicks on the input element\n         * without shifting focus.\n         */\n        _this.onClick = function (ev) {\n            if (_this.props.inputProps !== undefined && _this.props.inputProps.onClick !== undefined) {\n                _this.props.inputProps.onClick(ev);\n            }\n            // Only primary (left) clicks show suggestions.\n            if (ev.button === 0) {\n                _this._userTriggeredSuggestions();\n            }\n        };\n        _this.onFocus = function () {\n            if (!_this.state.isFocused) {\n                _this.setState({ isFocused: true });\n            }\n        };\n        _this.onKeyDown = function (ev) {\n            // eslint-disable-next-line deprecation/deprecation\n            var keyCode = ev.which;\n            switch (keyCode) {\n                case KeyCodes.escape:\n                    if (_this.state.suggestionsVisible) {\n                        _this.setState({ suggestionsVisible: false });\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                    }\n                    break;\n                case KeyCodes.tab:\n                case KeyCodes.enter:\n                    if (_this.suggestionElement.current && _this.suggestionElement.current.hasSuggestedActionSelected()) {\n                        _this.suggestionElement.current.executeSelectedAction();\n                    }\n                    else if (!ev.shiftKey && _this.suggestionStore.hasSelectedSuggestion() && _this.state.suggestionsVisible) {\n                        _this.completeSuggestion();\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                    }\n                    else {\n                        _this._completeGenericSuggestion();\n                    }\n                    break;\n                case KeyCodes.backspace:\n                    if (!_this.props.disabled) {\n                        _this.onBackspace(ev);\n                    }\n                    ev.stopPropagation();\n                    break;\n                case KeyCodes.del:\n                    if (!_this.props.disabled) {\n                        if (_this.input.current &&\n                            ev.target === _this.input.current.inputElement &&\n                            _this.state.suggestionsVisible &&\n                            _this.suggestionStore.currentIndex !== -1) {\n                            if (_this.props.onRemoveSuggestion) {\n                                _this.props.onRemoveSuggestion(_this.suggestionStore.currentSuggestion.item);\n                            }\n                            _this.suggestionStore.removeSuggestion(_this.suggestionStore.currentIndex);\n                            _this.forceUpdate();\n                        }\n                        else {\n                            _this.onBackspace(ev);\n                        }\n                    }\n                    ev.stopPropagation();\n                    break;\n                case KeyCodes.up:\n                    if (_this.input.current && ev.target === _this.input.current.inputElement && _this.state.suggestionsVisible) {\n                        if (_this.suggestionElement.current &&\n                            _this.suggestionElement.current.tryHandleKeyDown(keyCode, _this.suggestionStore.currentIndex)) {\n                            ev.preventDefault();\n                            ev.stopPropagation();\n                            _this.forceUpdate();\n                        }\n                        else {\n                            if (_this.suggestionElement.current &&\n                                _this.suggestionElement.current.hasSuggestedAction() &&\n                                _this.suggestionStore.currentIndex === 0) {\n                                ev.preventDefault();\n                                ev.stopPropagation();\n                                _this.suggestionElement.current.focusAboveSuggestions();\n                                _this.suggestionStore.deselectAllSuggestions();\n                                _this.forceUpdate();\n                            }\n                            else {\n                                if (_this.suggestionStore.previousSuggestion()) {\n                                    ev.preventDefault();\n                                    ev.stopPropagation();\n                                    _this.onSuggestionSelect();\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case KeyCodes.down:\n                    if (_this.input.current && ev.target === _this.input.current.inputElement && _this.state.suggestionsVisible) {\n                        if (_this.suggestionElement.current &&\n                            _this.suggestionElement.current.tryHandleKeyDown(keyCode, _this.suggestionStore.currentIndex)) {\n                            ev.preventDefault();\n                            ev.stopPropagation();\n                            _this.forceUpdate();\n                        }\n                        else {\n                            if (_this.suggestionElement.current &&\n                                _this.suggestionElement.current.hasSuggestedAction() &&\n                                _this.suggestionStore.currentIndex + 1 === _this.suggestionStore.suggestions.length) {\n                                ev.preventDefault();\n                                ev.stopPropagation();\n                                _this.suggestionElement.current.focusBelowSuggestions();\n                                _this.suggestionStore.deselectAllSuggestions();\n                                _this.forceUpdate();\n                            }\n                            else {\n                                if (_this.suggestionStore.nextSuggestion()) {\n                                    ev.preventDefault();\n                                    ev.stopPropagation();\n                                    _this.onSuggestionSelect();\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        };\n        _this.onItemChange = function (changedItem, index) {\n            var items = _this.state.items;\n            if (index >= 0) {\n                var newItems = items;\n                newItems[index] = changedItem;\n                _this._updateSelectedItems(newItems);\n            }\n        };\n        _this.onGetMoreResults = function () {\n            _this.setState({\n                isSearching: true,\n            }, function () {\n                if (_this.props.onGetMoreResults && _this.input.current) {\n                    var suggestions = _this.props.onGetMoreResults(_this.input.current.value, _this.state.items);\n                    var suggestionsArray = suggestions;\n                    var suggestionsPromiseLike = suggestions;\n                    if (Array.isArray(suggestionsArray)) {\n                        _this.updateSuggestions(suggestionsArray);\n                        _this.setState({ isSearching: false });\n                    }\n                    else if (suggestionsPromiseLike.then) {\n                        suggestionsPromiseLike.then(function (newSuggestions) {\n                            _this.updateSuggestions(newSuggestions);\n                            _this.setState({ isSearching: false });\n                        });\n                    }\n                }\n                else {\n                    _this.setState({ isSearching: false });\n                }\n                if (_this.input.current) {\n                    _this.input.current.focus();\n                }\n                _this.setState({\n                    moreSuggestionsAvailable: false,\n                    isResultsFooterVisible: true,\n                });\n            });\n        };\n        _this.completeSelection = function (item) {\n            _this.addItem(item);\n            _this.updateValue('');\n            if (_this.input.current) {\n                _this.input.current.clear();\n            }\n            _this.setState({ suggestionsVisible: false });\n        };\n        _this.addItemByIndex = function (index) {\n            _this.completeSelection(_this.suggestionStore.getSuggestionAtIndex(index).item);\n        };\n        _this.addItem = function (item) {\n            var processedItem = _this.props.onItemSelected\n                ? _this.props.onItemSelected(item)\n                : item;\n            if (processedItem === null) {\n                return;\n            }\n            var processedItemObject = processedItem;\n            var processedItemPromiseLike = processedItem;\n            if (processedItemPromiseLike && processedItemPromiseLike.then) {\n                processedItemPromiseLike.then(function (resolvedProcessedItem) {\n                    var newItems = _this.state.items.concat([resolvedProcessedItem]);\n                    _this._updateSelectedItems(newItems);\n                });\n            }\n            else {\n                var newItems = _this.state.items.concat([processedItemObject]);\n                _this._updateSelectedItems(newItems);\n            }\n            _this.setState({ suggestedDisplayValue: '', selectionRemoved: undefined });\n        };\n        _this.removeItem = function (item) {\n            var items = _this.state.items;\n            var index = items.indexOf(item);\n            if (index >= 0) {\n                var newItems = items.slice(0, index).concat(items.slice(index + 1));\n                _this.setState({ selectionRemoved: item });\n                _this._updateSelectedItems(newItems);\n                // reset selection removed text after a timeout so it isn't reached by screen reader virtual cursor.\n                // the exact timing isn't important, the live region will fully read even if the text is removed.\n                _this._async.setTimeout(function () {\n                    _this.setState({ selectionRemoved: undefined });\n                }, 1000);\n            }\n        };\n        _this.removeItems = function (itemsToRemove) {\n            var items = _this.state.items;\n            var newItems = items.filter(function (item) { return itemsToRemove.indexOf(item) === -1; });\n            _this._updateSelectedItems(newItems);\n        };\n        /**\n         * @deprecated this is no longer necessary as focuszone has been removed\n         */\n        _this._shouldFocusZoneEnterInnerZone = function (ev) {\n            // If suggestions are shown const up/down keys control them, otherwise allow them through to control the focusZone.\n            if (_this.state.suggestionsVisible) {\n                // eslint-disable-next-line deprecation/deprecation\n                switch (ev.which) {\n                    case KeyCodes.up:\n                    case KeyCodes.down:\n                        return true;\n                }\n            }\n            // eslint-disable-next-line deprecation/deprecation\n            if (ev.which === KeyCodes.enter) {\n                return true;\n            }\n            return false;\n        };\n        _this._onResolveSuggestions = function (updatedValue) {\n            var suggestions = _this.props.onResolveSuggestions(updatedValue, _this.state.items);\n            if (suggestions !== null) {\n                _this.updateSuggestionsList(suggestions, updatedValue);\n            }\n        };\n        _this._completeGenericSuggestion = function () {\n            if (_this.props.onValidateInput &&\n                _this.input.current &&\n                _this.props.onValidateInput(_this.input.current.value) !== ValidationState.invalid &&\n                _this.props.createGenericItem) {\n                var itemToConvert = _this.props.createGenericItem(_this.input.current.value, _this.props.onValidateInput(_this.input.current.value));\n                _this.suggestionStore.createGenericSuggestion(itemToConvert);\n                _this.completeSuggestion();\n            }\n        };\n        /**\n         * This should be called when the user does something other than use text entry to trigger suggestions.\n         *\n         */\n        _this._userTriggeredSuggestions = function () {\n            if (!_this.state.suggestionsVisible) {\n                var input = _this.input.current ? _this.input.current.value : '';\n                if (!input) {\n                    _this.onEmptyInputFocus();\n                }\n                else {\n                    if (_this.suggestionStore.suggestions.length === 0) {\n                        _this._onResolveSuggestions(input);\n                    }\n                    else {\n                        _this.setState({\n                            isMostRecentlyUsedVisible: false,\n                            suggestionsVisible: true,\n                        });\n                    }\n                }\n            }\n        };\n        initializeComponentRef(_this);\n        _this._async = new Async(_this);\n        var items = basePickerProps.selectedItems || basePickerProps.defaultSelectedItems || [];\n        _this._id = getId();\n        _this._ariaMap = {\n            selectedItems: \"selected-items-\".concat(_this._id),\n            selectedSuggestionAlert: \"selected-suggestion-alert-\".concat(_this._id),\n            suggestionList: \"suggestion-list-\".concat(_this._id),\n            combobox: \"combobox-\".concat(_this._id),\n        };\n        _this.suggestionStore = new SuggestionsController();\n        _this.selection = new Selection({ onSelectionChanged: function () { return _this.onSelectionChange(); } });\n        _this.selection.setItems(items);\n        _this.state = {\n            items: items,\n            suggestedDisplayValue: '',\n            isMostRecentlyUsedVisible: false,\n            moreSuggestionsAvailable: false,\n            isFocused: false,\n            isSearching: false,\n            selectedIndices: [],\n            selectionRemoved: undefined,\n        };\n        return _this;\n    }\n    BasePicker.getDerivedStateFromProps = function (newProps) {\n        if (newProps.selectedItems) {\n            return { items: newProps.selectedItems };\n        }\n        return null;\n    };\n    Object.defineProperty(BasePicker.prototype, \"items\", {\n        get: function () {\n            return this.state.items;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BasePicker.prototype.componentDidMount = function () {\n        this.selection.setItems(this.state.items);\n        this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n    };\n    BasePicker.prototype.componentDidUpdate = function (oldProps, oldState) {\n        var _this = this;\n        if (this.state.items && this.state.items !== oldState.items) {\n            var currentSelectedIndex = this.selection.getSelectedIndices()[0];\n            this.selection.setItems(this.state.items);\n            if (this.state.isFocused) {\n                // Reset focus and selection so that selected item stays in sync if something\n                // has been removed\n                if (this.state.items.length < oldState.items.length) {\n                    this.selection.setIndexSelected(currentSelectedIndex, false, true);\n                    this.resetFocus(currentSelectedIndex);\n                }\n                // Reset focus to last item if the input is removed\n                else if (this.state.items.length > oldState.items.length && !this.canAddItems()) {\n                    this.resetFocus(this.state.items.length - 1);\n                }\n            }\n        }\n        // handle dismiss buffer after suggestions are opened\n        if (this.state.suggestionsVisible && !oldState.suggestionsVisible) {\n            this._overrideScrollDismiss = true;\n            this._async.clearTimeout(this._overrideScrollDimissTimeout);\n            this._overrideScrollDimissTimeout = this._async.setTimeout(function () {\n                _this._overrideScrollDismiss = false;\n            }, 100);\n        }\n    };\n    BasePicker.prototype.componentWillUnmount = function () {\n        if (this.currentPromise) {\n            this.currentPromise = undefined;\n        }\n        this._async.dispose();\n    };\n    BasePicker.prototype.focus = function () {\n        if (this.input.current) {\n            this.input.current.focus();\n        }\n    };\n    BasePicker.prototype.focusInput = function () {\n        if (this.input.current) {\n            this.input.current.focus();\n        }\n    };\n    BasePicker.prototype.completeSuggestion = function (forceComplete) {\n        if (this.suggestionStore.hasSelectedSuggestion() && this.input.current) {\n            this.completeSelection(this.suggestionStore.currentSuggestion.item);\n        }\n        else if (forceComplete) {\n            this._completeGenericSuggestion();\n        }\n    };\n    BasePicker.prototype.render = function () {\n        var _a, _b, _c;\n        var suggestedDisplayValue = (_a = this.state, _a.suggestedDisplayValue), isFocused = _a.isFocused, items = _a.items;\n        var className = (_b = this.props, _b.className), inputProps = _b.inputProps, disabled = _b.disabled, selectionAriaLabel = _b.selectionAriaLabel, selectionRole = (_c = _b.selectionRole, _c === void 0 ? 'list' : _c), theme = _b.theme, styles = _b.styles;\n        var suggestionsVisible = !!this.state.suggestionsVisible;\n        var suggestionsAvailable = suggestionsVisible ? this._ariaMap.suggestionList : undefined;\n        // TODO\n        // Clean this up by leaving only the first part after removing support for SASS.\n        // Currently we can not remove the SASS styles from BasePicker class because it\n        // might be used by consumers who created custom pickers from extending from\n        // this base class and have not used the new 'styles' prop.\n        // We check for 'styles' prop which is going to be injected by the 'styled' HOC\n        // for every other already existing picker variant (PeoplePicker, TagPicker)\n        // so that we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\n        // then we just use the old SASS styles instead.\n        var classNames = styles\n            ? getClassNames(styles, {\n                theme: theme,\n                className: className,\n                isFocused: isFocused,\n                disabled: disabled,\n                inputClassName: inputProps && inputProps.className,\n            })\n            : {\n                root: css('ms-BasePicker', className ? className : ''),\n                text: css('ms-BasePicker-text', legacyStyles.pickerText, this.state.isFocused && legacyStyles.inputFocused),\n                itemsWrapper: legacyStyles.pickerItems,\n                input: css('ms-BasePicker-input', legacyStyles.pickerInput, inputProps && inputProps.className),\n                screenReaderText: legacyStyles.screenReaderOnly,\n            };\n        var comboLabel = this.props['aria-label'] || (inputProps === null || inputProps === void 0 ? void 0 : inputProps['aria-label']);\n        // selectionAriaLabel is contained in a separate <span> rather than an aria-label on the items list\n        // because if the items list has an aria-label, the aria-describedby on the input will only read\n        // that label instead of all the selected items. Using aria-labelledby instead fixes this, since\n        // aria-describedby and aria-labelledby will not follow a second aria-labelledby\n        return (React.createElement(\"div\", { ref: this.root, className: classNames.root, onKeyDown: this.onKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, onClick: this.onWrapperClick },\n            this.renderCustomAlert(classNames.screenReaderText),\n            React.createElement(\"span\", { id: \"\".concat(this._ariaMap.selectedItems, \"-label\"), hidden: true }, selectionAriaLabel || comboLabel),\n            React.createElement(SelectionZone, { selection: this.selection, selectionMode: SelectionMode.multiple },\n                React.createElement(\"div\", { className: classNames.text, \"aria-owns\": suggestionsAvailable },\n                    items.length > 0 && (React.createElement(\"span\", { id: this._ariaMap.selectedItems, className: classNames.itemsWrapper, role: selectionRole, \"aria-labelledby\": \"\".concat(this._ariaMap.selectedItems, \"-label\") }, this.renderItems())),\n                    this.canAddItems() && (React.createElement(Autofill, __assign({ spellCheck: false }, inputProps, { className: classNames.input, componentRef: this.input, id: (inputProps === null || inputProps === void 0 ? void 0 : inputProps.id) ? inputProps.id : this._ariaMap.combobox, onClick: this.onClick, onFocus: this.onInputFocus, onBlur: this.onInputBlur, onInputValueChange: this.onInputChange, suggestedDisplayValue: suggestedDisplayValue, \"aria-activedescendant\": suggestionsVisible ? this.getActiveDescendant() : undefined, \"aria-controls\": suggestionsAvailable, \"aria-describedby\": items.length > 0 ? this._ariaMap.selectedItems : undefined, \"aria-expanded\": suggestionsVisible, \"aria-haspopup\": \"listbox\", \"aria-label\": comboLabel, role: \"combobox\", disabled: disabled, onInputChange: this.props.onInputChange }))))),\n            this.renderSuggestions()));\n    };\n    BasePicker.prototype.canAddItems = function () {\n        var items = this.state.items;\n        var itemLimit = this.props.itemLimit;\n        return itemLimit === undefined || items.length < itemLimit;\n    };\n    BasePicker.prototype.renderSuggestions = function () {\n        var _this = this;\n        var StyledTypedSuggestions = this._styledSuggestions;\n        return this.state.suggestionsVisible && this.input ? (React.createElement(Callout, __assign({ isBeakVisible: false, gapSpace: 5, target: this.input.current ? this.input.current.inputElement : undefined, onDismiss: this.dismissSuggestions, directionalHint: DirectionalHint.bottomLeftEdge, directionalHintForRTL: DirectionalHint.bottomRightEdge, \n            // eslint-disable-next-line react/jsx-no-bind\n            preventDismissOnEvent: function (ev) { return _this._preventDismissOnScrollOrResize(ev); } }, this.props.pickerCalloutProps),\n            React.createElement(StyledTypedSuggestions\n            // Assumed to set in derived component's defaultProps\n            , __assign({ \n                // Assumed to set in derived component's defaultProps\n                onRenderSuggestion: this.props.onRenderSuggestionsItem, onSuggestionClick: this.onSuggestionClick, onSuggestionRemove: this.onSuggestionRemove, suggestions: this.suggestionStore.getSuggestions(), componentRef: this.suggestionElement, onGetMoreResults: this.onGetMoreResults, moreSuggestionsAvailable: this.state.moreSuggestionsAvailable, isLoading: this.state.suggestionsLoading, isExtendedLoading: this.state.suggestionsExtendedLoading, isSearching: this.state.isSearching, isMostRecentlyUsedVisible: this.state.isMostRecentlyUsedVisible, isResultsFooterVisible: this.state.isResultsFooterVisible, refocusSuggestions: this.refocusSuggestions, removeSuggestionAriaLabel: this.props.removeButtonAriaLabel, suggestionsListId: this._ariaMap.suggestionList, createGenericItem: this._completeGenericSuggestion }, this.props.pickerSuggestionsProps)))) : null;\n    };\n    BasePicker.prototype.renderItems = function () {\n        var _a, _b;\n        var _this = this;\n        var disabled = (_a = this.props, _a.disabled), removeButtonAriaLabel = _a.removeButtonAriaLabel, removeButtonIconProps = _a.removeButtonIconProps;\n        var onRenderItem = this.props.onRenderItem;\n        var items = (_b = this.state, _b.items), selectedIndices = _b.selectedIndices;\n        return items.map(function (item, index) {\n            return onRenderItem({\n                item: item,\n                index: index,\n                key: item.key ? item.key : index,\n                selected: selectedIndices.indexOf(index) !== -1,\n                onRemoveItem: function () { return _this.removeItem(item); },\n                disabled: disabled,\n                onItemChange: _this.onItemChange,\n                removeButtonAriaLabel: removeButtonAriaLabel,\n                removeButtonIconProps: removeButtonIconProps,\n            });\n        });\n    };\n    BasePicker.prototype.resetFocus = function (index) {\n        var items = this.state.items;\n        if (items.length) {\n            // default to focusing the last item\n            index = index !== null && index !== void 0 ? index : items.length - 1;\n            var newEl = this.root.current &&\n                this.root.current.querySelectorAll('[data-selection-index] > button')[Math.min(index, items.length - 1)];\n            if (newEl) {\n                newEl.focus();\n            }\n        }\n        else {\n            if (this.input.current) {\n                this.input.current.focus();\n            }\n        }\n    };\n    BasePicker.prototype.onSuggestionSelect = function () {\n        if (this.suggestionStore.currentSuggestion) {\n            var currentValue = this.input.current ? this.input.current.value : '';\n            var itemValue = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, currentValue);\n            this.setState({ suggestedDisplayValue: itemValue });\n        }\n    };\n    BasePicker.prototype.onSelectionChange = function () {\n        this.setState({\n            selectedIndices: this.selection.getSelectedIndices(),\n        });\n    };\n    BasePicker.prototype.updateSuggestions = function (suggestions) {\n        var _a;\n        var maxSuggestionsCount = (_a = this.props.pickerSuggestionsProps) === null || _a === void 0 ? void 0 : _a.resultsMaximumNumber;\n        this.suggestionStore.updateSuggestions(suggestions, 0, maxSuggestionsCount);\n        this.forceUpdate();\n    };\n    /**\n     * Only to be called when there is nothing in the input. Checks to see if the consumer has\n     * provided a function to resolve suggestions\n     */\n    BasePicker.prototype.onEmptyInputFocus = function () {\n        var emptyResolveSuggestions = this.props.onEmptyResolveSuggestions\n            ? this.props.onEmptyResolveSuggestions\n            : // eslint-disable-next-line deprecation/deprecation\n                this.props.onEmptyInputFocus;\n        // Only attempt to resolve suggestions if it exists\n        if (emptyResolveSuggestions) {\n            var suggestions = emptyResolveSuggestions(this.state.items);\n            this.updateSuggestionsList(suggestions);\n            this.setState({\n                isMostRecentlyUsedVisible: true,\n                suggestionsVisible: true,\n                moreSuggestionsAvailable: false,\n            });\n        }\n    };\n    BasePicker.prototype.updateValue = function (updatedValue) {\n        this._onResolveSuggestions(updatedValue);\n    };\n    BasePicker.prototype.updateSuggestionsList = function (suggestions, updatedValue) {\n        var _this = this;\n        var _a;\n        // Check to see if the returned value is an array, if it is then just pass it into the next function .\n        // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n        // If it is then resolve it asynchronously.\n        if (Array.isArray(suggestions)) {\n            this._updateAndResolveValue(updatedValue, suggestions);\n        }\n        else if (suggestions && suggestions.then) {\n            this.setState({\n                suggestionsLoading: true,\n            });\n            this._startLoadTimer();\n            // Clear suggestions\n            this.suggestionStore.updateSuggestions([]);\n            if (updatedValue !== undefined) {\n                this.setState({\n                    suggestionsVisible: this._getShowSuggestions(),\n                });\n            }\n            else {\n                this.setState({\n                    suggestionsVisible: this.input.current && this.input.current.inputElement === ((_a = getDocumentEx(this.context)) === null || _a === void 0 ? void 0 : _a.activeElement),\n                });\n            }\n            // Ensure that the promise will only use the callback if it was the most recent one.\n            this.currentPromise = suggestions;\n            suggestions.then(function (newSuggestions) {\n                if (suggestions === _this.currentPromise) {\n                    _this._updateAndResolveValue(updatedValue, newSuggestions);\n                }\n            });\n        }\n    };\n    BasePicker.prototype.resolveNewValue = function (updatedValue, suggestions) {\n        var _this = this;\n        this.updateSuggestions(suggestions);\n        var itemValue = undefined;\n        if (this.suggestionStore.currentSuggestion) {\n            itemValue = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, updatedValue);\n        }\n        // Only set suggestionloading to false after there has been time for the new suggestions to flow\n        // to the suggestions list. This is to ensure that the suggestions are available before aria-activedescendant\n        // is set so that screen readers will read out the first selected option.\n        this.setState({\n            suggestedDisplayValue: itemValue,\n            suggestionsVisible: this._getShowSuggestions(),\n        }, function () { return _this.setState({ suggestionsLoading: false, suggestionsExtendedLoading: false }); });\n    };\n    BasePicker.prototype.onChange = function (items) {\n        if (this.props.onChange) {\n            this.props.onChange(items);\n        }\n    };\n    // This is protected because we may expect the backspace key to work differently in a different kind of picker.\n    // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\n    BasePicker.prototype.onBackspace = function (ev) {\n        if ((this.state.items.length && !this.input.current) ||\n            (this.input.current && !this.input.current.isValueSelected && this.input.current.cursorLocation === 0)) {\n            if (this.selection.getSelectedCount() > 0) {\n                this.removeItems(this.selection.getSelection());\n            }\n            else {\n                this.removeItem(this.state.items[this.state.items.length - 1]);\n            }\n        }\n    };\n    BasePicker.prototype.getActiveDescendant = function () {\n        var _a;\n        if (this.state.suggestionsLoading) {\n            return undefined;\n        }\n        var currentIndex = this.suggestionStore.currentIndex;\n        if (currentIndex < 0) {\n            // if the suggestions element has actions and the currentIndex does not point to a suggestion,\n            // return the action id\n            if ((_a = this.suggestionElement.current) === null || _a === void 0 ? void 0 : _a.hasSuggestedAction()) {\n                return 'sug-selectedAction';\n            }\n            // If there are no suggestions and no action suggested, then return the ID for the no results found.\n            if (this.suggestionStore.suggestions.length === 0) {\n                return 'sug-noResultsFound';\n            }\n            return undefined;\n        }\n        else {\n            return \"sug-\".concat(currentIndex);\n        }\n    };\n    /** @deprecated use renderCustomAlert instead */\n    BasePicker.prototype.getSuggestionsAlert = function (suggestionAlertClassName) {\n        if (suggestionAlertClassName === void 0) { suggestionAlertClassName = legacyStyles.screenReaderOnly; }\n        var currentIndex = this.suggestionStore.currentIndex;\n        if (this.props.enableSelectedSuggestionAlert) {\n            var selectedSuggestion = currentIndex > -1 ? this.suggestionStore.getSuggestionAtIndex(this.suggestionStore.currentIndex) : undefined;\n            var selectedSuggestionAlertText = selectedSuggestion ? selectedSuggestion.ariaLabel : undefined;\n            // keeping the id/className here for legacy support\n            return (React.createElement(\"div\", { id: this._ariaMap.selectedSuggestionAlert, className: suggestionAlertClassName }, \"\".concat(selectedSuggestionAlertText, \" \")));\n        }\n    };\n    BasePicker.prototype.renderCustomAlert = function (alertClassName) {\n        var _a;\n        if (alertClassName === void 0) { alertClassName = legacyStyles.screenReaderOnly; }\n        var suggestionRemovedText = (_a = this.props.suggestionRemovedText, _a === void 0 ? 'removed {0}' : _a);\n        var removedItemText = '';\n        if (this.state.selectionRemoved) {\n            var itemName = this._getTextFromItem(this.state.selectionRemoved, '');\n            removedItemText = format(suggestionRemovedText, itemName);\n        }\n        return (React.createElement(\"div\", { className: alertClassName, id: this._ariaMap.selectedSuggestionAlert, \"aria-live\": \"assertive\" },\n            // eslint-disable-next-line deprecation/deprecation\n            this.getSuggestionsAlert(alertClassName),\n            removedItemText));\n    };\n    // do not dismiss if the window resizes or scrolls within 100ms of opening\n    // this prevents the Android issue where pickers immediately dismiss on open, because the keyboard appears\n    BasePicker.prototype._preventDismissOnScrollOrResize = function (ev) {\n        if (this._overrideScrollDismiss && (ev.type === 'scroll' || ev.type === 'resize')) {\n            return true;\n        }\n        return false;\n    };\n    /** If suggestions are still loading after a predefined amount of time, set state to show user alert */\n    BasePicker.prototype._startLoadTimer = function () {\n        var _this = this;\n        this._async.setTimeout(function () {\n            if (_this.state.suggestionsLoading) {\n                _this.setState({ suggestionsExtendedLoading: true });\n            }\n        }, EXTENDED_LOAD_TIME);\n    };\n    /**\n     * Takes in the current updated value and either resolves it with the new suggestions\n     * or if updated value is undefined then it clears out currently suggested items\n     */\n    BasePicker.prototype._updateAndResolveValue = function (updatedValue, newSuggestions) {\n        var _a;\n        if (updatedValue !== undefined) {\n            this.resolveNewValue(updatedValue, newSuggestions);\n        }\n        else {\n            var maxSuggestionsCount = (_a = this.props.pickerSuggestionsProps) === null || _a === void 0 ? void 0 : _a.resultsMaximumNumber;\n            this.suggestionStore.updateSuggestions(newSuggestions, -1, maxSuggestionsCount);\n            if (this.state.suggestionsLoading) {\n                this.setState({\n                    suggestionsLoading: false,\n                    suggestionsExtendedLoading: false,\n                });\n            }\n        }\n    };\n    /**\n     * Controls what happens whenever there is an action that impacts the selected items.\n     * If `selectedItems` is provided, this will act as a controlled component and it will not update its own state.\n     */\n    BasePicker.prototype._updateSelectedItems = function (items) {\n        var _this = this;\n        if (this.props.selectedItems) {\n            // If the component is a controlled component then the controlling component will need to add or remove the items.\n            this.onChange(items);\n        }\n        else {\n            this.setState({ items: items }, function () {\n                _this._onSelectedItemsUpdated(items);\n            });\n        }\n    };\n    BasePicker.prototype._onSelectedItemsUpdated = function (items) {\n        this.onChange(items);\n    };\n    /**\n     * Suggestions are normally shown after the user updates text and the text\n     * is non-empty, but also when the user clicks on the input element.\n     * @returns True if suggestions should be shown.\n     */\n    BasePicker.prototype._getShowSuggestions = function () {\n        var _a;\n        var areSuggestionsVisible = this.input.current !== undefined &&\n            this.input.current !== null &&\n            this.input.current.inputElement === ((_a = getDocumentEx(this.context)) === null || _a === void 0 ? void 0 : _a.activeElement) &&\n            this.input.current.value !== '';\n        return areSuggestionsVisible;\n    };\n    BasePicker.prototype._getTextFromItem = function (item, currentValue) {\n        if (this.props.getTextFromItem) {\n            return this.props.getTextFromItem(item, currentValue);\n        }\n        else {\n            return '';\n        }\n    };\n    BasePicker.contextType = WindowContext;\n    return BasePicker;\n}(React.Component));\nvar BasePickerListBelow = /** @class */ (function (_super) {\n    __extends(BasePickerListBelow, _super);\n    function BasePickerListBelow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BasePickerListBelow.prototype.render = function () {\n        var _a = this.state, suggestedDisplayValue = _a.suggestedDisplayValue, isFocused = _a.isFocused;\n        var _b = this.props, className = _b.className, inputProps = _b.inputProps, disabled = _b.disabled, selectionAriaLabel = _b.selectionAriaLabel, _c = _b.selectionRole, selectionRole = _c === void 0 ? 'list' : _c, theme = _b.theme, styles = _b.styles;\n        var suggestionsVisible = !!this.state.suggestionsVisible;\n        var suggestionsAvailable = suggestionsVisible ? this._ariaMap.suggestionList : undefined;\n        // TODO\n        // Clean this up by leaving only the first part after removing support for SASS.\n        // Currently we can not remove the SASS styles from BasePicker class because it\n        // might be used by consumers who created custom pickers from extending from\n        // this base class and have not used the new 'styles' prop.\n        // We check for 'styles' prop which is going to be injected by the 'styled' HOC\n        // for every other already existing picker variant (PeoplePicker, TagPicker)\n        // so that we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\n        // then we just use the old SASS styles instead.\n        var classNames = styles\n            ? getClassNames(styles, {\n                theme: theme,\n                className: className,\n                isFocused: isFocused,\n                inputClassName: inputProps && inputProps.className,\n            })\n            : {\n                root: css('ms-BasePicker', legacyStyles.picker, className ? className : ''),\n                text: css('ms-BasePicker-text', legacyStyles.pickerText, this.state.isFocused && legacyStyles.inputFocused, disabled && legacyStyles.inputDisabled),\n                itemsWrapper: legacyStyles.pickerItems,\n                input: css('ms-BasePicker-input', legacyStyles.pickerInput, inputProps && inputProps.className),\n                screenReaderText: legacyStyles.screenReaderOnly,\n            };\n        var comboLabel = this.props['aria-label'] || (inputProps === null || inputProps === void 0 ? void 0 : inputProps['aria-label']);\n        return (React.createElement(\"div\", { ref: this.root, onBlur: this.onBlur, onFocus: this.onFocus },\n            React.createElement(\"div\", { className: classNames.root, onKeyDown: this.onKeyDown },\n                this.renderCustomAlert(classNames.screenReaderText),\n                React.createElement(\"span\", { id: \"\".concat(this._ariaMap.selectedItems, \"-label\"), hidden: true }, selectionAriaLabel || comboLabel),\n                React.createElement(\"div\", { className: classNames.text, \"aria-owns\": suggestionsAvailable },\n                    React.createElement(Autofill, __assign({}, inputProps, { className: classNames.input, componentRef: this.input, onFocus: this.onInputFocus, onBlur: this.onInputBlur, onClick: this.onClick, onInputValueChange: this.onInputChange, suggestedDisplayValue: suggestedDisplayValue, \"aria-activedescendant\": suggestionsVisible ? this.getActiveDescendant() : undefined, \"aria-controls\": suggestionsAvailable, \"aria-expanded\": suggestionsVisible, \"aria-haspopup\": \"listbox\", \"aria-label\": comboLabel, \"aria-describedby\": this.state.items.length > 0 ? this._ariaMap.selectedItems : undefined, role: \"combobox\", id: (inputProps === null || inputProps === void 0 ? void 0 : inputProps.id) ? inputProps.id : this._ariaMap.combobox, disabled: disabled, onInputChange: this.props.onInputChange })))),\n            this.renderSuggestions(),\n            React.createElement(SelectionZone, { selection: this.selection, selectionMode: SelectionMode.single },\n                React.createElement(\"div\", { id: this._ariaMap.selectedItems, className: \"ms-BasePicker-selectedItems\" // just a className hook without any styles applied to it.\n                    , role: selectionRole, \"aria-labelledby\": \"\".concat(this._ariaMap.selectedItems, \"-label\") }, this.renderItems()))));\n    };\n    BasePickerListBelow.prototype.onBackspace = function (ev) {\n        // override the existing backspace method to not do anything because the list items appear below.\n    };\n    return BasePickerListBelow;\n}(BasePicker));\nexport { BasePickerListBelow };\n//# sourceMappingURL=BasePicker.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getClassNames } from './DraggableZone.styles';\nimport { on } from '../../Utilities';\nimport { WindowContext } from '@fluentui/react-window-provider';\nimport { getDocumentEx } from '../dom';\nvar eventMapping = {\n    touch: {\n        start: 'touchstart',\n        move: 'touchmove',\n        stop: 'touchend',\n    },\n    mouse: {\n        start: 'mousedown',\n        move: 'mousemove',\n        stop: 'mouseup',\n    },\n};\nexport var DraggableZone = /** @class */ (function (_super) {\n    __extends(DraggableZone, _super);\n    function DraggableZone(props) {\n        var _this = _super.call(this, props) || this;\n        _this._currentEventType = eventMapping.mouse;\n        _this._events = [];\n        _this._onMouseDown = function (event) {\n            var onMouseDown = React.Children.only(_this.props.children).props.onMouseDown;\n            if (onMouseDown) {\n                onMouseDown(event);\n            }\n            _this._currentEventType = eventMapping.mouse;\n            return _this._onDragStart(event);\n        };\n        _this._onMouseUp = function (event) {\n            var onMouseUp = React.Children.only(_this.props.children).props.onMouseUp;\n            if (onMouseUp) {\n                onMouseUp(event);\n            }\n            _this._currentEventType = eventMapping.mouse;\n            return _this._onDragStop(event);\n        };\n        _this._onTouchStart = function (event) {\n            var onTouchStart = React.Children.only(_this.props.children).props.onTouchStart;\n            if (onTouchStart) {\n                onTouchStart(event);\n            }\n            _this._currentEventType = eventMapping.touch;\n            return _this._onDragStart(event);\n        };\n        _this._onTouchEnd = function (event) {\n            var onTouchEnd = React.Children.only(_this.props.children).props.onTouchEnd;\n            if (onTouchEnd) {\n                onTouchEnd(event);\n            }\n            _this._currentEventType = eventMapping.touch;\n            _this._onDragStop(event);\n        };\n        _this._onDragStart = function (event) {\n            // Only handle left click for dragging\n            if (typeof event.button === 'number' && event.button !== 0) {\n                return false;\n            }\n            // If the target doesn't match the handleSelector OR\n            // if the target does match the preventDragSelector, bail out\n            if ((_this.props.handleSelector && !_this._matchesSelector(event.target, _this.props.handleSelector)) ||\n                (_this.props.preventDragSelector &&\n                    _this._matchesSelector(event.target, _this.props.preventDragSelector))) {\n                return;\n            }\n            // Remember the touch identifier if this is a touch event so we can\n            // distinguish between individual touches in multitouch scenarios\n            // by remembering which touch point we were given\n            _this._touchId = _this._getTouchId(event);\n            var position = _this._getControlPosition(event);\n            if (position === undefined) {\n                return;\n            }\n            var dragData = _this._createDragDataFromPosition(position);\n            _this.props.onStart && _this.props.onStart(event, dragData);\n            _this.setState({\n                isDragging: true,\n                lastPosition: position,\n            });\n            // hook up the appropriate mouse/touch events to the body to ensure\n            // smooth dragging\n            var doc = getDocumentEx(_this.context);\n            _this._events = [\n                on(doc.body, _this._currentEventType.move, _this._onDrag, true /* use capture phase */),\n                on(doc.body, _this._currentEventType.stop, _this._onDragStop, true /* use capture phase */),\n            ];\n        };\n        _this._onDrag = function (event) {\n            // Prevent scrolling on mobile devices\n            if (event.type === 'touchmove') {\n                event.preventDefault();\n            }\n            var position = _this._getControlPosition(event);\n            if (!position) {\n                return;\n            }\n            // create the updated drag data from the position data\n            var updatedData = _this._createUpdatedDragData(_this._createDragDataFromPosition(position));\n            var updatedPosition = updatedData.position;\n            _this.props.onDragChange && _this.props.onDragChange(event, updatedData);\n            _this.setState({\n                position: updatedPosition,\n                lastPosition: position,\n            });\n        };\n        _this._onDragStop = function (event) {\n            if (!_this.state.isDragging) {\n                return;\n            }\n            var position = _this._getControlPosition(event);\n            if (!position) {\n                return;\n            }\n            var baseDragData = _this._createDragDataFromPosition(position);\n            // Set dragging to false and reset the lastPosition\n            _this.setState({\n                isDragging: false,\n                lastPosition: undefined,\n            });\n            _this.props.onStop && _this.props.onStop(event, baseDragData);\n            if (_this.props.position) {\n                _this.setState({\n                    position: _this.props.position,\n                });\n            }\n            // Remove event handlers\n            _this._events.forEach(function (dispose) { return dispose(); });\n        };\n        _this.state = {\n            isDragging: false,\n            position: _this.props.position || { x: 0, y: 0 },\n            lastPosition: undefined,\n        };\n        return _this;\n    }\n    DraggableZone.prototype.componentDidUpdate = function (prevProps) {\n        if (this.props.position && (!prevProps.position || this.props.position !== prevProps.position)) {\n            this.setState({ position: this.props.position });\n        }\n    };\n    DraggableZone.prototype.componentWillUnmount = function () {\n        this._events.forEach(function (dispose) { return dispose(); });\n    };\n    DraggableZone.prototype.render = function () {\n        var _a;\n        var child = React.Children.only(this.props.children);\n        var props = child.props;\n        var position = this.props.position;\n        var statePosition = (_a = this.state, _a.position), isDragging = _a.isDragging;\n        var x = statePosition.x;\n        var y = statePosition.y;\n        if (position && !isDragging) {\n            x = position.x;\n            y = position.y;\n        }\n        return React.cloneElement(child, {\n            style: __assign(__assign({}, props.style), { transform: \"translate(\".concat(x, \"px, \").concat(y, \"px)\") }),\n            className: getClassNames(props.className, this.state.isDragging).root,\n            onMouseDown: this._onMouseDown,\n            onMouseUp: this._onMouseUp,\n            onTouchStart: this._onTouchStart,\n            onTouchEnd: this._onTouchEnd,\n        });\n    };\n    /**\n     * Get the control position based off the event that fired\n     * @param event - The event to get offsets from\n     */\n    DraggableZone.prototype._getControlPosition = function (event) {\n        var touchObj = this._getActiveTouch(event);\n        // did we get the right touch?\n        if (this._touchId !== undefined && !touchObj) {\n            return undefined;\n        }\n        var eventToGetOffset = touchObj || event;\n        return {\n            x: eventToGetOffset.clientX,\n            y: eventToGetOffset.clientY,\n        };\n    };\n    /**\n     * Get the active touch point that we have saved from the event's TouchList\n     * @param event - The event used to get the TouchList for the active touch point\n     */\n    DraggableZone.prototype._getActiveTouch = function (event) {\n        return ((event.targetTouches && this._findTouchInTouchList(event.targetTouches)) ||\n            (event.changedTouches && this._findTouchInTouchList(event.changedTouches)));\n    };\n    /**\n     * Get the initial touch identifier associated with the given event\n     * @param event - The event that contains the TouchList\n     */\n    DraggableZone.prototype._getTouchId = function (event) {\n        var touch = (event.targetTouches && event.targetTouches[0]) || (event.changedTouches && event.changedTouches[0]);\n        if (touch) {\n            return touch.identifier;\n        }\n    };\n    /**\n     * Returns if an element (or any of the element's parents) match the given selector\n     */\n    DraggableZone.prototype._matchesSelector = function (element, selector) {\n        var _a;\n        if (!element || element === ((_a = getDocumentEx(this.context)) === null || _a === void 0 ? void 0 : _a.body)) {\n            return false;\n        }\n        var matchesSelectorFn = \n        // eslint-disable-next-line deprecation/deprecation\n        element.matches || element.webkitMatchesSelector || element.msMatchesSelector; /* for IE */\n        if (!matchesSelectorFn) {\n            return false;\n        }\n        return matchesSelectorFn.call(element, selector) || this._matchesSelector(element.parentElement, selector);\n    };\n    /**\n     * Attempts to find the Touch that matches the identifier  we stored in dragStart\n     * @param touchList The TouchList to look for the stored identifier from dragStart\n     */\n    DraggableZone.prototype._findTouchInTouchList = function (touchList) {\n        if (this._touchId === undefined) {\n            return;\n        }\n        for (var i = 0; i < touchList.length; i++) {\n            if (touchList[i].identifier === this._touchId) {\n                return touchList[i];\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Create DragData based off of the last known position and the new position passed in\n     * @param position The new position as part of the drag\n     */\n    DraggableZone.prototype._createDragDataFromPosition = function (position) {\n        var lastPosition = this.state.lastPosition;\n        // If we have no lastPosition, use the given position\n        // for last position\n        if (lastPosition === undefined) {\n            return {\n                delta: { x: 0, y: 0 },\n                lastPosition: position,\n                position: position,\n            };\n        }\n        return {\n            delta: {\n                x: position.x - lastPosition.x,\n                y: position.y - lastPosition.y,\n            },\n            lastPosition: lastPosition,\n            position: position,\n        };\n    };\n    /**\n     * Creates an updated DragData based off the current position and given baseDragData\n     * @param baseDragData The base DragData (from _createDragDataFromPosition) used to calculate the updated positions\n     */\n    DraggableZone.prototype._createUpdatedDragData = function (baseDragData) {\n        var position = this.state.position;\n        return {\n            position: {\n                x: position.x + baseDragData.delta.x,\n                y: position.y + baseDragData.delta.y,\n            },\n            delta: baseDragData.delta,\n            lastPosition: position,\n        };\n    };\n    DraggableZone.contextType = WindowContext;\n    return DraggableZone;\n}(React.Component));\n//# sourceMappingURL=DraggableZone.js.map","import { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, css, warnDeprecations, initializeComponentRef } from '../../Utilities';\nimport { DialogType } from './DialogContent.types';\nimport { IconButton } from '../../Button';\nimport { DialogFooter } from './DialogFooter';\nimport { withResponsiveMode } from '../../ResponsiveMode';\nvar getClassNames = classNamesFunction();\nvar DialogFooterType = (React.createElement(DialogFooter, null)).type;\nvar COMPONENT_NAME = 'DialogContent';\n// eslint-disable-next-line deprecation/deprecation\nexport var DialogContentBase = /** @class */ (function (_super) {\n    __extends(DialogContentBase, _super);\n    function DialogContentBase(props) {\n        var _this = _super.call(this, props) || this;\n        initializeComponentRef(_this);\n        warnDeprecations(COMPONENT_NAME, props, {\n            titleId: 'titleProps.id',\n        });\n        return _this;\n    }\n    DialogContentBase.prototype.render = function () {\n        var _a, _b;\n        var showCloseButton = (_a = this.props, _a.showCloseButton), className = _a.className, closeButtonAriaLabel = _a.closeButtonAriaLabel, onDismiss = _a.onDismiss, subTextId = _a.subTextId, subText = _a.subText, titleProps = (_b = _a.titleProps, _b === void 0 ? {} : _b), \n        // eslint-disable-next-line deprecation/deprecation\n        titleId = _a.titleId, title = _a.title, type = _a.type, styles = _a.styles, theme = _a.theme, draggableHeaderClassName = _a.draggableHeaderClassName;\n        var classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n            isLargeHeader: type === DialogType.largeHeader,\n            isClose: type === DialogType.close,\n            draggableHeaderClassName: draggableHeaderClassName,\n        });\n        var groupings = this._groupChildren();\n        var subTextContent;\n        if (subText) {\n            subTextContent = (React.createElement(\"p\", { className: classNames.subText, id: subTextId }, subText));\n        }\n        return (React.createElement(\"div\", { className: classNames.content },\n            React.createElement(\"div\", { className: classNames.header },\n                React.createElement(\"div\", __assign({ id: titleId, role: \"heading\", \"aria-level\": 1 }, titleProps, { className: css(classNames.title, titleProps.className) }), title),\n                React.createElement(\"div\", { className: classNames.topButton },\n                    this.props.topButtonsProps.map(function (props, index) { return (React.createElement(IconButton, __assign({ key: props.uniqueId || index }, props))); }),\n                    (type === DialogType.close || (showCloseButton && type !== DialogType.largeHeader)) && (React.createElement(IconButton, { className: classNames.button, iconProps: { iconName: 'Cancel' }, ariaLabel: closeButtonAriaLabel, onClick: onDismiss })))),\n            React.createElement(\"div\", { className: classNames.inner },\n                React.createElement(\"div\", { className: classNames.innerContent },\n                    subTextContent,\n                    groupings.contents),\n                groupings.footers)));\n    };\n    // @TODO - typing the footers as an array of DialogFooter is difficult because\n    // casing \"child as DialogFooter\" causes a problem because\n    // \"Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other.\"\n    DialogContentBase.prototype._groupChildren = function () {\n        var groupings = {\n            footers: [],\n            contents: [],\n        };\n        React.Children.map(this.props.children, function (child) {\n            if (typeof child === 'object' && child !== null && child.type === DialogFooterType) {\n                groupings.footers.push(child);\n            }\n            else {\n                groupings.contents.push(child);\n            }\n        });\n        return groupings;\n    };\n    DialogContentBase.defaultProps = {\n        showCloseButton: false,\n        className: '',\n        topButtonsProps: [],\n        closeButtonAriaLabel: 'Close',\n    };\n    DialogContentBase = __decorate([\n        withResponsiveMode\n    ], DialogContentBase);\n    return DialogContentBase;\n}(React.Component));\n//# sourceMappingURL=DialogContent.base.js.map","import { __assign } from \"tslib\";\nimport { AnimationClassNames, getFocusStyle, getGlobalClassNames, getInputFocusStyle, HighContrastSelector, normalize, getPlaceholderStyles, IconFontSizes, getHighContrastNoAdjustStyle, } from '../../Styling';\nvar globalClassNames = {\n    root: 'ms-TextField',\n    description: 'ms-TextField-description',\n    errorMessage: 'ms-TextField-errorMessage',\n    field: 'ms-TextField-field',\n    fieldGroup: 'ms-TextField-fieldGroup',\n    prefix: 'ms-TextField-prefix',\n    suffix: 'ms-TextField-suffix',\n    wrapper: 'ms-TextField-wrapper',\n    revealButton: 'ms-TextField-reveal',\n    multiline: 'ms-TextField--multiline',\n    borderless: 'ms-TextField--borderless',\n    underlined: 'ms-TextField--underlined',\n    unresizable: 'ms-TextField--unresizable',\n    required: 'is-required',\n    disabled: 'is-disabled',\n    active: 'is-active',\n};\nfunction getLabelStyles(props) {\n    var underlined = props.underlined, disabled = props.disabled, focused = props.focused, theme = props.theme;\n    var palette = theme.palette, fonts = theme.fonts;\n    return function () {\n        var _a;\n        return ({\n            root: [\n                underlined &&\n                    disabled && {\n                    color: palette.neutralTertiary,\n                },\n                underlined && {\n                    fontSize: fonts.medium.fontSize,\n                    marginRight: 8,\n                    paddingLeft: 12,\n                    paddingRight: 0,\n                    lineHeight: '22px',\n                    height: 32,\n                },\n                underlined &&\n                    focused && {\n                    selectors: (_a = {},\n                        _a[HighContrastSelector] = {\n                            height: 31, // -1px to prevent jumpiness in HC with the increased border-width to 2px\n                        },\n                        _a),\n                },\n            ],\n        });\n    };\n}\nexport function getStyles(props) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    var theme = props.theme, className = props.className, disabled = props.disabled, focused = props.focused, required = props.required, multiline = props.multiline, hasLabel = props.hasLabel, borderless = props.borderless, underlined = props.underlined, hasIcon = props.hasIcon, resizable = props.resizable, hasErrorMessage = props.hasErrorMessage, inputClassName = props.inputClassName, autoAdjustHeight = props.autoAdjustHeight, hasRevealButton = props.hasRevealButton;\n    var semanticColors = theme.semanticColors, effects = theme.effects, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(globalClassNames, theme);\n    var fieldPrefixSuffix = {\n        // Suffix/Prefix are not editable so the disabled slot perfectly fits.\n        background: semanticColors.disabledBackground,\n        color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 10px',\n        lineHeight: 1,\n        whiteSpace: 'nowrap',\n        flexShrink: 0,\n        selectors: (_a = {},\n            _a[HighContrastSelector] = {\n                background: 'Window',\n                color: disabled ? 'GrayText' : 'WindowText',\n            },\n            _a),\n    };\n    // placeholder style constants\n    var placeholderStyles = [\n        {\n            color: semanticColors.inputPlaceholderText,\n            opacity: 1,\n            selectors: (_b = {},\n                _b[HighContrastSelector] = {\n                    color: 'GrayText',\n                },\n                _b),\n        },\n    ];\n    var disabledPlaceholderStyles = {\n        color: semanticColors.disabledText,\n        selectors: (_c = {},\n            _c[HighContrastSelector] = {\n                color: 'GrayText',\n            },\n            _c),\n    };\n    return {\n        root: [\n            classNames.root,\n            fonts.medium,\n            required && classNames.required,\n            disabled && classNames.disabled,\n            focused && classNames.active,\n            multiline && classNames.multiline,\n            borderless && classNames.borderless,\n            underlined && classNames.underlined,\n            normalize,\n            {\n                position: 'relative',\n            },\n            className,\n        ],\n        wrapper: [\n            classNames.wrapper,\n            underlined && [\n                {\n                    display: 'flex',\n                    borderBottom: \"1px solid \".concat(!hasErrorMessage ? semanticColors.inputBorder : semanticColors.errorText),\n                    width: '100%',\n                },\n                disabled && {\n                    borderBottomColor: semanticColors.disabledBackground,\n                    selectors: (_d = {},\n                        _d[HighContrastSelector] = __assign({ borderColor: 'GrayText' }, getHighContrastNoAdjustStyle()),\n                        _d),\n                },\n                !disabled && {\n                    selectors: {\n                        ':hover': {\n                            borderBottomColor: !hasErrorMessage ? semanticColors.inputBorderHovered : semanticColors.errorText,\n                            selectors: (_e = {},\n                                _e[HighContrastSelector] = __assign({ borderBottomColor: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                                _e),\n                        },\n                    },\n                },\n                focused && [\n                    {\n                        position: 'relative',\n                    },\n                    getInputFocusStyle(!hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText, 0, 'borderBottom'),\n                ],\n            ],\n        ],\n        fieldGroup: [\n            classNames.fieldGroup,\n            normalize,\n            {\n                border: \"1px solid \".concat(semanticColors.inputBorder),\n                borderRadius: effects.roundedCorner2,\n                background: semanticColors.inputBackground,\n                cursor: 'text',\n                height: 32,\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'stretch',\n                position: 'relative',\n            },\n            multiline && {\n                minHeight: '60px',\n                height: 'auto',\n                display: 'flex',\n            },\n            !focused &&\n                !disabled && {\n                selectors: {\n                    ':hover': {\n                        borderColor: semanticColors.inputBorderHovered,\n                        selectors: (_f = {},\n                            _f[HighContrastSelector] = __assign({ borderColor: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                            _f),\n                    },\n                },\n            },\n            focused &&\n                !underlined &&\n                getInputFocusStyle(!hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText, effects.roundedCorner2),\n            disabled && {\n                borderColor: semanticColors.disabledBackground,\n                selectors: (_g = {},\n                    _g[HighContrastSelector] = __assign({ borderColor: 'GrayText' }, getHighContrastNoAdjustStyle()),\n                    _g),\n                cursor: 'default',\n            },\n            borderless && {\n                border: 'none',\n            },\n            borderless &&\n                focused && {\n                border: 'none',\n                selectors: {\n                    ':after': {\n                        border: 'none',\n                    },\n                },\n            },\n            underlined && {\n                flex: '1 1 0px',\n                border: 'none',\n                textAlign: 'left',\n            },\n            underlined &&\n                disabled && {\n                backgroundColor: 'transparent',\n            },\n            hasErrorMessage &&\n                !underlined && {\n                borderColor: semanticColors.errorText,\n                selectors: {\n                    '&:hover': {\n                        borderColor: semanticColors.errorText,\n                    },\n                },\n            },\n            !hasLabel &&\n                required && {\n                selectors: (_h = {\n                        ':before': {\n                            content: \"'*'\",\n                            color: semanticColors.errorText,\n                            position: 'absolute',\n                            top: -5,\n                            right: -10,\n                        }\n                    },\n                    _h[HighContrastSelector] = {\n                        selectors: {\n                            ':before': {\n                                color: 'WindowText',\n                                right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                            },\n                        },\n                    },\n                    _h),\n            },\n        ],\n        field: [\n            fonts.medium,\n            classNames.field,\n            normalize,\n            {\n                borderRadius: 0,\n                border: 'none',\n                background: 'none',\n                backgroundColor: 'transparent',\n                color: semanticColors.inputText,\n                padding: '0 8px',\n                width: '100%',\n                minWidth: 0,\n                textOverflow: 'ellipsis',\n                outline: 0,\n                selectors: (_j = {\n                        '&:active, &:focus, &:hover': { outline: 0 },\n                        '::-ms-clear': {\n                            display: 'none',\n                        }\n                    },\n                    _j[HighContrastSelector] = {\n                        background: 'Window',\n                        color: disabled ? 'GrayText' : 'WindowText',\n                    },\n                    _j),\n            },\n            getPlaceholderStyles(placeholderStyles),\n            multiline &&\n                !resizable && [\n                classNames.unresizable,\n                {\n                    resize: 'none',\n                },\n            ],\n            multiline && {\n                minHeight: 'inherit',\n                lineHeight: 17,\n                flexGrow: 1,\n                paddingTop: 6,\n                paddingBottom: 6,\n                overflow: 'auto',\n                width: '100%',\n            },\n            multiline &&\n                autoAdjustHeight && {\n                overflow: 'hidden',\n            },\n            hasIcon &&\n                !hasRevealButton && {\n                paddingRight: 24,\n            },\n            multiline &&\n                hasIcon && {\n                paddingRight: 40,\n            },\n            disabled && [\n                {\n                    backgroundColor: semanticColors.disabledBackground,\n                    color: semanticColors.disabledText,\n                    borderColor: semanticColors.disabledBackground,\n                },\n                getPlaceholderStyles(disabledPlaceholderStyles),\n            ],\n            underlined && {\n                textAlign: 'left',\n            },\n            focused &&\n                !borderless && {\n                selectors: (_k = {},\n                    _k[HighContrastSelector] = {\n                        paddingLeft: 11,\n                        paddingRight: 11,\n                    },\n                    _k),\n            },\n            focused &&\n                multiline &&\n                !borderless && {\n                selectors: (_l = {},\n                    _l[HighContrastSelector] = {\n                        paddingTop: 4, // take into consideration the 2px increased border-width (not when borderless).\n                    },\n                    _l),\n            },\n            inputClassName,\n        ],\n        icon: [\n            multiline && {\n                paddingRight: 24,\n                alignItems: 'flex-end',\n            },\n            {\n                pointerEvents: 'none',\n                position: 'absolute',\n                bottom: 6,\n                right: 8,\n                top: 'auto',\n                fontSize: IconFontSizes.medium,\n                lineHeight: 18,\n            },\n            disabled && {\n                color: semanticColors.disabledText,\n            },\n        ],\n        description: [\n            classNames.description,\n            {\n                color: semanticColors.bodySubtext,\n                fontSize: fonts.xSmall.fontSize,\n            },\n        ],\n        errorMessage: [\n            classNames.errorMessage,\n            AnimationClassNames.slideDownIn20,\n            fonts.small,\n            {\n                color: semanticColors.errorText,\n                margin: 0,\n                paddingTop: 5,\n                display: 'flex',\n                alignItems: 'center',\n            },\n        ],\n        prefix: [classNames.prefix, fieldPrefixSuffix],\n        suffix: [classNames.suffix, fieldPrefixSuffix],\n        revealButton: [\n            classNames.revealButton,\n            'ms-Button',\n            'ms-Button--icon',\n            getFocusStyle(theme, { inset: 1 }),\n            {\n                height: 30,\n                width: 32,\n                border: 'none',\n                padding: '0px 4px',\n                backgroundColor: 'transparent',\n                color: semanticColors.link,\n                selectors: {\n                    ':hover': {\n                        outline: 0,\n                        color: semanticColors.primaryButtonBackgroundHovered,\n                        backgroundColor: semanticColors.buttonBackgroundHovered,\n                        selectors: (_m = {},\n                            _m[HighContrastSelector] = {\n                                borderColor: 'Highlight',\n                                color: 'Highlight',\n                            },\n                            _m),\n                    },\n                    ':focus': { outline: 0 },\n                },\n            },\n            hasIcon && {\n                marginRight: 28,\n            },\n        ],\n        revealSpan: {\n            display: 'flex',\n            height: '100%',\n            alignItems: 'center',\n        },\n        revealIcon: {\n            margin: '0px 4px',\n            pointerEvents: 'none',\n            bottom: 6,\n            right: 8,\n            top: 'auto',\n            fontSize: IconFontSizes.medium,\n            lineHeight: 18,\n        },\n        subComponentStyles: {\n            label: getLabelStyles(props),\n        },\n    };\n}\n//# sourceMappingURL=TextField.styles.js.map","import { useContext } from 'react';\nimport { useCustomizationSettings } from '@fluentui/utilities';\nimport { createTheme } from '@fluentui/theme';\nimport { ThemeContext } from './ThemeContext';\n/**\n * Get theme from CustomizerContext or Customizations singleton.\n */\nfunction useCompatTheme() {\n    return useCustomizationSettings(['theme']).theme;\n}\n/**\n * React hook for programmatically accessing the theme.\n */\nexport var useTheme = function () {\n    var theme = useContext(ThemeContext);\n    var legacyTheme = useCompatTheme();\n    return theme || legacyTheme || createTheme({});\n};\n//# sourceMappingURL=useTheme.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Async, getDocument, getNativeProps, initializeComponentRef, inputProperties, isIE11, KeyCodes, } from '../../Utilities';\nimport { WindowContext } from '@fluentui/react-window-provider';\nvar SELECTION_FORWARD = 'forward';\nvar SELECTION_BACKWARD = 'backward';\n/**\n * {@docCategory Autofill}\n */\nexport var Autofill = /** @class */ (function (_super) {\n    __extends(Autofill, _super);\n    function Autofill(props) {\n        var _this = _super.call(this, props) || this;\n        _this._inputElement = React.createRef();\n        _this._autoFillEnabled = true;\n        // Composition events are used when the character/text requires several keystrokes to be completed.\n        // Some examples of this are mobile text input and languages like Japanese or Arabic.\n        // Find out more at https://developer.mozilla.org/en-US/docs/Web/Events/compositionstart\n        _this._onCompositionStart = function (ev) {\n            _this.setState({ isComposing: true });\n            _this._autoFillEnabled = false;\n        };\n        // Composition events are used when the character/text requires several keystrokes to be completed.\n        // Some examples of this are mobile text input and languages like Japanese or Arabic.\n        // Find out more at https://developer.mozilla.org/en-US/docs/Web/Events/compositionstart\n        _this._onCompositionUpdate = function () {\n            if (isIE11()) {\n                _this._updateValue(_this._getCurrentInputValue(), true);\n            }\n        };\n        // Composition events are used when the character/text requires several keystrokes to be completed.\n        // Some examples of this are mobile text input and languages like Japanese or Arabic.\n        // Find out more at https://developer.mozilla.org/en-US/docs/Web/Events/compositionstart\n        _this._onCompositionEnd = function (ev) {\n            var inputValue = _this._getCurrentInputValue();\n            _this._tryEnableAutofill(inputValue, _this.value, false, true);\n            _this.setState({ isComposing: false });\n            // Due to timing, this needs to be async, otherwise no text will be selected.\n            _this._async.setTimeout(function () {\n                // it's technically possible that the value of isComposing is reset during this timeout,\n                // so explicitly trigger this with composing=true here, since it is supposed to be the\n                // update for composition end\n                _this._updateValue(_this._getCurrentInputValue(), false);\n            }, 0);\n        };\n        _this._onClick = function () {\n            if (_this.value && _this.value !== '' && _this._autoFillEnabled) {\n                _this._autoFillEnabled = false;\n            }\n        };\n        _this._onKeyDown = function (ev) {\n            if (_this.props.onKeyDown) {\n                _this.props.onKeyDown(ev);\n            }\n            // If the event is actively being composed, then don't alert autofill.\n            // Right now typing does not have isComposing, once that has been fixed any should be removed.\n            if (!ev.nativeEvent.isComposing) {\n                // eslint-disable-next-line deprecation/deprecation\n                switch (ev.which) {\n                    case KeyCodes.backspace:\n                        _this._autoFillEnabled = false;\n                        break;\n                    case KeyCodes.left:\n                    case KeyCodes.right:\n                        if (_this._autoFillEnabled) {\n                            _this.setState(function (prev) { return ({\n                                inputValue: _this.props.suggestedDisplayValue || prev.inputValue,\n                            }); });\n                            _this._autoFillEnabled = false;\n                        }\n                        break;\n                    default:\n                        if (!_this._autoFillEnabled) {\n                            // eslint-disable-next-line deprecation/deprecation\n                            if (_this.props.enableAutofillOnKeyPress.indexOf(ev.which) !== -1) {\n                                _this._autoFillEnabled = true;\n                            }\n                        }\n                        break;\n                }\n            }\n        };\n        _this._onInputChanged = function (ev) {\n            var value = _this._getCurrentInputValue(ev);\n            if (!_this.state.isComposing) {\n                _this._tryEnableAutofill(value, _this.value, ev.nativeEvent.isComposing);\n            }\n            // If it is not IE11 and currently composing, update the value\n            if (!(isIE11() && _this.state.isComposing)) {\n                var nativeEventComposing = ev.nativeEvent.isComposing;\n                var isComposing = nativeEventComposing === undefined ? _this.state.isComposing : nativeEventComposing;\n                _this._updateValue(value, isComposing);\n            }\n        };\n        _this._onChanged = function () {\n            // Swallow this event, we don't care about it\n            // We must provide it because React PropTypes marks it as required, but onInput serves the correct purpose\n            return;\n        };\n        /**\n         * Updates the current input value as well as getting a new display value.\n         * @param newValue - The new value from the input\n         */\n        _this._updateValue = function (newValue, composing) {\n            var _a;\n            // Only proceed if the value is nonempty and is different from the old value\n            // This is to work around the fact that, in IE 11, inputs with a placeholder fire an onInput event on focus\n            if (!newValue && newValue === _this.value) {\n                return;\n            }\n            // eslint-disable-next-line deprecation/deprecation\n            var onInputChange = (_a = _this.props, _a.onInputChange), onInputValueChange = _a.onInputValueChange;\n            if (onInputChange) {\n                newValue = (onInputChange === null || onInputChange === void 0 ? void 0 : onInputChange(newValue, composing)) || '';\n            }\n            _this.setState({ inputValue: newValue }, function () { return onInputValueChange === null || onInputValueChange === void 0 ? void 0 : onInputValueChange(newValue, composing); });\n        };\n        initializeComponentRef(_this);\n        _this._async = new Async(_this);\n        _this.state = {\n            inputValue: props.defaultVisibleValue || '',\n            isComposing: false,\n        };\n        return _this;\n    }\n    Autofill.getDerivedStateFromProps = function (props, state) {\n        // eslint-disable-next-line deprecation/deprecation\n        if (props.updateValueInWillReceiveProps) {\n            // eslint-disable-next-line deprecation/deprecation\n            var updatedInputValue = props.updateValueInWillReceiveProps();\n            // Don't update if we have a null value or the value isn't changing\n            // the value should still update if an empty string is passed in\n            if (updatedInputValue !== null && updatedInputValue !== state.inputValue && !state.isComposing) {\n                return __assign(__assign({}, state), { inputValue: updatedInputValue });\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(Autofill.prototype, \"cursorLocation\", {\n        get: function () {\n            if (this._inputElement.current) {\n                var inputElement = this._inputElement.current;\n                if (inputElement.selectionDirection !== SELECTION_FORWARD) {\n                    return inputElement.selectionEnd;\n                }\n                else {\n                    return inputElement.selectionStart;\n                }\n            }\n            else {\n                return -1;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Autofill.prototype, \"isValueSelected\", {\n        get: function () {\n            return Boolean(this.inputElement && this.inputElement.selectionStart !== this.inputElement.selectionEnd);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Autofill.prototype, \"value\", {\n        get: function () {\n            return this._getControlledValue() || this.state.inputValue || '';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Autofill.prototype, \"selectionStart\", {\n        get: function () {\n            return this._inputElement.current ? this._inputElement.current.selectionStart : -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Autofill.prototype, \"selectionEnd\", {\n        get: function () {\n            return this._inputElement.current ? this._inputElement.current.selectionEnd : -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Autofill.prototype, \"inputElement\", {\n        get: function () {\n            return this._inputElement.current;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Autofill.prototype.componentDidUpdate = function (_, _1, cursor) {\n        var _a;\n        var _b;\n        var suggestedDisplayValue = (_a = this.props, _a.suggestedDisplayValue), shouldSelectFullInputValueInComponentDidUpdate = _a.shouldSelectFullInputValueInComponentDidUpdate, preventValueSelection = _a.preventValueSelection;\n        var differenceIndex = 0;\n        if (preventValueSelection) {\n            return;\n        }\n        var document = ((_b = this.context) === null || _b === void 0 ? void 0 : _b.window.document) || getDocument(this._inputElement.current);\n        var isFocused = this._inputElement.current && this._inputElement.current === (document === null || document === void 0 ? void 0 : document.activeElement);\n        if (isFocused &&\n            this._autoFillEnabled &&\n            this.value &&\n            suggestedDisplayValue &&\n            _doesTextStartWith(suggestedDisplayValue, this.value)) {\n            var shouldSelectFullRange = false;\n            if (shouldSelectFullInputValueInComponentDidUpdate) {\n                shouldSelectFullRange = shouldSelectFullInputValueInComponentDidUpdate();\n            }\n            if (shouldSelectFullRange) {\n                this._inputElement.current.setSelectionRange(0, suggestedDisplayValue.length, SELECTION_BACKWARD);\n            }\n            else {\n                while (differenceIndex < this.value.length &&\n                    this.value[differenceIndex].toLocaleLowerCase() === suggestedDisplayValue[differenceIndex].toLocaleLowerCase()) {\n                    differenceIndex++;\n                }\n                if (differenceIndex > 0) {\n                    this._inputElement.current.setSelectionRange(differenceIndex, suggestedDisplayValue.length, SELECTION_BACKWARD);\n                }\n            }\n        }\n        else if (this._inputElement.current) {\n            if (cursor !== null && !this._autoFillEnabled && !this.state.isComposing) {\n                this._inputElement.current.setSelectionRange(cursor.start, cursor.end, cursor.dir);\n            }\n        }\n    };\n    Autofill.prototype.componentWillUnmount = function () {\n        this._async.dispose();\n    };\n    Autofill.prototype.render = function () {\n        var nativeProps = getNativeProps(this.props, inputProperties);\n        var style = __assign(__assign({}, this.props.style), { fontFamily: 'inherit' });\n        return (React.createElement(\"input\", __assign({ autoCapitalize: \"off\", autoComplete: \"off\", \"aria-autocomplete\": 'both' }, nativeProps, { style: style, ref: this._inputElement, value: this._getDisplayValue(), onCompositionStart: this._onCompositionStart, onCompositionUpdate: this._onCompositionUpdate, onCompositionEnd: this._onCompositionEnd, \n            // TODO (Fabric 8?) - switch to calling only onChange. See notes in TextField._onInputChange.\n            onChange: this._onChanged, onInput: this._onInputChanged, onKeyDown: this._onKeyDown, onClick: this.props.onClick ? this.props.onClick : this._onClick, \"data-lpignore\": true })));\n    };\n    Autofill.prototype.focus = function () {\n        this._inputElement.current && this._inputElement.current.focus();\n    };\n    Autofill.prototype.clear = function () {\n        this._autoFillEnabled = true;\n        this._updateValue('', false);\n        this._inputElement.current && this._inputElement.current.setSelectionRange(0, 0);\n    };\n    Autofill.prototype.getSnapshotBeforeUpdate = function () {\n        var _a, _b;\n        var inel = this._inputElement.current;\n        if (inel && inel.selectionStart !== this.value.length) {\n            return {\n                start: (_a = inel.selectionStart) !== null && _a !== void 0 ? _a : inel.value.length,\n                end: (_b = inel.selectionEnd) !== null && _b !== void 0 ? _b : inel.value.length,\n                dir: inel.selectionDirection || 'backward' || 'none',\n            };\n        }\n        return null;\n    };\n    Autofill.prototype._getCurrentInputValue = function (ev) {\n        if (ev && ev.target && ev.target.value) {\n            return ev.target.value;\n        }\n        else if (this.inputElement && this.inputElement.value) {\n            return this.inputElement.value;\n        }\n        else {\n            return '';\n        }\n    };\n    /**\n     * Attempts to enable autofill. Whether or not autofill is enabled depends on the input value,\n     * whether or not any text is selected, and only if the new input value is longer than the old input value.\n     * Autofill should never be set to true if the value is composing. Once compositionEnd is called, then\n     * it should be completed.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent for more information on composition.\n     * @param newValue - new input value\n     * @param oldValue - old input value\n     * @param isComposing - if true then the text is actively being composed and it has not completed.\n     * @param isComposed - if the text is a composed text value.\n     */\n    Autofill.prototype._tryEnableAutofill = function (newValue, oldValue, isComposing, isComposed) {\n        if (!isComposing &&\n            newValue &&\n            this._inputElement.current &&\n            this._inputElement.current.selectionStart === newValue.length &&\n            !this._autoFillEnabled &&\n            (newValue.length > oldValue.length || isComposed)) {\n            this._autoFillEnabled = true;\n        }\n    };\n    Autofill.prototype._getDisplayValue = function () {\n        if (this._autoFillEnabled) {\n            return _getDisplayValue(this.value, this.props.suggestedDisplayValue);\n        }\n        return this.value;\n    };\n    Autofill.prototype._getControlledValue = function () {\n        var value = this.props.value;\n        if (value === undefined || typeof value === 'string') {\n            return value;\n        }\n        // eslint-disable-next-line no-console\n        console.warn(\"props.value of Autofill should be a string, but it is \".concat(value, \" with type of \").concat(typeof value));\n        return value.toString();\n    };\n    Autofill.defaultProps = {\n        enableAutofillOnKeyPress: [KeyCodes.down, KeyCodes.up],\n    };\n    // need to check WindowContext to get the provided document\n    Autofill.contextType = WindowContext;\n    return Autofill;\n}(React.Component));\n/**\n * Returns a string that should be used as the display value.\n * It evaluates this based on whether or not the suggested value starts with the input value\n * and whether or not autofill is enabled.\n * @param inputValue - the value that the input currently has.\n * @param suggestedDisplayValue - the possible full value\n */\nfunction _getDisplayValue(inputValue, suggestedDisplayValue) {\n    var displayValue = inputValue;\n    if (suggestedDisplayValue && inputValue && _doesTextStartWith(suggestedDisplayValue, displayValue)) {\n        displayValue = suggestedDisplayValue;\n    }\n    return displayValue;\n}\nfunction _doesTextStartWith(text, startWith) {\n    if (!text || !startWith) {\n        return false;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        for (var _i = 0, _a = [text, startWith]; _i < _a.length; _i++) {\n            var val = _a[_i];\n            if (typeof val !== 'string') {\n                throw new Error(\"\".concat(Autofill.name\n                // eslint-disable-next-line @fluentui/max-len\n                , \" received non-string value \\\"\").concat(val, \"\\\" of type \").concat(typeof val, \" from either input's value or suggestedDisplayValue\"));\n            }\n        }\n    }\n    return text.toLocaleLowerCase().indexOf(startWith.toLocaleLowerCase()) === 0;\n}\n//# sourceMappingURL=Autofill.js.map","var _a;\nimport { __assign } from \"tslib\";\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { getScrollbarWidth, getRTL, getWindow } from '../../Utilities';\nimport { RectangleEdge } from './positioning.types';\nimport { Rectangle } from '../../Utilities';\nfunction _createPositionData(targetEdge, alignmentEdge, isAuto) {\n    return {\n        targetEdge: targetEdge,\n        alignmentEdge: alignmentEdge,\n        isAuto: isAuto,\n    };\n}\n// Currently the beakPercent is set to 50 for all positions meaning that it should tend to the center of the target\nvar DirectionalDictionary = (_a = {},\n    _a[DirectionalHint.topLeftEdge] = _createPositionData(RectangleEdge.top, RectangleEdge.left),\n    _a[DirectionalHint.topCenter] = _createPositionData(RectangleEdge.top),\n    _a[DirectionalHint.topRightEdge] = _createPositionData(RectangleEdge.top, RectangleEdge.right),\n    _a[DirectionalHint.topAutoEdge] = _createPositionData(RectangleEdge.top, undefined, true),\n    _a[DirectionalHint.bottomLeftEdge] = _createPositionData(RectangleEdge.bottom, RectangleEdge.left),\n    _a[DirectionalHint.bottomCenter] = _createPositionData(RectangleEdge.bottom),\n    _a[DirectionalHint.bottomRightEdge] = _createPositionData(RectangleEdge.bottom, RectangleEdge.right),\n    _a[DirectionalHint.bottomAutoEdge] = _createPositionData(RectangleEdge.bottom, undefined, true),\n    _a[DirectionalHint.leftTopEdge] = _createPositionData(RectangleEdge.left, RectangleEdge.top),\n    _a[DirectionalHint.leftCenter] = _createPositionData(RectangleEdge.left),\n    _a[DirectionalHint.leftBottomEdge] = _createPositionData(RectangleEdge.left, RectangleEdge.bottom),\n    _a[DirectionalHint.rightTopEdge] = _createPositionData(RectangleEdge.right, RectangleEdge.top),\n    _a[DirectionalHint.rightCenter] = _createPositionData(RectangleEdge.right),\n    _a[DirectionalHint.rightBottomEdge] = _createPositionData(RectangleEdge.right, RectangleEdge.bottom),\n    _a);\nfunction _isRectangleWithinBounds(rect, boundingRect) {\n    if (rect.top < boundingRect.top) {\n        return false;\n    }\n    if (rect.bottom > boundingRect.bottom) {\n        return false;\n    }\n    if (rect.left < boundingRect.left) {\n        return false;\n    }\n    if (rect.right > boundingRect.right) {\n        return false;\n    }\n    return true;\n}\n/**\n * Gets all of the edges of a rectangle that are outside of the given bounds.\n * If there are no out of bounds edges it returns an empty array.\n */\nfunction _getOutOfBoundsEdges(rect, boundingRect) {\n    var outOfBounds = [];\n    if (rect.top < boundingRect.top) {\n        outOfBounds.push(RectangleEdge.top);\n    }\n    if (rect.bottom > boundingRect.bottom) {\n        outOfBounds.push(RectangleEdge.bottom);\n    }\n    if (rect.left < boundingRect.left) {\n        outOfBounds.push(RectangleEdge.left);\n    }\n    if (rect.right > boundingRect.right) {\n        outOfBounds.push(RectangleEdge.right);\n    }\n    return outOfBounds;\n}\nfunction _getEdgeValue(rect, edge) {\n    return rect[RectangleEdge[edge]];\n}\nfunction _setEdgeValue(rect, edge, value) {\n    rect[RectangleEdge[edge]] = value;\n    return rect;\n}\n/**\n * Returns the middle value of an edge. Only returns 1 value rather than xy coordinates as\n * the itself already contains the other coordinate.\n * For instance, a bottom edge's current value is it's y coordinate, so the number returned is the x.\n */\nfunction _getCenterValue(rect, edge) {\n    var edges = _getFlankingEdges(edge);\n    return (_getEdgeValue(rect, edges.positiveEdge) + _getEdgeValue(rect, edges.negativeEdge)) / 2;\n}\n/**\n * Flips the value depending on the edge.\n * If the edge is a \"positive\" edge, Top or Left, then the value should stay as it is.\n * If the edge is a \"negative\" edge, Bottom or Right, then the value should be flipped.\n * This is to account for the fact that the coordinates are effectively reserved in certain cases for the\n * \"negative\" edges.\n *\n * For example, when testing to see if a bottom edge 1 is within the bounds of another bottom edge 2:\n * If edge 1 is greater than edge 2 then it is out of bounds. This is reversed for top edge 1 and top edge 2.\n * If top edge 1 is less than edge 2 then it is out of bounds.\n */\nfunction _getRelativeEdgeValue(edge, value) {\n    if (edge > 0) {\n        return value;\n    }\n    else {\n        return value * -1;\n    }\n}\nfunction _getRelativeRectEdgeValue(edge, rect) {\n    return _getRelativeEdgeValue(edge, _getEdgeValue(rect, edge));\n}\nfunction _getRelativeEdgeDifference(rect, hostRect, edge) {\n    var edgeDifference = _getEdgeValue(rect, edge) - _getEdgeValue(hostRect, edge);\n    return _getRelativeEdgeValue(edge, edgeDifference);\n}\n/**\n * Moves the edge of a rectangle to the value given. It only moves the edge in a linear direction based on that edge.\n * For example, if it's a bottom edge it will only change y coordinates.\n * if maintainSize is set to false, it will only adjust the specified edge value\n */\nfunction _moveEdge(rect, edge, newValue, maintainSize) {\n    if (maintainSize === void 0) { maintainSize = true; }\n    var difference = _getEdgeValue(rect, edge) - newValue;\n    var returnRect = _setEdgeValue(rect, edge, newValue);\n    if (maintainSize) {\n        returnRect = _setEdgeValue(rect, edge * -1, _getEdgeValue(rect, edge * -1) - difference);\n    }\n    return returnRect;\n}\n/**\n * Aligns the edge on the passed in rect to the target. If there is a gap then it will have that space between the two.\n */\nfunction _alignEdges(rect, target, edge, gap) {\n    if (gap === void 0) { gap = 0; }\n    return _moveEdge(rect, edge, _getEdgeValue(target, edge) + _getRelativeEdgeValue(edge, gap));\n}\n/**\n * Aligns the targetEdge on the passed in target to the rects corresponding opposite edge.\n * For instance if targetEdge is bottom, then the rects top will be moved to match it.\n */\nfunction _alignOppositeEdges(rect, target, targetEdge, gap) {\n    if (gap === void 0) { gap = 0; }\n    var oppositeEdge = targetEdge * -1;\n    var adjustedGap = _getRelativeEdgeValue(oppositeEdge, gap);\n    return _moveEdge(rect, targetEdge * -1, _getEdgeValue(target, targetEdge) + adjustedGap);\n}\n/**\n * Tests to see if the given edge is within the bounds of the given rectangle.\n */\nfunction _isEdgeInBounds(rect, bounds, edge) {\n    var adjustedRectValue = _getRelativeRectEdgeValue(edge, rect);\n    return adjustedRectValue > _getRelativeRectEdgeValue(edge, bounds);\n}\n/**\n * Returns a measure of how much a rectangle is out of bounds for a given alignment;\n * this can be used to compare which rectangle is more or less out of bounds.\n * A value of 0 means the rectangle is entirely in bounds\n */\nfunction _getOutOfBoundsDegree(rect, bounds) {\n    var breakingEdges = _getOutOfBoundsEdges(rect, bounds);\n    var total = 0;\n    for (var _i = 0, breakingEdges_1 = breakingEdges; _i < breakingEdges_1.length; _i++) {\n        var edge = breakingEdges_1[_i];\n        total += Math.pow(_getRelativeEdgeDifference(rect, bounds, edge), 2);\n    }\n    return total;\n}\n/**\n * Returns true if scroll-resizing will move the target edge within the bounding rectangle,\n * and there is room between the target edge and the bounding edge for scrolled content.\n * Returns false otherwise.\n */\nfunction _canScrollResizeToFitEdge(target, bounding, targetEdge, minimumScrollResizeHeight) {\n    if (minimumScrollResizeHeight === void 0) { minimumScrollResizeHeight = 200; }\n    // Only scroll vertically to fit - cannot scroll to fit right or left edges\n    if (targetEdge !== RectangleEdge.bottom && targetEdge !== RectangleEdge.top) {\n        return false;\n    }\n    return _getRelativeEdgeDifference(target, bounding, targetEdge) >= minimumScrollResizeHeight;\n}\n/**\n * Attempts to move the rectangle through various sides of the target to find a place to fit.\n * If no fit is found, the least bad option should be returned.\n */\nfunction _flipToFit(rect, target, bounding, positionData, shouldScroll, minimumScrollResizeHeight, gap) {\n    if (shouldScroll === void 0) { shouldScroll = false; }\n    if (gap === void 0) { gap = 0; }\n    var directions = [\n        RectangleEdge.left,\n        RectangleEdge.right,\n        RectangleEdge.bottom,\n        RectangleEdge.top,\n    ];\n    // In RTL page, RectangleEdge.right has a higher priority than RectangleEdge.left, so the order should be updated.\n    if (getRTL()) {\n        directions[0] *= -1;\n        directions[1] *= -1;\n    }\n    var currentEstimate = rect;\n    var currentEdge = positionData.targetEdge;\n    var currentAlignment = positionData.alignmentEdge;\n    // keep track of least bad option, in case no sides fit\n    var oobDegree;\n    var bestEdge = currentEdge;\n    var bestAlignment = currentAlignment;\n    // Keep switching sides until one is found with enough space.\n    // If all sides don't fit then return the unmodified element.\n    for (var i = 0; i < 4; i++) {\n        if (_isEdgeInBounds(currentEstimate, bounding, currentEdge)) {\n            // Edge is in bounds, return current estimate\n            return {\n                elementRectangle: currentEstimate,\n                targetEdge: currentEdge,\n                alignmentEdge: currentAlignment,\n            };\n        }\n        else if (shouldScroll && _canScrollResizeToFitEdge(target, bounding, currentEdge, minimumScrollResizeHeight)) {\n            // Scrolling will allow edge to fit, move the estimate currentEdge inside the bounds and return\n            switch (currentEdge) {\n                case RectangleEdge.bottom:\n                    currentEstimate.bottom = bounding.bottom;\n                    break;\n                case RectangleEdge.top:\n                    currentEstimate.top = bounding.top;\n                    break;\n            }\n            return {\n                elementRectangle: currentEstimate,\n                targetEdge: currentEdge,\n                alignmentEdge: currentAlignment,\n                forcedInBounds: true,\n            };\n        }\n        else {\n            // update least-bad edges\n            var currentOOBDegree = _getOutOfBoundsDegree(currentEstimate, bounding);\n            if (!oobDegree || currentOOBDegree < oobDegree) {\n                oobDegree = currentOOBDegree;\n                bestEdge = currentEdge;\n                bestAlignment = currentAlignment;\n            }\n            directions.splice(directions.indexOf(currentEdge), 1);\n            if (directions.length > 0) {\n                if (directions.indexOf(currentEdge * -1) > -1) {\n                    currentEdge = currentEdge * -1;\n                }\n                else {\n                    currentAlignment = currentEdge;\n                    currentEdge = directions.slice(-1)[0];\n                }\n                currentEstimate = _estimatePosition(rect, target, { targetEdge: currentEdge, alignmentEdge: currentAlignment }, gap);\n            }\n        }\n    }\n    // nothing fits, use least-bad option\n    currentEstimate = _estimatePosition(rect, target, { targetEdge: bestEdge, alignmentEdge: bestAlignment }, gap);\n    return {\n        elementRectangle: currentEstimate,\n        targetEdge: bestEdge,\n        alignmentEdge: bestAlignment,\n    };\n}\n/**\n * Flips only the alignment edge of an element rectangle. This is used instead of nudging the alignment edges\n * into position, when `alignTargetEdge` is specified.\n */\nfunction _flipAlignmentEdge(elementEstimate, target, gap, coverTarget) {\n    var alignmentEdge = elementEstimate.alignmentEdge, targetEdge = elementEstimate.targetEdge, elementRectangle = elementEstimate.elementRectangle;\n    var oppositeEdge = alignmentEdge * -1;\n    var newEstimate = _estimatePosition(elementRectangle, target, { targetEdge: targetEdge, alignmentEdge: oppositeEdge }, gap, coverTarget);\n    return {\n        elementRectangle: newEstimate,\n        targetEdge: targetEdge,\n        alignmentEdge: oppositeEdge,\n    };\n}\n/**\n * Adjusts a element rectangle to fit within the bounds given. If directionalHintFixed or covertarget is passed in\n * then the element will not flip sides on the target. They will, however, be nudged to fit within the bounds given.\n */\nfunction _adjustFitWithinBounds(element, target, bounding, positionData, shouldScroll, minimumScrollResizeHeight, gap, directionalHintFixed, coverTarget) {\n    if (shouldScroll === void 0) { shouldScroll = false; }\n    if (gap === void 0) { gap = 0; }\n    var alignmentEdge = positionData.alignmentEdge, alignTargetEdge = positionData.alignTargetEdge;\n    var elementEstimate = {\n        elementRectangle: element,\n        targetEdge: positionData.targetEdge,\n        alignmentEdge: alignmentEdge,\n    };\n    if (!directionalHintFixed && !coverTarget) {\n        elementEstimate = _flipToFit(element, target, bounding, positionData, shouldScroll, minimumScrollResizeHeight, gap);\n    }\n    var outOfBounds = _getOutOfBoundsEdges(elementEstimate.elementRectangle, bounding);\n    // if directionalHintFixed is specified, we need to force the target edge to not change\n    // we need *-1 because targetEdge refers to the target's edge; the callout edge is the opposite\n    var fixedEdge = directionalHintFixed ? -elementEstimate.targetEdge : undefined;\n    if (outOfBounds.length > 0) {\n        if (alignTargetEdge) {\n            // The edge opposite to the alignment edge might be out of bounds.\n            // Flip alignment to see if we can get it within bounds.\n            if (elementEstimate.alignmentEdge && outOfBounds.indexOf(elementEstimate.alignmentEdge * -1) > -1) {\n                var flippedElementEstimate = _flipAlignmentEdge(elementEstimate, target, gap, coverTarget);\n                if (_isRectangleWithinBounds(flippedElementEstimate.elementRectangle, bounding)) {\n                    return flippedElementEstimate;\n                }\n                else {\n                    // If the flipped elements edges are still out of bounds, try nudging it.\n                    elementEstimate = _alignOutOfBoundsEdges(_getOutOfBoundsEdges(flippedElementEstimate.elementRectangle, bounding), elementEstimate, bounding, fixedEdge);\n                }\n            }\n            else {\n                elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding, fixedEdge);\n            }\n        }\n        else {\n            elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding, fixedEdge);\n        }\n    }\n    return elementEstimate;\n}\n/**\n * Iterates through a list of out of bounds edges and tries to nudge and align them.\n * @param outOfBoundsEdges - Array of edges that are out of bounds\n * @param elementEstimate - The current element positioning estimate\n * @param bounding - The current bounds\n * @param preserveEdge - Specify an edge that should not be modified\n */\nfunction _alignOutOfBoundsEdges(outOfBoundsEdges, elementEstimate, bounding, preserveEdge) {\n    for (var _i = 0, outOfBoundsEdges_1 = outOfBoundsEdges; _i < outOfBoundsEdges_1.length; _i++) {\n        var direction = outOfBoundsEdges_1[_i];\n        var edgeAttempt = void 0;\n        // if preserveEdge is specified, do not call _alignEdges, skip directly to _moveEdge\n        // this is because _alignEdges will move the opposite edge\n        if (preserveEdge && preserveEdge === direction * -1) {\n            edgeAttempt = _moveEdge(elementEstimate.elementRectangle, direction, _getEdgeValue(bounding, direction), false);\n            elementEstimate.forcedInBounds = true;\n        }\n        else {\n            edgeAttempt = _alignEdges(elementEstimate.elementRectangle, bounding, direction);\n            var inBounds = _isEdgeInBounds(edgeAttempt, bounding, direction * -1);\n            // only update estimate if the attempt didn't break out of the opposite bounding edge\n            if (!inBounds) {\n                edgeAttempt = _moveEdge(edgeAttempt, direction * -1, _getEdgeValue(bounding, direction * -1), false);\n                elementEstimate.forcedInBounds = true;\n            }\n        }\n        elementEstimate.elementRectangle = edgeAttempt;\n    }\n    return elementEstimate;\n}\n/**\n * Moves the middle point on an edge to the point given.\n * Only moves in one direction. For instance if a bottom edge is passed in, then\n * the bottom edge will be moved in the x axis to match the point.\n */\nfunction _centerEdgeToPoint(rect, edge, point) {\n    var positiveEdge = _getFlankingEdges(edge).positiveEdge;\n    var elementMiddle = _getCenterValue(rect, edge);\n    var distanceToMiddle = elementMiddle - _getEdgeValue(rect, positiveEdge);\n    return _moveEdge(rect, positiveEdge, point - distanceToMiddle);\n}\n/**\n * Moves the element rectangle to be appropriately positioned relative to a given target.\n * Does not flip or adjust the element.\n */\nfunction _estimatePosition(elementToPosition, target, positionData, gap, coverTarget) {\n    if (gap === void 0) { gap = 0; }\n    var estimatedElementPosition = new Rectangle(elementToPosition.left, elementToPosition.right, elementToPosition.top, elementToPosition.bottom);\n    var alignmentEdge = positionData.alignmentEdge, targetEdge = positionData.targetEdge;\n    var elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n    estimatedElementPosition = coverTarget\n        ? _alignEdges(estimatedElementPosition, target, targetEdge, gap)\n        : _alignOppositeEdges(estimatedElementPosition, target, targetEdge, gap);\n    // if no alignment edge is provided it's supposed to be centered.\n    if (!alignmentEdge) {\n        var targetMiddlePoint = _getCenterValue(target, targetEdge);\n        estimatedElementPosition = _centerEdgeToPoint(estimatedElementPosition, elementEdge, targetMiddlePoint);\n    }\n    else {\n        estimatedElementPosition = _alignEdges(estimatedElementPosition, target, alignmentEdge);\n    }\n    return estimatedElementPosition;\n}\n/**\n * Returns the non-opposite edges of the target edge.\n * For instance if bottom is passed in then left and right will be returned.\n */\nfunction _getFlankingEdges(edge) {\n    if (edge === RectangleEdge.top || edge === RectangleEdge.bottom) {\n        return {\n            positiveEdge: RectangleEdge.left,\n            negativeEdge: RectangleEdge.right,\n        };\n    }\n    else {\n        return {\n            positiveEdge: RectangleEdge.top,\n            negativeEdge: RectangleEdge.bottom,\n        };\n    }\n}\n/**\n * Retrieve the final value for the return edge of `elementRectangle`. If the `elementRectangle` is closer to one side\n * of the bounds versus the other, the return edge is flipped to grow inward.\n */\nfunction _finalizeReturnEdge(elementRectangle, returnEdge, bounds) {\n    if (bounds &&\n        Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge)) >\n            Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge * -1))) {\n        return returnEdge * -1;\n    }\n    return returnEdge;\n}\n/**\n * Whether or not the considered edge of the elementRectangle is lying on the edge of the bounds\n * @param elementRectangle The rectangle whose edge we are considering\n * @param bounds The rectangle marking the bounds\n * @param edge The target edge we're considering\n * @returns If the target edge of the elementRectangle is in the same location as that edge of the bounds\n */\nfunction _isEdgeOnBounds(elementRectangle, edge, bounds) {\n    return bounds !== undefined && _getEdgeValue(elementRectangle, edge) === _getEdgeValue(bounds, edge);\n}\n/**\n * Finalizes the element position based on the hostElement. Only returns the\n * rectangle values to position such that they are anchored to the target.\n * This helps prevent resizing from looking very strange.\n * For instance, if the target edge is top and aligned with the left side then\n * the bottom and left values are returned so as the Callout shrinks it shrinks towards that corner.\n */\nfunction _finalizeElementPosition(elementRectangle, hostElement, targetEdge, bounds, alignmentEdge, coverTarget, doNotFinalizeReturnEdge, forceWithinBounds) {\n    var returnValue = {};\n    var hostRect = _getRectangleFromElement(hostElement);\n    var elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n    var returnEdge = alignmentEdge ? alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge;\n    // If we are finalizing the return edge, choose the edge such that we grow away from the bounds\n    // If we are not finalizing the return edge but the opposite edge is flush against the bounds,\n    // choose that as the anchor edge so the element rect can grow away from the bounds' edge\n    // In this case there will not be a visual difference because there is no more room for the elementRectangle to grow\n    // in the usual direction\n    if (!doNotFinalizeReturnEdge || _isEdgeOnBounds(elementRectangle, getOppositeEdge(returnEdge), bounds)) {\n        returnEdge = _finalizeReturnEdge(elementRectangle, returnEdge, bounds);\n    }\n    returnValue[RectangleEdge[elementEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, elementEdge);\n    returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, returnEdge);\n    // if the positioned element will still overflow, return all four edges with in-bounds values\n    if (forceWithinBounds) {\n        returnValue[RectangleEdge[elementEdge * -1]] = _getRelativeEdgeDifference(elementRectangle, hostRect, elementEdge * -1);\n        returnValue[RectangleEdge[returnEdge * -1]] = _getRelativeEdgeDifference(elementRectangle, hostRect, returnEdge * -1);\n    }\n    return returnValue;\n}\n// Since the beak is rotated 45 degrees the actual height/width is the length of the diagonal.\n// We still want to position the beak based on it's midpoint which does not change. It will\n// be at (beakwidth / 2, beakwidth / 2)\nfunction _calculateActualBeakWidthInPixels(beakWidth) {\n    return Math.sqrt(beakWidth * beakWidth * 2);\n}\n/**\n * Returns the appropriate IPositionData based on the props altered for RTL.\n * If directionalHintForRTL is passed in that is used if the page is RTL.\n * If directionalHint is specified, no directionalHintForRTL is available, and the page is RTL, the hint will be\n * flipped (e.g. bottomLeftEdge would become bottomRightEdge).\n *\n * If there is no directionalHint passed in, bottomAutoEdge is chosen automatically.\n */\nfunction _getPositionData(directionalHint, directionalHintForRTL, previousPositions) {\n    if (directionalHint === void 0) { directionalHint = DirectionalHint.bottomAutoEdge; }\n    if (previousPositions) {\n        return {\n            alignmentEdge: previousPositions.alignmentEdge,\n            isAuto: previousPositions.isAuto,\n            targetEdge: previousPositions.targetEdge,\n        };\n    }\n    var positionInformation = __assign({}, DirectionalDictionary[directionalHint]);\n    if (getRTL()) {\n        // If alignment edge exists and that alignment edge is -2 or 2, right or left, then flip it.\n        if (positionInformation.alignmentEdge && positionInformation.alignmentEdge % 2 === 0) {\n            positionInformation.alignmentEdge = positionInformation.alignmentEdge * -1;\n        }\n        return directionalHintForRTL !== undefined ? DirectionalDictionary[directionalHintForRTL] : positionInformation;\n    }\n    return positionInformation;\n}\n/**\n * Gets the alignment data for the given information. This only really matters if the positioning is Auto.\n * If it is auto then the alignmentEdge should be chosen based on the target edge's position relative to\n * the center of the page.\n */\nfunction _getAlignmentData(positionData, target, boundingRect, coverTarget, alignTargetEdge) {\n    if (positionData.isAuto) {\n        positionData.alignmentEdge = getClosestEdge(positionData.targetEdge, target, boundingRect);\n    }\n    positionData.alignTargetEdge = alignTargetEdge;\n    return positionData;\n}\nfunction getClosestEdge(targetEdge, target, boundingRect) {\n    var targetCenter = _getCenterValue(target, targetEdge);\n    var boundingCenter = _getCenterValue(boundingRect, targetEdge);\n    var _a = _getFlankingEdges(targetEdge), positiveEdge = _a.positiveEdge, negativeEdge = _a.negativeEdge;\n    if (targetCenter <= boundingCenter) {\n        return positiveEdge;\n    }\n    else {\n        return negativeEdge;\n    }\n}\nfunction _positionElementWithinBounds(elementToPosition, target, bounding, positionData, gap, shouldScroll, minimumScrollResizeHeight, directionalHintFixed, coverTarget) {\n    if (shouldScroll === void 0) { shouldScroll = false; }\n    var estimatedElementPosition = _estimatePosition(elementToPosition, target, positionData, gap, coverTarget);\n    if (_isRectangleWithinBounds(estimatedElementPosition, bounding)) {\n        return {\n            elementRectangle: estimatedElementPosition,\n            targetEdge: positionData.targetEdge,\n            alignmentEdge: positionData.alignmentEdge,\n        };\n    }\n    else {\n        return _adjustFitWithinBounds(estimatedElementPosition, target, bounding, positionData, shouldScroll, minimumScrollResizeHeight, gap, directionalHintFixed, coverTarget);\n    }\n}\nfunction _finalizeBeakPosition(elementPosition, positionedBeak, bounds) {\n    var targetEdge = elementPosition.targetEdge * -1;\n    // The \"host\" element that we will use to help position the beak.\n    var actualElement = new Rectangle(0, elementPosition.elementRectangle.width, 0, elementPosition.elementRectangle.height);\n    var returnValue = {};\n    var returnEdge = _finalizeReturnEdge(elementPosition.elementRectangle, elementPosition.alignmentEdge ? elementPosition.alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge, bounds);\n    // only show the beak if the callout is not fully covering the target\n    var beakEdgeDifference = _getRelativeEdgeDifference(elementPosition.elementRectangle, elementPosition.targetRectangle, targetEdge);\n    var showBeak = beakEdgeDifference > Math.abs(_getEdgeValue(positionedBeak, targetEdge));\n    returnValue[RectangleEdge[targetEdge]] = _getEdgeValue(positionedBeak, targetEdge);\n    returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(positionedBeak, actualElement, returnEdge);\n    return {\n        elementPosition: __assign({}, returnValue),\n        closestEdge: getClosestEdge(elementPosition.targetEdge, positionedBeak, actualElement),\n        targetEdge: targetEdge,\n        hideBeak: !showBeak,\n    };\n}\nfunction _positionBeak(beakWidth, elementPosition) {\n    var target = elementPosition.targetRectangle;\n    /**\n     * Note about beak positioning: The actual beak width only matters for getting the gap between the callout and\n     * target, it does not impact the beak placement within the callout. For example example, if the beakWidth is 8,\n     * then the actual beakWidth is sqrroot(8^2 + 8^2) = 11.31x11.31. So the callout will need to be an extra 3 pixels\n     * away from its target. While the beak is being positioned in the callout it still acts as though it were 8x8.\n     */\n    var _a = _getFlankingEdges(elementPosition.targetEdge), positiveEdge = _a.positiveEdge, negativeEdge = _a.negativeEdge;\n    var beakTargetPoint = _getCenterValue(target, elementPosition.targetEdge);\n    var elementBounds = new Rectangle(beakWidth / 2, elementPosition.elementRectangle.width - beakWidth / 2, beakWidth / 2, elementPosition.elementRectangle.height - beakWidth / 2);\n    var beakPosition = new Rectangle(0, beakWidth, 0, beakWidth);\n    beakPosition = _moveEdge(beakPosition, elementPosition.targetEdge * -1, -beakWidth / 2);\n    beakPosition = _centerEdgeToPoint(beakPosition, elementPosition.targetEdge * -1, beakTargetPoint - _getRelativeRectEdgeValue(positiveEdge, elementPosition.elementRectangle));\n    if (!_isEdgeInBounds(beakPosition, elementBounds, positiveEdge)) {\n        beakPosition = _alignEdges(beakPosition, elementBounds, positiveEdge);\n    }\n    else if (!_isEdgeInBounds(beakPosition, elementBounds, negativeEdge)) {\n        beakPosition = _alignEdges(beakPosition, elementBounds, negativeEdge);\n    }\n    return beakPosition;\n}\nfunction _getRectangleFromElement(element) {\n    // eslint-disable-next-line deprecation/deprecation\n    var clientRect = element.getBoundingClientRect();\n    return new Rectangle(clientRect.left, clientRect.right, clientRect.top, clientRect.bottom);\n}\nfunction _getRectangleFromIRect(rect) {\n    return new Rectangle(rect.left, rect.right, rect.top, rect.bottom);\n}\nfunction _getTargetRect(bounds, target) {\n    var targetRectangle;\n    if (target) {\n        // eslint-disable-next-line no-extra-boolean-cast\n        if (!!target.preventDefault) {\n            var ev = target;\n            targetRectangle = new Rectangle(ev.clientX, ev.clientX, ev.clientY, ev.clientY);\n            // eslint-disable-next-line no-extra-boolean-cast\n        }\n        else if (!!target.getBoundingClientRect) {\n            targetRectangle = _getRectangleFromElement(target);\n            // HTMLImgElements can have x and y values. The check for it being a point must go last.\n        }\n        else {\n            var rectOrPoint = target;\n            // eslint-disable-next-line deprecation/deprecation\n            var left = rectOrPoint.left || rectOrPoint.x;\n            // eslint-disable-next-line deprecation/deprecation\n            var top_1 = rectOrPoint.top || rectOrPoint.y;\n            var right = rectOrPoint.right || left;\n            var bottom = rectOrPoint.bottom || top_1;\n            targetRectangle = new Rectangle(left, right, top_1, bottom);\n        }\n        if (!_isRectangleWithinBounds(targetRectangle, bounds)) {\n            var outOfBounds = _getOutOfBoundsEdges(targetRectangle, bounds);\n            for (var _i = 0, outOfBounds_1 = outOfBounds; _i < outOfBounds_1.length; _i++) {\n                var direction = outOfBounds_1[_i];\n                targetRectangle[RectangleEdge[direction]] = bounds[RectangleEdge[direction]];\n            }\n        }\n    }\n    else {\n        targetRectangle = new Rectangle(0, 0, 0, 0);\n    }\n    return targetRectangle;\n}\n/**\n * If max height is less than zero it returns the bounds height instead.\n */\nfunction _getMaxHeightFromTargetRectangle(targetRectangle, targetEdge, gapSpace, bounds, coverTarget) {\n    var maxHeight = 0;\n    var directionalHint = DirectionalDictionary[targetEdge];\n    // If cover target is set, then the max height should be calculated using the opposite of the target edge since\n    // that's the direction that the callout will expand in.\n    // For instance, if the directionalhint is bottomLeftEdge then the callout will position so it's bottom edge\n    // is aligned with the bottom of the target and expand up towards the top of the screen and the calculated max height\n    // is (bottom of target) - (top of screen) - gapSpace.\n    var target = coverTarget ? directionalHint.targetEdge * -1 : directionalHint.targetEdge;\n    if (target === RectangleEdge.top) {\n        maxHeight = _getEdgeValue(targetRectangle, directionalHint.targetEdge) - bounds.top - gapSpace;\n    }\n    else if (target === RectangleEdge.bottom) {\n        maxHeight = bounds.bottom - _getEdgeValue(targetRectangle, directionalHint.targetEdge) - gapSpace;\n    }\n    else {\n        maxHeight = bounds.bottom - targetRectangle.top - gapSpace;\n    }\n    return maxHeight > 0 ? maxHeight : bounds.height;\n}\nfunction _positionElementRelative(props, elementToPosition, boundingRect, previousPositions, shouldScroll, minimumScrollResizeHeight) {\n    if (shouldScroll === void 0) { shouldScroll = false; }\n    var gap = props.gapSpace ? props.gapSpace : 0;\n    var targetRect = _getTargetRect(boundingRect, props.target);\n    var positionData = _getAlignmentData(_getPositionData(props.directionalHint, props.directionalHintForRTL, previousPositions), targetRect, boundingRect, props.coverTarget, props.alignTargetEdge);\n    var positionedElement = _positionElementWithinBounds(_getRectangleFromElement(elementToPosition), targetRect, boundingRect, positionData, gap, shouldScroll, minimumScrollResizeHeight, props.directionalHintFixed, props.coverTarget);\n    return __assign(__assign({}, positionedElement), { targetRectangle: targetRect });\n}\nfunction _finalizePositionData(positionedElement, hostElement, bounds, coverTarget, doNotFinalizeReturnEdge) {\n    var finalizedElement = _finalizeElementPosition(positionedElement.elementRectangle, hostElement, positionedElement.targetEdge, bounds, positionedElement.alignmentEdge, coverTarget, doNotFinalizeReturnEdge, positionedElement.forcedInBounds);\n    return {\n        elementPosition: finalizedElement,\n        targetEdge: positionedElement.targetEdge,\n        alignmentEdge: positionedElement.alignmentEdge,\n    };\n}\nfunction _positionElement(props, hostElement, elementToPosition, previousPositions, win) {\n    var theWin = win !== null && win !== void 0 ? win : getWindow();\n    var boundingRect = props.bounds\n        ? _getRectangleFromIRect(props.bounds)\n        : new Rectangle(0, theWin.innerWidth - getScrollbarWidth(), 0, theWin.innerHeight);\n    var positionedElement = _positionElementRelative(props, elementToPosition, boundingRect, previousPositions);\n    return _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget);\n}\nfunction _calculateGapSpace(isBeakVisible, beakWidth, gapSpace) {\n    if (beakWidth === void 0) { beakWidth = 0; }\n    if (gapSpace === void 0) { gapSpace = 0; }\n    return _calculateActualBeakWidthInPixels(isBeakVisible ? beakWidth : 0) / 2 + gapSpace;\n}\nfunction _positionCallout(props, hostElement, callout, previousPositions, shouldScroll, minimumScrollResizeHeight, doNotFinalizeReturnEdge, win) {\n    if (shouldScroll === void 0) { shouldScroll = false; }\n    var theWin = win !== null && win !== void 0 ? win : getWindow();\n    var beakWidth = props.isBeakVisible ? props.beakWidth || 0 : 0;\n    var gap = _calculateGapSpace(props.isBeakVisible, props.beakWidth, props.gapSpace);\n    var positionProps = props;\n    positionProps.gapSpace = gap;\n    var boundingRect = props.bounds\n        ? _getRectangleFromIRect(props.bounds)\n        : new Rectangle(0, theWin.innerWidth - getScrollbarWidth(), 0, theWin.innerHeight);\n    var positionedElement = _positionElementRelative(positionProps, callout, boundingRect, previousPositions, shouldScroll, minimumScrollResizeHeight);\n    var beakPositioned = _positionBeak(beakWidth, positionedElement);\n    var finalizedBeakPosition = _finalizeBeakPosition(positionedElement, beakPositioned, boundingRect);\n    return __assign(__assign({}, _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget, doNotFinalizeReturnEdge)), { beakPosition: finalizedBeakPosition });\n}\nfunction _positionCard(props, hostElement, callout, previousPositions, win) {\n    var theWin = win !== null && win !== void 0 ? win : getWindow();\n    return _positionCallout(props, hostElement, callout, previousPositions, false, undefined, true, theWin);\n}\nfunction _getRectangleFromTarget(target) {\n    var _a, _b, _c, _d;\n    var mouseTarget = target;\n    var elementTarget = target;\n    var rectOrPointTarget = target;\n    var targetRect;\n    // eslint-disable-next-line deprecation/deprecation\n    var left = (_a = rectOrPointTarget.left) !== null && _a !== void 0 ? _a : rectOrPointTarget.x;\n    // eslint-disable-next-line deprecation/deprecation\n    var top = (_b = rectOrPointTarget.top) !== null && _b !== void 0 ? _b : rectOrPointTarget.y;\n    var right = (_c = rectOrPointTarget.right) !== null && _c !== void 0 ? _c : left;\n    var bottom = (_d = rectOrPointTarget.bottom) !== null && _d !== void 0 ? _d : top;\n    // eslint-disable-next-line no-extra-boolean-cast -- may not actually be a MouseEvent\n    if (!!mouseTarget.stopPropagation) {\n        targetRect = new Rectangle(mouseTarget.clientX, mouseTarget.clientX, mouseTarget.clientY, mouseTarget.clientY);\n    }\n    else if (left !== undefined && top !== undefined) {\n        targetRect = new Rectangle(left, right, top, bottom);\n    }\n    else {\n        targetRect = _getRectangleFromElement(elementTarget);\n    }\n    return targetRect;\n}\n// END PRIVATE FUNCTIONS\nexport var __positioningTestPackage = {\n    _finalizePositionData: _finalizePositionData,\n    _finalizeBeakPosition: _finalizeBeakPosition,\n    _calculateActualBeakWidthInPixels: _calculateActualBeakWidthInPixels,\n    _positionElementWithinBounds: _positionElementWithinBounds,\n    _positionBeak: _positionBeak,\n    _getPositionData: _getPositionData,\n    _getMaxHeightFromTargetRectangle: _getMaxHeightFromTargetRectangle,\n};\n/**\n * Used to position an element relative to the given positioning props.\n * If positioning has been completed before, previousPositions can be passed to ensure that the positioning element\n * repositions based on its previous targets rather than starting with directionalhint.\n */\nexport function positionElement(props, hostElement, elementToPosition, previousPositions, win) {\n    return _positionElement(props, hostElement, elementToPosition, previousPositions, win);\n}\nexport function positionCallout(props, hostElement, elementToPosition, previousPositions, shouldScroll, minimumScrollResizeHeight, win) {\n    return _positionCallout(props, hostElement, elementToPosition, previousPositions, shouldScroll, minimumScrollResizeHeight, undefined, win);\n}\nexport function positionCard(props, hostElement, elementToPosition, previousPositions, win) {\n    return _positionCard(props, hostElement, elementToPosition, previousPositions, win);\n}\n/**\n * Gets the maximum height that a rectangle can have in order to fit below or above a target.\n * If the directional hint specifies a left or right edge (i.e. leftCenter) it will limit the height to the topBorder\n * of the target given.\n * If no bounds are provided then the window is treated as the bounds.\n */\nexport function getMaxHeight(target, targetEdge, gapSpace, bounds, coverTarget, win) {\n    if (gapSpace === void 0) { gapSpace = 0; }\n    var theWin = win !== null && win !== void 0 ? win : getWindow();\n    var targetRect = _getRectangleFromTarget(target);\n    var boundingRectangle = bounds\n        ? _getRectangleFromIRect(bounds)\n        : new Rectangle(0, theWin.innerWidth - getScrollbarWidth(), 0, theWin.innerHeight);\n    return _getMaxHeightFromTargetRectangle(targetRect, targetEdge, gapSpace, boundingRectangle, coverTarget);\n}\n/**\n * Returns the opposite edge of the given RectangleEdge.\n */\nexport function getOppositeEdge(edge) {\n    return edge * -1;\n}\nfunction _getBoundsFromTargetWindow(target, targetWindow) {\n    var segments = undefined;\n    if (targetWindow.getWindowSegments) {\n        segments = targetWindow.getWindowSegments();\n    }\n    // Identify if we're dealing with single screen scenarios.\n    if (segments === undefined || segments.length <= 1) {\n        return {\n            top: 0,\n            left: 0,\n            right: targetWindow.innerWidth,\n            bottom: targetWindow.innerHeight,\n            width: targetWindow.innerWidth,\n            height: targetWindow.innerHeight,\n        };\n    }\n    // Logic for determining dual screen scenarios.\n    var x = 0;\n    var y = 0;\n    // If the target is an Element get coordinates for its center.\n    if (target !== null && !!target.getBoundingClientRect) {\n        var clientRect = target.getBoundingClientRect();\n        x = (clientRect.left + clientRect.right) / 2;\n        y = (clientRect.top + clientRect.bottom) / 2;\n    }\n    // If the target is not null get x-axis and y-axis coordinates directly.\n    else if (target !== null) {\n        // eslint-disable-next-line deprecation/deprecation\n        x = target.left || target.x;\n        // eslint-disable-next-line deprecation/deprecation\n        y = target.top || target.y;\n    }\n    var bounds = { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n    // Define which window segment are the coordinates in and calculate bounds based on that.\n    for (var _i = 0, segments_1 = segments; _i < segments_1.length; _i++) {\n        var segment = segments_1[_i];\n        if (x && segment.left <= x && segment.right >= x && y && segment.top <= y && segment.bottom >= y) {\n            bounds = {\n                top: segment.top,\n                left: segment.left,\n                right: segment.right,\n                bottom: segment.bottom,\n                width: segment.width,\n                height: segment.height,\n            };\n        }\n    }\n    return bounds;\n}\nexport function getBoundsFromTargetWindow(target, targetWindow) {\n    return _getBoundsFromTargetWindow(target, targetWindow);\n}\nexport function calculateGapSpace(isBeakVisible, beakWidth, gapSpace) {\n    return _calculateGapSpace(isBeakVisible, beakWidth, gapSpace);\n}\nexport function getRectangleFromTarget(target) {\n    return _getRectangleFromTarget(target);\n}\n//# sourceMappingURL=positioning.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, divProperties, css, format, getPropsWithDefaults, } from '@fluentui/utilities';\nimport { Calendar } from '../../Calendar';\nimport { FirstWeekOfYear, getDatePartHashValue, compareDatePart, DayOfWeek } from '@fluentui/date-time-utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { mergeStyles } from '../../Styling';\nimport { TextField } from '../../TextField';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nimport { useId, useAsync, useControllableValue } from '@fluentui/react-hooks';\nimport { defaultDatePickerStrings } from './defaults';\nvar getClassNames = classNamesFunction();\nvar DEFAULT_PROPS = {\n    allowTextInput: false,\n    formatDate: function (date) { return (date ? date.toDateString() : ''); },\n    parseDateFromString: function (dateStr) {\n        //if dateStr is DATE ONLY ISO 8601 -> add time so Date.parse() won't convert it to UTC\n        //See here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse#date_time_string_format\n        if (dateStr.match(/^\\d{4}(-\\d{2}){2}$/)) {\n            dateStr += 'T12:00';\n        }\n        var date = Date.parse(dateStr);\n        return date ? new Date(date) : null;\n    },\n    firstDayOfWeek: DayOfWeek.Sunday,\n    initialPickerDate: new Date(),\n    isRequired: false,\n    isMonthPickerVisible: true,\n    showMonthPickerAsOverlay: false,\n    strings: defaultDatePickerStrings,\n    highlightCurrentMonth: false,\n    highlightSelectedMonth: false,\n    borderless: false,\n    pickerAriaLabel: 'Calendar',\n    showWeekNumbers: false,\n    firstWeekOfYear: FirstWeekOfYear.FirstDay,\n    showGoToToday: true,\n    showCloseButton: false,\n    underlined: false,\n    allFocusable: false,\n};\nfunction useFocusLogic() {\n    var textFieldRef = React.useRef(null);\n    var preventFocusOpeningPicker = React.useRef(false);\n    var focus = function () {\n        var _a, _b;\n        (_b = (_a = textFieldRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    var preventNextFocusOpeningPicker = function () {\n        preventFocusOpeningPicker.current = true;\n    };\n    return [textFieldRef, focus, preventFocusOpeningPicker, preventNextFocusOpeningPicker];\n}\nfunction useCalendarVisibility(_a, focus) {\n    var allowTextInput = _a.allowTextInput, onAfterMenuDismiss = _a.onAfterMenuDismiss;\n    var _b = React.useState(false), isCalendarShown = _b[0], setIsCalendarShown = _b[1];\n    var isMounted = React.useRef(false);\n    var async = useAsync();\n    React.useEffect(function () {\n        if (isMounted.current && !isCalendarShown) {\n            // In browsers like IE, textfield gets unfocused when datepicker is collapsed\n            if (allowTextInput) {\n                async.requestAnimationFrame(focus);\n            }\n            // If DatePicker's menu (Calendar) is closed, run onAfterMenuDismiss\n            onAfterMenuDismiss === null || onAfterMenuDismiss === void 0 ? void 0 : onAfterMenuDismiss();\n        }\n        isMounted.current = true;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isCalendarShown]);\n    return [isCalendarShown, setIsCalendarShown];\n}\nfunction useSelectedDate(_a) {\n    var formatDate = _a.formatDate, value = _a.value, onSelectDate = _a.onSelectDate;\n    var _b = useControllableValue(value, undefined, function (ev, newValue) {\n        return onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(newValue);\n    }), selectedDate = _b[0], setSelectedDateState = _b[1];\n    var _c = React.useState(function () { return (value && formatDate ? formatDate(value) : ''); }), formattedDate = _c[0], setFormattedDate = _c[1];\n    var setSelectedDate = function (newDate) {\n        setSelectedDateState(newDate);\n        setFormattedDate(newDate && formatDate ? formatDate(newDate) : '');\n    };\n    React.useEffect(function () {\n        setFormattedDate(value && formatDate ? formatDate(value) : '');\n    }, [formatDate, value]);\n    return [selectedDate, formattedDate, setSelectedDate, setFormattedDate];\n}\nfunction useErrorMessage(_a, selectedDate, setSelectedDate, inputValue, isCalendarShown) {\n    var _b;\n    var isRequired = _a.isRequired, allowTextInput = _a.allowTextInput, strings = _a.strings, parseDateFromString = _a.parseDateFromString, onSelectDate = _a.onSelectDate, formatDate = _a.formatDate, minDate = _a.minDate, maxDate = _a.maxDate, textField = _a.textField;\n    var _c = React.useState(), errorMessage = _c[0], setErrorMessage = _c[1];\n    var _d = React.useState(), statusMessage = _d[0], setStatusMessage = _d[1];\n    var isFirstLoadRef = React.useRef(true);\n    var validateOnLoad = (_b = textField === null || textField === void 0 ? void 0 : textField.validateOnLoad) !== null && _b !== void 0 ? _b : true;\n    var validateTextInput = function (date) {\n        if (date === void 0) { date = null; }\n        if (allowTextInput) {\n            if (inputValue || date) {\n                // Don't parse if the selected date has the same formatted string as what we're about to parse.\n                // The formatted string might be ambiguous (ex: \"1/2/3\" or \"New Year Eve\") and the parser might\n                // not be able to come up with the exact same date.\n                if (selectedDate && !errorMessage && formatDate && formatDate(date !== null && date !== void 0 ? date : selectedDate) === inputValue) {\n                    return;\n                }\n                date = date || parseDateFromString(inputValue);\n                // Check if date is null, or date is Invalid Date\n                if (!date || isNaN(date.getTime())) {\n                    // Reset invalid input field, if formatting is available\n                    setSelectedDate(selectedDate);\n                    // default the newer isResetStatusMessage string to invalidInputErrorMessage for legacy support\n                    var selectedText = formatDate ? formatDate(selectedDate) : '';\n                    var statusText = strings.isResetStatusMessage\n                        ? format(strings.isResetStatusMessage, inputValue, selectedText)\n                        : strings.invalidInputErrorMessage || '';\n                    setStatusMessage(statusText);\n                }\n                else {\n                    // Check against optional date boundaries\n                    if (isDateOutOfBounds(date, minDate, maxDate)) {\n                        setErrorMessage(strings.isOutOfBoundsErrorMessage || ' ');\n                    }\n                    else {\n                        setSelectedDate(date);\n                        setErrorMessage(undefined);\n                        setStatusMessage(undefined);\n                    }\n                }\n            }\n            else {\n                // Only show error for empty inputValue if it is a required field\n                setErrorMessage(isRequired ? strings.isRequiredErrorMessage || ' ' : undefined);\n                // If no input date string or input date string is invalid\n                // date variable will be null, callback should expect null value for this case\n                onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(date);\n            }\n        }\n        else if (isRequired && !inputValue) {\n            // Check when DatePicker is a required field but has NO input value\n            setErrorMessage(strings.isRequiredErrorMessage || ' ');\n        }\n        else {\n            // Cleanup the error message and status message\n            setErrorMessage(undefined);\n            setStatusMessage(undefined);\n        }\n    };\n    React.useEffect(function () {\n        if (isFirstLoadRef.current) {\n            isFirstLoadRef.current = false;\n            if (!validateOnLoad) {\n                return;\n            }\n        }\n        if (isRequired && !selectedDate) {\n            setErrorMessage(strings.isRequiredErrorMessage || ' ');\n        }\n        else if (selectedDate && isDateOutOfBounds(selectedDate, minDate, maxDate)) {\n            setErrorMessage(strings.isOutOfBoundsErrorMessage || ' ');\n        }\n        else {\n            setErrorMessage(undefined);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        // We don't want to compare the date itself, since two instances of date at the same time are not equal\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        minDate && getDatePartHashValue(minDate),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        maxDate && getDatePartHashValue(maxDate),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        selectedDate && getDatePartHashValue(selectedDate),\n        isRequired,\n        validateOnLoad,\n    ]);\n    return [\n        isCalendarShown ? undefined : errorMessage,\n        validateTextInput,\n        setErrorMessage,\n        isCalendarShown ? undefined : statusMessage,\n        setStatusMessage,\n    ];\n}\nexport var DatePickerBase = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var _a, _b;\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    var firstDayOfWeek = props.firstDayOfWeek, strings = props.strings, label = props.label, theme = props.theme, className = props.className, styles = props.styles, initialPickerDate = props.initialPickerDate, isRequired = props.isRequired, disabled = props.disabled, ariaLabel = props.ariaLabel, pickerAriaLabel = props.pickerAriaLabel, placeholder = props.placeholder, allowTextInput = props.allowTextInput, borderless = props.borderless, minDate = props.minDate, maxDate = props.maxDate, showCloseButton = props.showCloseButton, calendarProps = props.calendarProps, calloutProps = props.calloutProps, textFieldProps = props.textField, underlined = props.underlined, allFocusable = props.allFocusable, _c = props.calendarAs, CalendarType = _c === void 0 ? Calendar : _c, tabIndex = props.tabIndex, _d = props.disableAutoFocus, disableAutoFocus = _d === void 0 ? true : _d;\n    var id = useId('DatePicker', props.id);\n    var calloutId = useId('DatePicker-Callout');\n    var calendar = React.useRef(null);\n    var datePickerDiv = React.useRef(null);\n    var _e = useFocusLogic(), textFieldRef = _e[0], focus = _e[1], preventFocusOpeningPicker = _e[2], preventNextFocusOpeningPicker = _e[3];\n    var _f = useCalendarVisibility(props, focus), isCalendarShown = _f[0], setIsCalendarShown = _f[1];\n    var _g = useSelectedDate(props), selectedDate = _g[0], formattedDate = _g[1], setSelectedDate = _g[2], setFormattedDate = _g[3];\n    var _h = useErrorMessage(props, selectedDate, setSelectedDate, formattedDate, isCalendarShown), errorMessage = _h[0], validateTextInput = _h[1], setErrorMessage = _h[2], statusMessage = _h[3], setStatusMessage = _h[4];\n    var showDatePickerPopup = React.useCallback(function () {\n        if (!isCalendarShown) {\n            preventNextFocusOpeningPicker();\n            setIsCalendarShown(true);\n        }\n    }, [isCalendarShown, preventNextFocusOpeningPicker, setIsCalendarShown]);\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        focus: focus,\n        reset: function () {\n            setIsCalendarShown(false);\n            setSelectedDate(undefined);\n            setErrorMessage(undefined);\n            setStatusMessage(undefined);\n        },\n        showDatePickerPopup: showDatePickerPopup,\n    }); }, [focus, setErrorMessage, setIsCalendarShown, setSelectedDate, setStatusMessage, showDatePickerPopup]);\n    var onTextFieldFocus = function () {\n        if (disableAutoFocus) {\n            return;\n        }\n        if (!allowTextInput) {\n            if (!preventFocusOpeningPicker.current) {\n                showDatePickerPopup();\n            }\n            preventFocusOpeningPicker.current = false;\n        }\n    };\n    var onSelectDate = function (date) {\n        if (props.calendarProps && props.calendarProps.onSelectDate) {\n            props.calendarProps.onSelectDate(date);\n        }\n        calendarDismissed(date);\n    };\n    var onCalloutPositioned = function () {\n        var shouldFocus = true;\n        // If the user has specified that the callout shouldn't use initial focus, then respect\n        // that and don't attempt to set focus. That will default to true within the callout\n        // so we need to check if it's undefined here.\n        if (props.calloutProps && props.calloutProps.setInitialFocus !== undefined) {\n            shouldFocus = props.calloutProps.setInitialFocus;\n        }\n        if (calendar.current && shouldFocus) {\n            calendar.current.focus();\n        }\n    };\n    var onTextFieldBlur = function (ev) {\n        validateTextInput();\n    };\n    var onTextFieldChanged = function (ev, newValue) {\n        var _a;\n        var textField = props.textField;\n        if (allowTextInput) {\n            if (isCalendarShown) {\n                dismissDatePickerPopup();\n            }\n            setFormattedDate(newValue);\n        }\n        (_a = textField === null || textField === void 0 ? void 0 : textField.onChange) === null || _a === void 0 ? void 0 : _a.call(textField, ev, newValue);\n    };\n    var onTextFieldKeyDown = function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n            case KeyCodes.enter:\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (!isCalendarShown) {\n                    validateTextInput();\n                    showDatePickerPopup();\n                }\n                else {\n                    // When DatePicker allows input date string directly,\n                    // it is expected to hit another enter to close the popup\n                    if (props.allowTextInput) {\n                        dismissDatePickerPopup();\n                    }\n                }\n                break;\n            case KeyCodes.escape:\n                handleEscKey(ev);\n                break;\n            case KeyCodes.down:\n                if (ev.altKey && !isCalendarShown) {\n                    showDatePickerPopup();\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    var onTextFieldClick = function (ev) {\n        // default openOnClick to !props.disableAutoFocus for legacy support of disableAutoFocus behavior\n        var openOnClick = props.openOnClick || !props.disableAutoFocus;\n        if (openOnClick && !isCalendarShown && !props.disabled) {\n            showDatePickerPopup();\n            return;\n        }\n        if (props.allowTextInput) {\n            dismissDatePickerPopup();\n        }\n    };\n    var onIconClick = function (ev) {\n        ev.stopPropagation();\n        if (!isCalendarShown && !props.disabled) {\n            showDatePickerPopup();\n        }\n        else if (props.allowTextInput) {\n            dismissDatePickerPopup();\n        }\n    };\n    var dismissDatePickerPopup = function (newlySelectedDate) {\n        if (isCalendarShown) {\n            setIsCalendarShown(false);\n            validateTextInput(newlySelectedDate);\n            if (!allowTextInput && newlySelectedDate) {\n                setSelectedDate(newlySelectedDate);\n            }\n        }\n    };\n    var renderTextfieldDescription = function (inputProps, defaultRender) {\n        return (React.createElement(React.Fragment, null,\n            inputProps.description || inputProps.onRenderDescription ? defaultRender(inputProps) : null,\n            React.createElement(\"div\", { \"aria-live\": \"assertive\", className: classNames.statusMessage }, statusMessage)));\n    };\n    var renderReadOnlyInput = function (inputProps) {\n        var divProps = getNativeProps(inputProps, divProperties);\n        // Need to merge styles so the provided styles win over the default ones. This is due to the classnames having the\n        // same specificity.\n        var readOnlyTextFieldClassName = mergeStyles(divProps.className, classNames.readOnlyTextField);\n        // Talkback on Android treats readonly inputs as disabled, so swipe gestures to open the Calendar\n        // don't register. Workaround is rendering a div with role=\"combobox\" (passed in via TextField props).\n        return (React.createElement(\"div\", __assign({}, divProps, { className: readOnlyTextFieldClassName, tabIndex: tabIndex || 0 }), formattedDate || (\n        // Putting the placeholder in a separate span fixes specificity issues for the text color\n        React.createElement(\"span\", { className: classNames.readOnlyPlaceholder }, placeholder))));\n    };\n    /**\n     * Callback for closing the calendar callout\n     */\n    var calendarDismissed = function (newlySelectedDate) {\n        preventNextFocusOpeningPicker();\n        dismissDatePickerPopup(newlySelectedDate);\n        // don't need to focus the text box, if necessary the focusTrapZone will do it\n    };\n    var calloutDismissed = function (ev) {\n        calendarDismissed();\n    };\n    var handleEscKey = function (ev) {\n        if (isCalendarShown) {\n            ev.stopPropagation();\n            calendarDismissed();\n        }\n    };\n    var onCalendarDismissed = function (ev) {\n        calendarDismissed();\n    };\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        disabled: disabled,\n        underlined: underlined,\n        label: !!label,\n        isDatePickerShown: isCalendarShown,\n    });\n    var nativeProps = getNativeProps(props, divProperties, ['value']);\n    var iconProps = textFieldProps && textFieldProps.iconProps;\n    var textFieldId = textFieldProps && textFieldProps.id && textFieldProps.id !== id ? textFieldProps.id : id + '-label';\n    var readOnly = !allowTextInput && !disabled;\n    var dataIsFocusable = (_b = (_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps['data-is-focusable']) !== null && _a !== void 0 ? _a : props['data-is-focusable']) !== null && _b !== void 0 ? _b : true;\n    // Props to create a semantic but non-focusable button when the datepicker has a text input\n    // Used for voice control and touch screen reader accessibility\n    var iconA11yProps = allowTextInput\n        ? {\n            role: 'button',\n            'aria-expanded': isCalendarShown,\n            'aria-label': ariaLabel !== null && ariaLabel !== void 0 ? ariaLabel : label,\n            'aria-labelledby': textFieldProps && textFieldProps['aria-labelledby'],\n        }\n        : {};\n    return (React.createElement(\"div\", __assign({}, nativeProps, { className: classNames.root, ref: forwardedRef }),\n        React.createElement(\"div\", { ref: datePickerDiv, \"aria-owns\": isCalendarShown ? calloutId : undefined, className: classNames.wrapper },\n            React.createElement(TextField, __assign({ role: \"combobox\", label: label, \"aria-expanded\": isCalendarShown, ariaLabel: ariaLabel, \"aria-haspopup\": \"dialog\", \"aria-controls\": isCalendarShown ? calloutId : undefined, required: isRequired, disabled: disabled, errorMessage: errorMessage, placeholder: placeholder, borderless: borderless, value: formattedDate, componentRef: textFieldRef, underlined: underlined, tabIndex: tabIndex, readOnly: !allowTextInput }, textFieldProps, { \"data-is-focusable\": dataIsFocusable, id: textFieldId, className: css(classNames.textField, textFieldProps && textFieldProps.className), iconProps: __assign(__assign(__assign({ iconName: 'Calendar' }, iconA11yProps), iconProps), { className: css(classNames.icon, iconProps && iconProps.className), onClick: onIconClick }), \n                // eslint-disable-next-line react/jsx-no-bind\n                onRenderDescription: renderTextfieldDescription, \n                // eslint-disable-next-line react/jsx-no-bind\n                onKeyDown: onTextFieldKeyDown, \n                // eslint-disable-next-line react/jsx-no-bind\n                onFocus: onTextFieldFocus, \n                // eslint-disable-next-line react/jsx-no-bind\n                onBlur: onTextFieldBlur, \n                // eslint-disable-next-line react/jsx-no-bind\n                onClick: onTextFieldClick, \n                // eslint-disable-next-line react/jsx-no-bind\n                onChange: onTextFieldChanged, onRenderInput: readOnly ? renderReadOnlyInput : undefined }))),\n        isCalendarShown && (React.createElement(Callout, __assign({ id: calloutId, role: \"dialog\", ariaLabel: pickerAriaLabel, isBeakVisible: false, gapSpace: 0, doNotLayer: false, target: datePickerDiv.current, directionalHint: DirectionalHint.bottomLeftEdge }, calloutProps, { className: css(classNames.callout, calloutProps && calloutProps.className), \n            // eslint-disable-next-line react/jsx-no-bind\n            onDismiss: calloutDismissed, \n            // eslint-disable-next-line react/jsx-no-bind\n            onPositioned: onCalloutPositioned }),\n            React.createElement(FocusTrapZone, { isClickableOutsideFocusTrap: true, disableFirstFocus: disableAutoFocus },\n                React.createElement(CalendarType, __assign({}, calendarProps, { \n                    // eslint-disable-next-line react/jsx-no-bind\n                    onSelectDate: onSelectDate, \n                    // eslint-disable-next-line react/jsx-no-bind\n                    onDismiss: onCalendarDismissed, isMonthPickerVisible: props.isMonthPickerVisible, showMonthPickerAsOverlay: props.showMonthPickerAsOverlay, today: props.today, value: selectedDate || initialPickerDate, firstDayOfWeek: firstDayOfWeek, strings: strings, highlightCurrentMonth: props.highlightCurrentMonth, highlightSelectedMonth: props.highlightSelectedMonth, showWeekNumbers: props.showWeekNumbers, firstWeekOfYear: props.firstWeekOfYear, showGoToToday: props.showGoToToday, dateTimeFormatter: props.dateTimeFormatter, minDate: minDate, maxDate: maxDate, componentRef: calendar, showCloseButton: showCloseButton, allFocusable: allFocusable })))))));\n});\nDatePickerBase.displayName = 'DatePickerBase';\nfunction isDateOutOfBounds(date, minDate, maxDate) {\n    return (!!minDate && compareDatePart(minDate, date) > 0) || (!!maxDate && compareDatePart(maxDate, date) < 0);\n}\n//# sourceMappingURL=DatePicker.base.js.map","import { __assign } from \"tslib\";\nimport { defaultCalendarStrings } from '../../Calendar';\nexport var defaultDatePickerStrings = __assign(__assign({}, defaultCalendarStrings), { prevMonthAriaLabel: 'Go to previous month', nextMonthAriaLabel: 'Go to next month', prevYearAriaLabel: 'Go to previous year', nextYearAriaLabel: 'Go to next year', closeButtonAriaLabel: 'Close date picker', isRequiredErrorMessage: 'Field is required', invalidInputErrorMessage: 'Invalid date format', isResetStatusMessage: 'Invalid entry \"{0}\", date reset to \"{1}\"' });\n//# sourceMappingURL=defaults.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { IconButton } from '../../Button';\nimport { Layer } from '../../Layer';\nimport { Overlay } from '../../Overlay';\nimport { Popup } from '../../Popup';\nimport { allowScrollOnElement, allowOverscrollOnElement, classNamesFunction, divProperties, elementContains, getId, getNativeProps, getRTL, css, warnDeprecations, Async, EventGroup, initializeComponentRef, } from '../../Utilities';\nimport { FocusTrapZone } from '../FocusTrapZone/index';\nimport { PanelType } from './Panel.types';\nimport { WindowContext } from '@fluentui/react-window-provider';\nimport { getDocumentEx, getWindowEx } from '../../utilities/dom';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'Panel';\nvar PanelVisibilityState;\n(function (PanelVisibilityState) {\n    PanelVisibilityState[PanelVisibilityState[\"closed\"] = 0] = \"closed\";\n    PanelVisibilityState[PanelVisibilityState[\"animatingOpen\"] = 1] = \"animatingOpen\";\n    PanelVisibilityState[PanelVisibilityState[\"open\"] = 2] = \"open\";\n    PanelVisibilityState[PanelVisibilityState[\"animatingClosed\"] = 3] = \"animatingClosed\";\n})(PanelVisibilityState || (PanelVisibilityState = {}));\nexport var PanelBase = /** @class */ (function (_super) {\n    __extends(PanelBase, _super);\n    function PanelBase(props) {\n        var _a;\n        var _this = _super.call(this, props) || this;\n        _this._panel = React.createRef();\n        _this._animationCallback = null;\n        _this._hasCustomNavigation = !!(_this.props.onRenderNavigation || _this.props.onRenderNavigationContent);\n        _this.dismiss = function (ev) {\n            if (_this.props.onDismiss && _this.isActive) {\n                _this.props.onDismiss(ev);\n            }\n            if (!ev || (ev && !ev.defaultPrevented)) {\n                _this.close();\n            }\n        };\n        // Allow the user to scroll within the panel but not on the body\n        _this._allowScrollOnPanel = function (elt) {\n            if (elt) {\n                if (_this._allowTouchBodyScroll) {\n                    allowOverscrollOnElement(elt, _this._events);\n                }\n                else {\n                    allowScrollOnElement(elt, _this._events);\n                }\n            }\n            else {\n                _this._events.off(_this._scrollableContent);\n            }\n            _this._scrollableContent = elt;\n        };\n        _this._onRenderNavigation = function (props) {\n            var _a;\n            if (!_this.props.onRenderNavigationContent && !_this.props.onRenderNavigation && !_this.props.hasCloseButton) {\n                return null;\n            }\n            var onRenderNavigationContent = (_a = _this.props.onRenderNavigationContent, _a === void 0 ? _this._onRenderNavigationContent : _a);\n            return (React.createElement(\"div\", { className: _this._classNames.navigation }, onRenderNavigationContent(props, _this._onRenderNavigationContent)));\n        };\n        _this._onRenderNavigationContent = function (props) {\n            var _a;\n            var _b;\n            var closeButtonAriaLabel = props.closeButtonAriaLabel, hasCloseButton = props.hasCloseButton, onRenderHeader = (_a = props.onRenderHeader, _a === void 0 ? _this._onRenderHeader : _a);\n            if (hasCloseButton) {\n                var iconButtonStyles = (_b = _this._classNames.subComponentStyles) === null || _b === void 0 ? void 0 : _b.closeButton();\n                return (React.createElement(React.Fragment, null,\n                    !_this._hasCustomNavigation && onRenderHeader(_this.props, _this._onRenderHeader, _this._headerTextId),\n                    React.createElement(IconButton, { styles: iconButtonStyles, className: _this._classNames.closeButton, onClick: _this._onPanelClick, ariaLabel: closeButtonAriaLabel, title: closeButtonAriaLabel, \"data-is-visible\": true, iconProps: { iconName: 'Cancel' } })));\n            }\n            return null;\n        };\n        _this._onRenderHeader = function (props, defaultRender, headerTextId) {\n            var _a;\n            var headerText = props.headerText, headerTextProps = (_a = props.headerTextProps, _a === void 0 ? {} : _a);\n            if (headerText) {\n                return (React.createElement(\"div\", { className: _this._classNames.header },\n                    React.createElement(\"div\", __assign({ id: headerTextId, role: \"heading\", \"aria-level\": 1 }, headerTextProps, { className: css(_this._classNames.headerText, headerTextProps.className) }), headerText)));\n            }\n            return null;\n        };\n        _this._onRenderBody = function (props) {\n            return React.createElement(\"div\", { className: _this._classNames.content }, props.children);\n        };\n        _this._onRenderFooter = function (props) {\n            var _a;\n            var onRenderFooterContent = (_a = _this.props.onRenderFooterContent, _a === void 0 ? null : _a);\n            if (onRenderFooterContent) {\n                return (React.createElement(\"div\", { className: _this._classNames.footer },\n                    React.createElement(\"div\", { className: _this._classNames.footerInner }, onRenderFooterContent())));\n            }\n            return null;\n        };\n        _this._animateTo = function (newVisibilityState) {\n            if (newVisibilityState === PanelVisibilityState.open && _this.props.onOpen) {\n                _this.props.onOpen();\n            }\n            _this._animationCallback = _this._async.setTimeout(function () {\n                _this.setState({ visibility: newVisibilityState });\n                _this._onTransitionComplete(newVisibilityState);\n            }, 200);\n        };\n        _this._clearExistingAnimationTimer = function () {\n            if (_this._animationCallback !== null) {\n                _this._async.clearTimeout(_this._animationCallback);\n            }\n        };\n        _this._onPanelClick = function (ev) {\n            _this.dismiss(ev);\n        };\n        _this._onTransitionComplete = function (newVisibilityState) {\n            _this._updateFooterPosition();\n            if (newVisibilityState === PanelVisibilityState.open && _this.props.onOpened) {\n                _this.props.onOpened();\n            }\n            if (newVisibilityState === PanelVisibilityState.closed && _this.props.onDismissed) {\n                _this.props.onDismissed();\n            }\n        };\n        var allowTouchBodyScroll = (_a = _this.props.allowTouchBodyScroll, _a === void 0 ? false : _a);\n        _this._allowTouchBodyScroll = allowTouchBodyScroll;\n        initializeComponentRef(_this);\n        warnDeprecations(COMPONENT_NAME, props, {\n            ignoreExternalFocusing: 'focusTrapZoneProps',\n            forceFocusInsideTrap: 'focusTrapZoneProps',\n            firstFocusableSelector: 'focusTrapZoneProps',\n        });\n        _this.state = {\n            isFooterSticky: false,\n            // intentionally ignore props so animation takes place during componentDidMount\n            visibility: PanelVisibilityState.closed,\n            id: getId('Panel'),\n        };\n        return _this;\n    }\n    PanelBase.getDerivedStateFromProps = function (nextProps, prevState) {\n        if (nextProps.isOpen === undefined) {\n            return null; // no state update\n        }\n        if (nextProps.isOpen &&\n            (prevState.visibility === PanelVisibilityState.closed ||\n                prevState.visibility === PanelVisibilityState.animatingClosed)) {\n            return { visibility: PanelVisibilityState.animatingOpen };\n        }\n        if (!nextProps.isOpen &&\n            (prevState.visibility === PanelVisibilityState.open ||\n                prevState.visibility === PanelVisibilityState.animatingOpen)) {\n            return { visibility: PanelVisibilityState.animatingClosed };\n        }\n        return null;\n    };\n    PanelBase.prototype.componentDidMount = function () {\n        this._async = new Async(this);\n        this._events = new EventGroup(this);\n        var win = getWindowEx(this.context);\n        var doc = getDocumentEx(this.context);\n        this._events.on(win, 'resize', this._updateFooterPosition);\n        if (this._shouldListenForOuterClick(this.props)) {\n            this._events.on(doc === null || doc === void 0 ? void 0 : doc.body, 'mousedown', this._dismissOnOuterClick, true);\n        }\n        if (this.props.isOpen) {\n            this.setState({ visibility: PanelVisibilityState.animatingOpen });\n        }\n    };\n    PanelBase.prototype.componentDidUpdate = function (previousProps, previousState) {\n        var shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\n        var previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\n        if (this.state.visibility !== previousState.visibility) {\n            this._clearExistingAnimationTimer();\n            if (this.state.visibility === PanelVisibilityState.animatingOpen) {\n                this._animateTo(PanelVisibilityState.open);\n            }\n            else if (this.state.visibility === PanelVisibilityState.animatingClosed) {\n                this._animateTo(PanelVisibilityState.closed);\n            }\n        }\n        var doc = getDocumentEx(this.context);\n        if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\n            this._events.on(doc === null || doc === void 0 ? void 0 : doc.body, 'mousedown', this._dismissOnOuterClick, true);\n        }\n        else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\n            this._events.off(doc === null || doc === void 0 ? void 0 : doc.body, 'mousedown', this._dismissOnOuterClick, true);\n        }\n    };\n    PanelBase.prototype.componentWillUnmount = function () {\n        this._async.dispose();\n        this._events.dispose();\n    };\n    PanelBase.prototype.render = function () {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        var className = (_a = this.props, _b = _a.className, _b === void 0 ? '' : _b), elementToFocusOnDismiss = _a.elementToFocusOnDismiss, \n        /* eslint-disable deprecation/deprecation */\n        firstFocusableSelector = _a.firstFocusableSelector, focusTrapZoneProps = _a.focusTrapZoneProps, forceFocusInsideTrap = _a.forceFocusInsideTrap, hasCloseButton = _a.hasCloseButton, headerText = _a.headerText, headerClassName = (_c = _a.headerClassName, _c === void 0 ? '' : _c), ignoreExternalFocusing = _a.ignoreExternalFocusing, isBlocking = _a.isBlocking, isFooterAtBottom = _a.isFooterAtBottom, isLightDismiss = _a.isLightDismiss, isHiddenOnDismiss = _a.isHiddenOnDismiss, layerProps = _a.layerProps, overlayProps = _a.overlayProps, popupProps = _a.popupProps, type = _a.type, styles = _a.styles, theme = _a.theme, customWidth = _a.customWidth, onLightDismissClick = (_d = _a.onLightDismissClick, _d === void 0 ? this._onPanelClick : _d), onRenderNavigation = (_e = _a.onRenderNavigation, _e === void 0 ? this._onRenderNavigation : _e), onRenderHeader = (_f = _a.onRenderHeader, _f === void 0 ? this._onRenderHeader : _f), onRenderBody = (_g = _a.onRenderBody, _g === void 0 ? this._onRenderBody : _g), onRenderFooter = (_h = _a.onRenderFooter, _h === void 0 ? this._onRenderFooter : _h);\n        var isFooterSticky = (_j = this.state, _j.isFooterSticky), visibility = _j.visibility, id = _j.id;\n        var isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\n        var isRTL = getRTL(theme);\n        var isOnRightSide = isRTL ? isLeft : !isLeft;\n        var customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? { width: customWidth } : {};\n        var nativeProps = getNativeProps(this.props, divProperties);\n        var isOpen = this.isActive;\n        var isAnimating = visibility === PanelVisibilityState.animatingClosed || visibility === PanelVisibilityState.animatingOpen;\n        this._headerTextId = headerText && id + '-headerText';\n        if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\n            return null;\n        }\n        this._classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n            focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\n            hasCloseButton: hasCloseButton,\n            headerClassName: headerClassName,\n            isAnimating: isAnimating,\n            isFooterSticky: isFooterSticky,\n            isFooterAtBottom: isFooterAtBottom,\n            isOnRightSide: isOnRightSide,\n            isOpen: isOpen,\n            isHiddenOnDismiss: isHiddenOnDismiss,\n            type: type,\n            hasCustomNavigation: this._hasCustomNavigation,\n        });\n        var _classNames = (_k = this, _k._classNames), _allowTouchBodyScroll = _k._allowTouchBodyScroll;\n        var overlay;\n        if (isBlocking && isOpen) {\n            overlay = (React.createElement(Overlay, __assign({ className: _classNames.overlay, isDarkThemed: false, onClick: isLightDismiss ? onLightDismissClick : undefined, allowTouchBodyScroll: _allowTouchBodyScroll }, overlayProps)));\n        }\n        return (React.createElement(Layer, __assign({}, layerProps),\n            React.createElement(Popup, __assign({ role: \"dialog\", \"aria-modal\": isBlocking ? 'true' : undefined, ariaLabelledBy: this._headerTextId ? this._headerTextId : undefined, onDismiss: this.dismiss, className: _classNames.hiddenPanel, enableAriaHiddenSiblings: isOpen ? true : false }, popupProps),\n                React.createElement(\"div\", __assign({ \"aria-hidden\": !isOpen && isAnimating }, nativeProps, { ref: this._panel, className: _classNames.root }),\n                    overlay,\n                    React.createElement(FocusTrapZone, __assign({ ignoreExternalFocusing: ignoreExternalFocusing, forceFocusInsideTrap: !isBlocking || (isHiddenOnDismiss && !isOpen) ? false : forceFocusInsideTrap, firstFocusableSelector: firstFocusableSelector, isClickableOutsideFocusTrap: true }, focusTrapZoneProps, { className: _classNames.main, style: customWidthStyles, elementToFocusOnDismiss: elementToFocusOnDismiss }),\n                        React.createElement(\"div\", { className: _classNames.contentInner },\n                            React.createElement(\"div\", { ref: this._allowScrollOnPanel, className: _classNames.scrollableContent, \"data-is-scrollable\": true },\n                                React.createElement(\"div\", { className: _classNames.commands, \"data-is-visible\": true }, onRenderNavigation(this.props, this._onRenderNavigation)),\n                                (this._hasCustomNavigation || !hasCloseButton) &&\n                                    onRenderHeader(this.props, this._onRenderHeader, this._headerTextId),\n                                onRenderBody(this.props, this._onRenderBody),\n                                onRenderFooter(this.props, this._onRenderFooter))))))));\n    };\n    PanelBase.prototype.open = function () {\n        if (this.props.isOpen !== undefined) {\n            return;\n        }\n        if (this.isActive) {\n            return;\n        }\n        this.setState({ visibility: PanelVisibilityState.animatingOpen });\n    };\n    PanelBase.prototype.close = function () {\n        if (this.props.isOpen !== undefined) {\n            return;\n        }\n        if (!this.isActive) {\n            return;\n        }\n        this.setState({ visibility: PanelVisibilityState.animatingClosed });\n    };\n    Object.defineProperty(PanelBase.prototype, \"isActive\", {\n        /** isActive is true when panel is open or opening. */\n        get: function () {\n            return (this.state.visibility === PanelVisibilityState.open ||\n                this.state.visibility === PanelVisibilityState.animatingOpen);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PanelBase.prototype._shouldListenForOuterClick = function (props) {\n        return !!props.isBlocking && !!props.isOpen;\n    };\n    PanelBase.prototype._updateFooterPosition = function () {\n        var scrollableContent = this._scrollableContent;\n        if (scrollableContent) {\n            var height = scrollableContent.clientHeight;\n            var innerHeight_1 = scrollableContent.scrollHeight;\n            this.setState({\n                isFooterSticky: height < innerHeight_1 ? true : false,\n            });\n        }\n    };\n    PanelBase.prototype._dismissOnOuterClick = function (ev) {\n        var panel = this._panel.current;\n        if (this.isActive && panel && !ev.defaultPrevented) {\n            if (!elementContains(panel, ev.target)) {\n                if (this.props.onOuterClick) {\n                    this.props.onOuterClick(ev);\n                }\n                else {\n                    this.dismiss(ev);\n                }\n            }\n        }\n    };\n    PanelBase.defaultProps = {\n        isHiddenOnDismiss: false,\n        isOpen: undefined,\n        isBlocking: true,\n        hasCloseButton: true,\n        type: PanelType.smallFixedFar,\n    };\n    PanelBase.contextType = WindowContext;\n    return PanelBase;\n}(React.Component));\n//# sourceMappingURL=Panel.base.js.map","import { styled } from '@fluentui/utilities';\nimport { CheckboxBase } from './Checkbox.base';\nimport { getStyles } from './Checkbox.styles';\nexport var Checkbox = styled(CheckboxBase, getStyles, undefined, { scope: 'Checkbox' });\n//# sourceMappingURL=Checkbox.js.map","var overflowItemStyle = {\n    flexShrink: 0,\n    display: 'inherit',\n};\nexport var getStyles = function (props) {\n    var className = props.className, vertical = props.vertical;\n    return {\n        root: [\n            'ms-OverflowSet',\n            {\n                position: 'relative',\n                display: 'flex',\n                flexWrap: 'nowrap',\n            },\n            vertical && { flexDirection: 'column' },\n            className,\n        ],\n        item: ['ms-OverflowSet-item', overflowItemStyle],\n        overflowButton: ['ms-OverflowSet-overflowButton', overflowItemStyle],\n    };\n};\n//# sourceMappingURL=OverflowSet.styles.js.map","export var DirectionalHint = {\n    /**\n     * Appear above the target element, with the left edges of the callout and target aligning.\n     */\n    topLeftEdge: 0,\n    /**\n     * Appear above the target element, with the centers of the callout and target aligning.\n     */\n    topCenter: 1,\n    /**\n     * Appear above the target element, with the right edges of the callout and target aligning.\n     */\n    topRightEdge: 2,\n    /**\n     * Appear above the target element, aligning with the target element such that the callout tends toward\n     * the center of the screen.\n     */\n    topAutoEdge: 3,\n    /**\n     * Appear below the target element, with the left edges of the callout and target aligning.\n     */\n    bottomLeftEdge: 4,\n    /**\n     * Appear below the target element, with the centers of the callout and target aligning.\n     */\n    bottomCenter: 5,\n    /**\n     * Appear below the target element, with the right edges of the callout and target aligning.\n     */\n    bottomRightEdge: 6,\n    /**\n     * Appear below the target element, aligning with the target element such that the callout tends toward\n     * the center of the screen.\n     */\n    bottomAutoEdge: 7,\n    /**\n     * Appear to the left of the target element, with the top edges of the callout and target aligning.\n     */\n    leftTopEdge: 8,\n    /**\n     * Appear to the left of the target element, with the centers of the callout and target aligning.\n     */\n    leftCenter: 9,\n    /**\n     * Appear to the left of the target element, with the bottom edges of the callout and target aligning.\n     */\n    leftBottomEdge: 10,\n    /**\n     * Appear to the right of the target element, with the top edges of the callout and target aligning.\n     */\n    rightTopEdge: 11,\n    /**\n     * Appear to the right of the target element, with the centers of the callout and target aligning.\n     */\n    rightCenter: 12,\n    /**\n     * Appear to the right of the target element, with the bottom edges of the callout and target aligning.\n     */\n    rightBottomEdge: 13,\n};\n//# sourceMappingURL=DirectionalHint.js.map","import { createComponent } from '@fluentui/foundation-legacy';\nimport { TextView } from './Text.view';\nimport { TextStyles as styles } from './Text.styles';\nexport var Text = createComponent(TextView, {\n    displayName: 'Text',\n    styles: styles,\n});\nexport default Text;\n//# sourceMappingURL=Text.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { getActiveElement, getEventTarget, elementContains, getNativeProps, divProperties, getFirstTabbable, getLastTabbable, getNextElement, focusAsync, getPropsWithDefaults, modalize, on, useHasMergeStylesShadowRootContext, } from '../../Utilities';\nimport { useId, useConst, useMergedRefs, useEventCallback, usePrevious, useUnmount } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\nimport { useWindowEx } from '../../utilities/dom';\nvar COMPONENT_NAME = 'FocusTrapZone';\nvar DEFAULT_PROPS = {\n    disabled: false,\n    disableFirstFocus: false,\n    forceFocusInsideTrap: true,\n    isClickableOutsideFocusTrap: false,\n    // Hardcoding completely uncontrolled flag for proper interop with FluentUI V9.\n    'data-tabster': '{\"uncontrolled\": {\"completely\": true}}',\n};\nvar useComponentRef = function (componentRef, previouslyFocusedElement, focusFTZ) {\n    React.useImperativeHandle(componentRef, function () { return ({\n        get previouslyFocusedElement() {\n            return previouslyFocusedElement;\n        },\n        focus: focusFTZ,\n    }); }, [focusFTZ, previouslyFocusedElement]);\n};\nexport var FocusTrapZone = React.forwardRef(function (propsWithoutDefaults, ref) {\n    var _a;\n    var root = React.useRef(null);\n    var firstBumper = React.useRef(null);\n    var lastBumper = React.useRef(null);\n    var mergedRootRef = useMergedRefs(root, ref);\n    var doc = useDocument();\n    var win = useWindowEx();\n    var inShadow = useHasMergeStylesShadowRootContext();\n    var isFirstRender = (_a = usePrevious(false)) !== null && _a !== void 0 ? _a : true;\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    var internalState = useConst({\n        hasFocus: false,\n        focusStackId: useId('ftz-', props.id),\n    });\n    var children = props.children, componentRef = props.componentRef, disabled = props.disabled, disableFirstFocus = props.disableFirstFocus, forceFocusInsideTrap = props.forceFocusInsideTrap, focusPreviouslyFocusedInnerElement = props.focusPreviouslyFocusedInnerElement, \n    // eslint-disable-next-line deprecation/deprecation\n    firstFocusableSelector = props.firstFocusableSelector, firstFocusableTarget = props.firstFocusableTarget, \n    // eslint-disable-next-line deprecation/deprecation\n    _b = props.disableRestoreFocus, \n    // eslint-disable-next-line deprecation/deprecation\n    disableRestoreFocus = _b === void 0 ? props.ignoreExternalFocusing : _b, isClickableOutsideFocusTrap = props.isClickableOutsideFocusTrap, enableAriaHiddenSiblings = props.enableAriaHiddenSiblings;\n    var bumperProps = {\n        'aria-hidden': true,\n        style: {\n            pointerEvents: 'none',\n            position: 'fixed', // 'fixed' prevents browsers from scrolling to bumpers when viewport does not contain them\n        },\n        tabIndex: disabled ? -1 : 0,\n        'data-is-visible': true,\n        'data-is-focus-trap-zone-bumper': true,\n    };\n    var focusElementAsync = React.useCallback(function (element) {\n        if (element !== firstBumper.current && element !== lastBumper.current) {\n            focusAsync(element);\n        }\n    }, []);\n    /**\n     * Callback to force focus into FTZ (named to avoid overlap with global focus() callback).\n     * useEventCallback always returns the same callback reference but updates the implementation\n     * every render to avoid stale captured values.\n     */\n    var focusFTZ = useEventCallback(function () {\n        if (!root.current) {\n            return; // not done mounting\n        }\n        var previouslyFocusedElementInTrapZone = internalState.previouslyFocusedElementInTrapZone;\n        if (focusPreviouslyFocusedInnerElement &&\n            previouslyFocusedElementInTrapZone &&\n            elementContains(root.current, previouslyFocusedElementInTrapZone)) {\n            // focus on the last item that had focus in the zone before we left the zone\n            focusElementAsync(previouslyFocusedElementInTrapZone);\n            return;\n        }\n        var firstFocusableChild = null;\n        if (typeof firstFocusableTarget === 'string') {\n            firstFocusableChild = root.current.querySelector(firstFocusableTarget);\n        }\n        else if (firstFocusableTarget) {\n            firstFocusableChild = firstFocusableTarget(root.current);\n        }\n        else if (firstFocusableSelector) {\n            var focusSelector = typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector();\n            firstFocusableChild = root.current.querySelector('.' + focusSelector);\n        }\n        // Fall back to first element if query selector did not match any elements.\n        if (!firstFocusableChild) {\n            firstFocusableChild = getNextElement(root.current, root.current.firstChild, false, false, false, true, undefined, undefined, undefined, inShadow);\n        }\n        if (firstFocusableChild) {\n            focusElementAsync(firstFocusableChild);\n        }\n    });\n    /** Used in root div focus/blur handlers */\n    var focusBumper = function (isFirstBumper) {\n        if (disabled || !root.current) {\n            return;\n        }\n        var nextFocusable = isFirstBumper === internalState.hasFocus\n            ? getLastTabbable(root.current, lastBumper.current, true, false, inShadow)\n            : getFirstTabbable(root.current, firstBumper.current, true, false, inShadow);\n        if (nextFocusable) {\n            if (nextFocusable === firstBumper.current || nextFocusable === lastBumper.current) {\n                // This can happen when FTZ contains no tabbable elements.\n                // focusFTZ() will take care of finding a focusable element in FTZ.\n                focusFTZ();\n            }\n            else {\n                nextFocusable.focus();\n            }\n        }\n    };\n    /** Root div blur handler (doesn't need useCallback since it's for a native element) */\n    var onRootBlurCapture = function (ev) {\n        var _a;\n        (_a = props.onBlurCapture) === null || _a === void 0 ? void 0 : _a.call(props, ev);\n        var relatedTarget = ev.relatedTarget;\n        if (ev.relatedTarget === null) {\n            // In IE11, due to lack of support, event.relatedTarget is always\n            // null making every onBlur call to be \"outside\" of the root\n            // even when it's not. Using document.activeElement is another way\n            // for us to be able to get what the relatedTarget without relying\n            // on the event\n            relatedTarget = getActiveElement(doc);\n        }\n        if (!elementContains(root.current, relatedTarget)) {\n            internalState.hasFocus = false;\n        }\n    };\n    /** Root div focus handler (doesn't need useCallback since it's for a native element) */\n    var onRootFocusCapture = function (ev) {\n        var _a;\n        (_a = props.onFocusCapture) === null || _a === void 0 ? void 0 : _a.call(props, ev);\n        if (ev.target === firstBumper.current) {\n            focusBumper(true);\n        }\n        else if (ev.target === lastBumper.current) {\n            focusBumper(false);\n        }\n        internalState.hasFocus = true;\n        if (ev.target !== ev.currentTarget && !(ev.target === firstBumper.current || ev.target === lastBumper.current)) {\n            // every time focus changes within the trap zone, remember the focused element so that\n            // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\n            internalState.previouslyFocusedElementInTrapZone = getEventTarget(ev.nativeEvent);\n        }\n    };\n    /** Called to restore focus on unmount or props change. (useEventCallback ensures latest prop values are used.) */\n    var returnFocusToInitiator = useEventCallback(function (elementToFocusOnDismiss) {\n        FocusTrapZone.focusStack = FocusTrapZone.focusStack.filter(function (value) { return internalState.focusStackId !== value; });\n        if (!doc) {\n            return;\n        }\n        // Do not use getActiveElement() here.\n        // When the FTZ is in shadow DOM focus returns to the\n        // shadow host rather than body so we need to be\n        // able to inspect that\n        var activeElement = doc.activeElement;\n        if (!disableRestoreFocus &&\n            typeof (elementToFocusOnDismiss === null || elementToFocusOnDismiss === void 0 ? void 0 : elementToFocusOnDismiss.focus) === 'function' &&\n            // only restore focus if the current focused element is within the FTZ, or if nothing is focused\n            (elementContains(root.current, activeElement) || activeElement === doc.body || activeElement.shadowRoot)) {\n            focusElementAsync(elementToFocusOnDismiss);\n        }\n    });\n    /** Called in window event handlers. (useEventCallback ensures latest prop values are used.) */\n    var forceFocusOrClickInTrap = useEventCallback(function (ev) {\n        // be sure to use the latest values here\n        if (disabled) {\n            return;\n        }\n        if (internalState.focusStackId === FocusTrapZone.focusStack.slice(-1)[0]) {\n            var targetElement = getEventTarget(ev);\n            if (targetElement && !elementContains(root.current, targetElement)) {\n                if (doc && getActiveElement(doc) === doc.body) {\n                    setTimeout(function () {\n                        if (doc && getActiveElement(doc) === doc.body) {\n                            focusFTZ();\n                            internalState.hasFocus = true; // set focus here since we stop event propagation\n                        }\n                    }, 0);\n                }\n                else {\n                    focusFTZ();\n                    internalState.hasFocus = true; // set focus here since we stop event propagation\n                }\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n        }\n    });\n    // Update window event handlers when relevant props change\n    React.useEffect(function () {\n        var disposables = [];\n        if (forceFocusInsideTrap) {\n            disposables.push(on(win, 'focus', forceFocusOrClickInTrap, true));\n        }\n        if (!isClickableOutsideFocusTrap) {\n            disposables.push(on(win, 'click', forceFocusOrClickInTrap, true));\n        }\n        return function () {\n            disposables.forEach(function (dispose) { return dispose(); });\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when these two props change\n    }, [forceFocusInsideTrap, isClickableOutsideFocusTrap, win]);\n    // On prop change or first render, focus the FTZ and update focusStack if appropriate\n    React.useEffect(function () {\n        // Do nothing if disabled, or if it's a re-render and forceFocusInsideTrap is false\n        // (to match existing behavior, the FTZ handles first focus even if forceFocusInsideTrap\n        // is false, though it's debatable whether it should do this)\n        if (disabled || (!isFirstRender && !forceFocusInsideTrap) || !root.current) {\n            return;\n        }\n        // Transition from forceFocusInsideTrap / FTZ disabled to enabled (or initial mount)\n        FocusTrapZone.focusStack.push(internalState.focusStackId);\n        var elementToFocusOnDismiss = props.elementToFocusOnDismiss || getActiveElement(doc);\n        if (!disableFirstFocus && !elementContains(root.current, elementToFocusOnDismiss)) {\n            focusFTZ();\n        }\n        // To match existing behavior, always return focus on cleanup (even if we didn't handle\n        // initial focus), but it's debatable whether that's correct\n        return function () { return returnFocusToInitiator(elementToFocusOnDismiss); };\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when these two props change\n    }, [forceFocusInsideTrap, disabled]);\n    // Handle modalization separately from first focus\n    React.useEffect(function () {\n        if (!disabled && enableAriaHiddenSiblings) {\n            var unmodalize = modalize(root.current);\n            return unmodalize;\n        }\n    }, [disabled, enableAriaHiddenSiblings, root]);\n    // Cleanup lifecyle method for internalState.\n    useUnmount(function () {\n        // Dispose of element references so the DOM Nodes can be garbage-collected\n        delete internalState.previouslyFocusedElementInTrapZone;\n    });\n    useComponentRef(componentRef, internalState.previouslyFocusedElementInTrapZone, focusFTZ);\n    return (React.createElement(\"div\", __assign({ \"aria-labelledby\": props.ariaLabelledBy }, getNativeProps(props, divProperties), { ref: mergedRootRef, onFocusCapture: onRootFocusCapture, onBlurCapture: onRootBlurCapture }),\n        React.createElement(\"div\", __assign({}, bumperProps, { ref: firstBumper })),\n        children,\n        React.createElement(\"div\", __assign({}, bumperProps, { ref: lastBumper }))));\n});\nFocusTrapZone.displayName = COMPONENT_NAME;\nFocusTrapZone.focusStack = [];\n//# sourceMappingURL=FocusTrapZone.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, getNativeProps, divProperties, enableBodyScroll, disableBodyScroll, initializeComponentRef, } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nvar OverlayBase = /** @class */ (function (_super) {\n    __extends(OverlayBase, _super);\n    function OverlayBase(props) {\n        var _this = _super.call(this, props) || this;\n        initializeComponentRef(_this);\n        var _a = _this.props.allowTouchBodyScroll, allowTouchBodyScroll = _a === void 0 ? false : _a;\n        _this._allowTouchBodyScroll = allowTouchBodyScroll;\n        return _this;\n    }\n    OverlayBase.prototype.componentDidMount = function () {\n        !this._allowTouchBodyScroll && disableBodyScroll();\n    };\n    OverlayBase.prototype.componentWillUnmount = function () {\n        !this._allowTouchBodyScroll && enableBodyScroll();\n    };\n    OverlayBase.prototype.render = function () {\n        var _a = this.props, isDark = _a.isDarkThemed, className = _a.className, theme = _a.theme, styles = _a.styles;\n        var divProps = getNativeProps(this.props, divProperties);\n        var classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n            isDark: isDark,\n        });\n        return React.createElement(\"div\", __assign({}, divProps, { className: classNames.root }));\n    };\n    return OverlayBase;\n}(React.Component));\nexport { OverlayBase };\n//# sourceMappingURL=Overlay.base.js.map","/**\n * Determines the effective checked state of a menu item.\n *\n * @param item {IContextualMenuItem} to get the check state of.\n * @returns {true} if the item is checked.\n * @returns {false} if the item is unchecked.\n * @returns {null} if the item is not checkable.\n */\nexport function getIsChecked(item) {\n    if (item.canCheck) {\n        return !!(item.isChecked || item.checked);\n    }\n    if (typeof item.isChecked === 'boolean') {\n        return item.isChecked;\n    }\n    if (typeof item.checked === 'boolean') {\n        return item.checked;\n    }\n    // Item is not checkable.\n    return null;\n}\nexport function hasSubmenu(item) {\n    // eslint-disable-next-line deprecation/deprecation\n    return !!(item.subMenuProps || item.items);\n}\nexport function isItemDisabled(item) {\n    return !!(item.isDisabled || item.disabled);\n}\nexport function getMenuItemAriaRole(item) {\n    var isChecked = getIsChecked(item);\n    var canCheck = isChecked !== null;\n    return canCheck ? 'menuitemcheckbox' : 'menuitem';\n}\n//# sourceMappingURL=contextualMenuUtility.js.map","import { styled } from '../../Utilities';\nimport { TooltipHostBase } from './TooltipHost.base';\nimport { getStyles } from './TooltipHost.styles';\nexport var TooltipHost = styled(TooltipHostBase, getStyles, undefined, {\n    scope: 'TooltipHost',\n});\n//# sourceMappingURL=TooltipHost.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useControllableValue, useId, useWarnings } from '@fluentui/react-hooks';\nimport { classNamesFunction, getNativeProps, inputProperties, useFocusRects } from '@fluentui/utilities';\nimport { Label } from '../Label/Label';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'Toggle';\nexport var ToggleBase = React.forwardRef(function (props, forwardedRef) {\n    var _a = props.as, RootType = _a === void 0 ? 'div' : _a, ariaLabel = props.ariaLabel, controlledChecked = props.checked, className = props.className, _b = props.defaultChecked, defaultChecked = _b === void 0 ? false : _b, disabled = props.disabled, inlineLabel = props.inlineLabel, label = props.label, \n    // eslint-disable-next-line deprecation/deprecation\n    offAriaLabel = props.offAriaLabel, offText = props.offText, \n    // eslint-disable-next-line deprecation/deprecation\n    onAriaLabel = props.onAriaLabel, onChange = props.onChange, \n    // eslint-disable-next-line deprecation/deprecation\n    onChanged = props.onChanged, onToggleClick = props.onClick, onText = props.onText, role = props.role, styles = props.styles, theme = props.theme;\n    var _c = useControllableValue(controlledChecked, defaultChecked, React.useCallback(function (ev, isChecked) {\n        onChange === null || onChange === void 0 ? void 0 : onChange(ev, isChecked);\n        onChanged === null || onChanged === void 0 ? void 0 : onChanged(isChecked);\n    }, [onChange, onChanged])), checked = _c[0], setChecked = _c[1];\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        disabled: disabled,\n        checked: checked,\n        inlineLabel: inlineLabel,\n        onOffMissing: !onText && !offText,\n    });\n    var badAriaLabel = checked ? onAriaLabel : offAriaLabel;\n    var id = useId(COMPONENT_NAME, props.id);\n    var labelId = \"\".concat(id, \"-label\");\n    var stateTextId = \"\".concat(id, \"-stateText\");\n    var stateText = checked ? onText : offText;\n    var toggleNativeProps = getNativeProps(props, inputProperties, [\n        'defaultChecked',\n    ]);\n    // The following properties take priority for what Narrator should read:\n    // 1. ariaLabel\n    // 2. onAriaLabel (if checked) or offAriaLabel (if not checked)\n    // 3. label, if existent\n    var labelledById = undefined;\n    if (!ariaLabel && !badAriaLabel) {\n        if (label) {\n            labelledById = labelId;\n        }\n        if (stateText && !labelledById) {\n            labelledById = stateTextId;\n        }\n    }\n    var toggleButton = React.useRef(null);\n    useFocusRects(toggleButton);\n    useComponentRef(props, checked, toggleButton);\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: COMPONENT_NAME,\n            props: props,\n            deprecations: {\n                offAriaLabel: undefined,\n                onAriaLabel: 'ariaLabel',\n                onChanged: 'onChange',\n            },\n            mutuallyExclusive: { checked: 'defaultChecked' },\n        });\n    }\n    var onClick = function (ev) {\n        if (!disabled) {\n            setChecked(!checked, ev);\n            if (onToggleClick) {\n                onToggleClick(ev);\n            }\n        }\n    };\n    var slotProps = {\n        root: {\n            className: classNames.root,\n            hidden: toggleNativeProps.hidden,\n        },\n        label: {\n            children: label,\n            className: classNames.label,\n            htmlFor: id,\n            id: labelId,\n        },\n        container: {\n            className: classNames.container,\n        },\n        pill: __assign(__assign({}, toggleNativeProps), { 'aria-disabled': disabled, 'aria-checked': checked, 'aria-label': ariaLabel ? ariaLabel : badAriaLabel, 'aria-labelledby': labelledById, className: classNames.pill, 'data-is-focusable': true, 'data-ktp-target': true, disabled: disabled, id: id, onClick: onClick, ref: toggleButton, role: role ? role : 'switch', type: 'button' }),\n        thumb: {\n            className: classNames.thumb,\n        },\n        stateText: {\n            children: stateText,\n            className: classNames.text,\n            htmlFor: id,\n            id: stateTextId,\n        },\n    };\n    return (React.createElement(RootType, __assign({ ref: forwardedRef }, slotProps.root),\n        label && React.createElement(Label, __assign({}, slotProps.label)),\n        React.createElement(\"div\", __assign({}, slotProps.container),\n            React.createElement(\"button\", __assign({}, slotProps.pill),\n                React.createElement(\"span\", __assign({}, slotProps.thumb))),\n            ((checked && onText) || offText) && React.createElement(Label, __assign({}, slotProps.stateText)))));\n});\nToggleBase.displayName = COMPONENT_NAME + 'Base';\nvar useComponentRef = function (props, isChecked, toggleButtonRef) {\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        get checked() {\n            return !!isChecked;\n        },\n        focus: function () {\n            if (toggleButtonRef.current) {\n                toggleButtonRef.current.focus();\n            }\n        },\n    }); }, [isChecked, toggleButtonRef]);\n};\n//# sourceMappingURL=Toggle.base.js.map","export var RectangleEdge;\n(function (RectangleEdge) {\n    RectangleEdge[RectangleEdge[\"top\"] = 1] = \"top\";\n    RectangleEdge[RectangleEdge[\"bottom\"] = -1] = \"bottom\";\n    RectangleEdge[RectangleEdge[\"left\"] = 2] = \"left\";\n    RectangleEdge[RectangleEdge[\"right\"] = -2] = \"right\";\n})(RectangleEdge || (RectangleEdge = {}));\nexport var Position;\n(function (Position) {\n    Position[Position[\"top\"] = 0] = \"top\";\n    Position[Position[\"bottom\"] = 1] = \"bottom\";\n    Position[Position[\"start\"] = 2] = \"start\";\n    Position[Position[\"end\"] = 3] = \"end\";\n})(Position || (Position = {}));\n//# sourceMappingURL=positioning.types.js.map","import { CalendarDayGridBase } from './CalendarDayGrid.base';\nimport { styles } from './CalendarDayGrid.styles';\nimport { styled } from '../../Utilities';\nexport var CalendarDayGrid = styled(CalendarDayGridBase, styles, undefined, { scope: 'CalendarDayGrid' });\n//# sourceMappingURL=CalendarDayGrid.js.map","import { __assign, __rest } from \"tslib\";\n/** @jsxRuntime classic */\n/** @jsx withSlots */\nimport { withSlots, getSlots } from '@fluentui/foundation-legacy';\nimport { getNativeProps, htmlElementProperties } from '../../Utilities';\nexport var TextView = function (props) {\n    // eslint-disable-next-line eqeqeq\n    if (props.children == null) {\n        return null;\n    }\n    var block = props.block, className = props.className, _a = props.as, RootType = _a === void 0 ? 'span' : _a, variant = props.variant, nowrap = props.nowrap, rest = __rest(props, [\"block\", \"className\", \"as\", \"variant\", \"nowrap\"]);\n    var Slots = getSlots(props, {\n        root: RootType,\n    });\n    return withSlots(Slots.root, __assign({}, getNativeProps(rest, htmlElementProperties)));\n};\n//# sourceMappingURL=Text.view.js.map","/**\n * {@docCategory Panel}\n */\nexport var PanelType;\n(function (PanelType) {\n    /**\n     * Renders the Panel with a `fluid` (full screen) width.\n     * Recommended for use on small screen breakpoints.\n     * - Small (320-479): full screen width, 16px left/right padding\n     * - Medium (480-639): full screen width, 16px left/right padding\n     * - Large (640-1023): full screen width, 32px left/right padding\n     * - XLarge (1024-1365): full screen width, 32px left/right padding\n     * - XXLarge (1366-up): full screen width, 40px left/right padding\n     */\n    PanelType[PanelType[\"smallFluid\"] = 0] = \"smallFluid\";\n    /**\n     * Renders the Panel in fixed-width `small` size, anchored to the far side (right in LTR mode).\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n     * - Medium (480-639): 340px width, 16px left/right padding\n     * - Large (640-1023): 340px width, 32px left/right padding\n     * - XLarge (1024-1365): 340px width, 32px left/right padding\n     * - XXLarge (1366-up): 340px width, 40px left/right padding\n     */\n    PanelType[PanelType[\"smallFixedFar\"] = 1] = \"smallFixedFar\";\n    /**\n     * Renders the Panel in fixed-width `small` size, anchored to the near side (left in LTR mode).\n     * - Small (320-479): 272px width, 16px left/right padding\n     * - Medium (480-639): 272px width, 16px left/right padding\n     * - Large (640-1023): 272px width, 32px left/right padding\n     * - XLarge (1024-1365): 272px width, 32px left/right padding\n     * - XXLarge (1366-up): 272px width, 40px left/right padding\n     */\n    PanelType[PanelType[\"smallFixedNear\"] = 2] = \"smallFixedNear\";\n    /**\n     * Renders the Panel in `medium` size, anchored to the far side (right in LTR mode).\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n     * - Large (640-1023): 592px width, 32px left/right padding\n     * - XLarge (1024-1365): 644px width, 32px left/right padding\n     * - XXLarge (1366-up): 644px width, 40px left/right padding\n     */\n    PanelType[PanelType[\"medium\"] = 3] = \"medium\";\n    /**\n     * Renders the Panel in `large` size, anchored to the far side (right in LTR mode).\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n     * - Medium (480-639):  adapts to `PanelType.smallFixedFar` at this breakpoint\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n     * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\n     * - XXLarge (1366-up): 428px fixed left margin, fluid width, 40px left/right padding\n     */\n    PanelType[PanelType[\"large\"] = 4] = \"large\";\n    /**\n     * Renders the Panel in `large` size, anchored to the far side (right in LTR mode), with a fixed width at\n     * XX-Large breakpoint.\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n     * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\n     * - XXLarge (1366-up): 940px width, 40px left/right padding\n     */\n    PanelType[PanelType[\"largeFixed\"] = 5] = \"largeFixed\";\n    /**\n     * Renders the Panel in `extra large` size, anchored to the far side (right in LTR mode).\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n     * - XLarge (1024-1365): adapts to `PanelType.large` at this breakpoint\n     * - XXLarge (1366-1919): 176px fixed left margin, fluid width, 40px left/right padding\n     * - XXXLarge (1920-up): 176px fixed left margin, fluid width, 40px left/right padding\n     */\n    PanelType[PanelType[\"extraLarge\"] = 6] = \"extraLarge\";\n    /**\n     * Renders the Panel in `custom` size using `customWidth`, anchored to the far side (right in LTR mode).\n     * - Has a fixed width provided by the `customWidth` prop\n     * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\n     * taking up 100% of the viewport width\n     */\n    PanelType[PanelType[\"custom\"] = 7] = \"custom\";\n    /**\n     * Renders the Panel in `custom` size using `customWidth`, anchored to the near side (left in LTR mode).\n     * - Has a fixed width provided by the `customWidth` prop\n     * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\n     * taking up 100% of the viewport width\n     */\n    PanelType[PanelType[\"customNear\"] = 8] = \"customNear\";\n})(PanelType || (PanelType = {}));\n//# sourceMappingURL=Panel.types.js.map","import { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './CommandBarButton.styles';\n/**\n * {@docCategory Button}\n */\nexport var CommandBarButton = /** @class */ (function (_super) {\n    __extends(CommandBarButton, _super);\n    function CommandBarButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CommandBarButton.prototype.render = function () {\n        var _a;\n        var styles = (_a = this.props, _a.styles), theme = _a.theme;\n        return (React.createElement(BaseButton, __assign({}, this.props, { variantClassName: \"ms-Button--commandBar\", styles: getStyles(theme, styles), onRenderDescription: nullRender })));\n    };\n    CommandBarButton = __decorate([\n        customizable('CommandBarButton', ['theme', 'styles'], true)\n    ], CommandBarButton);\n    return CommandBarButton;\n}(React.Component));\n//# sourceMappingURL=CommandBarButton.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport var ImageIcon = function (props) {\n    var className = props.className, imageProps = props.imageProps;\n    var nativeProps = getNativeProps(props, htmlElementProperties, [\n        'aria-label',\n        'aria-labelledby',\n        'title',\n        'aria-describedby',\n    ]);\n    var altText = imageProps.alt || props['aria-label'];\n    var hasName = altText ||\n        props['aria-labelledby'] ||\n        props.title ||\n        imageProps['aria-label'] ||\n        imageProps['aria-labelledby'] ||\n        imageProps.title;\n    // move naming or describing attributes from the container (where they are invalid) to the image\n    var imageNameProps = {\n        'aria-labelledby': props['aria-labelledby'],\n        'aria-describedby': props['aria-describedby'],\n        title: props.title,\n    };\n    var containerProps = hasName\n        ? {}\n        : {\n            'aria-hidden': true,\n        };\n    return (React.createElement(\"div\", __assign({}, containerProps, nativeProps, { className: css(MS_ICON, classNames.root, classNames.image, className) }),\n        React.createElement(Image, __assign({}, imageNameProps, imageProps, { alt: hasName ? altText : '' }))));\n};\n//# sourceMappingURL=ImageIcon.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, KeyCodes, classNamesFunction, css, styled } from '../../../Utilities';\nimport { CommandButton } from '../../../Button';\nimport { Spinner } from '../../../Spinner';\nimport { Announced } from '../../../Announced';\nimport { SuggestionActionType } from './Suggestions.types';\nimport { SuggestionsItem } from './SuggestionsItem';\nimport { getStyles as suggestionsItemStyles } from './SuggestionsItem.styles';\nimport * as stylesImport from './Suggestions.scss';\nvar legacyStyles = stylesImport;\nvar getClassNames = classNamesFunction();\nvar StyledSuggestionsItem = styled(SuggestionsItem, suggestionsItemStyles, undefined, {\n    scope: 'SuggestionItem',\n});\n/**\n * {@docCategory Pickers}\n */\nvar Suggestions = /** @class */ (function (_super) {\n    __extends(Suggestions, _super);\n    function Suggestions(suggestionsProps) {\n        var _this = _super.call(this, suggestionsProps) || this;\n        _this._forceResolveButton = React.createRef();\n        _this._searchForMoreButton = React.createRef();\n        _this._selectedElement = React.createRef();\n        _this._scrollContainer = React.createRef();\n        /**\n         * Returns true if the event was handled, false otherwise\n         */\n        _this.tryHandleKeyDown = function (keyCode, currentSuggestionIndex) {\n            var isEventHandled = false;\n            var newSelectedActionType = null;\n            var currentSelectedAction = _this.state.selectedActionType;\n            var suggestionLength = _this.props.suggestions.length;\n            if (keyCode === KeyCodes.down) {\n                switch (currentSelectedAction) {\n                    case SuggestionActionType.forceResolve:\n                        if (suggestionLength > 0) {\n                            _this._refocusOnSuggestions(keyCode);\n                            newSelectedActionType = SuggestionActionType.none;\n                        }\n                        else if (_this._searchForMoreButton.current) {\n                            newSelectedActionType = SuggestionActionType.searchMore;\n                        }\n                        else {\n                            newSelectedActionType = SuggestionActionType.forceResolve;\n                        }\n                        break;\n                    case SuggestionActionType.searchMore:\n                        if (_this._forceResolveButton.current) {\n                            newSelectedActionType = SuggestionActionType.forceResolve;\n                        }\n                        else if (suggestionLength > 0) {\n                            _this._refocusOnSuggestions(keyCode);\n                            newSelectedActionType = SuggestionActionType.none;\n                        }\n                        else {\n                            newSelectedActionType = SuggestionActionType.searchMore;\n                        }\n                        break;\n                    case SuggestionActionType.none:\n                        if (currentSuggestionIndex === -1 && _this._forceResolveButton.current) {\n                            newSelectedActionType = SuggestionActionType.forceResolve;\n                        }\n                        break;\n                }\n            }\n            else if (keyCode === KeyCodes.up) {\n                switch (currentSelectedAction) {\n                    case SuggestionActionType.forceResolve:\n                        if (_this._searchForMoreButton.current) {\n                            newSelectedActionType = SuggestionActionType.searchMore;\n                        }\n                        else if (suggestionLength > 0) {\n                            _this._refocusOnSuggestions(keyCode);\n                            newSelectedActionType = SuggestionActionType.none;\n                        }\n                        break;\n                    case SuggestionActionType.searchMore:\n                        if (suggestionLength > 0) {\n                            _this._refocusOnSuggestions(keyCode);\n                            newSelectedActionType = SuggestionActionType.none;\n                        }\n                        else if (_this._forceResolveButton.current) {\n                            newSelectedActionType = SuggestionActionType.forceResolve;\n                        }\n                        break;\n                    case SuggestionActionType.none:\n                        if (currentSuggestionIndex === -1 && _this._searchForMoreButton.current) {\n                            newSelectedActionType = SuggestionActionType.searchMore;\n                        }\n                        break;\n                }\n            }\n            if (newSelectedActionType !== null) {\n                _this.setState({ selectedActionType: newSelectedActionType });\n                isEventHandled = true;\n            }\n            return isEventHandled;\n        };\n        _this._getAlertText = function () {\n            var _a = _this.props, isLoading = _a.isLoading, isSearching = _a.isSearching, suggestions = _a.suggestions, suggestionsAvailableAlertText = _a.suggestionsAvailableAlertText, noResultsFoundText = _a.noResultsFoundText, isExtendedLoading = _a.isExtendedLoading, loadingText = _a.loadingText;\n            if (!isLoading && !isSearching) {\n                if (suggestions.length > 0) {\n                    return suggestionsAvailableAlertText || '';\n                }\n                if (noResultsFoundText) {\n                    return noResultsFoundText;\n                }\n            }\n            else if (isLoading && isExtendedLoading) {\n                return loadingText || '';\n            }\n            return '';\n        };\n        _this._getMoreResults = function () {\n            if (_this.props.onGetMoreResults) {\n                _this.props.onGetMoreResults();\n                // Reset selected action type as it will be of type SuggestionActionType.none after more results are gotten\n                _this.setState({ selectedActionType: SuggestionActionType.none });\n            }\n        };\n        _this._forceResolve = function () {\n            if (_this.props.createGenericItem) {\n                _this.props.createGenericItem();\n            }\n        };\n        _this._shouldShowForceResolve = function () {\n            return _this.props.showForceResolve ? _this.props.showForceResolve() : false;\n        };\n        _this._onClickTypedSuggestionsItem = function (item, index) {\n            return function (ev) {\n                _this.props.onSuggestionClick(ev, item, index);\n            };\n        };\n        _this._refocusOnSuggestions = function (keyCode) {\n            if (typeof _this.props.refocusSuggestions === 'function') {\n                _this.props.refocusSuggestions(keyCode);\n            }\n        };\n        _this._onRemoveTypedSuggestionsItem = function (item, index) {\n            return function (ev) {\n                var onSuggestionRemove = _this.props.onSuggestionRemove;\n                onSuggestionRemove(ev, item, index);\n                ev.stopPropagation();\n            };\n        };\n        initializeComponentRef(_this);\n        _this.state = {\n            selectedActionType: SuggestionActionType.none,\n        };\n        return _this;\n    }\n    Suggestions.prototype.componentDidMount = function () {\n        this.scrollSelected();\n        this.activeSelectedElement = this._selectedElement ? this._selectedElement.current : null;\n    };\n    Suggestions.prototype.componentDidUpdate = function () {\n        // Only scroll to selected element if the selected element has changed. Otherwise do nothing.\n        // This prevents some odd behavior where scrolling the active element out of view and clicking on a selected element\n        // will trigger a focus event and not give the clicked element the click.\n        if (this._selectedElement.current && this.activeSelectedElement !== this._selectedElement.current) {\n            this.scrollSelected();\n            this.activeSelectedElement = this._selectedElement.current;\n        }\n    };\n    Suggestions.prototype.render = function () {\n        var _a, _b;\n        var _this = this;\n        var _c = this.props, forceResolveText = _c.forceResolveText, mostRecentlyUsedHeaderText = _c.mostRecentlyUsedHeaderText, searchForMoreIcon = _c.searchForMoreIcon, searchForMoreText = _c.searchForMoreText, className = _c.className, moreSuggestionsAvailable = _c.moreSuggestionsAvailable, noResultsFoundText = _c.noResultsFoundText, suggestions = _c.suggestions, isLoading = _c.isLoading, isSearching = _c.isSearching, loadingText = _c.loadingText, onRenderNoResultFound = _c.onRenderNoResultFound, searchingText = _c.searchingText, isMostRecentlyUsedVisible = _c.isMostRecentlyUsedVisible, resultsMaximumNumber = _c.resultsMaximumNumber, resultsFooterFull = _c.resultsFooterFull, resultsFooter = _c.resultsFooter, _d = _c.isResultsFooterVisible, isResultsFooterVisible = _d === void 0 ? true : _d, suggestionsHeaderText = _c.suggestionsHeaderText, suggestionsClassName = _c.suggestionsClassName, theme = _c.theme, styles = _c.styles, suggestionsListId = _c.suggestionsListId, suggestionsContainerAriaLabel = _c.suggestionsContainerAriaLabel;\n        // TODO\n        // Clean this up by leaving only the first part after removing support for SASS.\n        // Currently we can not remove the SASS styles from Suggestions class because it\n        // might be used by consumers separately from pickers extending from BasePicker\n        // and have not used the new 'styles' prop. Because it's expecting a type parameter,\n        // we can not use the 'styled' function without adding some helpers which can break\n        // downstream consumers who did not use the new helpers.\n        // We check for 'styles' prop which is going to be injected by the 'styled' HOC\n        // in BasePicker when the typed Suggestions class is ready to be rendered. If the check\n        // passes we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\n        // then we just use the old SASS styles instead.\n        this._classNames = styles\n            ? getClassNames(styles, {\n                theme: theme,\n                className: className,\n                suggestionsClassName: suggestionsClassName,\n                forceResolveButtonSelected: this.state.selectedActionType === SuggestionActionType.forceResolve,\n                searchForMoreButtonSelected: this.state.selectedActionType === SuggestionActionType.searchMore,\n            })\n            : {\n                root: css('ms-Suggestions', className, legacyStyles.root),\n                title: css('ms-Suggestions-title', legacyStyles.suggestionsTitle),\n                searchForMoreButton: css('ms-SearchMore-button', legacyStyles.actionButton, (_a = {},\n                    _a['is-selected ' + legacyStyles.buttonSelected] = this.state.selectedActionType === SuggestionActionType.searchMore,\n                    _a)),\n                forceResolveButton: css('ms-forceResolve-button', legacyStyles.actionButton, (_b = {},\n                    _b['is-selected ' + legacyStyles.buttonSelected] = this.state.selectedActionType === SuggestionActionType.forceResolve,\n                    _b)),\n                suggestionsAvailable: css('ms-Suggestions-suggestionsAvailable', legacyStyles.suggestionsAvailable),\n                suggestionsContainer: css('ms-Suggestions-container', legacyStyles.suggestionsContainer, suggestionsClassName),\n                noSuggestions: css('ms-Suggestions-none', legacyStyles.suggestionsNone),\n            };\n        var spinnerStyles = this._classNames.subComponentStyles\n            ? this._classNames.subComponentStyles.spinner\n            : undefined;\n        // TODO: cleanup after refactor of pickers to composition pattern and remove SASS support.\n        var spinnerClassNameOrStyles = styles\n            ? { styles: spinnerStyles }\n            : {\n                className: css('ms-Suggestions-spinner', legacyStyles.suggestionsSpinner),\n            };\n        var noResults = function () {\n            var defaultRender = function () {\n                return React.createElement(\"div\", { className: _this._classNames.noSuggestions }, noResultsFoundText);\n            };\n            return (\n            // This ID can be used by the parent to set aria-activedescendant to this\n            React.createElement(\"div\", { id: \"sug-noResultsFound\", role: \"option\" }, onRenderNoResultFound ? onRenderNoResultFound(undefined, defaultRender) : defaultRender()));\n        };\n        // MostRecently Used text should supercede the header text if it's there and available.\n        var headerText = suggestionsHeaderText;\n        if (isMostRecentlyUsedVisible && mostRecentlyUsedHeaderText) {\n            headerText = mostRecentlyUsedHeaderText;\n        }\n        var footerTitle = undefined;\n        if (isResultsFooterVisible) {\n            footerTitle = suggestions.length >= resultsMaximumNumber ? resultsFooterFull : resultsFooter;\n        }\n        var hasNoSuggestions = (!suggestions || !suggestions.length) && !isLoading;\n        var forceResolveId = this.state.selectedActionType === SuggestionActionType.forceResolve ? 'sug-selectedAction' : undefined;\n        var searchForMoreId = this.state.selectedActionType === SuggestionActionType.searchMore ? 'sug-selectedAction' : undefined;\n        return (React.createElement(\"div\", { className: this._classNames.root, \"aria-label\": suggestionsContainerAriaLabel || headerText, id: suggestionsListId, role: \"listbox\" },\n            React.createElement(Announced, { message: this._getAlertText(), \"aria-live\": \"polite\" }),\n            headerText ? React.createElement(\"div\", { className: this._classNames.title }, headerText) : null,\n            forceResolveText && this._shouldShowForceResolve() && (React.createElement(CommandButton, { componentRef: this._forceResolveButton, className: this._classNames.forceResolveButton, id: forceResolveId, onClick: this._forceResolve, \"data-automationid\": 'sug-forceResolve' }, forceResolveText)),\n            isLoading && React.createElement(Spinner, __assign({}, spinnerClassNameOrStyles, { ariaLabel: loadingText, label: loadingText })),\n            hasNoSuggestions ? noResults() : this._renderSuggestions(),\n            searchForMoreText && moreSuggestionsAvailable && (React.createElement(CommandButton, { componentRef: this._searchForMoreButton, className: this._classNames.searchForMoreButton, iconProps: searchForMoreIcon || { iconName: 'Search' }, id: searchForMoreId, onClick: this._getMoreResults, \"data-automationid\": 'sug-searchForMore', role: 'option' }, searchForMoreText)),\n            isSearching ? React.createElement(Spinner, __assign({}, spinnerClassNameOrStyles, { ariaLabel: searchingText, label: searchingText })) : null,\n            footerTitle && !moreSuggestionsAvailable && !isMostRecentlyUsedVisible && !isSearching ? (React.createElement(\"div\", { className: this._classNames.title }, footerTitle(this.props))) : null));\n    };\n    Suggestions.prototype.hasSuggestedAction = function () {\n        return !!this._searchForMoreButton.current || !!this._forceResolveButton.current;\n    };\n    Suggestions.prototype.hasSuggestedActionSelected = function () {\n        return this.state.selectedActionType !== SuggestionActionType.none;\n    };\n    Suggestions.prototype.executeSelectedAction = function () {\n        switch (this.state.selectedActionType) {\n            case SuggestionActionType.forceResolve:\n                this._forceResolve();\n                break;\n            case SuggestionActionType.searchMore:\n                this._getMoreResults();\n                break;\n        }\n    };\n    Suggestions.prototype.focusAboveSuggestions = function () {\n        if (this._forceResolveButton.current) {\n            this.setState({ selectedActionType: SuggestionActionType.forceResolve });\n        }\n        else if (this._searchForMoreButton.current) {\n            this.setState({ selectedActionType: SuggestionActionType.searchMore });\n        }\n    };\n    Suggestions.prototype.focusBelowSuggestions = function () {\n        if (this._searchForMoreButton.current) {\n            this.setState({ selectedActionType: SuggestionActionType.searchMore });\n        }\n        else if (this._forceResolveButton.current) {\n            this.setState({ selectedActionType: SuggestionActionType.forceResolve });\n        }\n    };\n    Suggestions.prototype.focusSearchForMoreButton = function () {\n        if (this._searchForMoreButton.current) {\n            this._searchForMoreButton.current.focus();\n        }\n    };\n    Suggestions.prototype.scrollSelected = function () {\n        if (this._selectedElement.current &&\n            this._scrollContainer.current &&\n            this._scrollContainer.current.scrollTo !== undefined) {\n            var _a = this._selectedElement.current, offsetHeight = _a.offsetHeight, offsetTop = _a.offsetTop;\n            var _b = this._scrollContainer.current, parentOffsetHeight = _b.offsetHeight, scrollTop = _b.scrollTop;\n            var isAbove = offsetTop < scrollTop;\n            var isBelow = offsetTop + offsetHeight > scrollTop + parentOffsetHeight;\n            if (isAbove) {\n                this._scrollContainer.current.scrollTo(0, offsetTop);\n            }\n            else if (isBelow) {\n                this._scrollContainer.current.scrollTo(0, offsetTop - parentOffsetHeight + offsetHeight);\n            }\n        }\n    };\n    Suggestions.prototype._renderSuggestions = function () {\n        var _this = this;\n        var _a = this.props, onRenderSuggestion = _a.onRenderSuggestion, removeSuggestionAriaLabel = _a.removeSuggestionAriaLabel, suggestionsItemClassName = _a.suggestionsItemClassName, resultsMaximumNumber = _a.resultsMaximumNumber, showRemoveButtons = _a.showRemoveButtons, removeButtonIconProps = _a.removeButtonIconProps;\n        var suggestions = this.props.suggestions;\n        var StyledTypedSuggestionsItem = StyledSuggestionsItem;\n        var selectedIndex = -1;\n        suggestions.some(function (element, index) {\n            if (element.selected) {\n                selectedIndex = index;\n                return true;\n            }\n            return false;\n        });\n        if (resultsMaximumNumber) {\n            suggestions =\n                selectedIndex >= resultsMaximumNumber\n                    ? suggestions.slice(selectedIndex - resultsMaximumNumber + 1, selectedIndex + 1)\n                    : suggestions.slice(0, resultsMaximumNumber);\n        }\n        if (suggestions.length === 0) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: this._classNames.suggestionsContainer, ref: this._scrollContainer, role: \"presentation\" }, suggestions.map(function (suggestion, index) { return (React.createElement(\"div\", { ref: suggestion.selected ? _this._selectedElement : undefined, key: suggestion.item.key ? suggestion.item.key : index, role: \"presentation\" },\n            React.createElement(StyledTypedSuggestionsItem, { suggestionModel: suggestion, RenderSuggestion: onRenderSuggestion, onClick: _this._onClickTypedSuggestionsItem(suggestion.item, index), className: suggestionsItemClassName, showRemoveButton: showRemoveButtons, removeButtonAriaLabel: removeSuggestionAriaLabel, onRemoveItem: _this._onRemoveTypedSuggestionsItem(suggestion.item, index), id: 'sug-' + index, removeButtonIconProps: removeButtonIconProps }))); })));\n    };\n    return Suggestions;\n}(React.Component));\nexport { Suggestions };\n//# sourceMappingURL=Suggestions.js.map","import { styled } from '../../../Utilities';\nimport { getStyles } from './ShimmerCircle.styles';\nimport { ShimmerCircleBase } from './ShimmerCircle.base';\nexport var ShimmerCircle = styled(ShimmerCircleBase, getStyles, undefined, { scope: 'ShimmerCircle' });\n//# sourceMappingURL=ShimmerCircle.js.map","export var KTP_PREFIX = 'ktp';\nexport var KTP_SEPARATOR = '-';\nexport var KTP_FULL_PREFIX = KTP_PREFIX + KTP_SEPARATOR;\nexport var DATAKTP_TARGET = 'data-ktp-target';\nexport var DATAKTP_EXECUTE_TARGET = 'data-ktp-execute-target';\nexport var DATAKTP_ARIA_TARGET = 'data-ktp-aria-target';\nexport var KTP_LAYER_ID = 'ktp-layer-id';\nexport var KTP_ARIA_SEPARATOR = ', ';\n// Events\nexport var KeytipEvents;\n(function (KeytipEvents) {\n    KeytipEvents.KEYTIP_ADDED = 'keytipAdded';\n    KeytipEvents.KEYTIP_REMOVED = 'keytipRemoved';\n    KeytipEvents.KEYTIP_UPDATED = 'keytipUpdated';\n    KeytipEvents.PERSISTED_KEYTIP_ADDED = 'persistedKeytipAdded';\n    KeytipEvents.PERSISTED_KEYTIP_REMOVED = 'persistedKeytipRemoved';\n    KeytipEvents.PERSISTED_KEYTIP_EXECUTE = 'persistedKeytipExecute';\n    KeytipEvents.ENTER_KEYTIP_MODE = 'enterKeytipMode';\n    KeytipEvents.EXIT_KEYTIP_MODE = 'exitKeytipMode';\n})(KeytipEvents || (KeytipEvents = {}));\n//# sourceMappingURL=KeytipConstants.js.map","import { __assign } from \"tslib\";\nimport { getGlobalClassNames } from '../../Styling';\nimport { GlobalClassNames as StackItemGlobalClassNames } from './StackItem/StackItem.styles';\nimport { parseGap, parsePadding } from './StackUtils';\nvar nameMap = {\n    start: 'flex-start',\n    end: 'flex-end',\n};\nexport var GlobalClassNames = {\n    root: 'ms-Stack',\n    inner: 'ms-Stack-inner',\n    child: 'ms-Stack-child',\n};\nexport var styles = function (props, theme, tokens) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n    var className = props.className, disableShrink = props.disableShrink, enableScopedSelectors = props.enableScopedSelectors, grow = props.grow, horizontal = props.horizontal, horizontalAlign = props.horizontalAlign, reversed = props.reversed, verticalAlign = props.verticalAlign, verticalFill = props.verticalFill, wrap = props.wrap;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    /* eslint-disable deprecation/deprecation */\n    var childrenGap = tokens && tokens.childrenGap ? tokens.childrenGap : props.gap;\n    var maxHeight = tokens && tokens.maxHeight ? tokens.maxHeight : props.maxHeight;\n    var maxWidth = tokens && tokens.maxWidth ? tokens.maxWidth : props.maxWidth;\n    var padding = tokens && tokens.padding ? tokens.padding : props.padding;\n    /* eslint-enable deprecation/deprecation */\n    var _p = parseGap(childrenGap, theme), rowGap = _p.rowGap, columnGap = _p.columnGap;\n    var horizontalMargin = \"\".concat(-0.5 * columnGap.value).concat(columnGap.unit);\n    var verticalMargin = \"\".concat(-0.5 * rowGap.value).concat(rowGap.unit);\n    // styles to be applied to all direct children regardless of wrap or direction\n    var childStyles = {\n        textOverflow: 'ellipsis',\n    };\n    var childSelector = '> ' + (enableScopedSelectors ? '.' + GlobalClassNames.child : '*');\n    var disableShrinkStyles = (_a = {},\n        // flexShrink styles are applied by the StackItem\n        _a[\"\".concat(childSelector, \":not(.\").concat(StackItemGlobalClassNames.root, \")\")] = {\n            flexShrink: 0,\n        },\n        _a);\n    if (wrap) {\n        return {\n            root: [\n                classNames.root,\n                {\n                    flexWrap: 'wrap',\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight,\n                    width: 'auto',\n                    overflow: 'visible',\n                    height: '100%',\n                },\n                horizontalAlign && (_b = {},\n                    _b[horizontal ? 'justifyContent' : 'alignItems'] = nameMap[horizontalAlign] || horizontalAlign,\n                    _b),\n                verticalAlign && (_c = {},\n                    _c[horizontal ? 'alignItems' : 'justifyContent'] = nameMap[verticalAlign] || verticalAlign,\n                    _c),\n                className,\n                {\n                    // not allowed to be overridden by className\n                    // since this is necessary in order to prevent collapsing margins\n                    display: 'flex',\n                },\n                horizontal && {\n                    height: verticalFill ? '100%' : 'auto',\n                },\n            ],\n            inner: [\n                classNames.inner,\n                (_d = {\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        marginLeft: horizontalMargin,\n                        marginRight: horizontalMargin,\n                        marginTop: verticalMargin,\n                        marginBottom: verticalMargin,\n                        overflow: 'visible',\n                        boxSizing: 'border-box',\n                        padding: parsePadding(padding, theme),\n                        // avoid unnecessary calc() calls if horizontal gap is 0\n                        width: columnGap.value === 0 ? '100%' : \"calc(100% + \".concat(columnGap.value).concat(columnGap.unit, \")\"),\n                        maxWidth: '100vw'\n                    },\n                    _d[childSelector] = __assign({ margin: \"\".concat(0.5 * rowGap.value).concat(rowGap.unit, \" \").concat(0.5 * columnGap.value).concat(columnGap.unit) }, childStyles),\n                    _d),\n                disableShrink && disableShrinkStyles,\n                horizontalAlign && (_e = {},\n                    _e[horizontal ? 'justifyContent' : 'alignItems'] = nameMap[horizontalAlign] || horizontalAlign,\n                    _e),\n                verticalAlign && (_f = {},\n                    _f[horizontal ? 'alignItems' : 'justifyContent'] = nameMap[verticalAlign] || verticalAlign,\n                    _f),\n                horizontal && (_g = {\n                        flexDirection: reversed ? 'row-reverse' : 'row',\n                        // avoid unnecessary calc() calls if vertical gap is 0\n                        height: rowGap.value === 0 ? '100%' : \"calc(100% + \".concat(rowGap.value).concat(rowGap.unit, \")\")\n                    },\n                    _g[childSelector] = {\n                        maxWidth: columnGap.value === 0 ? '100%' : \"calc(100% - \".concat(columnGap.value).concat(columnGap.unit, \")\"),\n                    },\n                    _g),\n                !horizontal && (_h = {\n                        flexDirection: reversed ? 'column-reverse' : 'column',\n                        height: \"calc(100% + \".concat(rowGap.value).concat(rowGap.unit, \")\")\n                    },\n                    _h[childSelector] = {\n                        maxHeight: rowGap.value === 0 ? '100%' : \"calc(100% - \".concat(rowGap.value).concat(rowGap.unit, \")\"),\n                    },\n                    _h),\n            ],\n        };\n    }\n    return {\n        root: [\n            classNames.root,\n            (_j = {\n                    display: 'flex',\n                    flexDirection: horizontal ? (reversed ? 'row-reverse' : 'row') : reversed ? 'column-reverse' : 'column',\n                    flexWrap: 'nowrap',\n                    width: 'auto',\n                    height: verticalFill ? '100%' : 'auto',\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight,\n                    padding: parsePadding(padding, theme),\n                    boxSizing: 'border-box'\n                },\n                _j[childSelector] = childStyles,\n                _j),\n            disableShrink && disableShrinkStyles,\n            grow && {\n                flexGrow: grow === true ? 1 : grow,\n            },\n            horizontalAlign && (_k = {},\n                _k[horizontal ? 'justifyContent' : 'alignItems'] = nameMap[horizontalAlign] || horizontalAlign,\n                _k),\n            verticalAlign && (_l = {},\n                _l[horizontal ? 'alignItems' : 'justifyContent'] = nameMap[verticalAlign] || verticalAlign,\n                _l),\n            horizontal &&\n                columnGap.value > 0 && (_m = {},\n                // apply gap margin to every direct child except the first direct child if the direction is not reversed,\n                // and the last direct one if it is\n                _m[reversed ? \"\".concat(childSelector, \":not(:last-child)\") : \"\".concat(childSelector, \":not(:first-child)\")] = {\n                    marginLeft: \"\".concat(columnGap.value).concat(columnGap.unit),\n                },\n                _m),\n            !horizontal &&\n                rowGap.value > 0 && (_o = {},\n                // apply gap margin to every direct child except the first direct child if the direction is not reversed,\n                // and the last direct one if it is\n                _o[reversed ? \"\".concat(childSelector, \":not(:last-child)\") : \"\".concat(childSelector, \":not(:first-child)\")] = {\n                    marginTop: \"\".concat(rowGap.value).concat(rowGap.unit),\n                },\n                _o),\n            className,\n        ],\n        // TODO: this cast may be hiding some potential issues with styling and name\n        //        lookups and should be removed\n    };\n};\n//# sourceMappingURL=Stack.styles.js.map","import * as React from 'react';\nexport var MenuContext = React.createContext({});\nexport var useMenuContext = function () {\n    return React.useContext(MenuContext);\n};\n//# sourceMappingURL=MenuContext.js.map","/**\n * {@docCategory ResizeGroup}\n */\nexport var ResizeGroupDirection;\n(function (ResizeGroupDirection) {\n    ResizeGroupDirection[ResizeGroupDirection[\"horizontal\"] = 0] = \"horizontal\";\n    ResizeGroupDirection[ResizeGroupDirection[\"vertical\"] = 1] = \"vertical\";\n})(ResizeGroupDirection || (ResizeGroupDirection = {}));\n//# sourceMappingURL=ResizeGroup.types.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nvar GlobalClassNames = {\n    root: 'ms-ChoiceField',\n    choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n    input: 'ms-ChoiceField-input',\n    field: 'ms-ChoiceField-field',\n    innerField: 'ms-ChoiceField-innerField',\n    imageWrapper: 'ms-ChoiceField-imageWrapper',\n    iconWrapper: 'ms-ChoiceField-iconWrapper',\n    labelWrapper: 'ms-ChoiceField-labelWrapper',\n    checked: 'is-checked',\n};\nvar labelWrapperLineHeight = 15;\nvar labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nvar iconSize = 32;\nvar choiceFieldSize = 20;\nvar choiceFieldTransitionDuration = '200ms';\nvar choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nvar radioButtonSpacing = 3;\nvar radioButtonInnerSize = 5;\nfunction getChoiceGroupFocusStyle(focusBorderColor, hasIconOrImage) {\n    var _a, _b;\n    return [\n        'is-inFocus',\n        {\n            selectors: (_a = {},\n                _a[\".\".concat(IsFocusVisibleClassName, \" &, :host(.\").concat(IsFocusVisibleClassName, \") &\")] = {\n                    position: 'relative',\n                    outline: 'transparent',\n                    selectors: {\n                        '::-moz-focus-inner': {\n                            border: 0,\n                        },\n                        ':after': {\n                            content: '\"\"',\n                            top: -2,\n                            right: -2,\n                            bottom: -2,\n                            left: -2,\n                            pointerEvents: 'none',\n                            border: \"1px solid \".concat(focusBorderColor),\n                            position: 'absolute',\n                            selectors: (_b = {},\n                                _b[HighContrastSelector] = {\n                                    borderColor: 'WindowText',\n                                    borderWidth: hasIconOrImage ? 1 : 2,\n                                },\n                                _b),\n                        },\n                    },\n                },\n                _a),\n        },\n    ];\n}\nfunction getImageWrapperStyle(isSelectedImageWrapper, className, checked) {\n    return [\n        className,\n        {\n            paddingBottom: 2,\n            transitionProperty: 'opacity',\n            transitionDuration: choiceFieldTransitionDuration,\n            transitionTimingFunction: 'ease',\n            selectors: {\n                '.ms-Image': {\n                    display: 'inline-block',\n                    borderStyle: 'none',\n                },\n            },\n        },\n        (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [\n            'is-hidden',\n            {\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                width: '100%',\n                height: '100%',\n                overflow: 'hidden',\n                opacity: 0,\n            },\n        ],\n    ];\n}\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e;\n    var theme = props.theme, hasIcon = props.hasIcon, hasImage = props.hasImage, checked = props.checked, disabled = props.disabled, imageIsLarge = props.imageIsLarge, focused = props.focused, imageSize = props.imageSize;\n    var palette = theme.palette, semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    // Tokens\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n    var circleBorderColor = palette.neutralPrimary;\n    var circleHoveredBorderColor = semanticColors.inputBorderHovered;\n    var circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n    var circleCheckedHoveredBorderColor = palette.themeDark;\n    var circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n    var circleBackgroundColor = semanticColors.bodyBackground;\n    var dotUncheckedHoveredColor = palette.neutralSecondary;\n    var dotCheckedColor = semanticColors.inputBackgroundChecked;\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n    var dotCheckedHoveredColor = palette.themeDark;\n    var dotDisabledColor = semanticColors.disabledBodySubtext;\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n    var labelHoverFocusColor = palette.neutralDark;\n    var focusBorderColor = semanticColors.focusBorder;\n    var iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n    var iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n    var iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n    var iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n    var fieldHoverOrFocusProperties = {\n        selectors: {\n            '.ms-ChoiceFieldLabel': {\n                color: labelHoverFocusColor,\n            },\n            ':before': {\n                borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n            },\n            ':after': [\n                !hasIcon &&\n                    !hasImage &&\n                    !checked && {\n                    content: '\"\"',\n                    transitionProperty: 'background-color',\n                    left: 5,\n                    top: 5,\n                    width: 10,\n                    height: 10,\n                    backgroundColor: dotUncheckedHoveredColor,\n                },\n                checked && {\n                    borderColor: dotCheckedHoveredColor,\n                    background: dotCheckedHoveredColor,\n                },\n            ],\n        },\n    };\n    var enabledFieldWithImageHoverOrFocusProperties = {\n        borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n        selectors: {\n            ':before': {\n                opacity: 1,\n                borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n            },\n        },\n    };\n    var circleAreaProperties = [\n        {\n            content: '\"\"',\n            display: 'inline-block',\n            backgroundColor: circleBackgroundColor,\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: circleBorderColor,\n            width: choiceFieldSize,\n            height: choiceFieldSize,\n            fontWeight: 'normal',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            boxSizing: 'border-box',\n            transitionProperty: 'border-color',\n            transitionDuration: choiceFieldTransitionDuration,\n            transitionTimingFunction: choiceFieldTransitionTiming,\n            borderRadius: '50%',\n        },\n        disabled && {\n            borderColor: circleDisabledBorderColor,\n            selectors: (_a = {},\n                _a[HighContrastSelector] = __assign({ borderColor: 'GrayText', background: 'Window' }, getHighContrastNoAdjustStyle()),\n                _a),\n        },\n        checked && {\n            borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n            selectors: (_b = {},\n                _b[HighContrastSelector] = {\n                    borderColor: 'Highlight',\n                    background: 'Window',\n                    forcedColorAdjust: 'none',\n                },\n                _b),\n        },\n        (hasIcon || hasImage) && {\n            top: radioButtonSpacing,\n            right: radioButtonSpacing,\n            left: 'auto',\n            opacity: checked ? 1 : 0,\n        },\n    ];\n    var dotAreaProperties = [\n        {\n            content: '\"\"',\n            width: 0,\n            height: 0,\n            borderRadius: '50%',\n            position: 'absolute',\n            left: choiceFieldSize / 2,\n            right: 0,\n            transitionProperty: 'border-width',\n            transitionDuration: choiceFieldTransitionDuration,\n            transitionTimingFunction: choiceFieldTransitionTiming,\n            boxSizing: 'border-box',\n        },\n        checked && {\n            borderWidth: 5,\n            borderStyle: 'solid',\n            borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n            background: dotCheckedColor,\n            left: 5,\n            top: 5,\n            width: 10,\n            height: 10,\n            selectors: (_c = {},\n                _c[HighContrastSelector] = {\n                    borderColor: 'Highlight',\n                    forcedColorAdjust: 'none',\n                },\n                _c),\n        },\n        checked &&\n            (hasIcon || hasImage) && {\n            top: radioButtonSpacing + radioButtonInnerSize,\n            right: radioButtonSpacing + radioButtonInnerSize,\n            left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n        },\n    ];\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                display: 'flex',\n                alignItems: 'center',\n                boxSizing: 'border-box',\n                color: semanticColors.bodyText,\n                minHeight: 26,\n                border: 'none',\n                position: 'relative',\n                marginTop: 8,\n                selectors: {\n                    '.ms-ChoiceFieldLabel': {\n                        display: 'inline-block',\n                    },\n                },\n            },\n            !hasIcon &&\n                !hasImage && {\n                selectors: {\n                    '.ms-ChoiceFieldLabel': {\n                        paddingLeft: '26px',\n                    },\n                },\n            },\n            hasImage && 'ms-ChoiceField--image',\n            hasIcon && 'ms-ChoiceField--icon',\n            (hasIcon || hasImage) && {\n                display: 'inline-flex',\n                fontSize: 0,\n                margin: '0 4px 4px 0',\n                paddingLeft: 0,\n                backgroundColor: iconOrImageChoiceBackgroundColor,\n                height: '100%',\n            },\n        ],\n        choiceFieldWrapper: [\n            classNames.choiceFieldWrapper,\n            focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage),\n        ],\n        // The hidden input\n        input: [\n            classNames.input,\n            {\n                position: 'absolute',\n                opacity: 0,\n                top: 0,\n                right: 0,\n                width: '100%',\n                height: '100%',\n                margin: 0,\n            },\n            disabled && 'is-disabled',\n        ],\n        field: [\n            classNames.field,\n            checked && classNames.checked,\n            {\n                display: 'inline-block',\n                cursor: 'pointer',\n                marginTop: 0,\n                position: 'relative',\n                verticalAlign: 'top',\n                userSelect: 'none',\n                minHeight: 20,\n                selectors: {\n                    ':hover': !disabled && fieldHoverOrFocusProperties,\n                    ':focus': !disabled && fieldHoverOrFocusProperties,\n                    // The circle\n                    ':before': circleAreaProperties,\n                    // The dot\n                    ':after': dotAreaProperties,\n                },\n            },\n            hasIcon && 'ms-ChoiceField--icon',\n            hasImage && 'ms-ChoiceField-field--image',\n            (hasIcon || hasImage) && {\n                boxSizing: 'content-box',\n                cursor: 'pointer',\n                paddingTop: 22,\n                margin: 0,\n                textAlign: 'center',\n                transitionProperty: 'all',\n                transitionDuration: choiceFieldTransitionDuration,\n                transitionTimingFunction: 'ease',\n                border: '1px solid transparent',\n                justifyContent: 'center',\n                alignItems: 'center',\n                display: 'flex',\n                flexDirection: 'column',\n            },\n            checked && {\n                borderColor: iconOrImageChoiceBorderCheckedColor,\n            },\n            (hasIcon || hasImage) &&\n                !disabled && {\n                selectors: {\n                    ':hover': enabledFieldWithImageHoverOrFocusProperties,\n                    ':focus': enabledFieldWithImageHoverOrFocusProperties,\n                },\n            },\n            disabled && {\n                cursor: 'default',\n                selectors: {\n                    '.ms-ChoiceFieldLabel': {\n                        color: semanticColors.disabledBodyText,\n                        selectors: (_d = {},\n                            _d[HighContrastSelector] = __assign({ color: 'GrayText' }, getHighContrastNoAdjustStyle()),\n                            _d),\n                    },\n                },\n            },\n            checked &&\n                disabled && {\n                borderColor: iconOrImageChoiceBackgroundColor,\n            },\n        ],\n        innerField: [\n            classNames.innerField,\n            hasImage && {\n                // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n                height: imageSize.height,\n                width: imageSize.width,\n            },\n            (hasIcon || hasImage) && {\n                position: 'relative',\n                display: 'inline-block',\n                paddingLeft: 30,\n                paddingRight: 30,\n            },\n            (hasIcon || hasImage) &&\n                imageIsLarge && {\n                paddingLeft: 24,\n                paddingRight: 24,\n            },\n            (hasIcon || hasImage) &&\n                disabled && {\n                opacity: 0.25,\n                selectors: (_e = {},\n                    _e[HighContrastSelector] = {\n                        color: 'GrayText',\n                        opacity: 1,\n                    },\n                    _e),\n            },\n        ],\n        imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n        selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n        iconWrapper: [\n            classNames.iconWrapper,\n            {\n                fontSize: iconSize,\n                lineHeight: iconSize,\n                height: iconSize,\n            },\n        ],\n        labelWrapper: [\n            classNames.labelWrapper,\n            fonts.medium,\n            (hasIcon || hasImage) && {\n                display: 'block',\n                position: 'relative',\n                margin: '4px 8px 2px 8px',\n                height: labelWrapperHeight,\n                lineHeight: labelWrapperLineHeight,\n                // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n                maxWidth: imageSize.width * 2,\n                overflow: 'hidden',\n                whiteSpace: 'pre-wrap',\n            },\n        ],\n    };\n};\n//# sourceMappingURL=ChoiceGroupOption.styles.js.map","import { getGlobalClassNames } from '../../../Styling';\nexport var GlobalClassNames = {\n    root: 'ms-StackItem',\n};\nvar alignMap = {\n    start: 'flex-start',\n    end: 'flex-end',\n};\nexport var StackItemStyles = function (props, theme, tokens) {\n    var grow = props.grow, shrink = props.shrink, disableShrink = props.disableShrink, align = props.align, verticalFill = props.verticalFill, order = props.order, className = props.className, _a = props.basis, basis = _a === void 0 ? 'auto' : _a;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            theme.fonts.medium,\n            classNames.root,\n            {\n                flexBasis: basis,\n                margin: tokens.margin,\n                padding: tokens.padding,\n                height: verticalFill ? '100%' : 'auto',\n                width: 'auto',\n            },\n            grow && {\n                flexGrow: grow === true ? 1 : grow,\n            },\n            (disableShrink || (!grow && !shrink)) && {\n                flexShrink: 0,\n            },\n            shrink &&\n                !disableShrink && {\n                flexShrink: 1,\n            },\n            align && {\n                alignSelf: alignMap[align] || align,\n            },\n            order && {\n                order: order,\n            },\n            className,\n        ],\n        // TODO: this cast may be hiding some potential issues with styling and name\n        //        lookups and should be removed\n    };\n};\n//# sourceMappingURL=StackItem.styles.js.map","import { styled } from '../../../Utilities';\nimport { ShimmerGapBase } from './ShimmerGap.base';\nimport { getStyles } from './ShimmerGap.styles';\nexport var ShimmerGap = styled(ShimmerGapBase, getStyles, undefined, {\n    scope: 'ShimmerGap',\n});\n//# sourceMappingURL=ShimmerGap.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { DelayedRender, classNamesFunction, getNativeProps, divProperties } from '../../Utilities';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory Announced}\n */\nexport var AnnouncedBase = /** @class */ (function (_super) {\n    __extends(AnnouncedBase, _super);\n    function AnnouncedBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnnouncedBase.prototype.render = function () {\n        var _a, _b;\n        var message = (_a = this.props, _a.message), styles = _a.styles, Root = (_b = _a.as, _b === void 0 ? 'div' : _b), className = _a.className;\n        var classNames = getClassNames(styles, { className: className });\n        return (React.createElement(Root, __assign({ role: \"status\", className: classNames.root }, getNativeProps(this.props, divProperties, ['className'])),\n            React.createElement(DelayedRender, null,\n                React.createElement(\"div\", { className: classNames.screenReaderText }, message))));\n    };\n    AnnouncedBase.defaultProps = {\n        'aria-live': 'polite',\n    };\n    return AnnouncedBase;\n}(React.Component));\n//# sourceMappingURL=Announced.base.js.map","import { __spreadArray } from \"tslib\";\nimport { KTP_SEPARATOR, KTP_PREFIX, DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET, KTP_LAYER_ID } from './KeytipConstants';\nimport { addElementAtIndex } from '../../Utilities';\n/**\n * Converts a whole set of KeySequences into one keytip ID, which will be the ID for the last keytip sequence specified\n * keySequences should not include the initial keytip 'start' sequence.\n *\n * @param keySequences - Full path of IKeySequences for one keytip.\n * @returns String to use for the keytip ID.\n */\nexport function sequencesToID(keySequences) {\n    return keySequences.reduce(function (prevValue, keySequence) {\n        return prevValue + KTP_SEPARATOR + keySequence.split('').join(KTP_SEPARATOR);\n    }, KTP_PREFIX);\n}\n/**\n * Merges an overflow sequence with a key sequence.\n *\n * @param keySequences - Full sequence for one keytip.\n * @param overflowKeySequences - Full overflow keytip sequence.\n * @returns Sequence that will be used by the keytip when in the overflow.\n */\nexport function mergeOverflows(keySequences, overflowKeySequences) {\n    var overflowSequenceLen = overflowKeySequences.length;\n    var overflowSequence = __spreadArray([], overflowKeySequences, true).pop();\n    var newKeySequences = __spreadArray([], keySequences, true);\n    return addElementAtIndex(newKeySequences, overflowSequenceLen - 1, overflowSequence);\n}\n/**\n * Constructs the data-ktp-target attribute selector from a full key sequence.\n *\n * @param keySequences - Full string[] for a Keytip.\n * @returns String selector to use to query for the keytip target.\n */\nexport function ktpTargetFromSequences(keySequences) {\n    return '[' + DATAKTP_TARGET + '=\"' + sequencesToID(keySequences) + '\"]';\n}\n/**\n * Constructs the data-ktp-execute-target attribute selector from a keytip ID.\n *\n * @param keytipId - ID of the Keytip.\n * @returns String selector to use to query for the keytip execute target.\n */\nexport function ktpTargetFromId(keytipId) {\n    return '[' + DATAKTP_EXECUTE_TARGET + '=\"' + keytipId + '\"]';\n}\n/**\n * Gets the aria-describedby value to put on the component with this keytip.\n *\n * @param keySequences - KeySequences of the keytip.\n * @returns The aria-describedby value to set on the component with this keytip.\n */\nexport function getAriaDescribedBy(keySequences) {\n    var describedby = ' ' + KTP_LAYER_ID;\n    if (!keySequences.length) {\n        // Return just the layer ID\n        return describedby;\n    }\n    return describedby + ' ' + sequencesToID(keySequences);\n}\n//# sourceMappingURL=KeytipUtils.js.map","import { __assign } from \"tslib\";\nimport { SpinnerSize } from './Spinner.types';\nimport { hiddenContentStyle, keyframes, HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle, } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nvar GlobalClassNames = {\n    root: 'ms-Spinner',\n    circle: 'ms-Spinner-circle',\n    label: 'ms-Spinner-label',\n};\nvar spinAnimation = memoizeFunction(function () {\n    return keyframes({\n        '0%': {\n            transform: 'rotate(0deg)',\n        },\n        '100%': {\n            transform: 'rotate(360deg)',\n        },\n    });\n});\nexport var getStyles = function (props) {\n    var _a;\n    var theme = props.theme, size = props.size, className = props.className, labelPosition = props.labelPosition;\n    var palette = theme.palette;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n            },\n            labelPosition === 'top' && {\n                flexDirection: 'column-reverse',\n            },\n            labelPosition === 'right' && {\n                flexDirection: 'row',\n            },\n            labelPosition === 'left' && {\n                flexDirection: 'row-reverse',\n            },\n            className,\n        ],\n        circle: [\n            classNames.circle,\n            {\n                boxSizing: 'border-box',\n                borderRadius: '50%',\n                borderWidth: '1.5px',\n                borderStyle: 'solid',\n                borderTopColor: palette.themePrimary,\n                borderRightColor: palette.themeLight,\n                borderBottomColor: palette.themeLight,\n                borderLeftColor: palette.themeLight,\n                animationName: spinAnimation(),\n                animationDuration: '1.3s',\n                animationIterationCount: 'infinite',\n                animationTimingFunction: 'cubic-bezier(.53,.21,.29,.67)',\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = __assign({ borderTopColor: 'Highlight' }, getHighContrastNoAdjustStyle()),\n                    _a),\n            },\n            size === SpinnerSize.xSmall && [\n                'ms-Spinner--xSmall',\n                {\n                    width: 12,\n                    height: 12,\n                },\n            ],\n            size === SpinnerSize.small && [\n                'ms-Spinner--small',\n                {\n                    width: 16,\n                    height: 16,\n                },\n            ],\n            size === SpinnerSize.medium && [\n                'ms-Spinner--medium',\n                {\n                    width: 20,\n                    height: 20,\n                },\n            ],\n            size === SpinnerSize.large && [\n                'ms-Spinner--large',\n                {\n                    width: 28,\n                    height: 28,\n                },\n            ],\n        ],\n        label: [\n            classNames.label,\n            theme.fonts.small,\n            {\n                color: palette.themePrimary,\n                margin: '8px 0 0',\n                textAlign: 'center',\n            },\n            labelPosition === 'top' && {\n                margin: '0 0 8px',\n            },\n            labelPosition === 'right' && {\n                margin: '0 0 0 8px',\n            },\n            labelPosition === 'left' && {\n                margin: '0 8px 0 0',\n            },\n        ],\n        screenReaderText: hiddenContentStyle,\n    };\n};\n//# sourceMappingURL=Spinner.styles.js.map","/**\n * {@docCategory Tooltip}\n */\nexport var TooltipDelay;\n(function (TooltipDelay) {\n    TooltipDelay[TooltipDelay[\"zero\"] = 0] = \"zero\";\n    /** 300 ms delay before showing the tooltip */\n    TooltipDelay[TooltipDelay[\"medium\"] = 1] = \"medium\";\n    /** 500 ms delay before showing the tooltip */\n    TooltipDelay[TooltipDelay[\"long\"] = 2] = \"long\";\n})(TooltipDelay || (TooltipDelay = {}));\n//# sourceMappingURL=Tooltip.types.js.map","import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n    var _a;\n    var baseButtonStyles = getBaseButtonStyles(theme);\n    var splitButtonStyles = getSplitButtonStyles(theme);\n    var palette = theme.palette, semanticColors = theme.semanticColors;\n    var iconButtonStyles = {\n        root: {\n            padding: '0 4px',\n            width: '32px',\n            height: '32px',\n            backgroundColor: 'transparent',\n            border: 'none',\n            color: semanticColors.link,\n        },\n        rootHovered: (_a = {\n                color: palette.themeDarkAlt,\n                backgroundColor: palette.neutralLighter\n            },\n            _a[HighContrastSelector] = {\n                borderColor: 'Highlight',\n                color: 'Highlight',\n            },\n            _a),\n        rootHasMenu: {\n            width: 'auto',\n        },\n        rootPressed: {\n            color: palette.themeDark,\n            backgroundColor: palette.neutralLight,\n        },\n        rootExpanded: {\n            color: palette.themeDark,\n            backgroundColor: palette.neutralLight,\n        },\n        rootChecked: {\n            color: palette.themeDark,\n            backgroundColor: palette.neutralLight,\n        },\n        rootCheckedHovered: {\n            color: palette.themeDark,\n            backgroundColor: palette.neutralQuaternaryAlt,\n        },\n        rootDisabled: {\n            color: palette.neutralTertiaryAlt,\n        },\n    };\n    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles);\n});\n//# sourceMappingURL=IconButton.styles.js.map","import { __assign, __extends, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { css, KeyCodes, classNamesFunction, divProperties, findIndex, getDocument, getFirstFocusable, getId, getLastFocusable, getNativeProps, initializeComponentRef, isIOS, isMac, mergeAriaAttributeValues, safeRequestAnimationFrame, warn, warnDeprecations, warnMutuallyExclusive, } from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { CommandButton } from '../../Button';\nimport { DropdownMenuItemType } from './Dropdown.types';\nimport { DropdownSizePosCache } from './utilities/DropdownSizePosCache';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport { Label } from '../../Label';\nimport { Panel } from '../../Panel';\nimport { ResponsiveMode, useResponsiveMode } from '../../ResponsiveMode';\nimport { SelectableOptionMenuItemType, getAllSelectedOptions } from '../../SelectableOption';\n// import and use V7 Checkbox to ensure no breaking changes.\nimport { Checkbox } from '../../Checkbox';\nimport { getNextElement, getPreviousElement, getPropsWithDefaults } from '@fluentui/utilities';\nimport { useMergedRefs, usePrevious } from '@fluentui/react-hooks';\nimport { WindowContext } from '@fluentui/react-window-provider';\nimport { getDocumentEx, getWindowEx } from '../../utilities/dom';\nvar COMPONENT_NAME = 'Dropdown';\nvar getClassNames = classNamesFunction();\nvar DEFAULT_PROPS = {\n    options: [],\n};\nfunction useSelectedItemsState(_a) {\n    var defaultSelectedKeys = _a.defaultSelectedKeys, selectedKeys = _a.selectedKeys, defaultSelectedKey = _a.defaultSelectedKey, selectedKey = _a.selectedKey, options = _a.options, multiSelect = _a.multiSelect;\n    var oldOptions = usePrevious(options);\n    var _b = React.useState([]), selectedIndices = _b[0], setSelectedIndices = _b[1];\n    // In controlled component usage where selectedKey is provided, update the selectedIndex\n    // state if the key or options change.\n    var selectedKeyPropToUse;\n    // this does a shallow compare (assumes options are pure), for the purposes of determining whether\n    // defaultSelectedKey/defaultSelectedKeys are respected.\n    var didOptionsChange = options !== oldOptions;\n    if (multiSelect) {\n        if (didOptionsChange && defaultSelectedKeys !== undefined) {\n            selectedKeyPropToUse = defaultSelectedKeys;\n        }\n        else {\n            selectedKeyPropToUse = selectedKeys;\n        }\n    }\n    else {\n        if (didOptionsChange && defaultSelectedKey !== undefined) {\n            selectedKeyPropToUse = defaultSelectedKey;\n        }\n        else {\n            selectedKeyPropToUse = selectedKey;\n        }\n    }\n    var oldSelectedKeyProp = usePrevious(selectedKeyPropToUse);\n    React.useEffect(function () {\n        /** Get all selected indexes for multi-select mode */\n        var getSelectedIndexes = function () {\n            if (selectedKeyPropToUse === undefined) {\n                if (multiSelect) {\n                    return getAllSelectedIndices();\n                }\n                var selectedIndex = getSelectedIndex(null);\n                return selectedIndex !== -1 ? [selectedIndex] : [];\n            }\n            else if (!Array.isArray(selectedKeyPropToUse)) {\n                var selectedIndex = getSelectedIndex(selectedKeyPropToUse);\n                return selectedIndex !== -1 ? [selectedIndex] : [];\n            }\n            var returnValue = [];\n            for (var _i = 0, selectedKeyPropToUse_1 = selectedKeyPropToUse; _i < selectedKeyPropToUse_1.length; _i++) {\n                var key = selectedKeyPropToUse_1[_i];\n                var selectedIndex = getSelectedIndex(key);\n                selectedIndex !== -1 && returnValue.push(selectedIndex);\n            }\n            return returnValue;\n        };\n        var getAllSelectedIndices = function () {\n            return options\n                .map(function (option, index) { return (option.selected ? index : -1); })\n                .filter(function (index) { return index !== -1; });\n        };\n        var getSelectedIndex = function (searchKey) {\n            return findIndex(options, function (option) {\n                // eslint-disable-next-line eqeqeq\n                if (searchKey != null) {\n                    return option.key === searchKey;\n                }\n                else {\n                    // eslint-disable-next-line deprecation/deprecation\n                    return !!option.selected || !!option.isSelected;\n                }\n            });\n        };\n        if ((selectedKeyPropToUse !== undefined || !oldOptions) &&\n            (selectedKeyPropToUse !== oldSelectedKeyProp || didOptionsChange)) {\n            setSelectedIndices(getSelectedIndexes());\n        }\n    }, [didOptionsChange, multiSelect, oldOptions, oldSelectedKeyProp, options, selectedKeyPropToUse]);\n    return [selectedIndices, setSelectedIndices];\n}\nexport var DropdownBase = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    var rootRef = React.useRef(null);\n    var mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n    var responsiveMode = useResponsiveMode(rootRef, props.responsiveMode);\n    var _a = useSelectedItemsState(props), selectedIndices = _a[0], setSelectedIndices = _a[1];\n    return (React.createElement(DropdownInternal, __assign({}, props, { responsiveMode: responsiveMode, hoisted: { rootRef: mergedRootRef, selectedIndices: selectedIndices, setSelectedIndices: setSelectedIndices } })));\n});\nDropdownBase.displayName = 'DropdownBase';\nvar DropdownInternal = /** @class */ (function (_super) {\n    __extends(DropdownInternal, _super);\n    function DropdownInternal(props) {\n        var _this = _super.call(this, props) || this;\n        _this._host = React.createRef();\n        _this._focusZone = React.createRef();\n        _this._dropDown = React.createRef();\n        _this._scrollIdleDelay = 250 /* ms */;\n        _this._sizePosCache = new DropdownSizePosCache();\n        _this._requestAnimationFrame = safeRequestAnimationFrame(_this);\n        /**\n         * Close menu callout if it is open\n         */\n        _this.dismissMenu = function () {\n            var isOpen = _this.state.isOpen;\n            isOpen && _this.setState({ isOpen: false });\n        };\n        _this._onChange = function (event, options, index, checked, multiSelect) {\n            // eslint-disable-next-line deprecation/deprecation\n            var _a = _this.props, onChange = _a.onChange, onChanged = _a.onChanged;\n            if (onChange || onChanged) {\n                // for single-select, option passed in will always be selected.\n                // for multi-select, flip the checked value\n                var changedOpt = multiSelect ? __assign(__assign({}, options[index]), { selected: !checked }) : options[index];\n                onChange && onChange(__assign(__assign({}, event), { target: _this._dropDown.current }), changedOpt, index);\n                onChanged && onChanged(changedOpt, index);\n            }\n        };\n        /** Get either props.placeholder (new name) or props.placeHolder (old name) */\n        _this._getPlaceholder = function () {\n            // eslint-disable-next-line deprecation/deprecation\n            return _this.props.placeholder || _this.props.placeHolder;\n        };\n        /** Get text in dropdown input as a string */\n        _this._getTitle = function (items, _unused) {\n            var _a = _this.props.multiSelectDelimiter, multiSelectDelimiter = _a === void 0 ? ', ' : _a;\n            return items.map(function (i) { return i.text; }).join(multiSelectDelimiter);\n        };\n        /** Render text in dropdown input */\n        _this._onRenderTitle = function (items) {\n            return React.createElement(React.Fragment, null, _this._getTitle(items));\n        };\n        /** Render placeholder text in dropdown input */\n        _this._onRenderPlaceholder = function (props) {\n            if (!_this._getPlaceholder()) {\n                return null;\n            }\n            return React.createElement(React.Fragment, null, _this._getPlaceholder());\n        };\n        /** Render Callout or Panel container and pass in list */\n        _this._onRenderContainer = function (props) {\n            var calloutProps = props.calloutProps, panelProps = props.panelProps;\n            var _a = _this.props, responsiveMode = _a.responsiveMode, dropdownWidth = _a.dropdownWidth;\n            var isSmall = responsiveMode <= ResponsiveMode.medium;\n            var focusTrapZoneProps = { firstFocusableTarget: \"#\".concat(_this._listId, \"1\") };\n            var panelStyles = _this._classNames.subComponentStyles\n                ? _this._classNames.subComponentStyles.panel\n                : undefined;\n            var calloutWidth = undefined;\n            var calloutMinWidth = undefined;\n            if (dropdownWidth === 'auto') {\n                calloutMinWidth = _this._dropDown.current ? _this._dropDown.current.clientWidth : 0;\n            }\n            else {\n                calloutWidth = dropdownWidth || (_this._dropDown.current ? _this._dropDown.current.clientWidth : 0);\n            }\n            return isSmall ? (React.createElement(Panel, __assign({ closeButtonAriaLabel: \"Close\", focusTrapZoneProps: focusTrapZoneProps, hasCloseButton: true, isOpen: true, isLightDismiss: true, onDismiss: _this._onDismiss, styles: panelStyles }, panelProps), _this._renderFocusableList(props))) : (React.createElement(Callout, __assign({ isBeakVisible: false, gapSpace: 0, doNotLayer: false, directionalHintFixed: false, directionalHint: DirectionalHint.bottomLeftEdge, calloutWidth: calloutWidth, calloutMinWidth: calloutMinWidth }, calloutProps, { className: _this._classNames.callout, target: _this._dropDown.current, onDismiss: _this._onDismiss, onScroll: _this._onScroll, onPositioned: _this._onPositioned }), _this._renderFocusableList(props)));\n        };\n        /** Render Caret Down Icon */\n        _this._onRenderCaretDown = function (props) {\n            return React.createElement(Icon, { className: _this._classNames.caretDown, iconName: \"ChevronDown\", \"aria-hidden\": true });\n        };\n        /** Render List of items */\n        _this._onRenderList = function (props) {\n            var _a = props.onRenderItem, onRenderItem = _a === void 0 ? _this._onRenderItem : _a;\n            var queue = { items: [] };\n            var renderedList = [];\n            var emptyQueue = function () {\n                var newGroup = queue.id\n                    ? [\n                        React.createElement(\"div\", { role: \"group\", key: queue.id, \"aria-labelledby\": queue.id }, queue.items),\n                    ]\n                    : queue.items;\n                renderedList = __spreadArray(__spreadArray([], renderedList, true), newGroup, true);\n                // Flush items and id\n                queue = { items: [] };\n            };\n            var placeRenderedOptionIntoQueue = function (item, index) {\n                /*\n                  Case Header\n                    empty queue if it's not already empty\n                    ensure unique ID for header and set queue ID\n                    push header into queue\n                  Case Divider\n                    push divider into queue if not first item\n                    empty queue if not already empty\n                  Default\n                    push item into queue\n                */\n                switch (item.itemType) {\n                    case SelectableOptionMenuItemType.Header:\n                        queue.items.length > 0 && emptyQueue();\n                        var id = _this._id + item.key;\n                        queue.items.push(onRenderItem(__assign(__assign({ id: id }, item), { index: index }), _this._onRenderItem));\n                        queue.id = id;\n                        break;\n                    case SelectableOptionMenuItemType.Divider:\n                        index > 0 && queue.items.push(onRenderItem(__assign(__assign({}, item), { index: index }), _this._onRenderItem));\n                        queue.items.length > 0 && emptyQueue();\n                        break;\n                    default:\n                        queue.items.push(onRenderItem(__assign(__assign({}, item), { index: index }), _this._onRenderItem));\n                }\n            };\n            // Place options into the queue. Queue will be emptied anytime a Header or Divider is encountered\n            props.options.forEach(function (item, index) {\n                placeRenderedOptionIntoQueue(item, index);\n            });\n            // Push remaining items into all renderedList\n            queue.items.length > 0 && emptyQueue();\n            return React.createElement(React.Fragment, null, renderedList);\n        };\n        _this._onRenderItem = function (item) {\n            switch (item.itemType) {\n                case SelectableOptionMenuItemType.Divider:\n                    return _this._renderSeparator(item);\n                case SelectableOptionMenuItemType.Header:\n                    return _this._renderHeader(item);\n                default:\n                    return _this._renderOption(item);\n            }\n        };\n        _this._renderOption = function (item) {\n            var _a;\n            var _b = _this.props, _c = _b.onRenderOption, onRenderOption = _c === void 0 ? _this._onRenderOption : _c, _d = _b.hoisted.selectedIndices, selectedIndices = _d === void 0 ? [] : _d;\n            var isItemSelected = item.index !== undefined && selectedIndices ? selectedIndices.indexOf(item.index) > -1 : false;\n            // select the right className based on the combination of selected/disabled\n            var itemClassName = item.hidden // predicate: item hidden\n                ? _this._classNames.dropdownItemHidden\n                : isItemSelected && item.disabled === true // predicate: both selected and disabled\n                    ? _this._classNames.dropdownItemSelectedAndDisabled\n                    : isItemSelected // predicate: selected only\n                        ? _this._classNames.dropdownItemSelected\n                        : item.disabled === true // predicate: disabled only\n                            ? _this._classNames.dropdownItemDisabled\n                            : _this._classNames.dropdownItem;\n            var title = item.title;\n            // define the id and label id (for multiselect checkboxes)\n            var id = _this._listId + item.index;\n            var labelId = (_a = item.id) !== null && _a !== void 0 ? _a : id + '-label';\n            var multiSelectItemStyles = _this._classNames.subComponentStyles\n                ? _this._classNames.subComponentStyles.multiSelectItem\n                : undefined;\n            return !_this.props.multiSelect ? (React.createElement(CommandButton, { id: id, key: item.key, \"data-index\": item.index, \"data-is-focusable\": !item.disabled, disabled: item.disabled, className: itemClassName, onClick: _this._onItemClick(item), \n                // eslint-disable-next-line react/jsx-no-bind\n                onMouseEnter: _this._onItemMouseEnter.bind(_this, item), \n                // eslint-disable-next-line react/jsx-no-bind\n                onMouseLeave: _this._onMouseItemLeave.bind(_this, item), \n                // eslint-disable-next-line react/jsx-no-bind\n                onMouseMove: _this._onItemMouseMove.bind(_this, item), role: \"option\", \"aria-selected\": isItemSelected ? 'true' : 'false', ariaLabel: item.ariaLabel, title: title, \"aria-posinset\": _this._sizePosCache.positionInSet(item.index), \"aria-setsize\": _this._sizePosCache.optionSetSize }, onRenderOption(item, _this._onRenderOption))) : (React.createElement(Checkbox, { id: id, key: item.key, disabled: item.disabled, onChange: _this._onItemClick(item), inputProps: __assign({ 'aria-selected': isItemSelected, onMouseEnter: _this._onItemMouseEnter.bind(_this, item), onMouseLeave: _this._onMouseItemLeave.bind(_this, item), onMouseMove: _this._onItemMouseMove.bind(_this, item), role: 'option' }, {\n                    'data-index': item.index,\n                    'data-is-focusable': !(item.disabled || item.hidden),\n                }), label: item.text, title: title, \n                // eslint-disable-next-line react/jsx-no-bind\n                onRenderLabel: _this._onRenderItemLabel.bind(_this, __assign(__assign({}, item), { id: labelId })), className: css(itemClassName, 'is-multi-select'), checked: isItemSelected, styles: multiSelectItemStyles, ariaPositionInSet: !item.hidden ? _this._sizePosCache.positionInSet(item.index) : undefined, ariaSetSize: !item.hidden ? _this._sizePosCache.optionSetSize : undefined, ariaLabel: item.ariaLabel, ariaLabelledBy: item.ariaLabel ? undefined : labelId }));\n        };\n        /** Render content of item (i.e. text/icon inside of button) */\n        _this._onRenderOption = function (item) {\n            return React.createElement(\"span\", { className: _this._classNames.dropdownOptionText }, item.text);\n        };\n        /*\n         * Render content of a multiselect item label.\n         * Text within the label is aria-hidden, to prevent duplicate input/label exposure\n         */\n        _this._onRenderMultiselectOption = function (item) {\n            return (React.createElement(\"span\", { id: item.id, \"aria-hidden\": \"true\", className: _this._classNames.dropdownOptionText }, item.text));\n        };\n        /** Render custom label for multiselect checkbox items */\n        _this._onRenderItemLabel = function (item) {\n            var _a = _this.props.onRenderOption, onRenderOption = _a === void 0 ? _this._onRenderMultiselectOption : _a;\n            return onRenderOption(item, _this._onRenderMultiselectOption);\n        };\n        _this._onPositioned = function (positions) {\n            if (_this._focusZone.current) {\n                // Focusing an element can trigger a reflow. Making this wait until there is an animation\n                // frame can improve perf significantly.\n                _this._requestAnimationFrame(function () {\n                    var selectedIndices = _this.props.hoisted.selectedIndices;\n                    if (_this._focusZone.current) {\n                        if (!_this._hasBeenPositioned &&\n                            selectedIndices &&\n                            selectedIndices[0] &&\n                            !_this.props.options[selectedIndices[0]].disabled) {\n                            var element = getDocument().getElementById(\"\".concat(_this._id, \"-list\").concat(selectedIndices[0]));\n                            if (element) {\n                                _this._focusZone.current.focusElement(element);\n                            }\n                            _this._hasBeenPositioned = true;\n                        }\n                        else {\n                            _this._focusZone.current.focus();\n                        }\n                    }\n                });\n            }\n            if (!_this.state.calloutRenderEdge || _this.state.calloutRenderEdge !== positions.targetEdge) {\n                _this.setState({\n                    calloutRenderEdge: positions.targetEdge,\n                });\n            }\n        };\n        _this._onItemClick = function (item) {\n            return function (event) {\n                if (!item.disabled) {\n                    _this.setSelectedIndex(event, item.index);\n                    if (!_this.props.multiSelect) {\n                        // only close the callout when it's in single-select mode\n                        _this.setState({\n                            isOpen: false,\n                        });\n                    }\n                }\n            };\n        };\n        /**\n         * Scroll handler for the callout to make sure the mouse events\n         * for updating focus are not interacting during scroll\n         */\n        _this._onScroll = function () {\n            var win = getWindowEx(_this.context); // can only be called on the client\n            if (!_this._isScrollIdle && _this._scrollIdleTimeoutId !== undefined) {\n                win.clearTimeout(_this._scrollIdleTimeoutId);\n                _this._scrollIdleTimeoutId = undefined;\n            }\n            else {\n                _this._isScrollIdle = false;\n            }\n            _this._scrollIdleTimeoutId = win.setTimeout(function () {\n                _this._isScrollIdle = true;\n            }, _this._scrollIdleDelay);\n        };\n        _this._onMouseItemLeave = function (item, ev) {\n            if (_this._shouldIgnoreMouseEvent()) {\n                return;\n            }\n            /**\n             * IE11 focus() method forces parents to scroll to top of element.\n             * Edge and IE expose a setActive() function for focusable divs that\n             * sets the page focus but does not scroll the parent element.\n             */\n            if (_this._host.current) {\n                if (_this._host.current.setActive) {\n                    try {\n                        _this._host.current.setActive();\n                    }\n                    catch (e) {\n                        /* no-op */\n                    }\n                }\n                else {\n                    _this._host.current.focus();\n                }\n            }\n        };\n        _this._onDismiss = function () {\n            _this.setState({ isOpen: false });\n        };\n        _this._onDropdownBlur = function (ev) {\n            // If Dropdown disabled do not proceed with this logic.\n            var disabled = _this._isDisabled();\n            if (disabled) {\n                return;\n            }\n            if (_this.state.isOpen) {\n                // Do not call onBlur or update focus state when the callout is opened\n                return;\n            }\n            _this.setState({ hasFocus: false });\n            if (_this.props.onBlur) {\n                _this.props.onBlur(ev);\n            }\n        };\n        _this._onDropdownKeyDown = function (ev) {\n            // If Dropdown disabled do not process any keyboard events.\n            var disabled = _this._isDisabled();\n            if (disabled) {\n                return;\n            }\n            // Take note if we are processing an alt (option) or meta (command) keydown.\n            // See comment in _shouldHandleKeyUp for reasoning.\n            _this._lastKeyDownWasAltOrMeta = _this._isAltOrMeta(ev);\n            if (_this.props.onKeyDown) {\n                _this.props.onKeyDown(ev);\n                if (ev.defaultPrevented) {\n                    return;\n                }\n            }\n            var newIndex;\n            var selectedIndex = _this.props.hoisted.selectedIndices.length ? _this.props.hoisted.selectedIndices[0] : -1;\n            var containsExpandCollapseModifier = ev.altKey || ev.metaKey;\n            var isOpen = _this.state.isOpen;\n            // eslint-disable-next-line deprecation/deprecation\n            switch (ev.which) {\n                case KeyCodes.enter:\n                    _this.setState({\n                        isOpen: !isOpen,\n                    });\n                    break;\n                case KeyCodes.escape:\n                    if (!isOpen) {\n                        return;\n                    }\n                    _this.setState({\n                        isOpen: false,\n                    });\n                    break;\n                case KeyCodes.up:\n                    if (containsExpandCollapseModifier) {\n                        if (isOpen) {\n                            _this.setState({ isOpen: false });\n                            break;\n                        }\n                        return;\n                    }\n                    if (_this.props.multiSelect) {\n                        _this.setState({ isOpen: true });\n                    }\n                    else if (!_this._isDisabled()) {\n                        newIndex = _this._moveIndex(ev, -1, selectedIndex - 1, selectedIndex);\n                    }\n                    break;\n                case KeyCodes.down:\n                    if (containsExpandCollapseModifier) {\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                    }\n                    if ((containsExpandCollapseModifier && !isOpen) || _this.props.multiSelect) {\n                        _this.setState({ isOpen: true });\n                    }\n                    else if (!_this._isDisabled()) {\n                        newIndex = _this._moveIndex(ev, 1, selectedIndex + 1, selectedIndex);\n                    }\n                    break;\n                case KeyCodes.home:\n                    if (!_this.props.multiSelect) {\n                        newIndex = _this._moveIndex(ev, 1, 0, selectedIndex);\n                    }\n                    break;\n                case KeyCodes.end:\n                    if (!_this.props.multiSelect) {\n                        newIndex = _this._moveIndex(ev, -1, _this.props.options.length - 1, selectedIndex);\n                    }\n                    break;\n                case KeyCodes.space:\n                    // event handled in _onDropdownKeyUp\n                    break;\n                default:\n                    return;\n            }\n            if (newIndex !== selectedIndex) {\n                ev.stopPropagation();\n                ev.preventDefault();\n            }\n        };\n        _this._onDropdownKeyUp = function (ev) {\n            // If Dropdown disabled do not process any keyboard events.\n            var disabled = _this._isDisabled();\n            if (disabled) {\n                return;\n            }\n            var shouldHandleKey = _this._shouldHandleKeyUp(ev);\n            var isOpen = _this.state.isOpen;\n            if (_this.props.onKeyUp) {\n                _this.props.onKeyUp(ev);\n                if (ev.defaultPrevented) {\n                    return;\n                }\n            }\n            // eslint-disable-next-line deprecation/deprecation\n            switch (ev.which) {\n                case KeyCodes.space:\n                    _this.setState({\n                        isOpen: !isOpen,\n                    });\n                    break;\n                default:\n                    if (shouldHandleKey && isOpen) {\n                        _this.setState({ isOpen: false });\n                    }\n                    return;\n            }\n            ev.stopPropagation();\n            ev.preventDefault();\n        };\n        _this._onZoneKeyDown = function (ev) {\n            var _a, _b;\n            var elementToFocus;\n            // Take note if we are processing an alt (option) or meta (command) keydown.\n            // See comment in _shouldHandleKeyUp for reasoning.\n            _this._lastKeyDownWasAltOrMeta = _this._isAltOrMeta(ev);\n            var containsExpandCollapseModifier = ev.altKey || ev.metaKey;\n            // eslint-disable-next-line deprecation/deprecation\n            switch (ev.which) {\n                case KeyCodes.up:\n                    if (containsExpandCollapseModifier) {\n                        _this.setState({ isOpen: false });\n                    }\n                    else {\n                        if (_this._host.current) {\n                            elementToFocus = getLastFocusable(_this._host.current, _this._host.current.lastChild, true);\n                        }\n                    }\n                    break;\n                // All directional keystrokes should be canceled when the zone is rendered.\n                // This avoids the body scroll from reacting and thus dismissing the dropdown.\n                case KeyCodes.home:\n                case KeyCodes.end:\n                case KeyCodes.pageUp:\n                case KeyCodes.pageDown:\n                    break;\n                case KeyCodes.down:\n                    if (!containsExpandCollapseModifier && _this._host.current) {\n                        elementToFocus = getFirstFocusable(_this._host.current, _this._host.current.firstChild, true);\n                    }\n                    break;\n                case KeyCodes.escape:\n                    _this.setState({ isOpen: false });\n                    break;\n                case KeyCodes.tab:\n                    _this.setState({ isOpen: false });\n                    var document_1 = getDocument();\n                    if (document_1) {\n                        if (ev.shiftKey) {\n                            (_a = getPreviousElement(document_1.body, _this._dropDown.current, false, false, true, true)) === null || _a === void 0 ? void 0 : _a.focus();\n                        }\n                        else {\n                            (_b = getNextElement(document_1.body, _this._dropDown.current, false, false, true, true)) === null || _b === void 0 ? void 0 : _b.focus();\n                        }\n                    }\n                    break;\n                default:\n                    return;\n            }\n            if (elementToFocus) {\n                elementToFocus.focus();\n            }\n            ev.stopPropagation();\n            ev.preventDefault();\n        };\n        _this._onZoneKeyUp = function (ev) {\n            var shouldHandleKey = _this._shouldHandleKeyUp(ev);\n            if (shouldHandleKey && _this.state.isOpen) {\n                _this.setState({ isOpen: false });\n                ev.preventDefault();\n            }\n        };\n        _this._onDropdownClick = function (ev) {\n            if (_this.props.onClick) {\n                _this.props.onClick(ev);\n                if (ev.defaultPrevented) {\n                    return;\n                }\n            }\n            var isOpen = _this.state.isOpen;\n            var disabled = _this._isDisabled();\n            if (!disabled && !_this._shouldOpenOnFocus()) {\n                _this.setState({\n                    isOpen: !isOpen,\n                });\n            }\n            _this._isFocusedByClick = false; // reset\n        };\n        _this._onDropdownMouseDown = function () {\n            _this._isFocusedByClick = true;\n        };\n        _this._onFocus = function (ev) {\n            var disabled = _this._isDisabled();\n            if (!disabled) {\n                if (_this.props.onFocus) {\n                    _this.props.onFocus(ev);\n                }\n                var state = { hasFocus: true };\n                if (_this._shouldOpenOnFocus()) {\n                    state.isOpen = true;\n                }\n                _this.setState(state);\n            }\n        };\n        /**\n         * Because the isDisabled prop is deprecated, we have had to repeat this logic all over the place.\n         * This helper method avoids all the repetition.\n         */\n        _this._isDisabled = function () {\n            var disabled = _this.props.disabled;\n            // eslint-disable-next-line deprecation/deprecation\n            var isDisabled = _this.props.isDisabled;\n            // Remove this deprecation workaround at 1.0.0\n            if (disabled === undefined) {\n                disabled = isDisabled;\n            }\n            return disabled;\n        };\n        _this._onRenderLabel = function (props) {\n            var label = props.label, required = props.required, disabled = props.disabled;\n            var labelStyles = _this._classNames.subComponentStyles\n                ? _this._classNames.subComponentStyles.label\n                : undefined;\n            return label ? (React.createElement(Label, { className: _this._classNames.label, id: _this._labelId, required: required, styles: labelStyles, disabled: disabled }, label)) : null;\n        };\n        initializeComponentRef(_this);\n        var multiSelect = props.multiSelect, selectedKey = props.selectedKey, selectedKeys = props.selectedKeys, defaultSelectedKey = props.defaultSelectedKey, defaultSelectedKeys = props.defaultSelectedKeys, options = props.options;\n        if (process.env.NODE_ENV !== 'production') {\n            warnDeprecations(COMPONENT_NAME, props, {\n                isDisabled: 'disabled',\n                onChanged: 'onChange',\n                placeHolder: 'placeholder',\n                onRenderPlaceHolder: 'onRenderPlaceholder',\n            });\n            warnMutuallyExclusive(COMPONENT_NAME, props, {\n                defaultSelectedKey: 'selectedKey',\n                defaultSelectedKeys: 'selectedKeys',\n                selectedKeys: 'selectedKey',\n            });\n            if (multiSelect) {\n                var warnMultiSelect = function (prop) {\n                    return warn(\"Dropdown property '\".concat(prop, \"' cannot be used when 'multiSelect' is true. Use '\").concat(prop, \"s' instead.\"));\n                };\n                if (selectedKey !== undefined) {\n                    warnMultiSelect('selectedKey');\n                }\n                if (defaultSelectedKey !== undefined) {\n                    warnMultiSelect('defaultSelectedKey');\n                }\n            }\n            else {\n                var warnNotMultiSelect = function (prop) {\n                    return warn(\"Dropdown property '\".concat(prop, \"s' cannot be used when 'multiSelect' is false/unset. Use '\").concat(prop, \"' instead.\"));\n                };\n                if (selectedKeys !== undefined) {\n                    warnNotMultiSelect('selectedKey');\n                }\n                if (defaultSelectedKeys !== undefined) {\n                    warnNotMultiSelect('defaultSelectedKey');\n                }\n            }\n        }\n        _this._id = props.id || getId('Dropdown');\n        _this._labelId = _this._id + '-label';\n        _this._listId = _this._id + '-list';\n        _this._optionId = _this._id + '-option';\n        _this._isScrollIdle = true;\n        _this._hasBeenPositioned = false;\n        _this._sizePosCache.updateOptions(options);\n        _this.state = {\n            isOpen: false,\n            hasFocus: false,\n            calloutRenderEdge: undefined,\n        };\n        return _this;\n    }\n    Object.defineProperty(DropdownInternal.prototype, \"selectedOptions\", {\n        /**\n         * All selected options\n         */\n        get: function () {\n            var _a = this.props, options = _a.options, selectedIndices = _a.hoisted.selectedIndices;\n            return getAllSelectedOptions(options, selectedIndices);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DropdownInternal.prototype.componentWillUnmount = function () {\n        clearTimeout(this._scrollIdleTimeoutId);\n    };\n    DropdownInternal.prototype.componentDidUpdate = function (prevProps, prevState) {\n        if (prevState.isOpen === true && this.state.isOpen === false) {\n            this._gotMouseMove = false;\n            this._hasBeenPositioned = false;\n            if (this.props.onDismiss) {\n                this.props.onDismiss();\n            }\n        }\n    };\n    DropdownInternal.prototype.render = function () {\n        var id = this._id;\n        var props = this.props;\n        var className = props.className, label = props.label, options = props.options, ariaLabel = props.ariaLabel, required = props.required, errorMessage = props.errorMessage, propStyles = props.styles, theme = props.theme, panelProps = props.panelProps, calloutProps = props.calloutProps, _a = props.onRenderTitle, onRenderTitle = _a === void 0 ? this._getTitle : _a, _b = props.onRenderContainer, onRenderContainer = _b === void 0 ? this._onRenderContainer : _b, _c = props.onRenderCaretDown, onRenderCaretDown = _c === void 0 ? this._onRenderCaretDown : _c, _d = props.onRenderLabel, onRenderLabel = _d === void 0 ? this._onRenderLabel : _d, _e = props.onRenderItem, onRenderItem = _e === void 0 ? this._onRenderItem : _e, selectedIndices = props.hoisted.selectedIndices;\n        var _f = this.state, isOpen = _f.isOpen, calloutRenderEdge = _f.calloutRenderEdge, hasFocus = _f.hasFocus;\n        // eslint-disable-next-line deprecation/deprecation\n        var onRenderPlaceholder = props.onRenderPlaceholder || props.onRenderPlaceHolder || this._getPlaceholder;\n        // If our cached options are out of date update our cache\n        if (options !== this._sizePosCache.cachedOptions) {\n            this._sizePosCache.updateOptions(options);\n        }\n        var selectedOptions = getAllSelectedOptions(options, selectedIndices);\n        var divProps = getNativeProps(props, divProperties);\n        var disabled = this._isDisabled();\n        var errorMessageId = id + '-errorMessage';\n        this._classNames = getClassNames(propStyles, {\n            theme: theme,\n            className: className,\n            hasError: !!(errorMessage && errorMessage.length > 0),\n            hasLabel: !!label,\n            isOpen: isOpen,\n            required: required,\n            disabled: disabled,\n            isRenderingPlaceholder: !selectedOptions.length,\n            panelClassName: panelProps ? panelProps.className : undefined,\n            calloutClassName: calloutProps ? calloutProps.className : undefined,\n            calloutRenderEdge: calloutRenderEdge,\n        });\n        var hasErrorMessage = !!errorMessage && errorMessage.length > 0;\n        return (React.createElement(\"div\", { className: this._classNames.root, ref: this.props.hoisted.rootRef, \"aria-owns\": isOpen ? this._listId : undefined },\n            onRenderLabel(this.props, this._onRenderLabel),\n            React.createElement(\"div\", __assign({ \"data-is-focusable\": !disabled, \"data-ktp-target\": true, ref: this._dropDown, id: id, tabIndex: disabled ? -1 : 0, role: \"combobox\", \"aria-haspopup\": \"listbox\", \"aria-expanded\": isOpen ? 'true' : 'false', \"aria-label\": ariaLabel, \"aria-labelledby\": label && !ariaLabel ? mergeAriaAttributeValues(this._labelId, this._optionId) : undefined, \"aria-describedby\": hasErrorMessage ? this._id + '-errorMessage' : undefined, \"aria-required\": required, \"aria-disabled\": disabled, \"aria-controls\": isOpen ? this._listId : undefined }, divProps, { className: this._classNames.dropdown, onBlur: this._onDropdownBlur, onKeyDown: this._onDropdownKeyDown, onKeyUp: this._onDropdownKeyUp, onClick: this._onDropdownClick, onMouseDown: this._onDropdownMouseDown, onFocus: this._onFocus }),\n                React.createElement(\"span\", { id: this._optionId, className: this._classNames.title, \"aria-live\": hasFocus ? 'polite' : undefined, \"aria-atomic\": hasFocus ? true : undefined, \"aria-invalid\": hasErrorMessage }, \n                // If option is selected render title, otherwise render the placeholder text\n                selectedOptions.length\n                    ? onRenderTitle(selectedOptions, this._onRenderTitle)\n                    : onRenderPlaceholder(props, this._onRenderPlaceholder)),\n                React.createElement(\"span\", { className: this._classNames.caretDownWrapper }, onRenderCaretDown(props, this._onRenderCaretDown))),\n            isOpen &&\n                onRenderContainer(__assign(__assign({}, props), { onDismiss: this._onDismiss, onRenderItem: onRenderItem }), this._onRenderContainer),\n            hasErrorMessage && (React.createElement(\"div\", { role: \"alert\", id: errorMessageId, className: this._classNames.errorMessage }, errorMessage))));\n    };\n    DropdownInternal.prototype.focus = function (shouldOpenOnFocus) {\n        if (this._dropDown.current) {\n            this._dropDown.current.focus();\n            if (shouldOpenOnFocus) {\n                this.setState({\n                    isOpen: true,\n                });\n            }\n        }\n    };\n    DropdownInternal.prototype.setSelectedIndex = function (event, index) {\n        var _a = this.props, options = _a.options, selectedKey = _a.selectedKey, selectedKeys = _a.selectedKeys, multiSelect = _a.multiSelect, notifyOnReselect = _a.notifyOnReselect, _b = _a.hoisted.selectedIndices, selectedIndices = _b === void 0 ? [] : _b;\n        var checked = selectedIndices ? selectedIndices.indexOf(index) > -1 : false;\n        var newIndexes = [];\n        index = Math.max(0, Math.min(options.length - 1, index));\n        // If this is a controlled component then no state change should take place.\n        if (selectedKey !== undefined || selectedKeys !== undefined) {\n            this._onChange(event, options, index, checked, multiSelect);\n            return;\n        }\n        if (!multiSelect && !notifyOnReselect && index === selectedIndices[0]) {\n            return;\n        }\n        else if (multiSelect) {\n            newIndexes = selectedIndices ? this._copyArray(selectedIndices) : [];\n            if (checked) {\n                var position = newIndexes.indexOf(index);\n                if (position > -1) {\n                    // unchecked the current one\n                    newIndexes.splice(position, 1);\n                }\n            }\n            else {\n                // add the new selected index into the existing one\n                newIndexes.push(index);\n            }\n        }\n        else {\n            // Set the selected option if this is an uncontrolled component\n            newIndexes = [index];\n        }\n        event.persist();\n        // Call onChange after state is updated\n        this.props.hoisted.setSelectedIndices(newIndexes);\n        this._onChange(event, options, index, checked, multiSelect);\n    };\n    DropdownInternal.prototype._copyArray = function (array) {\n        var newArray = [];\n        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n            var element = array_1[_i];\n            newArray.push(element);\n        }\n        return newArray;\n    };\n    /**\n     * Finds the next valid Dropdown option and sets the selected index to it.\n     * @param stepValue - Value of how many items the function should traverse.  Should be -1 or 1.\n     * @param index - Index of where the search should start\n     * @param selectedIndex - The selectedIndex Dropdown's state\n     * @returns The next valid dropdown option's index\n     */\n    DropdownInternal.prototype._moveIndex = function (event, stepValue, index, selectedIndex) {\n        var options = this.props.options;\n        // Return selectedIndex if nothing has changed or options is empty\n        if (selectedIndex === index || options.length === 0) {\n            return selectedIndex;\n        }\n        // If the user is pressing the up or down key we want to make\n        // sure that the dropdown cycles through the options without\n        // causing the screen to scroll. In _onDropdownKeyDown\n        // at the very end is a check to see if newIndex !== selectedIndex.\n        // If the index is less than 0 and we set it back to 0, then\n        // newIndex will equal selectedIndex and not stop the action\n        // of the key press happening and vice versa for indexes greater\n        // than or equal to the options length.\n        if (index >= options.length) {\n            index = 0;\n        }\n        else if (index < 0) {\n            index = options.length - 1;\n        }\n        var stepCounter = 0;\n        // If current index is a header or divider, or disabled, increment by step\n        while (options[index].itemType === DropdownMenuItemType.Header ||\n            options[index].itemType === DropdownMenuItemType.Divider ||\n            options[index].disabled) {\n            // If stepCounter exceeds length of options, then return selectedIndex (-1)\n            if (stepCounter >= options.length) {\n                return selectedIndex;\n            }\n            // If index + stepValue is out of bounds, wrap around\n            if (index + stepValue < 0) {\n                index = options.length;\n            }\n            else if (index + stepValue >= options.length) {\n                index = -1;\n            }\n            index = index + stepValue;\n            stepCounter++;\n        }\n        this.setSelectedIndex(event, index);\n        return index;\n    };\n    /** Wrap item list in a FocusZone */\n    DropdownInternal.prototype._renderFocusableList = function (props) {\n        var _a = props.onRenderList, onRenderList = _a === void 0 ? this._onRenderList : _a, label = props.label, ariaLabel = props.ariaLabel, multiSelect = props.multiSelect;\n        return (React.createElement(\"div\", { className: this._classNames.dropdownItemsWrapper, onKeyDown: this._onZoneKeyDown, onKeyUp: this._onZoneKeyUp, ref: this._host, tabIndex: 0 },\n            React.createElement(FocusZone, { ref: this._focusZone, direction: FocusZoneDirection.vertical, id: this._listId, className: this._classNames.dropdownItems, role: \"listbox\", \"aria-label\": ariaLabel, \"aria-labelledby\": label && !ariaLabel ? this._labelId : undefined, \"aria-multiselectable\": multiSelect }, onRenderList(props, this._onRenderList))));\n    };\n    DropdownInternal.prototype._renderSeparator = function (item) {\n        var index = item.index, key = item.key;\n        var separatorClassName = item.hidden ? this._classNames.dropdownDividerHidden : this._classNames.dropdownDivider;\n        if (index > 0) {\n            return React.createElement(\"div\", { role: \"presentation\", key: key, className: separatorClassName });\n        }\n        return null;\n    };\n    DropdownInternal.prototype._renderHeader = function (item) {\n        var _a = this.props.onRenderOption, onRenderOption = _a === void 0 ? this._onRenderOption : _a;\n        var key = item.key, id = item.id;\n        var headerClassName = item.hidden\n            ? this._classNames.dropdownItemHeaderHidden\n            : this._classNames.dropdownItemHeader;\n        return (React.createElement(\"div\", { id: id, key: key, className: headerClassName }, onRenderOption(item, this._onRenderOption)));\n    };\n    DropdownInternal.prototype._onItemMouseEnter = function (item, ev) {\n        if (this._shouldIgnoreMouseEvent()) {\n            return;\n        }\n        var targetElement = ev.currentTarget;\n        targetElement.focus();\n    };\n    DropdownInternal.prototype._onItemMouseMove = function (item, ev) {\n        var doc = getDocumentEx(this.context); // can only be called on the client\n        var targetElement = ev.currentTarget;\n        this._gotMouseMove = true;\n        if (!this._isScrollIdle || doc.activeElement === targetElement) {\n            return;\n        }\n        targetElement.focus();\n    };\n    DropdownInternal.prototype._shouldIgnoreMouseEvent = function () {\n        return !this._isScrollIdle || !this._gotMouseMove;\n    };\n    /**\n     * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n     */\n    DropdownInternal.prototype._isAltOrMeta = function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        return ev.which === KeyCodes.alt || ev.key === 'Meta';\n    };\n    /**\n     * We close the menu on key up only if ALL of the following are true:\n     * - Most recent key down was alt or meta (command)\n     * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n     *   expand/collapse the menu)\n     * - We're not on a Mac (or iOS)\n     *\n     * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n     * closing any open context menus. There is not a similar behavior on Macs.\n     */\n    DropdownInternal.prototype._shouldHandleKeyUp = function (ev) {\n        var keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);\n        this._lastKeyDownWasAltOrMeta = false;\n        return !!keyPressIsAltOrMetaAlone && !(isMac() || isIOS());\n    };\n    /**\n     * Returns true if dropdown should set to open on focus.\n     * Otherwise, isOpen state should be toggled on click\n     */\n    DropdownInternal.prototype._shouldOpenOnFocus = function () {\n        var hasFocus = this.state.hasFocus;\n        var openOnKeyboardFocus = this.props.openOnKeyboardFocus;\n        return !this._isFocusedByClick && openOnKeyboardFocus === true && !hasFocus;\n    };\n    DropdownInternal.defaultProps = {\n        options: [],\n    };\n    DropdownInternal.contextType = WindowContext;\n    return DropdownInternal;\n}(React.Component));\n//# sourceMappingURL=Dropdown.base.js.map","import { getWindow } from '@fluentui/utilities';\n/**\n * Wrapper for ResizeObserver, with fallback for browsers that don't support ResizeObserver.\n *\n * Calls the onResize callback once layout is complete, and again whenever any of the target(s) change size.\n * Or if ResizeObserver isn't supported, calls the callback whenever the window changes size.\n *\n * @param target - Either a single element, or array of elements to watch for size changes.\n * @param onResize - Callback to be notified when layout is complete, and when the target(s) change size.\n *    If this browser supports ResizeObserver, the callback will be passed the ResizeObserverEntry[] array.\n *    Otherwise, the entries array will be undefined, and you'll need to find another way to get the element's size,\n *    (e.g. clientWidth/clientHeight or getBoundingClientRect).\n *\n * @returns A function to clean up the observer/listener.\n */\nexport var observeResize = function (target, onResize) {\n    if (typeof ResizeObserver !== 'undefined') {\n        var observer_1 = new ResizeObserver(onResize);\n        if (Array.isArray(target)) {\n            target.forEach(function (t) { return observer_1.observe(t); });\n        }\n        else {\n            observer_1.observe(target);\n        }\n        return function () { return observer_1.disconnect(); };\n    }\n    else {\n        // Fallback for browsers that don't support ResizeObserver\n        var onResizeWrapper_1 = function () { return onResize(undefined); };\n        var win_1 = getWindow(Array.isArray(target) ? target[0] : target);\n        if (!win_1) {\n            // Can't listen for resize if we can't get the window object\n            return function () {\n                // Nothing to clean up\n            };\n        }\n        // Listen for the first animation frame, which will happen after layout is complete\n        var animationFrameId_1 = win_1.requestAnimationFrame(onResizeWrapper_1);\n        win_1.addEventListener('resize', onResizeWrapper_1, false);\n        return function () {\n            win_1.cancelAnimationFrame(animationFrameId_1);\n            win_1.removeEventListener('resize', onResizeWrapper_1, false);\n        };\n    }\n};\n//# sourceMappingURL=observeResize.js.map","import { __assign } from \"tslib\";\nimport { concatStyleSets, getFocusStyle, HighContrastSelector, getScreenSelector, ScreenWidthMaxMedium, IconFontSizes, getHighContrastNoAdjustStyle, } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nexport var CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nexport var getMenuItemStyles = memoizeFunction(function (theme) {\n    var _a, _b, _c, _d, _e;\n    var semanticColors = theme.semanticColors, fonts = theme.fonts, palette = theme.palette;\n    var ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    var ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n    var ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n    var ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n    var menuItemStyles = {\n        item: [\n            fonts.medium,\n            {\n                color: semanticColors.bodyText,\n                position: 'relative',\n                boxSizing: 'border-box',\n            },\n        ],\n        divider: {\n            display: 'block',\n            height: '1px',\n            backgroundColor: ContextualMenuItemDividerColor,\n            position: 'relative',\n        },\n        root: [\n            getFocusStyle(theme),\n            fonts.medium,\n            {\n                color: semanticColors.bodyText,\n                backgroundColor: 'transparent',\n                border: 'none',\n                width: '100%',\n                height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n                display: 'block',\n                cursor: 'pointer',\n                padding: '0px 8px 0 4px',\n                textAlign: 'left',\n            },\n        ],\n        rootDisabled: {\n            color: semanticColors.disabledBodyText,\n            cursor: 'default',\n            pointerEvents: 'none',\n            selectors: (_a = {},\n                _a[HighContrastSelector] = {\n                    // ensure disabled text looks different than enabled\n                    color: 'GrayText',\n                    opacity: 1,\n                },\n                _a),\n        },\n        rootHovered: {\n            backgroundColor: ContextualMenuItemBackgroundHoverColor,\n            color: ContextualMenuItemTextHoverColor,\n            selectors: {\n                '.ms-ContextualMenu-icon': {\n                    color: palette.themeDarkAlt,\n                },\n                '.ms-ContextualMenu-submenuIcon': {\n                    color: palette.neutralPrimary,\n                },\n            },\n        },\n        rootFocused: {\n            backgroundColor: palette.white,\n        },\n        rootChecked: {\n            selectors: {\n                '.ms-ContextualMenu-checkmarkIcon': {\n                    color: palette.neutralPrimary,\n                },\n            },\n        },\n        rootPressed: {\n            backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n            selectors: {\n                '.ms-ContextualMenu-icon': {\n                    color: palette.themeDark,\n                },\n                '.ms-ContextualMenu-submenuIcon': {\n                    color: palette.neutralPrimary,\n                },\n            },\n        },\n        rootExpanded: {\n            backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n            color: semanticColors.bodyTextChecked,\n            selectors: (_b = {\n                    '.ms-ContextualMenu-submenuIcon': (_c = {},\n                        _c[HighContrastSelector] = {\n                            // icons inside of anchor tags are not properly inheriting color in high contrast\n                            color: 'inherit',\n                        },\n                        _c)\n                },\n                _b[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()),\n                _b),\n        },\n        linkContent: {\n            whiteSpace: 'nowrap',\n            height: 'inherit',\n            display: 'flex',\n            alignItems: 'center',\n            maxWidth: '100%',\n        },\n        anchorLink: {\n            padding: '0px 8px 0 4px',\n            textRendering: 'auto',\n            color: 'inherit',\n            letterSpacing: 'normal',\n            wordSpacing: 'normal',\n            textTransform: 'none',\n            textIndent: '0px',\n            textShadow: 'none',\n            textDecoration: 'none',\n            boxSizing: 'border-box',\n        },\n        label: {\n            margin: '0 4px',\n            verticalAlign: 'middle',\n            display: 'inline-block',\n            flexGrow: '1',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n        },\n        secondaryText: {\n            color: theme.palette.neutralSecondary,\n            paddingLeft: '20px',\n            textAlign: 'right',\n        },\n        icon: {\n            display: 'inline-block',\n            minHeight: '1px',\n            maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n            fontSize: IconFontSizes.medium,\n            width: IconFontSizes.medium,\n            margin: '0 4px',\n            verticalAlign: 'middle',\n            flexShrink: '0',\n            selectors: (_d = {},\n                _d[MediumScreenSelector] = {\n                    fontSize: IconFontSizes.large,\n                    width: IconFontSizes.large,\n                },\n                _d),\n        },\n        iconColor: {\n            color: semanticColors.menuIcon,\n        },\n        iconDisabled: {\n            color: semanticColors.disabledBodyText,\n        },\n        checkmarkIcon: {\n            color: semanticColors.bodySubtext,\n        },\n        subMenuIcon: {\n            height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n            lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n            color: palette.neutralSecondary,\n            textAlign: 'center',\n            display: 'inline-block',\n            verticalAlign: 'middle',\n            flexShrink: '0',\n            fontSize: IconFontSizes.small,\n            selectors: (_e = {\n                    ':hover': {\n                        color: palette.neutralPrimary,\n                    },\n                    ':active': {\n                        color: palette.neutralPrimary,\n                    }\n                },\n                _e[MediumScreenSelector] = {\n                    fontSize: IconFontSizes.medium, // 16px\n                },\n                _e),\n        },\n        splitButtonFlexContainer: [\n            getFocusStyle(theme),\n            {\n                display: 'flex',\n                height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n                flexWrap: 'nowrap',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n            },\n        ],\n    };\n    return concatStyleSets(menuItemStyles);\n});\n//# sourceMappingURL=ContextualMenu.cnstyles.js.map","import { styled } from '../../../Utilities';\nimport { PersonaCoinBase } from './PersonaCoin.base';\nimport { getStyles } from './PersonaCoin.styles';\n/**\n * PersonaCoin is used to render an individual's avatar and presence.\n */\nexport var PersonaCoin = styled(PersonaCoinBase, getStyles, undefined, {\n    scope: 'PersonaCoin',\n});\n//# sourceMappingURL=PersonaCoin.js.map","import { styled } from '../../Utilities';\nimport { PersonaBase } from './Persona.base';\nimport { getStyles } from './Persona.styles';\n/**\n * Personas are used for rendering an individual's avatar, presence and details.\n * They are used within the PeoplePicker components.\n */\nexport var Persona = styled(PersonaBase, getStyles, undefined, {\n    scope: 'Persona',\n});\n//# sourceMappingURL=Persona.js.map","import { __assign, __rest } from \"tslib\";\n/** @jsxRuntime classic */\n/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '@fluentui/foundation-legacy';\nimport { css, getNativeProps, htmlElementProperties, warnDeprecations } from '../../Utilities';\nimport { styles, GlobalClassNames as StackGlobalClassNames } from './Stack.styles';\nimport { StackItem } from './StackItem/StackItem';\nvar StackView = function (props) {\n    var _a = props.as, RootType = _a === void 0 ? 'div' : _a, _b = props.disableShrink, disableShrink = _b === void 0 ? false : _b, \n    // eslint-disable-next-line deprecation/deprecation\n    _c = props.doNotRenderFalsyValues, \n    // eslint-disable-next-line deprecation/deprecation\n    doNotRenderFalsyValues = _c === void 0 ? false : _c, _d = props.enableScopedSelectors, enableScopedSelectors = _d === void 0 ? false : _d, wrap = props.wrap, rest = __rest(props, [\"as\", \"disableShrink\", \"doNotRenderFalsyValues\", \"enableScopedSelectors\", \"wrap\"]);\n    warnDeprecations('Stack', props, {\n        gap: 'tokens.childrenGap',\n        maxHeight: 'tokens.maxHeight',\n        maxWidth: 'tokens.maxWidth',\n        padding: 'tokens.padding',\n    });\n    var stackChildren = _processStackChildren(props.children, {\n        disableShrink: disableShrink,\n        enableScopedSelectors: enableScopedSelectors,\n        doNotRenderFalsyValues: doNotRenderFalsyValues,\n    });\n    var nativeProps = getNativeProps(rest, htmlElementProperties);\n    var Slots = getSlots(props, {\n        root: RootType,\n        inner: 'div',\n    });\n    if (wrap) {\n        return (withSlots(Slots.root, __assign({}, nativeProps),\n            withSlots(Slots.inner, null, stackChildren)));\n    }\n    return withSlots(Slots.root, __assign({}, nativeProps), stackChildren);\n};\nfunction _processStackChildren(children, _a) {\n    var disableShrink = _a.disableShrink, enableScopedSelectors = _a.enableScopedSelectors, doNotRenderFalsyValues = _a.doNotRenderFalsyValues;\n    var childrenArray = React.Children.toArray(children);\n    childrenArray = React.Children.map(childrenArray, function (child) {\n        if (!child) {\n            return doNotRenderFalsyValues ? null : child;\n        }\n        // We need to allow children that aren't falsy values, but not valid elements since they could be\n        // a string like <Stack>{'sample string'}</Stack>\n        if (!React.isValidElement(child)) {\n            return child;\n        }\n        if (child.type === React.Fragment) {\n            return child.props.children\n                ? _processStackChildren(child.props.children, { disableShrink: disableShrink, enableScopedSelectors: enableScopedSelectors, doNotRenderFalsyValues: doNotRenderFalsyValues })\n                : null;\n        }\n        var childAsReactElement = child;\n        var defaultItemProps = {};\n        if (_isStackItem(child)) {\n            defaultItemProps = { shrink: !disableShrink };\n        }\n        var childClassName = childAsReactElement.props.className;\n        return React.cloneElement(childAsReactElement, __assign(__assign(__assign(__assign({}, defaultItemProps), childAsReactElement.props), (childClassName && { className: childClassName })), (enableScopedSelectors && { className: css(StackGlobalClassNames.child, childClassName) })));\n    });\n    return childrenArray;\n}\nfunction _isStackItem(item) {\n    // In theory, we should be able to just check item.type === StackItem.\n    // However, under certain unclear circumstances (see https://github.com/microsoft/fluentui/issues/10785),\n    // the object identity is different despite the function implementation being the same.\n    return (!!item &&\n        typeof item === 'object' &&\n        !!item.type &&\n        // StackItem is generated by createComponent, so we need to check its displayName instead of name\n        item.type.displayName === StackItem.displayName);\n}\nvar StackStatics = {\n    Item: StackItem,\n};\nexport var Stack = createComponent(StackView, {\n    displayName: 'Stack',\n    styles: styles,\n    statics: StackStatics,\n});\nexport default Stack;\n//# sourceMappingURL=Stack.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, FontWeights, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { sizeBoolean, sizeToPixels } from '../PersonaConsts';\nvar GlobalClassNames = {\n    coin: 'ms-Persona-coin',\n    imageArea: 'ms-Persona-imageArea',\n    image: 'ms-Persona-image',\n    initials: 'ms-Persona-initials',\n    size8: 'ms-Persona--size8',\n    size10: 'ms-Persona--size10',\n    size16: 'ms-Persona--size16',\n    size24: 'ms-Persona--size24',\n    size28: 'ms-Persona--size28',\n    size32: 'ms-Persona--size32',\n    size40: 'ms-Persona--size40',\n    size48: 'ms-Persona--size48',\n    size56: 'ms-Persona--size56',\n    size72: 'ms-Persona--size72',\n    size100: 'ms-Persona--size100',\n    size120: 'ms-Persona--size120',\n};\nexport var getStyles = function (props) {\n    var _a;\n    var className = props.className, theme = props.theme, coinSize = props.coinSize;\n    var palette = theme.palette, fonts = theme.fonts;\n    var size = sizeBoolean(props.size);\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    // Static colors used when displaying 'unknown persona' coin\n    var unknownPersonaBackgroundColor = 'rgb(234, 234, 234)';\n    var unknownPersonaFontColor = 'rgb(168, 0, 0)';\n    var dimension = coinSize || (props.size && sizeToPixels[props.size]) || 48;\n    return {\n        coin: [\n            classNames.coin,\n            fonts.medium,\n            size.isSize8 && classNames.size8,\n            size.isSize10 && classNames.size10,\n            size.isSize16 && classNames.size16,\n            size.isSize24 && classNames.size24,\n            size.isSize28 && classNames.size28,\n            size.isSize32 && classNames.size32,\n            size.isSize40 && classNames.size40,\n            size.isSize48 && classNames.size48,\n            size.isSize56 && classNames.size56,\n            size.isSize72 && classNames.size72,\n            size.isSize100 && classNames.size100,\n            size.isSize120 && classNames.size120,\n            className,\n        ],\n        size10WithoutPresenceIcon: {\n            fontSize: fonts.xSmall.fontSize,\n            position: 'absolute',\n            top: '5px',\n            right: 'auto',\n            left: 0,\n        },\n        imageArea: [\n            classNames.imageArea,\n            {\n                position: 'relative',\n                textAlign: 'center',\n                flex: '0 0 auto',\n                height: dimension,\n                width: dimension,\n            },\n            dimension <= 10 && {\n                overflow: 'visible',\n                background: 'transparent',\n                height: 0,\n                width: 0,\n            },\n        ],\n        image: [\n            classNames.image,\n            {\n                marginRight: '10px',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                border: 0,\n                borderRadius: '50%',\n                perspective: '1px',\n            },\n            dimension <= 10 && {\n                overflow: 'visible',\n                background: 'transparent',\n                height: 0,\n                width: 0,\n            },\n            dimension > 10 && {\n                height: dimension,\n                width: dimension,\n            },\n        ],\n        initials: [\n            classNames.initials,\n            {\n                borderRadius: '50%',\n                color: props.showUnknownPersonaCoin ? unknownPersonaFontColor : palette.white,\n                fontSize: fonts.large.fontSize,\n                fontWeight: FontWeights.semibold,\n                // copying the logic for the dimensions; defaulted to 46 for size48\n                lineHeight: dimension === 48 ? 46 : dimension,\n                height: dimension,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = __assign(__assign({ border: '1px solid WindowText' }, getHighContrastNoAdjustStyle()), { color: 'WindowText', boxSizing: 'border-box', backgroundColor: 'Window !important' }),\n                    _a.i = {\n                        fontWeight: FontWeights.semibold,\n                    },\n                    _a),\n            },\n            props.showUnknownPersonaCoin && {\n                backgroundColor: unknownPersonaBackgroundColor,\n            },\n            dimension < 32 && {\n                fontSize: fonts.xSmall.fontSize,\n            },\n            dimension >= 32 &&\n                dimension < 40 && {\n                fontSize: fonts.medium.fontSize,\n            },\n            dimension >= 40 &&\n                dimension < 56 && {\n                fontSize: fonts.mediumPlus.fontSize,\n            },\n            dimension >= 56 &&\n                dimension < 72 && {\n                fontSize: fonts.xLarge.fontSize,\n            },\n            dimension >= 72 &&\n                dimension < 100 && {\n                fontSize: fonts.xxLarge.fontSize,\n            },\n            dimension >= 100 && {\n                fontSize: fonts.superLarge.fontSize,\n            },\n        ],\n    };\n};\n//# sourceMappingURL=PersonaCoin.styles.js.map","import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, memoizeFunction } from '../../../Utilities';\nimport { ShimmerElementType, ShimmerElementsDefaultHeights } from '../Shimmer.types';\nimport { ShimmerLine } from '../ShimmerLine/ShimmerLine';\nimport { ShimmerGap } from '../ShimmerGap/ShimmerGap';\nimport { ShimmerCircle } from '../ShimmerCircle/ShimmerCircle';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory Shimmer}\n */\nexport var ShimmerElementsGroupBase = function (props) {\n    var styles = props.styles, _a = props.width, width = _a === void 0 ? 'auto' : _a, shimmerElements = props.shimmerElements, _b = props.rowHeight, rowHeight = _b === void 0 ? findMaxElementHeight(shimmerElements || []) : _b, _c = props.flexWrap, flexWrap = _c === void 0 ? false : _c, theme = props.theme, backgroundColor = props.backgroundColor;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        flexWrap: flexWrap,\n    });\n    return (React.createElement(\"div\", { style: { width: width }, className: classNames.root }, getRenderedElements(shimmerElements, backgroundColor, rowHeight)));\n};\nfunction getRenderedElements(shimmerElements, backgroundColor, rowHeight) {\n    var renderedElements = shimmerElements ? (shimmerElements.map(\n    // false positive\n    // eslint-disable-next-line array-callback-return\n    function (element, index) {\n        var type = element.type, filteredElem = __rest(element, [\"type\"]);\n        var verticalAlign = filteredElem.verticalAlign, height = filteredElem.height;\n        var styles = getElementStyles(verticalAlign, type, height, backgroundColor, rowHeight);\n        switch (element.type) {\n            case ShimmerElementType.circle:\n                return React.createElement(ShimmerCircle, __assign({ key: index }, filteredElem, { styles: styles }));\n            case ShimmerElementType.gap:\n                return React.createElement(ShimmerGap, __assign({ key: index }, filteredElem, { styles: styles }));\n            case ShimmerElementType.line:\n                return React.createElement(ShimmerLine, __assign({ key: index }, filteredElem, { styles: styles }));\n        }\n    })) : (React.createElement(ShimmerLine, { height: ShimmerElementsDefaultHeights.line }));\n    return renderedElements;\n}\nvar getElementStyles = memoizeFunction(function (verticalAlign, elementType, elementHeight, backgroundColor, rowHeight) {\n    var dif = rowHeight && elementHeight ? rowHeight - elementHeight : 0;\n    var borderStyle;\n    if (!verticalAlign || verticalAlign === 'center') {\n        borderStyle = {\n            borderBottomWidth: \"\".concat(dif ? Math.floor(dif / 2) : 0, \"px\"),\n            borderTopWidth: \"\".concat(dif ? Math.ceil(dif / 2) : 0, \"px\"),\n        };\n    }\n    else if (verticalAlign && verticalAlign === 'top') {\n        borderStyle = {\n            borderBottomWidth: \"\".concat(dif, \"px\"),\n            borderTopWidth: \"0px\",\n        };\n    }\n    else if (verticalAlign && verticalAlign === 'bottom') {\n        borderStyle = {\n            borderBottomWidth: \"0px\",\n            borderTopWidth: \"\".concat(dif, \"px\"),\n        };\n    }\n    if (backgroundColor) {\n        switch (elementType) {\n            case ShimmerElementType.circle:\n                return {\n                    root: __assign(__assign({}, borderStyle), { borderColor: backgroundColor }),\n                    svg: { fill: backgroundColor },\n                };\n            case ShimmerElementType.gap:\n                return {\n                    root: __assign(__assign({}, borderStyle), { borderColor: backgroundColor, backgroundColor: backgroundColor }),\n                };\n            case ShimmerElementType.line:\n                return {\n                    root: __assign(__assign({}, borderStyle), { borderColor: backgroundColor }),\n                    topLeftCorner: { fill: backgroundColor },\n                    topRightCorner: { fill: backgroundColor },\n                    bottomLeftCorner: { fill: backgroundColor },\n                    bottomRightCorner: { fill: backgroundColor },\n                };\n        }\n    }\n    return {\n        root: borderStyle,\n    };\n});\n/**\n * User should not worry to provide which of the elements is the highest so we do the calculation for him.\n * Plus if user forgot to specify the height we assign their defaults.\n */\nfunction findMaxElementHeight(shimmerElements) {\n    var shimmerElementsDefaulted = shimmerElements.map(function (element) {\n        switch (element.type) {\n            case ShimmerElementType.circle:\n                if (!element.height) {\n                    element.height = ShimmerElementsDefaultHeights.circle;\n                }\n                break;\n            case ShimmerElementType.line:\n                if (!element.height) {\n                    element.height = ShimmerElementsDefaultHeights.line;\n                }\n                break;\n            case ShimmerElementType.gap:\n                if (!element.height) {\n                    element.height = ShimmerElementsDefaultHeights.gap;\n                }\n                break;\n        }\n        return element;\n    });\n    var rowHeight = shimmerElementsDefaulted.reduce(function (acc, next) {\n        return next.height ? (next.height > acc ? next.height : acc) : acc;\n    }, 0);\n    return rowHeight;\n}\n//# sourceMappingURL=ShimmerElementsGroup.base.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { getRTL, classNamesFunction } from '@fluentui/utilities';\nimport { FocusZone } from '../../FocusZone';\nimport { getDateRangeArray, getDayGrid, getBoundedDateRange, isRestrictedDate, DAYS_IN_WEEK, compareDates, DateRangeType, } from '@fluentui/date-time-utilities';\nimport { usePrevious, useId } from '@fluentui/react-hooks';\nimport { CalendarMonthHeaderRow } from './CalendarMonthHeaderRow';\nimport { CalendarGridRow } from './CalendarGridRow';\nvar getClassNames = classNamesFunction();\nfunction useDayRefs() {\n    var daysRef = React.useRef({});\n    var getSetRefCallback = function (dayKey) { return function (element) {\n        if (element === null) {\n            delete daysRef.current[dayKey];\n        }\n        else {\n            daysRef.current[dayKey] = element;\n        }\n    }; };\n    return [daysRef, getSetRefCallback];\n}\nfunction useWeeks(props, onSelectDate, getSetRefCallback) {\n    /**\n     * Initial parsing of the given props to generate IDayInfo two dimensional array, which contains a representation\n     * of every day in the grid. Convenient for helping with conversions between day refs and Date objects in callbacks.\n     */\n    var weeks = React.useMemo(function () {\n        var _a;\n        var weeksGrid = getDayGrid(props);\n        var firstVisibleDay = weeksGrid[1][0].originalDate;\n        var lastVisibleDay = weeksGrid[weeksGrid.length - 1][6].originalDate;\n        var markedDays = ((_a = props.getMarkedDays) === null || _a === void 0 ? void 0 : _a.call(props, firstVisibleDay, lastVisibleDay)) || [];\n        /**\n         * Weeks is a 2D array. Weeks[0] contains the last week of the prior range,\n         * Weeks[weeks.length - 1] contains first week of next range. These are for transition states.\n         *\n         * Weeks[1... weeks.length - 2] contains the actual visible data\n         */\n        var returnValue = [];\n        for (var weekIndex = 0; weekIndex < weeksGrid.length; weekIndex++) {\n            var week = [];\n            var _loop_1 = function (dayIndex) {\n                var day = weeksGrid[weekIndex][dayIndex];\n                var dayInfo = __assign(__assign({ onSelected: function () { return onSelectDate(day.originalDate); }, setRef: getSetRefCallback(day.key) }, day), { isMarked: day.isMarked || (markedDays === null || markedDays === void 0 ? void 0 : markedDays.some(function (markedDay) { return compareDates(day.originalDate, markedDay); })) });\n                week.push(dayInfo);\n            };\n            for (var dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n                _loop_1(dayIndex);\n            }\n            returnValue.push(week);\n        }\n        return returnValue;\n        // TODO: this is missing deps on getSetRefCallback and onSelectDate (and depending on the entire\n        // props object may not be a good idea due to likely frequent mutation). It would be easy to\n        // fix getSetRefCallback to not mutate every render, but onSelectDate is passed down from\n        // Calendar and trying to fix it requires a huge cascade of changes.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props]);\n    return weeks;\n}\n/**\n * Hook to determine whether to animate the CalendarDayGrid forwards or backwards\n * @returns true if the grid should animate backwards; false otherwise\n */\nfunction useAnimateBackwards(weeks) {\n    var previousNavigatedDate = usePrevious(weeks[0][0].originalDate);\n    if (!previousNavigatedDate || previousNavigatedDate.getTime() === weeks[0][0].originalDate.getTime()) {\n        return undefined;\n    }\n    else if (previousNavigatedDate <= weeks[0][0].originalDate) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\nfunction useWeekCornerStyles(props) {\n    /**\n     *\n     * Section for setting the rounded corner styles on individual day cells. Individual day cells need different\n     * corners to be rounded depending on which date range type and where the cell is located in the current grid.\n     * If we just round all of the corners, there isn't a good overlap and we get gaps between contiguous day boxes\n     * in Edge browser.\n     *\n     */\n    var getWeekCornerStyles = function (classNames, initialWeeks) {\n        var weekCornersStyled = {};\n        /* need to handle setting all of the corners on arbitrarily shaped blobs\n              __\n           __|A |\n          |B |C |__\n          |D |E |F |\n    \n          in this case, A needs top left rounded, top right rounded\n          B needs top left rounded\n          C doesn't need any rounding\n          D needs bottom left rounded\n          E doesn't need any rounding\n          F needs top right rounding\n        */\n        // cut off the animation transition weeks\n        var weeks = initialWeeks.slice(1, initialWeeks.length - 1);\n        // if there's an item above, lose both top corners. Item below, lose both bottom corners, etc.\n        weeks.forEach(function (week, weekIndex) {\n            week.forEach(function (day, dayIndex) {\n                var above = weeks[weekIndex - 1] &&\n                    weeks[weekIndex - 1][dayIndex] &&\n                    isInSameHoverRange(weeks[weekIndex - 1][dayIndex].originalDate, day.originalDate, weeks[weekIndex - 1][dayIndex].isSelected, day.isSelected);\n                var below = weeks[weekIndex + 1] &&\n                    weeks[weekIndex + 1][dayIndex] &&\n                    isInSameHoverRange(weeks[weekIndex + 1][dayIndex].originalDate, day.originalDate, weeks[weekIndex + 1][dayIndex].isSelected, day.isSelected);\n                var left = weeks[weekIndex][dayIndex - 1] &&\n                    isInSameHoverRange(weeks[weekIndex][dayIndex - 1].originalDate, day.originalDate, weeks[weekIndex][dayIndex - 1].isSelected, day.isSelected);\n                var right = weeks[weekIndex][dayIndex + 1] &&\n                    isInSameHoverRange(weeks[weekIndex][dayIndex + 1].originalDate, day.originalDate, weeks[weekIndex][dayIndex + 1].isSelected, day.isSelected);\n                var style = [];\n                style.push(calculateRoundedStyles(classNames, above, below, left, right));\n                style.push(calculateBorderStyles(classNames, above, below, left, right));\n                weekCornersStyled[weekIndex + '_' + dayIndex] = style.join(' ');\n            });\n        });\n        return weekCornersStyled;\n    };\n    var calculateRoundedStyles = function (classNames, above, below, left, right) {\n        var style = [];\n        var roundedTopLeft = !above && !left;\n        var roundedTopRight = !above && !right;\n        var roundedBottomLeft = !below && !left;\n        var roundedBottomRight = !below && !right;\n        if (roundedTopLeft) {\n            style.push(getRTL() ? classNames.topRightCornerDate : classNames.topLeftCornerDate);\n        }\n        if (roundedTopRight) {\n            style.push(getRTL() ? classNames.topLeftCornerDate : classNames.topRightCornerDate);\n        }\n        if (roundedBottomLeft) {\n            style.push(getRTL() ? classNames.bottomRightCornerDate : classNames.bottomLeftCornerDate);\n        }\n        if (roundedBottomRight) {\n            style.push(getRTL() ? classNames.bottomLeftCornerDate : classNames.bottomRightCornerDate);\n        }\n        return style.join(' ');\n    };\n    var calculateBorderStyles = function (classNames, above, below, left, right) {\n        var style = [];\n        if (!above) {\n            style.push(classNames.datesAbove);\n        }\n        if (!below) {\n            style.push(classNames.datesBelow);\n        }\n        if (!left) {\n            style.push(getRTL() ? classNames.datesRight : classNames.datesLeft);\n        }\n        if (!right) {\n            style.push(getRTL() ? classNames.datesLeft : classNames.datesRight);\n        }\n        return style.join(' ');\n    };\n    var isInSameHoverRange = function (date1, date2, date1Selected, date2Selected) {\n        var dateRangeType = props.dateRangeType, firstDayOfWeek = props.firstDayOfWeek, workWeekDays = props.workWeekDays;\n        // The hover state looks weird with non-contiguous days in work week view. In work week, show week hover state\n        var dateRangeHoverType = dateRangeType === DateRangeType.WorkWeek ? DateRangeType.Week : dateRangeType;\n        // we do not pass daysToSelectInDayView because we handle setting those styles dyanamically in onMouseOver\n        var dateRange = getDateRangeArray(date1, dateRangeHoverType, firstDayOfWeek, workWeekDays);\n        if (date1Selected !== date2Selected) {\n            // if one is selected and the other is not, they can't be in the same range\n            return false;\n        }\n        else if (date1Selected && date2Selected) {\n            // if they're both selected at the same time they must be in the same range\n            return true;\n        }\n        // otherwise, both must be unselected, so check the dateRange\n        return dateRange.filter(function (date) { return date.getTime() === date2.getTime(); }).length > 0;\n    };\n    return [getWeekCornerStyles, calculateRoundedStyles];\n}\nexport var CalendarDayGridBase = function (props) {\n    var navigatedDayRef = React.useRef(null);\n    var activeDescendantId = useId();\n    var onSelectDate = function (selectedDate) {\n        var _a, _b;\n        var firstDayOfWeek = props.firstDayOfWeek, minDate = props.minDate, maxDate = props.maxDate, workWeekDays = props.workWeekDays, daysToSelectInDayView = props.daysToSelectInDayView, restrictedDates = props.restrictedDates;\n        var restrictedDatesOptions = { minDate: minDate, maxDate: maxDate, restrictedDates: restrictedDates };\n        var dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek, workWeekDays, daysToSelectInDayView);\n        dateRange = getBoundedDateRange(dateRange, minDate, maxDate);\n        dateRange = dateRange.filter(function (d) {\n            return !isRestrictedDate(d, restrictedDatesOptions);\n        });\n        (_a = props.onSelectDate) === null || _a === void 0 ? void 0 : _a.call(props, selectedDate, dateRange);\n        (_b = props.onNavigateDate) === null || _b === void 0 ? void 0 : _b.call(props, selectedDate, true);\n    };\n    var _a = useDayRefs(), daysRef = _a[0], getSetRefCallback = _a[1];\n    var weeks = useWeeks(props, onSelectDate, getSetRefCallback);\n    var animateBackwards = useAnimateBackwards(weeks);\n    var _b = useWeekCornerStyles(props), getWeekCornerStyles = _b[0], calculateRoundedStyles = _b[1];\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        focus: function () {\n            var _a, _b;\n            (_b = (_a = navigatedDayRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        },\n    }); }, []);\n    /**\n     *\n     * Section for setting hover/pressed styles. Because we want arbitrary blobs of days to be selectable, to support\n     * highlighting every day in the month for month view, css :hover style isn't enough, so we need mouse callbacks\n     * to set classnames on all relevant child refs to apply the styling\n     *\n     */\n    var getDayInfosInRangeOfDay = function (dayToCompare) {\n        // The hover state looks weird with non-contiguous days in work week view. In work week, show week hover state\n        var dateRangeHoverType = getDateRangeTypeToUse(props.dateRangeType, props.workWeekDays);\n        // gets all the dates for the given date range type that are in the same date range as the given day\n        var dateRange = getDateRangeArray(dayToCompare.originalDate, dateRangeHoverType, props.firstDayOfWeek, props.workWeekDays, props.daysToSelectInDayView).map(function (date) { return date.getTime(); });\n        // gets all the day refs for the given dates\n        var dayInfosInRange = weeks.reduce(function (accumulatedValue, currentWeek) {\n            return accumulatedValue.concat(currentWeek.filter(function (weekDay) { return dateRange.indexOf(weekDay.originalDate.getTime()) !== -1; }));\n        }, []);\n        return dayInfosInRange;\n    };\n    var getRefsFromDayInfos = function (dayInfosInRange) {\n        var dayRefs = [];\n        dayRefs = dayInfosInRange.map(function (dayInfo) { return daysRef.current[dayInfo.key]; });\n        return dayRefs;\n    };\n    var styles = props.styles, theme = props.theme, className = props.className, dateRangeType = props.dateRangeType, showWeekNumbers = props.showWeekNumbers, labelledBy = props.labelledBy, lightenDaysOutsideNavigatedMonth = props.lightenDaysOutsideNavigatedMonth, animationDirection = props.animationDirection;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        dateRangeType: dateRangeType,\n        showWeekNumbers: showWeekNumbers,\n        lightenDaysOutsideNavigatedMonth: lightenDaysOutsideNavigatedMonth === undefined ? true : lightenDaysOutsideNavigatedMonth,\n        animationDirection: animationDirection,\n        animateBackwards: animateBackwards,\n    });\n    // When the month is highlighted get the corner dates so that styles can be added to them\n    var weekCorners = getWeekCornerStyles(classNames, weeks);\n    var partialWeekProps = {\n        weeks: weeks,\n        navigatedDayRef: navigatedDayRef,\n        calculateRoundedStyles: calculateRoundedStyles,\n        activeDescendantId: activeDescendantId,\n        classNames: classNames,\n        weekCorners: weekCorners,\n        getDayInfosInRangeOfDay: getDayInfosInRangeOfDay,\n        getRefsFromDayInfos: getRefsFromDayInfos,\n    };\n    return (React.createElement(FocusZone, { className: classNames.wrapper, preventDefaultWhenHandled: true },\n        React.createElement(\"table\", { className: classNames.table, \"aria-multiselectable\": \"false\", \"aria-labelledby\": labelledBy, \"aria-activedescendant\": activeDescendantId, role: \"grid\" },\n            React.createElement(\"tbody\", null,\n                React.createElement(CalendarMonthHeaderRow, __assign({}, props, { classNames: classNames, weeks: weeks })),\n                React.createElement(CalendarGridRow, __assign({}, props, partialWeekProps, { week: weeks[0], weekIndex: -1, rowClassName: classNames.firstTransitionWeek, ariaRole: \"presentation\", ariaHidden: true })),\n                weeks.slice(1, weeks.length - 1).map(function (week, weekIndex) { return (React.createElement(CalendarGridRow, __assign({}, props, partialWeekProps, { key: weekIndex, week: week, weekIndex: weekIndex, rowClassName: classNames.weekRow }))); }),\n                React.createElement(CalendarGridRow, __assign({}, props, partialWeekProps, { week: weeks[weeks.length - 1], weekIndex: -2, rowClassName: classNames.lastTransitionWeek, ariaRole: \"presentation\", ariaHidden: true }))))));\n};\nCalendarDayGridBase.displayName = 'CalendarDayGridBase';\n/**\n * When given work week, if the days are non-contiguous, the hover states look really weird. So for non-contiguous\n * work weeks, we'll just show week view instead.\n */\nfunction getDateRangeTypeToUse(dateRangeType, workWeekDays) {\n    if (workWeekDays && dateRangeType === DateRangeType.WorkWeek) {\n        var sortedWWDays = workWeekDays.slice().sort();\n        var isContiguous = true;\n        for (var i = 1; i < sortedWWDays.length; i++) {\n            if (sortedWWDays[i] !== sortedWWDays[i - 1] + 1) {\n                isContiguous = false;\n                break;\n            }\n        }\n        if (!isContiguous || workWeekDays.length === 0) {\n            return DateRangeType.Week;\n        }\n    }\n    return dateRangeType;\n}\n//# sourceMappingURL=CalendarDayGrid.base.js.map","import { styled } from '@fluentui/utilities';\nimport { PivotBase } from './Pivot.base';\nimport { getStyles } from './Pivot.styles';\n/**\n * The Pivot control and related tabs pattern are used for navigating frequently accessed,\n * distinct content categories. Pivots allow for navigation between two or more content\n * views and relies on text headers to articulate the different sections of content.\n */\nexport var Pivot = styled(PivotBase, getStyles, undefined, {\n    scope: 'Pivot',\n});\n//# sourceMappingURL=Pivot.js.map","import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory Shimmer}\n */\nexport var ShimmerLineBase = function (props) {\n    // eslint-disable-next-line deprecation/deprecation\n    var height = props.height, styles = props.styles, _a = props.width, width = _a === void 0 ? '100%' : _a, borderStyle = props.borderStyle, theme = props.theme;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        height: height,\n        borderStyle: borderStyle,\n    });\n    return (React.createElement(\"div\", { style: { width: width, minWidth: typeof width === 'number' ? \"\".concat(width, \"px\") : 'auto' }, className: classNames.root },\n        React.createElement(\"svg\", { width: \"2\", height: \"2\", className: classNames.topLeftCorner },\n            React.createElement(\"path\", { d: \"M0 2 A 2 2, 0, 0, 1, 2 0 L 0 0 Z\" })),\n        React.createElement(\"svg\", { width: \"2\", height: \"2\", className: classNames.topRightCorner },\n            React.createElement(\"path\", { d: \"M0 0 A 2 2, 0, 0, 1, 2 2 L 2 0 Z\" })),\n        React.createElement(\"svg\", { width: \"2\", height: \"2\", className: classNames.bottomRightCorner },\n            React.createElement(\"path\", { d: \"M2 0 A 2 2, 0, 0, 1, 0 2 L 2 2 Z\" })),\n        React.createElement(\"svg\", { width: \"2\", height: \"2\", className: classNames.bottomLeftCorner },\n            React.createElement(\"path\", { d: \"M2 2 A 2 2, 0, 0, 1, 0 0 L 0 2 Z\" }))));\n};\n//# sourceMappingURL=ShimmerLine.base.js.map","import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nvar DialogFooterBase = /** @class */ (function (_super) {\n    __extends(DialogFooterBase, _super);\n    function DialogFooterBase(props) {\n        var _this = _super.call(this, props) || this;\n        initializeComponentRef(_this);\n        return _this;\n    }\n    DialogFooterBase.prototype.render = function () {\n        var _a = this.props, className = _a.className, styles = _a.styles, theme = _a.theme;\n        this._classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n        });\n        return (React.createElement(\"div\", { className: this._classNames.actions },\n            React.createElement(\"div\", { className: this._classNames.actionsRight }, this._renderChildrenAsActions())));\n    };\n    DialogFooterBase.prototype._renderChildrenAsActions = function () {\n        var _this = this;\n        return React.Children.map(this.props.children, function (child) {\n            return child ? React.createElement(\"span\", { className: _this._classNames.action }, child) : null;\n        });\n    };\n    return DialogFooterBase;\n}(React.Component));\nexport { DialogFooterBase };\n//# sourceMappingURL=DialogFooter.base.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { buttonProperties, getNativeProps, KeyCodes, mergeAriaAttributeValues, memoizeFunction, Async, EventGroup, getId, composeComponentAs, } from '../../../Utilities';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { getSplitButtonVerticalDividerClassNames } from '../ContextualMenu.classNames';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, getMenuItemAriaRole, hasSubmenu, isItemDisabled } from '../../../utilities/contextualMenu/index';\nimport { VerticalDivider } from '../../../Divider';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nvar TouchIdleDelay = 500; /* ms */\nvar ContextualMenuSplitButton = /** @class */ (function (_super) {\n    __extends(ContextualMenuSplitButton, _super);\n    function ContextualMenuSplitButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this._getMemoizedMenuButtonKeytipProps = memoizeFunction(function (keytipProps) {\n            return __assign(__assign({}, keytipProps), { hasMenu: true });\n        });\n        _this._onItemKeyDown = function (ev) {\n            var _a = _this.props, item = _a.item, onItemKeyDown = _a.onItemKeyDown;\n            // eslint-disable-next-line deprecation/deprecation\n            if (ev.which === KeyCodes.enter) {\n                _this._executeItemClick(ev);\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            else if (onItemKeyDown) {\n                onItemKeyDown(item, ev);\n            }\n        };\n        _this._getSubmenuTarget = function () {\n            return _this._splitButton;\n        };\n        _this._renderAriaDescription = function (ariaDescription, className) {\n            // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n            return ariaDescription ? (React.createElement(\"span\", { id: _this._ariaDescriptionId, className: className }, ariaDescription)) : null;\n        };\n        _this._onItemMouseEnterPrimary = function (ev) {\n            var _a = _this.props, item = _a.item, onItemMouseEnter = _a.onItemMouseEnter;\n            if (onItemMouseEnter) {\n                onItemMouseEnter(__assign(__assign({}, item), { subMenuProps: undefined, items: undefined }), ev, _this._splitButton);\n            }\n        };\n        _this._onItemMouseEnterIcon = function (ev) {\n            var _a = _this.props, item = _a.item, onItemMouseEnter = _a.onItemMouseEnter;\n            if (onItemMouseEnter) {\n                onItemMouseEnter(item, ev, _this._splitButton);\n            }\n        };\n        _this._onItemMouseMovePrimary = function (ev) {\n            var _a = _this.props, item = _a.item, onItemMouseMove = _a.onItemMouseMove;\n            if (onItemMouseMove) {\n                onItemMouseMove(__assign(__assign({}, item), { subMenuProps: undefined, items: undefined }), ev, _this._splitButton);\n            }\n        };\n        _this._onItemMouseMoveIcon = function (ev) {\n            var _a = _this.props, item = _a.item, onItemMouseMove = _a.onItemMouseMove;\n            if (onItemMouseMove) {\n                onItemMouseMove(item, ev, _this._splitButton);\n            }\n        };\n        _this._onIconItemClick = function (ev) {\n            var _a = _this.props, item = _a.item, onItemClickBase = _a.onItemClickBase;\n            if (onItemClickBase) {\n                onItemClickBase(item, ev, (_this._splitButton ? _this._splitButton : ev.currentTarget));\n            }\n        };\n        _this._executeItemClick = function (ev) {\n            var _a = _this.props, item = _a.item, executeItemClick = _a.executeItemClick, onItemClick = _a.onItemClick;\n            if (item.disabled || item.isDisabled) {\n                return;\n            }\n            if (_this._processingTouch && !item.canCheck && onItemClick) {\n                return onItemClick(item, ev);\n            }\n            if (executeItemClick) {\n                executeItemClick(item, ev);\n            }\n        };\n        _this._onTouchStart = function (ev) {\n            if (_this._splitButton && !('onpointerdown' in _this._splitButton)) {\n                _this._handleTouchAndPointerEvent(ev);\n            }\n        };\n        _this._onPointerDown = function (ev) {\n            if (ev.pointerType === 'touch') {\n                _this._handleTouchAndPointerEvent(ev);\n                ev.preventDefault();\n                ev.stopImmediatePropagation();\n            }\n        };\n        _this._async = new Async(_this);\n        _this._events = new EventGroup(_this);\n        _this._dismissLabelId = getId();\n        return _this;\n    }\n    ContextualMenuSplitButton.prototype.componentDidMount = function () {\n        if (this._splitButton && 'onpointerdown' in this._splitButton) {\n            this._events.on(this._splitButton, 'pointerdown', this._onPointerDown, true);\n        }\n    };\n    ContextualMenuSplitButton.prototype.componentWillUnmount = function () {\n        this._async.dispose();\n        this._events.dispose();\n    };\n    ContextualMenuSplitButton.prototype.render = function () {\n        var _this = this;\n        var _a;\n        var _b = this.props, item = _b.item, classNames = _b.classNames, index = _b.index, focusableElementIndex = _b.focusableElementIndex, totalItemCount = _b.totalItemCount, hasCheckmarks = _b.hasCheckmarks, hasIcons = _b.hasIcons, onItemMouseLeave = _b.onItemMouseLeave, expandedMenuItemKey = _b.expandedMenuItemKey;\n        var itemHasSubmenu = hasSubmenu(item);\n        var keytipProps = item.keytipProps;\n        if (keytipProps) {\n            keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n        }\n        // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n        // the description in it to be added to ariaDescribedBy\n        var ariaDescription = item.ariaDescription;\n        if (ariaDescription) {\n            this._ariaDescriptionId = getId();\n        }\n        var ariaChecked = (_a = getIsChecked(item)) !== null && _a !== void 0 ? _a : undefined;\n        return (React.createElement(KeytipData, { keytipProps: keytipProps, disabled: isItemDisabled(item) }, function (keytipAttributes) { return (React.createElement(\"div\", { \"data-ktp-target\": keytipAttributes['data-ktp-target'], ref: function (splitButton) { return (_this._splitButton = splitButton); }, role: getMenuItemAriaRole(item), \"aria-label\": item.ariaLabel, className: classNames.splitContainer, \"aria-disabled\": isItemDisabled(item), \"aria-expanded\": itemHasSubmenu ? item.key === expandedMenuItemKey : undefined, \"aria-haspopup\": true, \"aria-describedby\": mergeAriaAttributeValues(item.ariaDescribedBy, ariaDescription ? _this._ariaDescriptionId : undefined, keytipAttributes['aria-describedby']), \"aria-checked\": ariaChecked, \"aria-posinset\": focusableElementIndex + 1, \"aria-setsize\": totalItemCount, onMouseEnter: _this._onItemMouseEnterPrimary, onMouseLeave: onItemMouseLeave ? onItemMouseLeave.bind(_this, __assign(__assign({}, item), { subMenuProps: null, items: null })) : undefined, onMouseMove: _this._onItemMouseMovePrimary, onKeyDown: _this._onItemKeyDown, onClick: _this._executeItemClick, onTouchStart: _this._onTouchStart, tabIndex: 0, \"data-is-focusable\": true, \"aria-roledescription\": item['aria-roledescription'] },\n            _this._renderSplitPrimaryButton(item, classNames, index, hasCheckmarks, hasIcons),\n            _this._renderSplitDivider(item),\n            _this._renderSplitIconButton(item, classNames, index, keytipAttributes),\n            _this._renderAriaDescription(ariaDescription, classNames.screenReaderText))); }));\n    };\n    ContextualMenuSplitButton.prototype._renderSplitPrimaryButton = function (item, \n    // eslint-disable-next-line deprecation/deprecation\n    classNames, index, hasCheckmarks, hasIcons) {\n        var _a = this.props, _b = _a.contextualMenuItemAs, ChildrenRenderer = _b === void 0 ? ContextualMenuItem : _b, onItemClick = _a.onItemClick;\n        var itemProps = {\n            key: item.key,\n            disabled: isItemDisabled(item) || item.primaryDisabled,\n            /* eslint-disable deprecation/deprecation */\n            name: item.name,\n            text: item.text || item.name,\n            secondaryText: item.secondaryText,\n            /* eslint-enable deprecation/deprecation */\n            className: classNames.splitPrimary,\n            canCheck: item.canCheck,\n            isChecked: item.isChecked,\n            checked: item.checked,\n            iconProps: item.iconProps,\n            id: this._dismissLabelId,\n            onClick: item.onClick,\n            onRenderIcon: item.onRenderIcon,\n            data: item.data,\n            'data-is-focusable': false,\n        };\n        var itemComponentProps = item.itemProps;\n        return (React.createElement(\"button\", __assign({}, getNativeProps(itemProps, buttonProperties)),\n            React.createElement(ChildrenRenderer, __assign({ \"data-is-focusable\": false, item: itemProps, classNames: classNames, index: index, onCheckmarkClick: hasCheckmarks && onItemClick ? onItemClick : undefined, hasIcons: hasIcons }, itemComponentProps))));\n    };\n    ContextualMenuSplitButton.prototype._renderSplitDivider = function (item) {\n        var getDividerClassNames = item.getSplitButtonVerticalDividerClassNames || getSplitButtonVerticalDividerClassNames;\n        return React.createElement(VerticalDivider, { getClassNames: getDividerClassNames });\n    };\n    ContextualMenuSplitButton.prototype._renderSplitIconButton = function (item, classNames, // eslint-disable-line deprecation/deprecation\n    index, keytipAttributes) {\n        var _a = this.props, onItemMouseLeave = _a.onItemMouseLeave, onItemMouseDown = _a.onItemMouseDown, openSubMenu = _a.openSubMenu, dismissSubMenu = _a.dismissSubMenu, dismissMenu = _a.dismissMenu;\n        var ChildrenRenderer = ContextualMenuItem;\n        if (this.props.item.contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(this.props.item.contextualMenuItemAs, ChildrenRenderer);\n        }\n        if (this.props.contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(this.props.contextualMenuItemAs, ChildrenRenderer);\n        }\n        var itemProps = {\n            onClick: this._onIconItemClick,\n            disabled: isItemDisabled(item),\n            className: classNames.splitMenu,\n            subMenuProps: item.subMenuProps,\n            submenuIconProps: item.submenuIconProps,\n            split: true,\n            key: item.key,\n            'aria-labelledby': this._dismissLabelId,\n        };\n        var buttonProps = __assign(__assign({}, getNativeProps(itemProps, buttonProperties)), {\n            onMouseEnter: this._onItemMouseEnterIcon,\n            onMouseLeave: onItemMouseLeave ? onItemMouseLeave.bind(this, item) : undefined,\n            onMouseDown: function (ev) {\n                return onItemMouseDown ? onItemMouseDown(item, ev) : undefined;\n            },\n            onMouseMove: this._onItemMouseMoveIcon,\n            'data-is-focusable': false,\n            'data-ktp-execute-target': keytipAttributes['data-ktp-execute-target'],\n            'aria-haspopup': true,\n        });\n        var itemComponentProps = item.itemProps;\n        return (React.createElement(\"button\", __assign({}, buttonProps),\n            React.createElement(ChildrenRenderer, __assign({ componentRef: item.componentRef, item: itemProps, classNames: classNames, index: index, hasIcons: false, openSubMenu: openSubMenu, dismissSubMenu: dismissSubMenu, dismissMenu: dismissMenu, getSubmenuTarget: this._getSubmenuTarget }, itemComponentProps))));\n    };\n    ContextualMenuSplitButton.prototype._handleTouchAndPointerEvent = function (ev) {\n        var _this = this;\n        var onTap = this.props.onTap;\n        if (onTap) {\n            onTap(ev);\n        }\n        // If we already have an existing timeout from a previous touch/pointer event\n        // cancel that timeout so we can set a new one.\n        if (this._lastTouchTimeoutId) {\n            this._async.clearTimeout(this._lastTouchTimeoutId);\n            this._lastTouchTimeoutId = undefined;\n        }\n        this._processingTouch = true;\n        this._lastTouchTimeoutId = this._async.setTimeout(function () {\n            _this._processingTouch = false;\n            _this._lastTouchTimeoutId = undefined;\n        }, TouchIdleDelay);\n    };\n    return ContextualMenuSplitButton;\n}(ContextualMenuItemWrapper));\nexport { ContextualMenuSplitButton };\n//# sourceMappingURL=ContextualMenuSplitButton.js.map","import { getStyles } from './VerticalDivider.styles';\nimport { VerticalDividerBase } from './VerticalDivider.base';\nimport { styled } from '../../Utilities';\nexport var VerticalDivider = styled(VerticalDividerBase, getStyles, undefined, {\n    scope: 'VerticalDivider',\n});\n//# sourceMappingURL=VerticalDivider.js.map","import { __assign } from \"tslib\";\nimport { concatStyleSets, getFocusStyle, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { ButtonGlobalClassNames } from '../BaseButton.classNames';\nexport var getStyles = memoizeFunction(function (theme, customStyles, focusInset, focusColor) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n    var baseButtonStyles = getBaseButtonStyles(theme);\n    var baseSplitButtonStyles = getSplitButtonStyles(theme);\n    var p = theme.palette, semanticColors = theme.semanticColors;\n    var commandButtonHighContrastFocus = {\n        left: 4,\n        top: 4,\n        bottom: 4,\n        right: 4,\n        border: 'none',\n    };\n    var commandButtonStyles = {\n        root: [\n            getFocusStyle(theme, {\n                inset: 2,\n                highContrastStyle: commandButtonHighContrastFocus,\n                borderColor: 'transparent',\n            }),\n            theme.fonts.medium,\n            (_a = {\n                    minWidth: '40px',\n                    backgroundColor: p.white,\n                    color: p.neutralPrimary,\n                    padding: '0 4px',\n                    border: 'none',\n                    borderRadius: 0\n                },\n                _a[HighContrastSelector] = {\n                    border: 'none',\n                },\n                _a),\n        ],\n        rootHovered: (_b = {\n                backgroundColor: p.neutralLighter,\n                color: p.neutralDark\n            },\n            _b[HighContrastSelector] = {\n                color: 'Highlight',\n            },\n            _b[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n                color: p.themeDarkAlt,\n            },\n            _b[\".\".concat(ButtonGlobalClassNames.msButtonMenuIcon)] = {\n                color: p.neutralPrimary,\n            },\n            _b),\n        rootPressed: (_c = {\n                backgroundColor: p.neutralLight,\n                color: p.neutralDark\n            },\n            _c[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n                color: p.themeDark,\n            },\n            _c[\".\".concat(ButtonGlobalClassNames.msButtonMenuIcon)] = {\n                color: p.neutralPrimary,\n            },\n            _c),\n        rootChecked: (_d = {\n                backgroundColor: p.neutralLight,\n                color: p.neutralDark\n            },\n            _d[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n                color: p.themeDark,\n            },\n            _d[\".\".concat(ButtonGlobalClassNames.msButtonMenuIcon)] = {\n                color: p.neutralPrimary,\n            },\n            _d),\n        rootCheckedHovered: (_e = {\n                backgroundColor: p.neutralQuaternaryAlt\n            },\n            _e[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n                color: p.themeDark,\n            },\n            _e[\".\".concat(ButtonGlobalClassNames.msButtonMenuIcon)] = {\n                color: p.neutralPrimary,\n            },\n            _e),\n        rootExpanded: (_f = {\n                backgroundColor: p.neutralLight,\n                color: p.neutralDark\n            },\n            _f[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n                color: p.themeDark,\n            },\n            _f[\".\".concat(ButtonGlobalClassNames.msButtonMenuIcon)] = {\n                color: p.neutralPrimary,\n            },\n            _f),\n        rootExpandedHovered: {\n            backgroundColor: p.neutralQuaternaryAlt,\n        },\n        rootDisabled: (_g = {\n                backgroundColor: p.white\n            },\n            _g[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = (_h = {\n                    color: semanticColors.disabledBodySubtext\n                },\n                _h[HighContrastSelector] = __assign({ color: 'GrayText' }, getHighContrastNoAdjustStyle()),\n                _h),\n            _g[HighContrastSelector] = __assign({ color: 'GrayText', backgroundColor: 'Window' }, getHighContrastNoAdjustStyle()),\n            _g),\n        // Split button styles\n        splitButtonContainer: (_j = {\n                height: '100%'\n            },\n            _j[HighContrastSelector] = {\n                border: 'none',\n            },\n            _j),\n        splitButtonDividerDisabled: (_k = {},\n            _k[HighContrastSelector] = {\n                backgroundColor: 'Window',\n            },\n            _k),\n        splitButtonDivider: {\n            backgroundColor: p.neutralTertiaryAlt,\n        },\n        splitButtonMenuButton: {\n            backgroundColor: p.white,\n            border: 'none',\n            borderTopRightRadius: '0',\n            borderBottomRightRadius: '0',\n            color: p.neutralSecondary,\n            ':hover': (_l = {\n                    backgroundColor: p.neutralLighter,\n                    color: p.neutralDark\n                },\n                _l[HighContrastSelector] = {\n                    color: 'Highlight',\n                },\n                _l[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n                    color: p.neutralPrimary,\n                },\n                _l),\n            ':active': (_m = {\n                    backgroundColor: p.neutralLight\n                },\n                _m[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n                    color: p.neutralPrimary,\n                },\n                _m),\n        },\n        splitButtonMenuButtonDisabled: (_o = {\n                backgroundColor: p.white\n            },\n            _o[HighContrastSelector] = __assign({ color: 'GrayText', border: 'none', backgroundColor: 'Window' }, getHighContrastNoAdjustStyle()),\n            _o),\n        splitButtonMenuButtonChecked: {\n            backgroundColor: p.neutralLight,\n            color: p.neutralDark,\n            ':hover': {\n                backgroundColor: p.neutralQuaternaryAlt,\n            },\n        },\n        splitButtonMenuButtonExpanded: {\n            backgroundColor: p.neutralLight,\n            color: p.black,\n            ':hover': {\n                backgroundColor: p.neutralQuaternaryAlt,\n            },\n        },\n        splitButtonMenuIcon: {\n            color: p.neutralPrimary,\n        },\n        splitButtonMenuIconDisabled: {\n            color: p.neutralTertiary,\n        },\n        label: {\n            fontWeight: 'normal', // theme.fontWeights.semibold,\n        },\n        icon: {\n            color: p.themePrimary,\n        },\n        menuIcon: {\n            color: p.neutralSecondary,\n        },\n    };\n    return concatStyleSets(baseButtonStyles, baseSplitButtonStyles, commandButtonStyles, customStyles);\n});\n//# sourceMappingURL=CommandBarButton.styles.js.map","import { getGlobalClassNames } from '../../Styling';\nvar inheritFont = { fontFamily: 'inherit' };\nvar GlobalClassNames = {\n    root: 'ms-Fabric',\n    bodyThemed: 'ms-Fabric-bodyThemed',\n};\nexport var getStyles = function (props) {\n    var applyTheme = props.applyTheme, className = props.className, preventBlanketFontInheritance = props.preventBlanketFontInheritance, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                color: theme.palette.neutralPrimary,\n            },\n            !preventBlanketFontInheritance && {\n                '& button': inheritFont,\n                '& input': inheritFont,\n                '& textarea': inheritFont,\n            },\n            // apply theme to only if applyTheme is true\n            applyTheme && {\n                color: theme.semanticColors.bodyText,\n                backgroundColor: theme.semanticColors.bodyBackground,\n            },\n            className,\n        ],\n        bodyThemed: [\n            {\n                backgroundColor: theme.semanticColors.bodyBackground,\n            },\n        ],\n    };\n};\n//# sourceMappingURL=Fabric.styles.js.map","import { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n    actions: 'ms-Dialog-actions',\n    action: 'ms-Dialog-action',\n    actionsRight: 'ms-Dialog-actionsRight',\n};\nexport var getStyles = function (props) {\n    var className = props.className, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        actions: [\n            classNames.actions,\n            {\n                position: 'relative',\n                width: '100%',\n                minHeight: '24px',\n                lineHeight: '24px',\n                margin: '16px 0 0',\n                fontSize: '0',\n                selectors: {\n                    '.ms-Button': {\n                        lineHeight: 'normal',\n                        verticalAlign: 'middle',\n                    },\n                },\n            },\n            className,\n        ],\n        action: [\n            classNames.action,\n            {\n                margin: '0 4px',\n            },\n        ],\n        actionsRight: [\n            classNames.actionsRight,\n            {\n                alignItems: 'center',\n                display: 'flex',\n                fontSize: '0',\n                justifyContent: 'flex-end',\n                marginRight: '-4px',\n            },\n        ],\n    };\n};\n//# sourceMappingURL=DialogFooter.styles.js.map","import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hoistMethods, unhoistMethods } from '../../Utilities';\nvar BaseDecorator = /** @class */ (function (_super) {\n    __extends(BaseDecorator, _super);\n    function BaseDecorator(props) {\n        var _this = _super.call(this, props) || this;\n        _this._updateComposedComponentRef = _this._updateComposedComponentRef.bind(_this);\n        return _this;\n    }\n    /**\n     * Updates the ref to the component composed by the decorator, which will also take care of hoisting\n     * (and unhoisting as appropriate) methods from said component.\n     *\n     * Pass this method as the argument to the 'ref' property of the composed component.\n     */\n    BaseDecorator.prototype._updateComposedComponentRef = function (composedComponentInstance) {\n        this._composedComponentInstance = composedComponentInstance;\n        if (composedComponentInstance) {\n            this._hoisted = hoistMethods(this, composedComponentInstance);\n        }\n        else if (this._hoisted) {\n            unhoistMethods(this, this._hoisted);\n        }\n    };\n    return BaseDecorator;\n}(React.Component));\nexport { BaseDecorator };\n//# sourceMappingURL=BaseDecorator.js.map","/**\n * {@docCategory Calendar}\n */\nexport var AnimationDirection;\n(function (AnimationDirection) {\n    /**\n     * Grid will transition out and in horizontally\n     */\n    AnimationDirection[AnimationDirection[\"Horizontal\"] = 0] = \"Horizontal\";\n    /**\n     * Grid will transition out and in vertically\n     */\n    AnimationDirection[AnimationDirection[\"Vertical\"] = 1] = \"Vertical\";\n})(AnimationDirection || (AnimationDirection = {}));\n//# sourceMappingURL=Calendar.types.js.map","import { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { DefaultButton } from '../DefaultButton/DefaultButton';\n/**\n * {@docCategory Button}\n */\nexport var PrimaryButton = /** @class */ (function (_super) {\n    __extends(PrimaryButton, _super);\n    function PrimaryButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PrimaryButton.prototype.render = function () {\n        return React.createElement(DefaultButton, __assign({}, this.props, { primary: true, onRenderDescription: nullRender }));\n    };\n    PrimaryButton = __decorate([\n        customizable('PrimaryButton', ['theme', 'styles'], true)\n    ], PrimaryButton);\n    return PrimaryButton;\n}(React.Component));\n//# sourceMappingURL=PrimaryButton.js.map","var _layersByHostId = {};\nvar _layerHostsById = {};\nvar defaultHostId = 'fluent-default-layer-host';\nvar _defaultHostSelector = \"#\".concat(defaultHostId);\n/**\n * Register a layer for a given host id\n * @param hostId - Id of the layer host\n * @param layer - Layer instance\n */\nexport function registerLayer(hostId, callback) {\n    if (!_layersByHostId[hostId]) {\n        _layersByHostId[hostId] = [];\n    }\n    _layersByHostId[hostId].push(callback);\n    var layerHosts = _layerHostsById[hostId];\n    if (layerHosts) {\n        for (var _i = 0, layerHosts_1 = layerHosts; _i < layerHosts_1.length; _i++) {\n            var layerHost = layerHosts_1[_i];\n            layerHost.notifyLayersChanged();\n        }\n    }\n}\n/**\n * Unregister a layer for a given host id\n * @param hostId - Id of the layer host\n * @param layer - Layer instance\n */\nexport function unregisterLayer(hostId, callback) {\n    var layers = _layersByHostId[hostId];\n    if (layers) {\n        var idx = layers.indexOf(callback);\n        if (idx >= 0) {\n            layers.splice(idx, 1);\n            if (layers.length === 0) {\n                delete _layersByHostId[hostId];\n            }\n        }\n    }\n    var layerHosts = _layerHostsById[hostId];\n    if (layerHosts) {\n        for (var _i = 0, layerHosts_2 = layerHosts; _i < layerHosts_2.length; _i++) {\n            var layerHost = layerHosts_2[_i];\n            layerHost.notifyLayersChanged();\n        }\n    }\n}\n/**\n * Gets the number of layers currently registered with a host id.\n * @param hostId - Id of the layer host.\n * @returns The number of layers currently registered with the host.\n */\nexport function getLayerCount(hostId) {\n    var layers = _layerHostsById[hostId];\n    return layers ? layers.length : 0;\n}\n/**\n * Gets the Layer Host instance associated with a hostId, if applicable.\n * @param hostId - Id of the layer host\n * @returns A component ref for the associated layer host.\n */\nexport function getLayerHost(hostId) {\n    var layerHosts = _layerHostsById[hostId];\n    return (layerHosts && layerHosts[0]) || undefined;\n}\n/**\n * Registers a Layer Host with an associated hostId.\n * @param hostId - Id of the layer host\n * @param layerHost - layer host instance\n */\nexport function registerLayerHost(hostId, layerHost) {\n    var layerHosts = _layerHostsById[hostId] || (_layerHostsById[hostId] = []);\n    // Insert this at the start of an array to avoid race conditions between mount and unmount.\n    // If a LayerHost is re-mounted, and mount of the new instance may occur before the unmount of the old one.\n    // Putting the new instance at the start of this array ensures that calls to `getLayerHost` will immediately\n    // get the new one even if the old one is around briefly.\n    layerHosts.unshift(layerHost);\n}\n/**\n * Unregisters a Layer Host from the associated hostId.\n * @param hostId - Id of the layer host\n * @param layerHost - layer host instance\n */\nexport function unregisterLayerHost(hostId, layerHost) {\n    var layerHosts = _layerHostsById[hostId];\n    if (layerHosts) {\n        var idx = layerHosts.indexOf(layerHost);\n        if (idx >= 0) {\n            layerHosts.splice(idx, 1);\n        }\n        if (layerHosts.length === 0) {\n            delete _layerHostsById[hostId];\n        }\n    }\n}\n/**\n * When no default layer host is provided, this function is executed to create the default host.\n */\nexport function createDefaultLayerHost(doc, shadowRoot) {\n    if (shadowRoot === void 0) { shadowRoot = null; }\n    var host = doc.createElement('div');\n    host.setAttribute('id', defaultHostId);\n    host.style.cssText = 'position:fixed;z-index:1000000';\n    if (shadowRoot) {\n        shadowRoot.appendChild(host);\n    }\n    else {\n        doc === null || doc === void 0 ? void 0 : doc.body.appendChild(host);\n    }\n    // doc?.body.appendChild(host);\n    return host;\n}\n/**\n * This function can be optionally called to clean up the default layer host as needed.\n */\nexport function cleanupDefaultLayerHost(doc, shadowRoot) {\n    if (shadowRoot === void 0) { shadowRoot = null; }\n    var root = shadowRoot !== null && shadowRoot !== void 0 ? shadowRoot : doc;\n    var host = root.querySelector(\"#\".concat(defaultHostId));\n    if (host) {\n        root.removeChild(host);\n    }\n}\n/**\n * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\n * care about the specific host.\n */\nexport function notifyHostChanged(id) {\n    if (_layersByHostId[id]) {\n        _layersByHostId[id].forEach(function (callback) { return callback(); });\n    }\n}\n/**\n * Sets the default target selector to use when determining the host in which\n * Layered content will be injected into. If not provided, an element will be\n * created at the end of the document body.\n *\n * Passing in a falsy value will clear the default target and reset back to\n * using a created element at the end of document body.\n */\nexport function setDefaultTarget(selector) {\n    _defaultHostSelector = selector;\n}\n/**\n * Get the default target selector when determining a host\n */\nexport function getDefaultTarget() {\n    return _defaultHostSelector;\n}\n//# sourceMappingURL=Layer.notification.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { getId, classNamesFunction, styled } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport { ValidationState } from '../../BasePicker.types';\nimport { getStyles } from './PeoplePickerItem.styles';\nvar getClassNames = classNamesFunction();\nexport var PeoplePickerItemBase = function (props) {\n    var item = props.item, onRemoveItem = props.onRemoveItem, index = props.index, selected = props.selected, removeButtonAriaLabel = props.removeButtonAriaLabel, styles = props.styles, theme = props.theme, className = props.className, disabled = props.disabled, removeButtonIconProps = props.removeButtonIconProps;\n    var buttonRef = React.createRef();\n    var handleClick = function () {\n        var _a;\n        (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    var itemId = getId();\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        selected: selected,\n        disabled: disabled,\n        invalid: item.ValidationState === ValidationState.warning,\n    });\n    var personaStyles = classNames.subComponentStyles\n        ? classNames.subComponentStyles.persona\n        : undefined;\n    var personaCoinStyles = classNames.subComponentStyles\n        ? classNames.subComponentStyles.personaCoin\n        : undefined;\n    return (React.createElement(\"div\", { \"data-selection-index\": index, className: classNames.root, role: 'listitem', key: index, onClick: handleClick },\n        React.createElement(\"div\", { className: classNames.itemContent, id: 'selectedItemPersona-' + itemId },\n            React.createElement(Persona, __assign({ size: PersonaSize.size24, styles: personaStyles, coinProps: { styles: personaCoinStyles } }, item))),\n        React.createElement(IconButton, { componentRef: buttonRef, id: itemId, onClick: onRemoveItem, disabled: disabled, iconProps: removeButtonIconProps !== null && removeButtonIconProps !== void 0 ? removeButtonIconProps : { iconName: 'Cancel' }, styles: { icon: { fontSize: '12px' } }, className: classNames.removeButton, ariaLabel: removeButtonAriaLabel, \"aria-labelledby\": \"\".concat(itemId, \" selectedItemPersona-\").concat(itemId) })));\n};\nexport var PeoplePickerItem = styled(PeoplePickerItemBase, getStyles, undefined, { scope: 'PeoplePickerItem' });\n//# sourceMappingURL=PeoplePickerItem.js.map","import { mergeStyleSets } from '../../Styling';\n/** Class names used in themeable and non-themeable Icon components */\nexport var classNames = mergeStyleSets({\n    root: {\n        display: 'inline-block',\n        textDecoration: 'inherit',\n    },\n    placeholder: [\n        'ms-Icon-placeHolder',\n        {\n            width: '1em',\n        },\n    ],\n    image: [\n        'ms-Icon-imageContainer',\n        {\n            overflow: 'hidden',\n        },\n    ],\n});\n/** Class name used only in non-themeable Icon components */\nexport var MS_ICON = 'ms-Icon';\nexport var getStyles = function (props) {\n    var className = props.className, iconClassName = props.iconClassName, isPlaceholder = props.isPlaceholder, isImage = props.isImage, styles = props.styles;\n    return {\n        root: [\n            isPlaceholder && classNames.placeholder,\n            classNames.root,\n            isImage && classNames.image,\n            iconClassName,\n            className,\n            styles && styles.root,\n            // eslint-disable-next-line deprecation/deprecation\n            styles && styles.imageContainer,\n        ],\n    };\n};\n//# sourceMappingURL=Icon.styles.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, divProperties, memoizeFunction, getInitials, getNativeProps, getRTL, getPropsWithDefaults, } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\nimport { useWarnings } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction({\n    // There can be many PersonaCoin rendered with different sizes.\n    // Therefore setting a larger cache size.\n    cacheSize: 100,\n});\nvar getInitialsStyles = memoizeFunction(function (className, initialsColor, initialsTextColor, text, primaryText, showUnknownPersonaCoin) {\n    return mergeStyles(className, !showUnknownPersonaCoin && {\n        backgroundColor: getPersonaInitialsColor({ text: text, initialsColor: initialsColor, primaryText: primaryText }),\n        color: initialsTextColor,\n    });\n});\nvar DEFAULT_PROPS = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: '',\n};\nfunction useDebugWarnings(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: 'PersonaCoin',\n            props: props,\n            deprecations: { primaryText: 'text' },\n        });\n    }\n}\nfunction useImageLoadState(_a) {\n    var onPhotoLoadingStateChange = _a.onPhotoLoadingStateChange, imageUrl = _a.imageUrl;\n    var _b = React.useState(ImageLoadState.notLoaded), imageLoadState = _b[0], setImageLoadstate = _b[1];\n    React.useEffect(function () {\n        setImageLoadstate(ImageLoadState.notLoaded);\n    }, [imageUrl]);\n    var onLoadingStateChange = function (loadState) {\n        setImageLoadstate(loadState);\n        onPhotoLoadingStateChange === null || onPhotoLoadingStateChange === void 0 ? void 0 : onPhotoLoadingStateChange(loadState);\n    };\n    return [imageLoadState, onLoadingStateChange];\n}\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport var PersonaCoinBase = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    useDebugWarnings(props);\n    var _a = useImageLoadState(props), imageLoadState = _a[0], onLoadingStateChange = _a[1];\n    var renderCoin = getCoinRenderer(onLoadingStateChange);\n    var className = props.className, coinProps = props.coinProps, showUnknownPersonaCoin = props.showUnknownPersonaCoin, coinSize = props.coinSize, styles = props.styles, imageUrl = props.imageUrl, initialsColor = props.initialsColor, initialsTextColor = props.initialsTextColor, isOutOfOffice = props.isOutOfOffice, \n    // eslint-disable-next-line deprecation/deprecation\n    _b = props.onRenderCoin, \n    // eslint-disable-next-line deprecation/deprecation\n    onRenderCoin = _b === void 0 ? renderCoin : _b, \n    // eslint-disable-next-line deprecation/deprecation\n    _c = props.onRenderPersonaCoin, \n    // eslint-disable-next-line deprecation/deprecation\n    onRenderPersonaCoin = _c === void 0 ? onRenderCoin : _c, _d = props.onRenderInitials, onRenderInitials = _d === void 0 ? renderPersonaCoinInitials : _d, presence = props.presence, presenceTitle = props.presenceTitle, presenceColors = props.presenceColors, \n    // eslint-disable-next-line deprecation/deprecation\n    primaryText = props.primaryText, showInitialsUntilImageLoads = props.showInitialsUntilImageLoads, text = props.text, theme = props.theme, size = props.size;\n    var divProps = getNativeProps(props, divProperties);\n    var divCoinProps = getNativeProps(coinProps || {}, divProperties);\n    var coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\n    var hideImage = showUnknownPersonaCoin;\n    var personaPresenceProps = {\n        coinSize: coinSize,\n        isOutOfOffice: isOutOfOffice,\n        presence: presence,\n        presenceTitle: presenceTitle,\n        presenceColors: presenceColors,\n        size: size,\n        theme: theme,\n    };\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: coinProps && coinProps.className ? coinProps.className : className,\n        size: size,\n        coinSize: coinSize,\n        showUnknownPersonaCoin: showUnknownPersonaCoin,\n    });\n    var shouldRenderInitials = Boolean(imageLoadState !== ImageLoadState.loaded &&\n        ((showInitialsUntilImageLoads && imageUrl) || !imageUrl || imageLoadState === ImageLoadState.error || hideImage));\n    return (React.createElement(\"div\", __assign({ role: \"presentation\" }, divProps, { className: classNames.coin, ref: forwardedRef }),\n        // Render PersonaCoin if size is not size8. size10 and tiny need to removed after a deprecation cleanup.\n        // eslint-disable-next-line deprecation/deprecation\n        size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? (React.createElement(\"div\", __assign({ role: \"presentation\" }, divCoinProps, { className: classNames.imageArea, style: coinSizeStyle }),\n            shouldRenderInitials && (React.createElement(\"div\", { className: getInitialsStyles(classNames.initials, initialsColor, initialsTextColor, text, primaryText, showUnknownPersonaCoin), style: coinSizeStyle, \"aria-hidden\": \"true\" }, onRenderInitials(props, renderPersonaCoinInitials))),\n            !hideImage && onRenderPersonaCoin(props, renderCoin),\n            React.createElement(PersonaPresence, __assign({}, personaPresenceProps)))) : // Otherwise, render just PersonaPresence.\n            props.presence ? (React.createElement(PersonaPresence, __assign({}, personaPresenceProps))) : (\n            // Just render Contact Icon if there isn't a Presence prop.\n            React.createElement(Icon, { iconName: \"Contact\", className: classNames.size10WithoutPresenceIcon })),\n        props.children));\n});\nPersonaCoinBase.displayName = 'PersonaCoinBase';\nvar getCoinRenderer = function (onLoadingStateChange) {\n    return function (_a) {\n        var coinSize = _a.coinSize, styles = _a.styles, imageUrl = _a.imageUrl, imageAlt = _a.imageAlt, imageShouldFadeIn = _a.imageShouldFadeIn, imageShouldStartVisible = _a.imageShouldStartVisible, theme = _a.theme, showUnknownPersonaCoin = _a.showUnknownPersonaCoin, _b = _a.size, size = _b === void 0 ? DEFAULT_PROPS.size : _b;\n        // Render the Image component only if an image URL is provided\n        if (!imageUrl) {\n            return null;\n        }\n        var classNames = getClassNames(styles, {\n            theme: theme,\n            size: size,\n            showUnknownPersonaCoin: showUnknownPersonaCoin,\n        });\n        var dimension = coinSize || sizeToPixels[size];\n        return (React.createElement(Image, { className: classNames.image, imageFit: ImageFit.cover, src: imageUrl, width: dimension, height: dimension, alt: imageAlt, shouldFadeIn: imageShouldFadeIn, shouldStartVisible: imageShouldStartVisible, onLoadingStateChange: onLoadingStateChange }));\n    };\n};\nvar renderPersonaCoinInitials = function (_a) {\n    var imageInitials = _a.imageInitials, allowPhoneInitials = _a.allowPhoneInitials, showUnknownPersonaCoin = _a.showUnknownPersonaCoin, text = _a.text, \n    // eslint-disable-next-line deprecation/deprecation\n    primaryText = _a.primaryText, theme = _a.theme;\n    if (showUnknownPersonaCoin) {\n        return React.createElement(Icon, { iconName: \"Help\" });\n    }\n    var isRTL = getRTL(theme);\n    imageInitials = imageInitials || getInitials(text || primaryText || '', isRTL, allowPhoneInitials);\n    return imageInitials !== '' ? React.createElement(\"span\", null, imageInitials) : React.createElement(Icon, { iconName: \"Contact\" });\n};\n//# sourceMappingURL=PersonaCoin.base.js.map","import { DEFAULT_CALENDAR_STRINGS } from '@fluentui/date-time-utilities';\nexport var defaultCalendarStrings = DEFAULT_CALENDAR_STRINGS;\n/**\n * @deprecated Use `defaultCalendarStrings`\n */\nexport var defaultDayPickerStrings = defaultCalendarStrings;\nexport var defaultCalendarNavigationIcons = {\n    leftNavigation: 'Up',\n    rightNavigation: 'Down',\n    closeIcon: 'CalculatorMultiply',\n};\n//# sourceMappingURL=defaults.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, getNativeProps, imgProperties } from '../../Utilities';\nimport { ImageCoverStyle, ImageFit, ImageLoadState } from './Image.types';\nimport { useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nvar SVG_REGEX = /\\.svg$/i;\nvar KEY_PREFIX = 'fabricImage';\nfunction useLoadState(props, imageElement) {\n    var onLoadingStateChange = props.onLoadingStateChange, onLoad = props.onLoad, onError = props.onError, src = props.src;\n    var _a = React.useState(ImageLoadState.notLoaded), loadState = _a[0], setLoadState = _a[1];\n    useIsomorphicLayoutEffect(function () {\n        // If the src property changes, reset the load state\n        // (does nothing if the load state is already notLoaded)\n        setLoadState(ImageLoadState.notLoaded);\n    }, [src]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- intended to run every render\n    React.useEffect(function () {\n        if (loadState === ImageLoadState.notLoaded) {\n            // testing if naturalWidth and naturalHeight are greater than zero is better than checking\n            // .complete, because .complete will also be set to true if the image breaks. However,\n            // for some browsers, SVG images do not have a naturalWidth or naturalHeight, so fall back\n            // to checking .complete for these images.\n            var isLoaded = imageElement.current\n                ? (src && imageElement.current.naturalWidth > 0 && imageElement.current.naturalHeight > 0) ||\n                    (imageElement.current.complete && SVG_REGEX.test(src))\n                : false;\n            if (isLoaded) {\n                setLoadState(ImageLoadState.loaded);\n            }\n        }\n    });\n    React.useEffect(function () {\n        onLoadingStateChange === null || onLoadingStateChange === void 0 ? void 0 : onLoadingStateChange(loadState);\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when loadState changes\n    }, [loadState]);\n    var onImageLoaded = React.useCallback(function (ev) {\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad(ev);\n        if (src) {\n            setLoadState(ImageLoadState.loaded);\n        }\n    }, [src, onLoad]);\n    var onImageError = React.useCallback(function (ev) {\n        onError === null || onError === void 0 ? void 0 : onError(ev);\n        setLoadState(ImageLoadState.error);\n    }, [onError]);\n    return [loadState, onImageLoaded, onImageError];\n}\nexport var ImageBase = React.forwardRef(function (props, forwardedRef) {\n    var frameElement = React.useRef();\n    var imageElement = React.useRef();\n    var _a = useLoadState(props, imageElement), loadState = _a[0], onImageLoaded = _a[1], onImageError = _a[2];\n    var imageProps = getNativeProps(props, imgProperties, [\n        'width',\n        'height',\n    ]);\n    var src = props.src, alt = props.alt, width = props.width, height = props.height, _b = props.shouldFadeIn, shouldFadeIn = _b === void 0 ? true : _b, shouldStartVisible = props.shouldStartVisible, className = props.className, imageFit = props.imageFit, role = props.role, maximizeFrame = props.maximizeFrame, styles = props.styles, theme = props.theme, loading = props.loading;\n    var coverStyle = useCoverStyle(props, loadState, imageElement, frameElement);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        width: width,\n        height: height,\n        maximizeFrame: maximizeFrame,\n        shouldFadeIn: shouldFadeIn,\n        shouldStartVisible: shouldStartVisible,\n        isLoaded: loadState === ImageLoadState.loaded || (loadState === ImageLoadState.notLoaded && props.shouldStartVisible),\n        isLandscape: coverStyle === ImageCoverStyle.landscape,\n        isCenter: imageFit === ImageFit.center,\n        isCenterContain: imageFit === ImageFit.centerContain,\n        isCenterCover: imageFit === ImageFit.centerCover,\n        isContain: imageFit === ImageFit.contain,\n        isCover: imageFit === ImageFit.cover,\n        isNone: imageFit === ImageFit.none,\n        isError: loadState === ImageLoadState.error,\n        isNotImageFit: imageFit === undefined,\n    });\n    // If image dimensions aren't specified, the natural size of the image is used.\n    return (React.createElement(\"div\", { className: classNames.root, style: { width: width, height: height }, ref: frameElement },\n        React.createElement(\"img\", __assign({}, imageProps, { onLoad: onImageLoaded, onError: onImageError, key: KEY_PREFIX + props.src || '', className: classNames.image, ref: useMergedRefs(imageElement, forwardedRef), src: src, alt: alt, role: role, loading: loading }))));\n});\nImageBase.displayName = 'ImageBase';\nfunction useCoverStyle(props, loadState, imageElement, frameElement) {\n    var previousLoadState = React.useRef(loadState);\n    var coverStyle = React.useRef();\n    if (coverStyle === undefined ||\n        (previousLoadState.current === ImageLoadState.notLoaded && loadState === ImageLoadState.loaded)) {\n        coverStyle.current = computeCoverStyle(props, loadState, imageElement, frameElement);\n    }\n    previousLoadState.current = loadState;\n    return coverStyle.current;\n}\nfunction computeCoverStyle(props, loadState, imageElement, frameElement) {\n    var imageFit = props.imageFit, width = props.width, height = props.height;\n    // Do not compute cover style if it was already specified in props\n    if (props.coverStyle !== undefined) {\n        return props.coverStyle;\n    }\n    else if (loadState === ImageLoadState.loaded &&\n        (imageFit === ImageFit.cover ||\n            imageFit === ImageFit.contain ||\n            imageFit === ImageFit.centerContain ||\n            imageFit === ImageFit.centerCover) &&\n        imageElement.current &&\n        frameElement.current) {\n        // Determine the desired ratio using the width and height props.\n        // If those props aren't available, measure measure the frame.\n        var desiredRatio = void 0;\n        if (typeof width === 'number' &&\n            typeof height === 'number' &&\n            imageFit !== ImageFit.centerContain &&\n            imageFit !== ImageFit.centerCover) {\n            desiredRatio = width / height;\n        }\n        else {\n            desiredRatio = frameElement.current.clientWidth / frameElement.current.clientHeight;\n        }\n        // Examine the source image to determine its original ratio.\n        var naturalRatio = imageElement.current.naturalWidth / imageElement.current.naturalHeight;\n        // Should we crop from the top or the sides?\n        if (naturalRatio > desiredRatio) {\n            return ImageCoverStyle.landscape;\n        }\n    }\n    return ImageCoverStyle.portrait;\n}\n//# sourceMappingURL=Image.base.js.map","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nvar defaultIconRenderer = function (props) {\n    var item = props.item, classNames = props.classNames;\n    var iconProps = item.iconProps;\n    return React.createElement(Icon, __assign({}, iconProps, { className: classNames.icon }));\n};\nvar renderItemIcon = function (props) {\n    var item = props.item, hasIcons = props.hasIcons;\n    if (!hasIcons) {\n        return null;\n    }\n    if (item.onRenderIcon) {\n        return item.onRenderIcon(props, defaultIconRenderer);\n    }\n    return defaultIconRenderer(props);\n};\nvar renderCheckMarkIcon = function (_a) {\n    var onCheckmarkClick = _a.onCheckmarkClick, item = _a.item, classNames = _a.classNames;\n    var isItemChecked = getIsChecked(item);\n    if (onCheckmarkClick) {\n        // Ensures that the item is passed as the first argument to the checkmark click callback.\n        var onClick = function (e) { return onCheckmarkClick(item, e); };\n        return (React.createElement(Icon, { iconName: item.canCheck !== false && isItemChecked ? 'CheckMark' : '', className: classNames.checkmarkIcon, \n            // eslint-disable-next-line react/jsx-no-bind\n            onClick: onClick }));\n    }\n    return null;\n};\nvar renderItemName = function (_a) {\n    var item = _a.item, classNames = _a.classNames;\n    /* eslint-disable deprecation/deprecation */\n    if (item.text || item.name) {\n        return React.createElement(\"span\", { className: classNames.label }, item.text || item.name);\n    }\n    /* eslint-enable deprecation/deprecation */\n    return null;\n};\nvar renderSecondaryText = function (_a) {\n    var item = _a.item, classNames = _a.classNames;\n    if (item.secondaryText) {\n        return React.createElement(\"span\", { className: classNames.secondaryText }, item.secondaryText);\n    }\n    return null;\n};\nvar renderSubMenuIcon = function (_a) {\n    var item = _a.item, classNames = _a.classNames, theme = _a.theme;\n    if (hasSubmenu(item)) {\n        return (React.createElement(Icon, __assign({ iconName: getRTL(theme) ? 'ChevronLeft' : 'ChevronRight' }, item.submenuIconProps, { className: classNames.subMenuIcon })));\n    }\n    return null;\n};\nvar ContextualMenuItemBase = /** @class */ (function (_super) {\n    __extends(ContextualMenuItemBase, _super);\n    function ContextualMenuItemBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.openSubMenu = function () {\n            var _a = _this.props, item = _a.item, openSubMenu = _a.openSubMenu, getSubmenuTarget = _a.getSubmenuTarget;\n            if (getSubmenuTarget) {\n                var submenuTarget = getSubmenuTarget();\n                if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n                    openSubMenu(item, submenuTarget);\n                }\n            }\n        };\n        _this.dismissSubMenu = function () {\n            var _a = _this.props, item = _a.item, dismissSubMenu = _a.dismissSubMenu;\n            if (hasSubmenu(item) && dismissSubMenu) {\n                dismissSubMenu();\n            }\n        };\n        _this.dismissMenu = function (dismissAll) {\n            var dismissMenu = _this.props.dismissMenu;\n            if (dismissMenu) {\n                dismissMenu(undefined /* ev */, dismissAll);\n            }\n        };\n        initializeComponentRef(_this);\n        return _this;\n    }\n    ContextualMenuItemBase.prototype.render = function () {\n        var _a = this.props, item = _a.item, classNames = _a.classNames;\n        var renderContent = item.onRenderContent || this._renderLayout;\n        return (React.createElement(\"div\", { className: item.split ? classNames.linkContentMenu : classNames.linkContent }, renderContent(this.props, {\n            renderCheckMarkIcon: renderCheckMarkIcon,\n            renderItemIcon: renderItemIcon,\n            renderItemName: renderItemName,\n            renderSecondaryText: renderSecondaryText,\n            renderSubMenuIcon: renderSubMenuIcon,\n        })));\n    };\n    ContextualMenuItemBase.prototype._renderLayout = function (props, defaultRenders) {\n        return (React.createElement(React.Fragment, null,\n            defaultRenders.renderCheckMarkIcon(props),\n            defaultRenders.renderItemIcon(props),\n            defaultRenders.renderItemName(props),\n            defaultRenders.renderSecondaryText(props),\n            defaultRenders.renderSubMenuIcon(props)));\n    };\n    return ContextualMenuItemBase;\n}(React.Component));\nexport { ContextualMenuItemBase };\n//# sourceMappingURL=ContextualMenuItem.base.js.map","import { styled } from '@fluentui/utilities';\nimport { ToggleBase } from './Toggle.base';\nimport { getStyles } from './Toggle.styles';\nexport var Toggle = styled(ToggleBase, getStyles, undefined, {\n    scope: 'Toggle',\n});\n//# sourceMappingURL=Toggle.js.map","import { ZIndexes, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-Layer',\n    rootNoHost: 'ms-Layer--fixed',\n    content: 'ms-Layer-content',\n};\nexport var getStyles = function (props) {\n    var className = props.className, isNotHost = props.isNotHost, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            isNotHost && [\n                classNames.rootNoHost,\n                {\n                    position: 'fixed',\n                    zIndex: ZIndexes.Layer,\n                    top: 0,\n                    left: 0,\n                    bottom: 0,\n                    right: 0,\n                    visibility: 'hidden',\n                },\n            ],\n            className,\n        ],\n        content: [\n            classNames.content,\n            {\n                visibility: 'visible',\n            },\n        ],\n    };\n};\n//# sourceMappingURL=Layer.styles.js.map","import { __assign } from \"tslib\";\nimport { HighContrastSelector, keyframes, noWrap, getGlobalClassNames, getHighContrastNoAdjustStyle, } from '../../Styling';\nimport { getRTL, memoizeFunction } from '../../Utilities';\nvar GlobalClassNames = {\n    root: 'ms-ProgressIndicator',\n    itemName: 'ms-ProgressIndicator-itemName',\n    itemDescription: 'ms-ProgressIndicator-itemDescription',\n    itemProgress: 'ms-ProgressIndicator-itemProgress',\n    progressTrack: 'ms-ProgressIndicator-progressTrack',\n    progressBar: 'ms-ProgressIndicator-progressBar',\n};\nvar IndeterminateProgress = memoizeFunction(function () {\n    return keyframes({\n        '0%': {\n            left: '-30%',\n        },\n        '100%': {\n            left: '100%',\n        },\n    });\n});\nvar IndeterminateProgressRTL = memoizeFunction(function () {\n    return keyframes({\n        '100%': {\n            right: '-30%',\n        },\n        '0%': {\n            right: '100%',\n        },\n    });\n});\nexport var getStyles = function (props) {\n    var _a, _b, _c;\n    var isRTL = getRTL(props.theme);\n    var className = props.className, indeterminate = props.indeterminate, theme = props.theme, _d = props.barHeight, barHeight = _d === void 0 ? 2 : _d;\n    var palette = theme.palette, semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var marginBetweenText = 8;\n    var textHeight = 18;\n    var progressTrackColor = palette.neutralLight;\n    return {\n        root: [classNames.root, fonts.medium, className],\n        itemName: [\n            classNames.itemName,\n            noWrap,\n            {\n                color: semanticColors.bodyText,\n                paddingTop: marginBetweenText / 2,\n                lineHeight: textHeight + 2,\n            },\n        ],\n        itemDescription: [\n            classNames.itemDescription,\n            {\n                color: semanticColors.bodySubtext,\n                fontSize: fonts.small.fontSize,\n                lineHeight: textHeight,\n            },\n        ],\n        itemProgress: [\n            classNames.itemProgress,\n            {\n                position: 'relative',\n                overflow: 'hidden',\n                height: barHeight,\n                padding: \"\".concat(marginBetweenText, \"px 0\"),\n            },\n        ],\n        progressTrack: [\n            classNames.progressTrack,\n            {\n                position: 'absolute',\n                width: '100%',\n                height: barHeight,\n                backgroundColor: progressTrackColor,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        borderBottom: '1px solid WindowText',\n                    },\n                    _a),\n            },\n        ],\n        progressBar: [\n            {\n                backgroundColor: palette.themePrimary,\n                height: barHeight,\n                position: 'absolute',\n                transition: 'width .3s ease',\n                width: 0,\n                selectors: (_b = {},\n                    _b[HighContrastSelector] = __assign({ backgroundColor: 'highlight' }, getHighContrastNoAdjustStyle()),\n                    _b),\n            },\n            indeterminate\n                ? {\n                    position: 'absolute',\n                    minWidth: '33%',\n                    background: \"linear-gradient(to right, \".concat(progressTrackColor, \" 0%, \") +\n                        \"\".concat(palette.themePrimary, \" 50%, \").concat(progressTrackColor, \" 100%)\"),\n                    animation: \"\".concat(isRTL ? IndeterminateProgressRTL() : IndeterminateProgress(), \" 3s infinite\"),\n                    selectors: (_c = {},\n                        _c[HighContrastSelector] = {\n                            background: \"highlight\",\n                        },\n                        _c),\n                }\n                : {\n                    transition: 'width .15s linear',\n                },\n            classNames.progressBar,\n        ],\n    };\n};\n//# sourceMappingURL=ProgressIndicator.styles.js.map"],"mappings":";;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/UA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9MA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnzdhIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChnnhWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACltCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvlNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxvtQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdhFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3GA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvpBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjxIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7HA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtjQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC95BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3GA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjzjjxJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClvlMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbtDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzoBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrzGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzzdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/NA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnnpGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzlzZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClvxlZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5SA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrHA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACppZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjHA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACph5BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACllrRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3LA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrpIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnsourceRoot":""}